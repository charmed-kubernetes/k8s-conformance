  I0720 12:11:34.792689      19 e2e.go:117] Starting e2e run "11a686db-2bd0-4c4c-a113-cbef29075afc" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1721477494 - will randomize all specs

Will run 388 of 7408 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:157
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:77
  Jul 20 12:11:35.010: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  Jul 20 12:11:35.014: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
  Jul 20 12:11:35.044: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  Jul 20 12:11:35.049: INFO: 5 / 5 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
  Jul 20 12:11:35.049: INFO: e2e test version: v1.29.7
  Jul 20 12:11:35.051: INFO: kube-apiserver version: v1.29.7
  Jul 20 12:11:35.051: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  Jul 20 12:11:35.057: INFO: Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.048 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 07/20/24 12:11:35.314
  Jul 20 12:11:35.314: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename subpath @ 07/20/24 12:11:35.315
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:11:35.332
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:11:35.335
  STEP: Setting up data @ 07/20/24 12:11:35.338
  STEP: Creating pod pod-subpath-test-configmap-7cxl @ 07/20/24 12:11:35.347
  STEP: Creating a pod to test atomic-volume-subpath @ 07/20/24 12:11:35.347
  STEP: Saw pod success @ 07/20/24 12:12:03.423
  Jul 20 12:12:03.426: INFO: Trying to get logs from node ip-172-31-79-190 pod pod-subpath-test-configmap-7cxl container test-container-subpath-configmap-7cxl: <nil>
  STEP: delete the pod @ 07/20/24 12:12:03.443
  STEP: Deleting pod pod-subpath-test-configmap-7cxl @ 07/20/24 12:12:03.459
  Jul 20 12:12:03.459: INFO: Deleting pod "pod-subpath-test-configmap-7cxl" in namespace "subpath-5829"
  Jul 20 12:12:03.462: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-5829" for this suite. @ 07/20/24 12:12:03.465
• [28.156 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 07/20/24 12:12:03.471
  Jul 20 12:12:03.471: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename emptydir @ 07/20/24 12:12:03.472
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:12:03.488
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:12:03.496
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 07/20/24 12:12:03.499
  STEP: Saw pod success @ 07/20/24 12:12:07.517
  Jul 20 12:12:07.520: INFO: Trying to get logs from node ip-172-31-79-190 pod pod-f5b9cf8a-c4d0-4fd2-bf86-fe484b773999 container test-container: <nil>
  STEP: delete the pod @ 07/20/24 12:12:07.525
  Jul 20 12:12:07.538: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5603" for this suite. @ 07/20/24 12:12:07.541
• [4.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 07/20/24 12:12:07.549
  Jul 20 12:12:07.549: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename field-validation @ 07/20/24 12:12:07.549
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:12:07.562
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:12:07.565
  Jul 20 12:12:07.568: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  Jul 20 12:12:10.648: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4471" for this suite. @ 07/20/24 12:12:10.651
• [3.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 07/20/24 12:12:10.657
  Jul 20 12:12:10.657: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename webhook @ 07/20/24 12:12:10.657
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:12:10.672
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:12:10.675
  STEP: Setting up server cert @ 07/20/24 12:12:10.699
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/20/24 12:12:10.885
  STEP: Deploying the webhook pod @ 07/20/24 12:12:10.894
  STEP: Wait for the deployment to be ready @ 07/20/24 12:12:10.908
  Jul 20 12:12:10.917: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/20/24 12:12:12.927
  STEP: Verifying the service has paired with the endpoint @ 07/20/24 12:12:12.936
  Jul 20 12:12:13.936: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 07/20/24 12:12:13.943
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 07/20/24 12:12:13.944
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 07/20/24 12:12:13.944
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 07/20/24 12:12:13.944
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 07/20/24 12:12:13.945
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 07/20/24 12:12:13.945
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 07/20/24 12:12:13.946
  Jul 20 12:12:13.982: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1398" for this suite. @ 07/20/24 12:12:13.985
  STEP: Destroying namespace "webhook-markers-6224" for this suite. @ 07/20/24 12:12:13.993
• [3.344 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 07/20/24 12:12:14.001
  Jul 20 12:12:14.001: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename emptydir-wrapper @ 07/20/24 12:12:14.002
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:12:14.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:12:14.022
  STEP: Cleaning up the secret @ 07/20/24 12:12:16.056
  STEP: Cleaning up the configmap @ 07/20/24 12:12:16.062
  STEP: Cleaning up the pod @ 07/20/24 12:12:16.067
  Jul 20 12:12:16.080: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-7937" for this suite. @ 07/20/24 12:12:16.083
• [2.088 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 07/20/24 12:12:16.089
  Jul 20 12:12:16.089: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename sched-preemption @ 07/20/24 12:12:16.089
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:12:16.104
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:12:16.107
  Jul 20 12:12:16.121: INFO: Waiting up to 1m0s for all nodes to be ready
  Jul 20 12:13:16.126: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 07/20/24 12:13:16.129
  Jul 20 12:13:16.147: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Jul 20 12:13:16.157: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Jul 20 12:13:16.171: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Jul 20 12:13:16.176: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Jul 20 12:13:16.194: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Jul 20 12:13:16.205: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 07/20/24 12:13:16.205
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 07/20/24 12:13:18.229
  Jul 20 12:13:22.317: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-6602" for this suite. @ 07/20/24 12:13:22.32
• [66.237 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 07/20/24 12:13:22.326
  Jul 20 12:13:22.326: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename projected @ 07/20/24 12:13:22.327
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:13:22.339
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:13:22.342
  STEP: Creating a pod to test downward API volume plugin @ 07/20/24 12:13:22.344
  STEP: Saw pod success @ 07/20/24 12:13:28.371
  Jul 20 12:13:28.373: INFO: Trying to get logs from node ip-172-31-25-173 pod downwardapi-volume-04fb280a-466b-4d05-9b78-f93b72dc31e6 container client-container: <nil>
  STEP: delete the pod @ 07/20/24 12:13:28.392
  Jul 20 12:13:28.408: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8676" for this suite. @ 07/20/24 12:13:28.41
• [6.090 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:344
  STEP: Creating a kubernetes client @ 07/20/24 12:13:28.416
  Jul 20 12:13:28.416: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename kubectl @ 07/20/24 12:13:28.417
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:13:28.429
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:13:28.432
  STEP: creating a replication controller @ 07/20/24 12:13:28.435
  Jul 20 12:13:28.435: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-9073 create -f -'
  Jul 20 12:13:28.526: INFO: stderr: ""
  Jul 20 12:13:28.526: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 07/20/24 12:13:28.526
  Jul 20 12:13:28.526: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-9073 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jul 20 12:13:28.576: INFO: stderr: ""
  Jul 20 12:13:28.576: INFO: stdout: "update-demo-nautilus-jmp7q update-demo-nautilus-pzd92 "
  Jul 20 12:13:28.576: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-9073 get pods update-demo-nautilus-jmp7q -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jul 20 12:13:28.618: INFO: stderr: ""
  Jul 20 12:13:28.618: INFO: stdout: ""
  Jul 20 12:13:28.618: INFO: update-demo-nautilus-jmp7q is created but not running
  Jul 20 12:13:33.620: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-9073 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jul 20 12:13:33.663: INFO: stderr: ""
  Jul 20 12:13:33.663: INFO: stdout: "update-demo-nautilus-jmp7q update-demo-nautilus-pzd92 "
  Jul 20 12:13:33.663: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-9073 get pods update-demo-nautilus-jmp7q -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jul 20 12:13:33.705: INFO: stderr: ""
  Jul 20 12:13:33.705: INFO: stdout: "true"
  Jul 20 12:13:33.705: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-9073 get pods update-demo-nautilus-jmp7q -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jul 20 12:13:33.747: INFO: stderr: ""
  Jul 20 12:13:33.747: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jul 20 12:13:33.748: INFO: validating pod update-demo-nautilus-jmp7q
  Jul 20 12:13:33.753: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jul 20 12:13:33.753: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jul 20 12:13:33.753: INFO: update-demo-nautilus-jmp7q is verified up and running
  Jul 20 12:13:33.753: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-9073 get pods update-demo-nautilus-pzd92 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jul 20 12:13:33.794: INFO: stderr: ""
  Jul 20 12:13:33.794: INFO: stdout: "true"
  Jul 20 12:13:33.794: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-9073 get pods update-demo-nautilus-pzd92 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jul 20 12:13:33.836: INFO: stderr: ""
  Jul 20 12:13:33.836: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jul 20 12:13:33.836: INFO: validating pod update-demo-nautilus-pzd92
  Jul 20 12:13:33.841: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jul 20 12:13:33.841: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jul 20 12:13:33.841: INFO: update-demo-nautilus-pzd92 is verified up and running
  STEP: using delete to clean up resources @ 07/20/24 12:13:33.841
  Jul 20 12:13:33.841: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-9073 delete --grace-period=0 --force -f -'
  Jul 20 12:13:33.886: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jul 20 12:13:33.886: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Jul 20 12:13:33.886: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-9073 get rc,svc -l name=update-demo --no-headers'
  Jul 20 12:13:33.937: INFO: stderr: "No resources found in kubectl-9073 namespace.\n"
  Jul 20 12:13:33.937: INFO: stdout: ""
  Jul 20 12:13:33.937: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-9073 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Jul 20 12:13:33.988: INFO: stderr: ""
  Jul 20 12:13:33.988: INFO: stdout: ""
  Jul 20 12:13:33.988: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9073" for this suite. @ 07/20/24 12:13:33.991
• [5.581 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 07/20/24 12:13:33.997
  Jul 20 12:13:33.997: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename sched-preemption @ 07/20/24 12:13:33.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:13:34.014
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:13:34.017
  Jul 20 12:13:34.034: INFO: Waiting up to 1m0s for all nodes to be ready
  Jul 20 12:14:34.040: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 07/20/24 12:14:34.043
  Jul 20 12:14:34.043: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename sched-preemption-path @ 07/20/24 12:14:34.044
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:14:34.064
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:14:34.067
  STEP: Finding an available node @ 07/20/24 12:14:34.07
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 07/20/24 12:14:34.07
  STEP: Explicitly delete pod here to free the resource it takes. @ 07/20/24 12:14:36.091
  Jul 20 12:14:36.103: INFO: found a healthy node: ip-172-31-79-190
  Jul 20 12:14:42.161: INFO: pods created so far: [1 1 1]
  Jul 20 12:14:42.161: INFO: length of pods created so far: 3
  Jul 20 12:14:44.172: INFO: pods created so far: [2 2 1]
  Jul 20 12:14:51.237: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-6380" for this suite. @ 07/20/24 12:14:51.241
  Jul 20 12:14:51.247: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-6822" for this suite. @ 07/20/24 12:14:51.25
• [77.257 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 07/20/24 12:14:51.255
  Jul 20 12:14:51.255: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename configmap @ 07/20/24 12:14:51.255
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:14:51.267
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:14:51.27
  STEP: Creating configMap with name configmap-test-volume-6d6079c2-8e8e-435d-a648-c18cb64157e3 @ 07/20/24 12:14:51.273
  STEP: Creating a pod to test consume configMaps @ 07/20/24 12:14:51.277
  STEP: Saw pod success @ 07/20/24 12:14:53.29
  Jul 20 12:14:53.293: INFO: Trying to get logs from node ip-172-31-25-173 pod pod-configmaps-5f9eaa85-17f7-44b2-b664-ed46d446469a container agnhost-container: <nil>
  STEP: delete the pod @ 07/20/24 12:14:53.298
  Jul 20 12:14:53.313: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1695" for this suite. @ 07/20/24 12:14:53.316
• [2.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 07/20/24 12:14:53.322
  Jul 20 12:14:53.322: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename emptydir @ 07/20/24 12:14:53.323
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:14:53.336
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:14:53.339
  STEP: Creating Pod @ 07/20/24 12:14:53.341
  STEP: Reading file content from the nginx-container @ 07/20/24 12:14:57.367
  Jul 20 12:14:57.367: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-7801 PodName:pod-sharedvolume-d9b33c8a-06da-4941-8f56-7c5423691fce ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 20 12:14:57.367: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  Jul 20 12:14:57.368: INFO: ExecWithOptions: Clientset creation
  Jul 20 12:14:57.368: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/emptydir-7801/pods/pod-sharedvolume-d9b33c8a-06da-4941-8f56-7c5423691fce/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  Jul 20 12:14:57.413: INFO: Exec stderr: ""
  Jul 20 12:14:57.413: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7801" for this suite. @ 07/20/24 12:14:57.417
• [4.101 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 07/20/24 12:14:57.423
  Jul 20 12:14:57.423: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename projected @ 07/20/24 12:14:57.424
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:14:57.438
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:14:57.441
  STEP: Creating secret with name s-test-opt-del-c8fddb34-f8bb-459a-9b72-e2c379bcd734 @ 07/20/24 12:14:57.446
  STEP: Creating secret with name s-test-opt-upd-2ef7a671-2797-4341-b7f7-a135c77753fc @ 07/20/24 12:14:57.452
  STEP: Creating the pod @ 07/20/24 12:14:57.455
  STEP: Deleting secret s-test-opt-del-c8fddb34-f8bb-459a-9b72-e2c379bcd734 @ 07/20/24 12:14:59.496
  STEP: Updating secret s-test-opt-upd-2ef7a671-2797-4341-b7f7-a135c77753fc @ 07/20/24 12:14:59.502
  STEP: Creating secret with name s-test-opt-create-89367717-40be-44e7-bbe0-295b47834c6b @ 07/20/24 12:14:59.506
  STEP: waiting to observe update in volume @ 07/20/24 12:14:59.51
  Jul 20 12:16:05.769: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3474" for this suite. @ 07/20/24 12:16:05.773
• [68.357 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 07/20/24 12:16:05.781
  Jul 20 12:16:05.781: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename projected @ 07/20/24 12:16:05.781
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:16:05.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:16:05.802
  STEP: Creating a pod to test downward API volume plugin @ 07/20/24 12:16:05.81
  STEP: Saw pod success @ 07/20/24 12:16:09.839
  Jul 20 12:16:09.842: INFO: Trying to get logs from node ip-172-31-25-173 pod downwardapi-volume-4b57dc0d-fd7d-42a7-b884-b27294b4ec86 container client-container: <nil>
  STEP: delete the pod @ 07/20/24 12:16:09.848
  Jul 20 12:16:09.863: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8592" for this suite. @ 07/20/24 12:16:09.866
• [4.091 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:887
  STEP: Creating a kubernetes client @ 07/20/24 12:16:09.872
  Jul 20 12:16:09.872: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename kubectl @ 07/20/24 12:16:09.872
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:16:09.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:16:09.888
  STEP: validating api versions @ 07/20/24 12:16:09.891
  Jul 20 12:16:09.891: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-4273 api-versions'
  Jul 20 12:16:09.930: INFO: stderr: ""
  Jul 20 12:16:09.930: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta3\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  Jul 20 12:16:09.930: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4273" for this suite. @ 07/20/24 12:16:09.934
• [0.068 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:134
  STEP: Creating a kubernetes client @ 07/20/24 12:16:09.94
  Jul 20 12:16:09.940: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename kubelet-test @ 07/20/24 12:16:09.941
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:16:09.953
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:16:09.955
  Jul 20 12:16:09.980: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4447" for this suite. @ 07/20/24 12:16:09.983
• [0.047 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 07/20/24 12:16:09.988
  Jul 20 12:16:09.988: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename downward-api @ 07/20/24 12:16:09.988
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:16:10
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:16:10.002
  STEP: Creating a pod to test downward API volume plugin @ 07/20/24 12:16:10.005
  STEP: Saw pod success @ 07/20/24 12:16:14.032
  Jul 20 12:16:14.035: INFO: Trying to get logs from node ip-172-31-25-173 pod downwardapi-volume-3fe82a2a-4ee7-4ce7-9099-f0a6b7471e46 container client-container: <nil>
  STEP: delete the pod @ 07/20/24 12:16:14.042
  Jul 20 12:16:14.057: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-761" for this suite. @ 07/20/24 12:16:14.06
• [4.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2214
  STEP: Creating a kubernetes client @ 07/20/24 12:16:14.067
  Jul 20 12:16:14.067: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename services @ 07/20/24 12:16:14.067
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:16:14.084
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:16:14.086
  STEP: creating service in namespace services-2573 @ 07/20/24 12:16:14.091
  STEP: creating service affinity-nodeport in namespace services-2573 @ 07/20/24 12:16:14.091
  STEP: creating replication controller affinity-nodeport in namespace services-2573 @ 07/20/24 12:16:14.102
  I0720 12:16:14.108796      19 runners.go:197] Created replication controller with name: affinity-nodeport, namespace: services-2573, replica count: 3
  I0720 12:16:17.159994      19 runners.go:197] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jul 20 12:16:17.169: INFO: Creating new exec pod
  Jul 20 12:16:20.187: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=services-2573 exec execpod-affinity5f9l9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  Jul 20 12:16:20.278: INFO: stderr: "+ nc -v -t -w 2 affinity-nodeport 80\n+ echo hostName\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  Jul 20 12:16:20.278: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul 20 12:16:20.279: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=services-2573 exec execpod-affinity5f9l9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.223 80'
  Jul 20 12:16:20.365: INFO: stderr: "+ nc -v -t -w 2 10.152.183.223 80\n+ echo hostName\nConnection to 10.152.183.223 80 port [tcp/http] succeeded!\n"
  Jul 20 12:16:20.365: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul 20 12:16:20.365: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=services-2573 exec execpod-affinity5f9l9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.3.74 30413'
  Jul 20 12:16:20.470: INFO: stderr: "+ nc -v -t -w 2 172.31.3.74 30413\n+ echo hostName\nConnection to 172.31.3.74 30413 port [tcp/*] succeeded!\n"
  Jul 20 12:16:20.470: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul 20 12:16:20.470: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=services-2573 exec execpod-affinity5f9l9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.79.190 30413'
  Jul 20 12:16:20.557: INFO: stderr: "+ nc -v -t -w 2 172.31.79.190 30413\n+ echo hostName\nConnection to 172.31.79.190 30413 port [tcp/*] succeeded!\n"
  Jul 20 12:16:20.557: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul 20 12:16:20.557: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=services-2573 exec execpod-affinity5f9l9 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.25.173:30413/ ; done'
  Jul 20 12:16:20.710: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.173:30413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.173:30413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.173:30413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.173:30413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.173:30413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.173:30413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.173:30413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.173:30413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.173:30413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.173:30413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.173:30413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.173:30413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.173:30413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.173:30413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.173:30413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.173:30413/\n"
  Jul 20 12:16:20.711: INFO: stdout: "\naffinity-nodeport-2f7s2\naffinity-nodeport-2f7s2\naffinity-nodeport-2f7s2\naffinity-nodeport-2f7s2\naffinity-nodeport-2f7s2\naffinity-nodeport-2f7s2\naffinity-nodeport-2f7s2\naffinity-nodeport-2f7s2\naffinity-nodeport-2f7s2\naffinity-nodeport-2f7s2\naffinity-nodeport-2f7s2\naffinity-nodeport-2f7s2\naffinity-nodeport-2f7s2\naffinity-nodeport-2f7s2\naffinity-nodeport-2f7s2\naffinity-nodeport-2f7s2"
  Jul 20 12:16:20.711: INFO: Received response from host: affinity-nodeport-2f7s2
  Jul 20 12:16:20.711: INFO: Received response from host: affinity-nodeport-2f7s2
  Jul 20 12:16:20.711: INFO: Received response from host: affinity-nodeport-2f7s2
  Jul 20 12:16:20.711: INFO: Received response from host: affinity-nodeport-2f7s2
  Jul 20 12:16:20.711: INFO: Received response from host: affinity-nodeport-2f7s2
  Jul 20 12:16:20.711: INFO: Received response from host: affinity-nodeport-2f7s2
  Jul 20 12:16:20.711: INFO: Received response from host: affinity-nodeport-2f7s2
  Jul 20 12:16:20.711: INFO: Received response from host: affinity-nodeport-2f7s2
  Jul 20 12:16:20.711: INFO: Received response from host: affinity-nodeport-2f7s2
  Jul 20 12:16:20.711: INFO: Received response from host: affinity-nodeport-2f7s2
  Jul 20 12:16:20.711: INFO: Received response from host: affinity-nodeport-2f7s2
  Jul 20 12:16:20.711: INFO: Received response from host: affinity-nodeport-2f7s2
  Jul 20 12:16:20.711: INFO: Received response from host: affinity-nodeport-2f7s2
  Jul 20 12:16:20.711: INFO: Received response from host: affinity-nodeport-2f7s2
  Jul 20 12:16:20.711: INFO: Received response from host: affinity-nodeport-2f7s2
  Jul 20 12:16:20.711: INFO: Received response from host: affinity-nodeport-2f7s2
  Jul 20 12:16:20.711: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-2573, will wait for the garbage collector to delete the pods @ 07/20/24 12:16:20.724
  Jul 20 12:16:20.785: INFO: Deleting ReplicationController affinity-nodeport took: 6.903202ms
  Jul 20 12:16:20.885: INFO: Terminating ReplicationController affinity-nodeport pods took: 100.415894ms
  Jul 20 12:16:24.110: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2573" for this suite. @ 07/20/24 12:16:24.113
• [10.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 07/20/24 12:16:24.119
  Jul 20 12:16:24.119: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename downward-api @ 07/20/24 12:16:24.12
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:16:24.135
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:16:24.138
  STEP: Creating a pod to test downward api env vars @ 07/20/24 12:16:24.14
  STEP: Saw pod success @ 07/20/24 12:16:28.159
  Jul 20 12:16:28.162: INFO: Trying to get logs from node ip-172-31-79-190 pod downward-api-46f63baf-8149-4d8d-a879-52564e69a82d container dapi-container: <nil>
  STEP: delete the pod @ 07/20/24 12:16:28.169
  Jul 20 12:16:28.183: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9220" for this suite. @ 07/20/24 12:16:28.185
• [4.070 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 07/20/24 12:16:28.19
  Jul 20 12:16:28.190: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename field-validation @ 07/20/24 12:16:28.19
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:16:28.203
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:16:28.206
  Jul 20 12:16:28.209: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  W0720 12:16:30.746491      19 warnings.go:70] unknown field "alpha"
  W0720 12:16:30.746508      19 warnings.go:70] unknown field "beta"
  W0720 12:16:30.746512      19 warnings.go:70] unknown field "delta"
  W0720 12:16:30.746515      19 warnings.go:70] unknown field "epsilon"
  W0720 12:16:30.746518      19 warnings.go:70] unknown field "gamma"
  Jul 20 12:16:31.287: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7769" for this suite. @ 07/20/24 12:16:31.29
• [3.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 07/20/24 12:16:31.296
  Jul 20 12:16:31.296: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename containers @ 07/20/24 12:16:31.296
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:16:31.308
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:16:31.311
  Jul 20 12:16:33.334: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-8660" for this suite. @ 07/20/24 12:16:33.339
• [2.048 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 07/20/24 12:16:33.344
  Jul 20 12:16:33.344: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename limitrange @ 07/20/24 12:16:33.345
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:16:33.36
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:16:33.362
  STEP: Creating a LimitRange @ 07/20/24 12:16:33.365
  STEP: Setting up watch @ 07/20/24 12:16:33.365
  STEP: Submitting a LimitRange @ 07/20/24 12:16:33.469
  STEP: Verifying LimitRange creation was observed @ 07/20/24 12:16:33.474
  STEP: Fetching the LimitRange to ensure it has proper values @ 07/20/24 12:16:33.474
  Jul 20 12:16:33.477: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Jul 20 12:16:33.477: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 07/20/24 12:16:33.477
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 07/20/24 12:16:33.483
  Jul 20 12:16:33.487: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Jul 20 12:16:33.487: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 07/20/24 12:16:33.487
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 07/20/24 12:16:33.494
  Jul 20 12:16:33.497: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  Jul 20 12:16:33.497: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 07/20/24 12:16:33.497
  STEP: Failing to create a Pod with more than max resources @ 07/20/24 12:16:33.499
  STEP: Updating a LimitRange @ 07/20/24 12:16:33.501
  STEP: Verifying LimitRange updating is effective @ 07/20/24 12:16:33.506
  STEP: Creating a Pod with less than former min resources @ 07/20/24 12:16:35.51
  STEP: Failing to create a Pod with more than max resources @ 07/20/24 12:16:35.516
  STEP: Deleting a LimitRange @ 07/20/24 12:16:35.518
  STEP: Verifying the LimitRange was deleted @ 07/20/24 12:16:35.527
  Jul 20 12:16:40.531: INFO: limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 07/20/24 12:16:40.531
  Jul 20 12:16:40.539: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-5282" for this suite. @ 07/20/24 12:16:40.546
• [7.209 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 07/20/24 12:16:40.554
  Jul 20 12:16:40.554: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename webhook @ 07/20/24 12:16:40.554
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:16:40.567
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:16:40.57
  STEP: Setting up server cert @ 07/20/24 12:16:40.589
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/20/24 12:16:40.696
  STEP: Deploying the webhook pod @ 07/20/24 12:16:40.703
  STEP: Wait for the deployment to be ready @ 07/20/24 12:16:40.715
  Jul 20 12:16:40.720: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/20/24 12:16:42.731
  STEP: Verifying the service has paired with the endpoint @ 07/20/24 12:16:42.74
  Jul 20 12:16:43.741: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jul 20 12:16:43.747: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-4274-crds.webhook.example.com via the AdmissionRegistration API @ 07/20/24 12:16:44.257
  STEP: Creating a custom resource that should be mutated by the webhook @ 07/20/24 12:16:44.271
  Jul 20 12:16:46.850: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9701" for this suite. @ 07/20/24 12:16:46.854
  STEP: Destroying namespace "webhook-markers-3296" for this suite. @ 07/20/24 12:16:46.862
• [6.315 seconds]
------------------------------
SSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 07/20/24 12:16:46.868
  Jul 20 12:16:46.868: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename sched-preemption @ 07/20/24 12:16:46.869
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:16:46.88
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:16:46.884
  Jul 20 12:16:46.899: INFO: Waiting up to 1m0s for all nodes to be ready
  Jul 20 12:17:46.910: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 07/20/24 12:17:46.913
  Jul 20 12:17:46.913: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename sched-preemption-path @ 07/20/24 12:17:46.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:17:46.927
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:17:46.933
  Jul 20 12:17:46.948: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  Jul 20 12:17:46.950: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  Jul 20 12:17:47.003: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-247" for this suite. @ 07/20/24 12:17:47.006
  Jul 20 12:17:47.012: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-3624" for this suite. @ 07/20/24 12:17:47.015
• [60.152 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:751
  STEP: Creating a kubernetes client @ 07/20/24 12:17:47.021
  Jul 20 12:17:47.021: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename statefulset @ 07/20/24 12:17:47.022
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:17:47.035
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:17:47.038
  STEP: Creating service test in namespace statefulset-9220 @ 07/20/24 12:17:47.041
  STEP: Creating stateful set ss in namespace statefulset-9220 @ 07/20/24 12:17:47.046
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-9220 @ 07/20/24 12:17:47.055
  Jul 20 12:17:47.058: INFO: Found 0 stateful pods, waiting for 1
  Jul 20 12:17:57.060: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 07/20/24 12:17:57.06
  Jul 20 12:17:57.063: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=statefulset-9220 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jul 20 12:17:57.150: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jul 20 12:17:57.150: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jul 20 12:17:57.150: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jul 20 12:17:57.154: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  Jul 20 12:18:07.156: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Jul 20 12:18:07.156: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Jul 20 12:18:07.170: INFO: POD   NODE              PHASE    GRACE  CONDITIONS
  Jul 20 12:18:07.170: INFO: ss-0  ip-172-31-79-190  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-07-20 12:17:50 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-07-20 12:17:47 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-07-20 12:17:57 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-07-20 12:17:57 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-07-20 12:17:47 +0000 UTC  }]
  Jul 20 12:18:07.170: INFO: 
  Jul 20 12:18:07.170: INFO: StatefulSet ss has not reached scale 3, at 1
  Jul 20 12:18:08.173: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.996630655s
  Jul 20 12:18:09.177: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.993177027s
  Jul 20 12:18:10.182: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.989019451s
  Jul 20 12:18:11.188: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.983293099s
  Jul 20 12:18:12.192: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.97821326s
  Jul 20 12:18:13.196: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.974210332s
  Jul 20 12:18:14.201: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.969929239s
  Jul 20 12:18:15.206: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.964855692s
  Jul 20 12:18:16.211: INFO: Verifying statefulset ss doesn't scale past 3 for another 959.980917ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-9220 @ 07/20/24 12:18:17.211
  Jul 20 12:18:17.216: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=statefulset-9220 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jul 20 12:18:17.300: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jul 20 12:18:17.300: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jul 20 12:18:17.300: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jul 20 12:18:17.300: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=statefulset-9220 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jul 20 12:18:17.393: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Jul 20 12:18:17.393: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jul 20 12:18:17.393: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jul 20 12:18:17.393: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=statefulset-9220 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jul 20 12:18:17.494: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Jul 20 12:18:17.494: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jul 20 12:18:17.494: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jul 20 12:18:17.498: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Jul 20 12:18:17.498: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Jul 20 12:18:17.498: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 07/20/24 12:18:17.498
  Jul 20 12:18:17.501: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=statefulset-9220 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jul 20 12:18:17.584: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jul 20 12:18:17.584: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jul 20 12:18:17.584: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jul 20 12:18:17.584: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=statefulset-9220 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jul 20 12:18:17.687: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jul 20 12:18:17.687: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jul 20 12:18:17.687: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jul 20 12:18:17.687: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=statefulset-9220 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jul 20 12:18:17.780: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jul 20 12:18:17.780: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jul 20 12:18:17.780: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jul 20 12:18:17.780: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Jul 20 12:18:17.783: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  Jul 20 12:18:27.789: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Jul 20 12:18:27.789: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Jul 20 12:18:27.789: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Jul 20 12:18:27.802: INFO: POD   NODE              PHASE    GRACE  CONDITIONS
  Jul 20 12:18:27.802: INFO: ss-0  ip-172-31-79-190  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-07-20 12:17:50 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-07-20 12:17:47 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-07-20 12:18:18 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-07-20 12:18:18 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-07-20 12:17:47 +0000 UTC  }]
  Jul 20 12:18:27.802: INFO: ss-1  ip-172-31-25-173  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-07-20 12:18:10 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-07-20 12:18:07 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-07-20 12:18:17 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-07-20 12:18:17 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-07-20 12:18:07 +0000 UTC  }]
  Jul 20 12:18:27.802: INFO: ss-2  ip-172-31-3-74    Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-07-20 12:18:10 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-07-20 12:18:07 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-07-20 12:18:18 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-07-20 12:18:18 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-07-20 12:18:07 +0000 UTC  }]
  Jul 20 12:18:27.802: INFO: 
  Jul 20 12:18:27.802: INFO: StatefulSet ss has not reached scale 0, at 3
  Jul 20 12:18:28.806: INFO: POD   NODE              PHASE      GRACE  CONDITIONS
  Jul 20 12:18:28.806: INFO: ss-1  ip-172-31-25-173  Running    30s    [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-07-20 12:18:10 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-07-20 12:18:07 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-07-20 12:18:17 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-07-20 12:18:17 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-07-20 12:18:07 +0000 UTC  }]
  Jul 20 12:18:28.806: INFO: ss-2  ip-172-31-3-74    Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-07-20 12:18:28 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-07-20 12:18:07 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-07-20 12:18:18 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-07-20 12:18:18 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-07-20 12:18:07 +0000 UTC  }]
  Jul 20 12:18:28.806: INFO: 
  Jul 20 12:18:28.806: INFO: StatefulSet ss has not reached scale 0, at 2
  Jul 20 12:18:29.810: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.989966866s
  Jul 20 12:18:30.815: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.985990312s
  Jul 20 12:18:31.819: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.981095585s
  Jul 20 12:18:32.823: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.977432585s
  Jul 20 12:18:33.828: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.973172888s
  Jul 20 12:18:34.833: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.968069718s
  Jul 20 12:18:35.841: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.959853046s
  Jul 20 12:18:36.846: INFO: Verifying statefulset ss doesn't scale past 0 for another 955.534318ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-9220 @ 07/20/24 12:18:37.846
  Jul 20 12:18:37.849: INFO: Scaling statefulset ss to 0
  Jul 20 12:18:37.854: INFO: Waiting for statefulset status.replicas updated to 0
  Jul 20 12:18:37.857: INFO: Deleting all statefulset in ns statefulset-9220
  Jul 20 12:18:37.859: INFO: Scaling statefulset ss to 0
  Jul 20 12:18:37.863: INFO: Waiting for statefulset status.replicas updated to 0
  Jul 20 12:18:37.865: INFO: Deleting statefulset ss
  Jul 20 12:18:37.883: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9220" for this suite. @ 07/20/24 12:18:37.886
• [50.874 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 07/20/24 12:18:37.896
  Jul 20 12:18:37.897: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename sysctl @ 07/20/24 12:18:37.897
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:18:37.91
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:18:37.916
  STEP: Creating a pod with one valid and two invalid sysctls @ 07/20/24 12:18:37.919
  Jul 20 12:18:37.923: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-4456" for this suite. @ 07/20/24 12:18:37.926
• [0.034 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 07/20/24 12:18:37.931
  Jul 20 12:18:37.931: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename secrets @ 07/20/24 12:18:37.932
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:18:37.944
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:18:37.947
  STEP: Creating secret with name secret-test-map-93b3c539-1c37-47be-a906-ae571f402789 @ 07/20/24 12:18:37.95
  STEP: Creating a pod to test consume secrets @ 07/20/24 12:18:37.954
  STEP: Saw pod success @ 07/20/24 12:18:41.976
  Jul 20 12:18:41.979: INFO: Trying to get logs from node ip-172-31-79-190 pod pod-secrets-7fc5833b-9a1d-4729-b309-a1c7523d63a1 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/20/24 12:18:41.995
  Jul 20 12:18:42.011: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2661" for this suite. @ 07/20/24 12:18:42.015
• [4.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:708
  STEP: Creating a kubernetes client @ 07/20/24 12:18:42.021
  Jul 20 12:18:42.021: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename sched-pred @ 07/20/24 12:18:42.022
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:18:42.036
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:18:42.038
  Jul 20 12:18:42.041: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Jul 20 12:18:42.047: INFO: Waiting for terminating namespaces to be deleted...
  Jul 20 12:18:42.051: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-25-173 before test
  Jul 20 12:18:42.055: INFO: nginx-ingress-controller-kubernetes-worker-rj7j7 from ingress-nginx-kubernetes-worker started at 2024-07-20 12:06:00 +0000 UTC (1 container statuses recorded)
  Jul 20 12:18:42.055: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jul 20 12:18:42.055: INFO: calico-node-zlt4r from kube-system started at 2024-07-20 12:09:35 +0000 UTC (1 container statuses recorded)
  Jul 20 12:18:42.055: INFO: 	Container calico-node ready: true, restart count 0
  Jul 20 12:18:42.055: INFO: sonobuoy-e2e-job-b5db9657854845c0 from sonobuoy started at 2024-07-20 12:11:23 +0000 UTC (2 container statuses recorded)
  Jul 20 12:18:42.055: INFO: 	Container e2e ready: true, restart count 0
  Jul 20 12:18:42.055: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jul 20 12:18:42.055: INFO: sonobuoy-systemd-logs-daemon-set-eaeef1be74044e0f-stlh6 from sonobuoy started at 2024-07-20 12:11:23 +0000 UTC (2 container statuses recorded)
  Jul 20 12:18:42.055: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jul 20 12:18:42.055: INFO: 	Container systemd-logs ready: true, restart count 0
  Jul 20 12:18:42.055: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-3-74 before test
  Jul 20 12:18:42.059: INFO: nginx-ingress-controller-kubernetes-worker-pl5dm from ingress-nginx-kubernetes-worker started at 2024-07-20 12:05:02 +0000 UTC (1 container statuses recorded)
  Jul 20 12:18:42.059: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jul 20 12:18:42.059: INFO: calico-node-jj9gt from kube-system started at 2024-07-20 12:09:25 +0000 UTC (1 container statuses recorded)
  Jul 20 12:18:42.059: INFO: 	Container calico-node ready: true, restart count 0
  Jul 20 12:18:42.059: INFO: coredns-bddfd76d7-tsxnn from kube-system started at 2024-07-20 12:05:01 +0000 UTC (1 container statuses recorded)
  Jul 20 12:18:42.059: INFO: 	Container coredns ready: true, restart count 0
  Jul 20 12:18:42.059: INFO: kube-state-metrics-6f48cdd76-rvxkr from kube-system started at 2024-07-20 12:05:01 +0000 UTC (1 container statuses recorded)
  Jul 20 12:18:42.059: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Jul 20 12:18:42.059: INFO: metrics-server-v0.6.3-69d7fbfdf8-pmcp9 from kube-system started at 2024-07-20 12:05:01 +0000 UTC (2 container statuses recorded)
  Jul 20 12:18:42.059: INFO: 	Container metrics-server ready: true, restart count 0
  Jul 20 12:18:42.059: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Jul 20 12:18:42.059: INFO: dashboard-metrics-scraper-5dd7cb5fc-zdfwg from kubernetes-dashboard started at 2024-07-20 12:05:01 +0000 UTC (1 container statuses recorded)
  Jul 20 12:18:42.059: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Jul 20 12:18:42.059: INFO: kubernetes-dashboard-7b899cb9d9-v2smr from kubernetes-dashboard started at 2024-07-20 12:05:01 +0000 UTC (1 container statuses recorded)
  Jul 20 12:18:42.059: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Jul 20 12:18:42.059: INFO: sonobuoy-systemd-logs-daemon-set-eaeef1be74044e0f-wnr5n from sonobuoy started at 2024-07-20 12:11:23 +0000 UTC (2 container statuses recorded)
  Jul 20 12:18:42.059: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jul 20 12:18:42.059: INFO: 	Container systemd-logs ready: true, restart count 0
  Jul 20 12:18:42.059: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-79-190 before test
  Jul 20 12:18:42.063: INFO: nginx-ingress-controller-kubernetes-worker-q9zkf from ingress-nginx-kubernetes-worker started at 2024-07-20 12:05:11 +0000 UTC (1 container statuses recorded)
  Jul 20 12:18:42.063: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jul 20 12:18:42.063: INFO: calico-node-fxs4g from kube-system started at 2024-07-20 12:09:45 +0000 UTC (1 container statuses recorded)
  Jul 20 12:18:42.063: INFO: 	Container calico-node ready: true, restart count 0
  Jul 20 12:18:42.063: INFO: sonobuoy from sonobuoy started at 2024-07-20 12:11:21 +0000 UTC (1 container statuses recorded)
  Jul 20 12:18:42.063: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Jul 20 12:18:42.063: INFO: sonobuoy-systemd-logs-daemon-set-eaeef1be74044e0f-qfbvq from sonobuoy started at 2024-07-20 12:11:23 +0000 UTC (2 container statuses recorded)
  Jul 20 12:18:42.063: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jul 20 12:18:42.063: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 07/20/24 12:18:42.064
  STEP: Explicitly delete pod here to free the resource it takes. @ 07/20/24 12:18:44.086
  STEP: Trying to apply a random label on the found node. @ 07/20/24 12:18:44.099
  STEP: verifying the node has the label kubernetes.io/e2e-7f75d1b0-467b-4bce-a354-d7becf401949 95 @ 07/20/24 12:18:44.107
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 07/20/24 12:18:44.11
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.31.79.190 on the node which pod4 resides and expect not scheduled @ 07/20/24 12:18:46.128
  STEP: removing the label kubernetes.io/e2e-7f75d1b0-467b-4bce-a354-d7becf401949 off the node ip-172-31-79-190 @ 07/20/24 12:23:46.137
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-7f75d1b0-467b-4bce-a354-d7becf401949 @ 07/20/24 12:23:46.149
  Jul 20 12:23:46.152: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-5091" for this suite. @ 07/20/24 12:23:46.157
• [304.145 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 07/20/24 12:23:46.166
  Jul 20 12:23:46.166: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename container-probe @ 07/20/24 12:23:46.167
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:23:46.18
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:23:46.183
  STEP: Creating pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584 @ 07/20/24 12:23:46.188
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/20/24 12:23:48.206
  Jul 20 12:23:48.209: INFO: Initial restart count of pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb is 0
  Jul 20 12:23:48.212: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:23:50.217: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:23:52.222: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:23:54.227: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:23:56.231: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:23:58.237: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:24:00.241: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:24:02.246: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:24:04.250: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:24:06.254: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:24:08.258: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:24:10.263: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:24:12.268: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:24:14.273: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:24:16.278: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:24:18.282: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:24:20.287: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:24:22.292: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:24:24.297: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:24:26.301: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:24:28.306: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:24:30.311: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:24:32.316: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:24:34.320: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:24:36.324: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:24:38.329: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:24:40.333: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:24:42.338: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:24:44.343: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:24:46.347: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:24:48.351: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:24:50.357: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:24:52.362: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:24:54.367: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:24:56.371: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:24:58.375: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:25:00.379: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:25:02.383: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:25:04.388: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:25:06.393: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:25:08.397: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:25:10.402: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:25:12.408: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:25:14.411: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:25:16.416: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:25:18.421: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:25:20.425: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:25:22.430: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:25:24.435: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:25:26.440: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:25:28.444: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:25:30.450: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:25:32.454: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:25:34.459: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:25:36.463: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:25:38.468: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:25:40.472: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:25:42.477: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:25:44.481: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:25:46.486: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:25:48.490: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:25:50.496: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:25:52.501: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:25:54.504: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:25:56.508: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:25:58.514: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:26:00.519: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:26:02.524: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:26:04.529: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:26:06.534: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:26:08.538: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:26:10.542: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:26:12.547: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:26:14.552: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:26:16.557: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:26:18.561: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:26:20.566: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:26:22.570: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:26:24.575: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:26:26.580: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:26:28.585: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:26:30.589: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:26:32.593: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:26:34.598: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:26:36.602: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:26:38.607: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:26:40.614: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:26:42.618: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:26:44.623: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:26:46.627: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:26:48.631: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:26:50.637: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:26:52.642: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:26:54.647: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:26:56.652: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:26:58.657: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:27:00.662: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:27:02.668: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:27:04.672: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:27:06.677: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:27:08.681: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:27:10.685: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:27:12.690: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:27:14.694: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:27:16.698: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:27:18.702: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:27:20.707: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:27:22.712: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:27:24.716: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:27:26.721: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:27:28.727: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:27:30.732: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:27:32.737: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:27:34.742: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:27:36.747: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:27:38.751: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:27:40.756: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:27:42.761: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:27:44.766: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  Jul 20 12:27:46.771: INFO: Get pod test-grpc-1c0a5062-e5b1-40c5-82ca-46b6c38fe9bb in namespace container-probe-6584
  STEP: deleting the pod @ 07/20/24 12:27:48.772
  Jul 20 12:27:48.785: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6584" for this suite. @ 07/20/24 12:27:48.789
• [242.630 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 07/20/24 12:27:48.797
  Jul 20 12:27:48.797: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename svc-latency @ 07/20/24 12:27:48.798
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:27:48.808
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:27:48.811
  Jul 20 12:27:48.814: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-6193 @ 07/20/24 12:27:48.814
  I0720 12:27:48.820518      19 runners.go:197] Created replication controller with name: svc-latency-rc, namespace: svc-latency-6193, replica count: 1
  I0720 12:27:49.871865      19 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0720 12:27:50.872055      19 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jul 20 12:27:50.982: INFO: Created: latency-svc-glbtp
  Jul 20 12:27:50.990: INFO: Got endpoints: latency-svc-glbtp [17.463273ms]
  Jul 20 12:27:51.000: INFO: Created: latency-svc-5w2sg
  Jul 20 12:27:51.006: INFO: Got endpoints: latency-svc-5w2sg [16.355118ms]
  Jul 20 12:27:51.014: INFO: Created: latency-svc-4fx2j
  Jul 20 12:27:51.015: INFO: Created: latency-svc-6v74r
  Jul 20 12:27:51.025: INFO: Got endpoints: latency-svc-6v74r [34.306328ms]
  Jul 20 12:27:51.026: INFO: Got endpoints: latency-svc-4fx2j [35.894867ms]
  Jul 20 12:27:51.031: INFO: Created: latency-svc-h9hm5
  Jul 20 12:27:51.036: INFO: Got endpoints: latency-svc-h9hm5 [45.814108ms]
  Jul 20 12:27:51.039: INFO: Created: latency-svc-rjmt9
  Jul 20 12:27:51.044: INFO: Created: latency-svc-dq5kl
  Jul 20 12:27:51.046: INFO: Got endpoints: latency-svc-rjmt9 [55.631394ms]
  Jul 20 12:27:51.061: INFO: Created: latency-svc-q9nsk
  Jul 20 12:27:51.061: INFO: Got endpoints: latency-svc-dq5kl [70.811078ms]
  Jul 20 12:27:51.065: INFO: Created: latency-svc-v4cdm
  Jul 20 12:27:51.070: INFO: Got endpoints: latency-svc-q9nsk [79.506092ms]
  Jul 20 12:27:51.071: INFO: Got endpoints: latency-svc-v4cdm [80.846614ms]
  Jul 20 12:27:51.075: INFO: Created: latency-svc-72hkc
  Jul 20 12:27:51.079: INFO: Got endpoints: latency-svc-72hkc [88.84622ms]
  Jul 20 12:27:51.081: INFO: Created: latency-svc-5f7vl
  Jul 20 12:27:51.087: INFO: Got endpoints: latency-svc-5f7vl [96.486969ms]
  Jul 20 12:27:51.090: INFO: Created: latency-svc-wx47n
  Jul 20 12:27:51.095: INFO: Got endpoints: latency-svc-wx47n [104.987154ms]
  Jul 20 12:27:51.097: INFO: Created: latency-svc-5jz2s
  Jul 20 12:27:51.102: INFO: Got endpoints: latency-svc-5jz2s [111.448755ms]
  Jul 20 12:27:51.105: INFO: Created: latency-svc-pmntl
  Jul 20 12:27:51.110: INFO: Got endpoints: latency-svc-pmntl [119.847037ms]
  Jul 20 12:27:51.114: INFO: Created: latency-svc-prvvm
  Jul 20 12:27:51.119: INFO: Got endpoints: latency-svc-prvvm [128.813649ms]
  Jul 20 12:27:51.120: INFO: Created: latency-svc-pgwgd
  Jul 20 12:27:51.127: INFO: Created: latency-svc-pwmn4
  Jul 20 12:27:51.128: INFO: Got endpoints: latency-svc-pgwgd [137.680389ms]
  Jul 20 12:27:51.131: INFO: Created: latency-svc-h675d
  Jul 20 12:27:51.137: INFO: Created: latency-svc-fqczf
  Jul 20 12:27:51.139: INFO: Got endpoints: latency-svc-h675d [114.066682ms]
  Jul 20 12:27:51.141: INFO: Got endpoints: latency-svc-pwmn4 [134.454186ms]
  Jul 20 12:27:51.145: INFO: Got endpoints: latency-svc-fqczf [118.960293ms]
  Jul 20 12:27:51.149: INFO: Created: latency-svc-xttx5
  Jul 20 12:27:51.154: INFO: Created: latency-svc-rkhv9
  Jul 20 12:27:51.156: INFO: Got endpoints: latency-svc-xttx5 [119.496179ms]
  Jul 20 12:27:51.158: INFO: Created: latency-svc-hp4n4
  Jul 20 12:27:51.161: INFO: Got endpoints: latency-svc-rkhv9 [114.770436ms]
  Jul 20 12:27:51.163: INFO: Got endpoints: latency-svc-hp4n4 [101.70233ms]
  Jul 20 12:27:51.169: INFO: Created: latency-svc-2t2lw
  Jul 20 12:27:51.175: INFO: Got endpoints: latency-svc-2t2lw [104.659958ms]
  Jul 20 12:27:51.176: INFO: Created: latency-svc-s7sh4
  Jul 20 12:27:51.183: INFO: Got endpoints: latency-svc-s7sh4 [111.640856ms]
  Jul 20 12:27:51.183: INFO: Created: latency-svc-47hx6
  Jul 20 12:27:51.191: INFO: Got endpoints: latency-svc-47hx6 [111.87593ms]
  Jul 20 12:27:51.244: INFO: Created: latency-svc-jgkzd
  Jul 20 12:27:51.244: INFO: Created: latency-svc-zwt6z
  Jul 20 12:27:51.245: INFO: Created: latency-svc-5856w
  Jul 20 12:27:51.248: INFO: Created: latency-svc-57fwc
  Jul 20 12:27:51.249: INFO: Created: latency-svc-shqp8
  Jul 20 12:27:51.250: INFO: Created: latency-svc-7fmrb
  Jul 20 12:27:51.251: INFO: Created: latency-svc-smlw6
  Jul 20 12:27:51.251: INFO: Created: latency-svc-lfcls
  Jul 20 12:27:51.251: INFO: Created: latency-svc-kp9sl
  Jul 20 12:27:51.251: INFO: Created: latency-svc-6dvsb
  Jul 20 12:27:51.252: INFO: Created: latency-svc-skjwj
  Jul 20 12:27:51.252: INFO: Created: latency-svc-kw4f2
  Jul 20 12:27:51.252: INFO: Created: latency-svc-829k4
  Jul 20 12:27:51.253: INFO: Created: latency-svc-tbf4c
  Jul 20 12:27:51.254: INFO: Created: latency-svc-v6q6n
  Jul 20 12:27:51.262: INFO: Got endpoints: latency-svc-jgkzd [142.515771ms]
  Jul 20 12:27:51.263: INFO: Got endpoints: latency-svc-5856w [117.472905ms]
  Jul 20 12:27:51.268: INFO: Got endpoints: latency-svc-zwt6z [105.166237ms]
  Jul 20 12:27:51.272: INFO: Got endpoints: latency-svc-smlw6 [132.99379ms]
  Jul 20 12:27:51.275: INFO: Got endpoints: latency-svc-kp9sl [173.448411ms]
  Jul 20 12:27:51.278: INFO: Got endpoints: latency-svc-tbf4c [122.665122ms]
  Jul 20 12:27:51.278: INFO: Got endpoints: latency-svc-lfcls [167.953592ms]
  Jul 20 12:27:51.278: INFO: Got endpoints: latency-svc-829k4 [191.473295ms]
  Jul 20 12:27:51.284: INFO: Got endpoints: latency-svc-57fwc [92.963978ms]
  Jul 20 12:27:51.286: INFO: Created: latency-svc-znqhc
  Jul 20 12:27:51.288: INFO: Got endpoints: latency-svc-7fmrb [192.508266ms]
  Jul 20 12:27:51.294: INFO: Got endpoints: latency-svc-v6q6n [110.729479ms]
  Jul 20 12:27:51.328: INFO: Created: latency-svc-cs7mj
  Jul 20 12:27:51.330: INFO: Created: latency-svc-2swjv
  Jul 20 12:27:51.330: INFO: Created: latency-svc-xsfs7
  Jul 20 12:27:51.340: INFO: Created: latency-svc-ffbjf
  Jul 20 12:27:51.340: INFO: Created: latency-svc-2x75k
  Jul 20 12:27:51.340: INFO: Created: latency-svc-z7778
  Jul 20 12:27:51.340: INFO: Created: latency-svc-n5vwd
  Jul 20 12:27:51.340: INFO: Created: latency-svc-j2z79
  Jul 20 12:27:51.340: INFO: Created: latency-svc-kkgmp
  Jul 20 12:27:51.340: INFO: Created: latency-svc-925vx
  Jul 20 12:27:51.343: INFO: Got endpoints: latency-svc-6dvsb [201.70621ms]
  Jul 20 12:27:51.353: INFO: Created: latency-svc-wvtv5
  Jul 20 12:27:51.389: INFO: Got endpoints: latency-svc-kw4f2 [228.36986ms]
  Jul 20 12:27:51.399: INFO: Created: latency-svc-85qnq
  Jul 20 12:27:51.441: INFO: Got endpoints: latency-svc-shqp8 [312.802648ms]
  Jul 20 12:27:51.450: INFO: Created: latency-svc-rgchq
  Jul 20 12:27:51.492: INFO: Got endpoints: latency-svc-skjwj [317.065414ms]
  Jul 20 12:27:51.500: INFO: Created: latency-svc-xgpbx
  Jul 20 12:27:51.541: INFO: Got endpoints: latency-svc-znqhc [279.110234ms]
  Jul 20 12:27:51.550: INFO: Created: latency-svc-8bvdd
  Jul 20 12:27:51.589: INFO: Got endpoints: latency-svc-cs7mj [313.756723ms]
  Jul 20 12:27:51.600: INFO: Created: latency-svc-9klss
  Jul 20 12:27:51.639: INFO: Got endpoints: latency-svc-xsfs7 [351.031977ms]
  Jul 20 12:27:51.649: INFO: Created: latency-svc-vgsx2
  Jul 20 12:27:51.691: INFO: Got endpoints: latency-svc-2swjv [419.020869ms]
  Jul 20 12:27:51.701: INFO: Created: latency-svc-zb4lg
  Jul 20 12:27:51.740: INFO: Got endpoints: latency-svc-n5vwd [455.917103ms]
  Jul 20 12:27:51.749: INFO: Created: latency-svc-bh94v
  Jul 20 12:27:51.789: INFO: Got endpoints: latency-svc-j2z79 [520.20413ms]
  Jul 20 12:27:51.799: INFO: Created: latency-svc-qbqqx
  Jul 20 12:27:51.840: INFO: Got endpoints: latency-svc-ffbjf [545.67731ms]
  Jul 20 12:27:51.850: INFO: Created: latency-svc-jt2q5
  Jul 20 12:27:51.889: INFO: Got endpoints: latency-svc-925vx [625.642371ms]
  Jul 20 12:27:51.897: INFO: Created: latency-svc-2f4bw
  Jul 20 12:27:51.940: INFO: Got endpoints: latency-svc-z7778 [661.824806ms]
  Jul 20 12:27:51.949: INFO: Created: latency-svc-dpzfb
  Jul 20 12:27:51.992: INFO: Got endpoints: latency-svc-kkgmp [713.31381ms]
  Jul 20 12:27:52.000: INFO: Created: latency-svc-q46b9
  Jul 20 12:27:52.039: INFO: Got endpoints: latency-svc-2x75k [760.682386ms]
  Jul 20 12:27:52.049: INFO: Created: latency-svc-6v9qb
  Jul 20 12:27:52.090: INFO: Got endpoints: latency-svc-wvtv5 [747.072899ms]
  Jul 20 12:27:52.097: INFO: Created: latency-svc-r97kj
  Jul 20 12:27:52.139: INFO: Got endpoints: latency-svc-85qnq [750.024904ms]
  Jul 20 12:27:52.149: INFO: Created: latency-svc-92qps
  Jul 20 12:27:52.190: INFO: Got endpoints: latency-svc-rgchq [748.558571ms]
  Jul 20 12:27:52.199: INFO: Created: latency-svc-zqvtf
  Jul 20 12:27:52.241: INFO: Got endpoints: latency-svc-xgpbx [749.036923ms]
  Jul 20 12:27:52.249: INFO: Created: latency-svc-rnnp4
  Jul 20 12:27:52.291: INFO: Got endpoints: latency-svc-8bvdd [749.331207ms]
  Jul 20 12:27:52.301: INFO: Created: latency-svc-chtxq
  Jul 20 12:27:52.339: INFO: Got endpoints: latency-svc-9klss [749.916623ms]
  Jul 20 12:27:52.351: INFO: Created: latency-svc-c7wqg
  Jul 20 12:27:52.388: INFO: Got endpoints: latency-svc-vgsx2 [748.630484ms]
  Jul 20 12:27:52.398: INFO: Created: latency-svc-f6dcl
  Jul 20 12:27:52.441: INFO: Got endpoints: latency-svc-zb4lg [750.021314ms]
  Jul 20 12:27:52.450: INFO: Created: latency-svc-lpc9z
  Jul 20 12:27:52.490: INFO: Got endpoints: latency-svc-bh94v [750.023186ms]
  Jul 20 12:27:52.499: INFO: Created: latency-svc-nk4dt
  Jul 20 12:27:52.541: INFO: Got endpoints: latency-svc-qbqqx [751.647761ms]
  Jul 20 12:27:52.549: INFO: Created: latency-svc-7rlkr
  Jul 20 12:27:52.589: INFO: Got endpoints: latency-svc-jt2q5 [748.878738ms]
  Jul 20 12:27:52.599: INFO: Created: latency-svc-k2ml5
  Jul 20 12:27:52.642: INFO: Got endpoints: latency-svc-2f4bw [752.878847ms]
  Jul 20 12:27:52.650: INFO: Created: latency-svc-bwd89
  Jul 20 12:27:52.689: INFO: Got endpoints: latency-svc-dpzfb [748.738027ms]
  Jul 20 12:27:52.699: INFO: Created: latency-svc-l5m8s
  Jul 20 12:27:52.739: INFO: Got endpoints: latency-svc-q46b9 [747.442861ms]
  Jul 20 12:27:52.749: INFO: Created: latency-svc-psfj6
  Jul 20 12:27:52.788: INFO: Got endpoints: latency-svc-6v9qb [749.155475ms]
  Jul 20 12:27:52.797: INFO: Created: latency-svc-hb489
  Jul 20 12:27:52.841: INFO: Got endpoints: latency-svc-r97kj [751.243794ms]
  Jul 20 12:27:52.849: INFO: Created: latency-svc-h8k4r
  Jul 20 12:27:52.891: INFO: Got endpoints: latency-svc-92qps [751.490172ms]
  Jul 20 12:27:52.901: INFO: Created: latency-svc-x4gl6
  Jul 20 12:27:52.947: INFO: Got endpoints: latency-svc-zqvtf [757.119512ms]
  Jul 20 12:27:52.957: INFO: Created: latency-svc-jl6rx
  Jul 20 12:27:52.991: INFO: Got endpoints: latency-svc-rnnp4 [749.266229ms]
  Jul 20 12:27:53.001: INFO: Created: latency-svc-xrtvl
  Jul 20 12:27:53.039: INFO: Got endpoints: latency-svc-chtxq [747.745592ms]
  Jul 20 12:27:53.046: INFO: Created: latency-svc-p2qvm
  Jul 20 12:27:53.091: INFO: Got endpoints: latency-svc-c7wqg [751.330964ms]
  Jul 20 12:27:53.100: INFO: Created: latency-svc-6n2n5
  Jul 20 12:27:53.141: INFO: Got endpoints: latency-svc-f6dcl [753.383351ms]
  Jul 20 12:27:53.150: INFO: Created: latency-svc-vjgmj
  Jul 20 12:27:53.189: INFO: Got endpoints: latency-svc-lpc9z [747.493133ms]
  Jul 20 12:27:53.199: INFO: Created: latency-svc-5jd74
  Jul 20 12:27:53.239: INFO: Got endpoints: latency-svc-nk4dt [748.468178ms]
  Jul 20 12:27:53.250: INFO: Created: latency-svc-lknbw
  Jul 20 12:27:53.290: INFO: Got endpoints: latency-svc-7rlkr [749.176834ms]
  Jul 20 12:27:53.297: INFO: Created: latency-svc-7jmc4
  Jul 20 12:27:53.340: INFO: Got endpoints: latency-svc-k2ml5 [751.281211ms]
  Jul 20 12:27:53.350: INFO: Created: latency-svc-5pslz
  Jul 20 12:27:53.390: INFO: Got endpoints: latency-svc-bwd89 [748.571456ms]
  Jul 20 12:27:53.400: INFO: Created: latency-svc-j8g4m
  Jul 20 12:27:53.440: INFO: Got endpoints: latency-svc-l5m8s [750.379244ms]
  Jul 20 12:27:53.449: INFO: Created: latency-svc-cs8rd
  Jul 20 12:27:53.488: INFO: Got endpoints: latency-svc-psfj6 [747.873054ms]
  Jul 20 12:27:53.497: INFO: Created: latency-svc-v74k7
  Jul 20 12:27:53.542: INFO: Got endpoints: latency-svc-hb489 [753.370291ms]
  Jul 20 12:27:53.550: INFO: Created: latency-svc-x5klm
  Jul 20 12:27:53.592: INFO: Got endpoints: latency-svc-h8k4r [750.407734ms]
  Jul 20 12:27:53.599: INFO: Created: latency-svc-89cfd
  Jul 20 12:27:53.642: INFO: Got endpoints: latency-svc-x4gl6 [751.445734ms]
  Jul 20 12:27:53.652: INFO: Created: latency-svc-5x7n7
  Jul 20 12:27:53.689: INFO: Got endpoints: latency-svc-jl6rx [742.282523ms]
  Jul 20 12:27:53.700: INFO: Created: latency-svc-pqngb
  Jul 20 12:27:53.739: INFO: Got endpoints: latency-svc-xrtvl [748.091257ms]
  Jul 20 12:27:53.749: INFO: Created: latency-svc-52rt2
  Jul 20 12:27:53.792: INFO: Got endpoints: latency-svc-p2qvm [753.580477ms]
  Jul 20 12:27:53.802: INFO: Created: latency-svc-9znwn
  Jul 20 12:27:53.840: INFO: Got endpoints: latency-svc-6n2n5 [749.336795ms]
  Jul 20 12:27:53.857: INFO: Created: latency-svc-tt6l8
  Jul 20 12:27:53.891: INFO: Got endpoints: latency-svc-vjgmj [749.676381ms]
  Jul 20 12:27:53.899: INFO: Created: latency-svc-xwgth
  Jul 20 12:27:53.940: INFO: Got endpoints: latency-svc-5jd74 [751.365332ms]
  Jul 20 12:27:53.953: INFO: Created: latency-svc-jmdz5
  Jul 20 12:27:53.987: INFO: Got endpoints: latency-svc-lknbw [748.401691ms]
  Jul 20 12:27:54.009: INFO: Created: latency-svc-xbxrm
  Jul 20 12:27:54.039: INFO: Got endpoints: latency-svc-7jmc4 [748.711892ms]
  Jul 20 12:27:54.053: INFO: Created: latency-svc-c82l2
  Jul 20 12:27:54.091: INFO: Got endpoints: latency-svc-5pslz [750.683891ms]
  Jul 20 12:27:54.099: INFO: Created: latency-svc-8jnpf
  Jul 20 12:27:54.141: INFO: Got endpoints: latency-svc-j8g4m [750.108931ms]
  Jul 20 12:27:54.149: INFO: Created: latency-svc-k4n54
  Jul 20 12:27:54.191: INFO: Got endpoints: latency-svc-cs8rd [750.607598ms]
  Jul 20 12:27:54.200: INFO: Created: latency-svc-xhnhd
  Jul 20 12:27:54.239: INFO: Got endpoints: latency-svc-v74k7 [751.024871ms]
  Jul 20 12:27:54.248: INFO: Created: latency-svc-8jf7q
  Jul 20 12:27:54.289: INFO: Got endpoints: latency-svc-x5klm [747.251317ms]
  Jul 20 12:27:54.298: INFO: Created: latency-svc-cc7q4
  Jul 20 12:27:54.340: INFO: Got endpoints: latency-svc-89cfd [748.838783ms]
  Jul 20 12:27:54.350: INFO: Created: latency-svc-ksmdd
  Jul 20 12:27:54.390: INFO: Got endpoints: latency-svc-5x7n7 [748.125825ms]
  Jul 20 12:27:54.399: INFO: Created: latency-svc-74wck
  Jul 20 12:27:54.441: INFO: Got endpoints: latency-svc-pqngb [751.833336ms]
  Jul 20 12:27:54.450: INFO: Created: latency-svc-4pvz8
  Jul 20 12:27:54.489: INFO: Got endpoints: latency-svc-52rt2 [749.623641ms]
  Jul 20 12:27:54.500: INFO: Created: latency-svc-nkwbj
  Jul 20 12:27:54.540: INFO: Got endpoints: latency-svc-9znwn [747.304687ms]
  Jul 20 12:27:54.549: INFO: Created: latency-svc-nmskz
  Jul 20 12:27:54.589: INFO: Got endpoints: latency-svc-tt6l8 [749.044654ms]
  Jul 20 12:27:54.598: INFO: Created: latency-svc-4b7gl
  Jul 20 12:27:54.645: INFO: Got endpoints: latency-svc-xwgth [753.514762ms]
  Jul 20 12:27:54.659: INFO: Created: latency-svc-qpsjn
  Jul 20 12:27:54.698: INFO: Got endpoints: latency-svc-jmdz5 [757.843686ms]
  Jul 20 12:27:54.708: INFO: Created: latency-svc-695vh
  Jul 20 12:27:54.741: INFO: Got endpoints: latency-svc-xbxrm [753.541126ms]
  Jul 20 12:27:54.751: INFO: Created: latency-svc-kmxwr
  Jul 20 12:27:54.789: INFO: Got endpoints: latency-svc-c82l2 [750.448698ms]
  Jul 20 12:27:54.800: INFO: Created: latency-svc-zp89w
  Jul 20 12:27:54.838: INFO: Got endpoints: latency-svc-8jnpf [747.144658ms]
  Jul 20 12:27:54.846: INFO: Created: latency-svc-ll72c
  Jul 20 12:27:54.890: INFO: Got endpoints: latency-svc-k4n54 [748.903259ms]
  Jul 20 12:27:54.898: INFO: Created: latency-svc-lwx6b
  Jul 20 12:27:54.941: INFO: Got endpoints: latency-svc-xhnhd [750.710127ms]
  Jul 20 12:27:54.951: INFO: Created: latency-svc-wjdw7
  Jul 20 12:27:54.990: INFO: Got endpoints: latency-svc-8jf7q [751.799509ms]
  Jul 20 12:27:55.003: INFO: Created: latency-svc-f67n8
  Jul 20 12:27:55.039: INFO: Got endpoints: latency-svc-cc7q4 [750.051379ms]
  Jul 20 12:27:55.050: INFO: Created: latency-svc-nrpg5
  Jul 20 12:27:55.091: INFO: Got endpoints: latency-svc-ksmdd [750.353704ms]
  Jul 20 12:27:55.101: INFO: Created: latency-svc-f42kp
  Jul 20 12:27:55.141: INFO: Got endpoints: latency-svc-74wck [750.797247ms]
  Jul 20 12:27:55.150: INFO: Created: latency-svc-lbqqt
  Jul 20 12:27:55.192: INFO: Got endpoints: latency-svc-4pvz8 [750.438427ms]
  Jul 20 12:27:55.200: INFO: Created: latency-svc-5tmzn
  Jul 20 12:27:55.239: INFO: Got endpoints: latency-svc-nkwbj [749.649942ms]
  Jul 20 12:27:55.249: INFO: Created: latency-svc-xm5nm
  Jul 20 12:27:55.289: INFO: Got endpoints: latency-svc-nmskz [749.673535ms]
  Jul 20 12:27:55.297: INFO: Created: latency-svc-x7ctl
  Jul 20 12:27:55.340: INFO: Got endpoints: latency-svc-4b7gl [750.243845ms]
  Jul 20 12:27:55.349: INFO: Created: latency-svc-bj89f
  Jul 20 12:27:55.390: INFO: Got endpoints: latency-svc-qpsjn [745.822659ms]
  Jul 20 12:27:55.401: INFO: Created: latency-svc-m2n9f
  Jul 20 12:27:55.440: INFO: Got endpoints: latency-svc-695vh [742.533271ms]
  Jul 20 12:27:55.450: INFO: Created: latency-svc-9z9rb
  Jul 20 12:27:55.488: INFO: Got endpoints: latency-svc-kmxwr [746.918934ms]
  Jul 20 12:27:55.499: INFO: Created: latency-svc-sczgh
  Jul 20 12:27:55.540: INFO: Got endpoints: latency-svc-zp89w [750.196192ms]
  Jul 20 12:27:55.550: INFO: Created: latency-svc-khnfw
  Jul 20 12:27:55.592: INFO: Got endpoints: latency-svc-ll72c [753.383441ms]
  Jul 20 12:27:55.601: INFO: Created: latency-svc-jf5cp
  Jul 20 12:27:55.643: INFO: Got endpoints: latency-svc-lwx6b [752.773118ms]
  Jul 20 12:27:55.651: INFO: Created: latency-svc-ngw9r
  Jul 20 12:27:55.689: INFO: Got endpoints: latency-svc-wjdw7 [747.120891ms]
  Jul 20 12:27:55.700: INFO: Created: latency-svc-b57j9
  Jul 20 12:27:55.740: INFO: Got endpoints: latency-svc-f67n8 [749.227185ms]
  Jul 20 12:27:55.748: INFO: Created: latency-svc-zqcbh
  Jul 20 12:27:55.790: INFO: Got endpoints: latency-svc-nrpg5 [751.109807ms]
  Jul 20 12:27:55.803: INFO: Created: latency-svc-js9qf
  Jul 20 12:27:55.845: INFO: Got endpoints: latency-svc-f42kp [753.848018ms]
  Jul 20 12:27:55.855: INFO: Created: latency-svc-m4t4g
  Jul 20 12:27:55.893: INFO: Got endpoints: latency-svc-lbqqt [751.183261ms]
  Jul 20 12:27:55.901: INFO: Created: latency-svc-mnjbg
  Jul 20 12:27:55.940: INFO: Got endpoints: latency-svc-5tmzn [747.860423ms]
  Jul 20 12:27:55.951: INFO: Created: latency-svc-6gdfr
  Jul 20 12:27:55.989: INFO: Got endpoints: latency-svc-xm5nm [750.395326ms]
  Jul 20 12:27:56.002: INFO: Created: latency-svc-4dwf7
  Jul 20 12:27:56.040: INFO: Got endpoints: latency-svc-x7ctl [750.740759ms]
  Jul 20 12:27:56.049: INFO: Created: latency-svc-pspmx
  Jul 20 12:27:56.091: INFO: Got endpoints: latency-svc-bj89f [750.717976ms]
  Jul 20 12:27:56.100: INFO: Created: latency-svc-w8m57
  Jul 20 12:27:56.139: INFO: Got endpoints: latency-svc-m2n9f [748.536514ms]
  Jul 20 12:27:56.149: INFO: Created: latency-svc-9qmzs
  Jul 20 12:27:56.188: INFO: Got endpoints: latency-svc-9z9rb [748.003461ms]
  Jul 20 12:27:56.199: INFO: Created: latency-svc-jp88l
  Jul 20 12:27:56.239: INFO: Got endpoints: latency-svc-sczgh [750.81292ms]
  Jul 20 12:27:56.247: INFO: Created: latency-svc-pqnjr
  Jul 20 12:27:56.291: INFO: Got endpoints: latency-svc-khnfw [751.451339ms]
  Jul 20 12:27:56.302: INFO: Created: latency-svc-v89wp
  Jul 20 12:27:56.341: INFO: Got endpoints: latency-svc-jf5cp [748.979216ms]
  Jul 20 12:27:56.349: INFO: Created: latency-svc-ml7wb
  Jul 20 12:27:56.391: INFO: Got endpoints: latency-svc-ngw9r [748.037248ms]
  Jul 20 12:27:56.399: INFO: Created: latency-svc-ld2xz
  Jul 20 12:27:56.439: INFO: Got endpoints: latency-svc-b57j9 [749.996115ms]
  Jul 20 12:27:56.450: INFO: Created: latency-svc-kjzrh
  Jul 20 12:27:56.490: INFO: Got endpoints: latency-svc-zqcbh [749.786757ms]
  Jul 20 12:27:56.498: INFO: Created: latency-svc-4r6m7
  Jul 20 12:27:56.541: INFO: Got endpoints: latency-svc-js9qf [750.555572ms]
  Jul 20 12:27:56.550: INFO: Created: latency-svc-x2fkj
  Jul 20 12:27:56.590: INFO: Got endpoints: latency-svc-m4t4g [745.444138ms]
  Jul 20 12:27:56.601: INFO: Created: latency-svc-8s8l7
  Jul 20 12:27:56.641: INFO: Got endpoints: latency-svc-mnjbg [748.339703ms]
  Jul 20 12:27:56.656: INFO: Created: latency-svc-mlmtg
  Jul 20 12:27:56.693: INFO: Got endpoints: latency-svc-6gdfr [753.072256ms]
  Jul 20 12:27:56.704: INFO: Created: latency-svc-bdssl
  Jul 20 12:27:56.740: INFO: Got endpoints: latency-svc-4dwf7 [751.256328ms]
  Jul 20 12:27:56.751: INFO: Created: latency-svc-ksswj
  Jul 20 12:27:56.790: INFO: Got endpoints: latency-svc-pspmx [749.991512ms]
  Jul 20 12:27:56.799: INFO: Created: latency-svc-lrbjd
  Jul 20 12:27:56.841: INFO: Got endpoints: latency-svc-w8m57 [749.862264ms]
  Jul 20 12:27:56.849: INFO: Created: latency-svc-b75n5
  Jul 20 12:27:56.891: INFO: Got endpoints: latency-svc-9qmzs [752.196253ms]
  Jul 20 12:27:56.900: INFO: Created: latency-svc-2ssdj
  Jul 20 12:27:56.940: INFO: Got endpoints: latency-svc-jp88l [751.13928ms]
  Jul 20 12:27:56.950: INFO: Created: latency-svc-h8zlg
  Jul 20 12:27:56.991: INFO: Got endpoints: latency-svc-pqnjr [752.40241ms]
  Jul 20 12:27:57.002: INFO: Created: latency-svc-k9mmj
  Jul 20 12:27:57.038: INFO: Got endpoints: latency-svc-v89wp [746.625192ms]
  Jul 20 12:27:57.047: INFO: Created: latency-svc-5gb5w
  Jul 20 12:27:57.091: INFO: Got endpoints: latency-svc-ml7wb [750.107256ms]
  Jul 20 12:27:57.100: INFO: Created: latency-svc-6q4tx
  Jul 20 12:27:57.141: INFO: Got endpoints: latency-svc-ld2xz [750.100859ms]
  Jul 20 12:27:57.149: INFO: Created: latency-svc-4cpmf
  Jul 20 12:27:57.188: INFO: Got endpoints: latency-svc-kjzrh [748.672182ms]
  Jul 20 12:27:57.198: INFO: Created: latency-svc-4xjpp
  Jul 20 12:27:57.239: INFO: Got endpoints: latency-svc-4r6m7 [749.263308ms]
  Jul 20 12:27:57.249: INFO: Created: latency-svc-tsgqk
  Jul 20 12:27:57.289: INFO: Got endpoints: latency-svc-x2fkj [747.696858ms]
  Jul 20 12:27:57.297: INFO: Created: latency-svc-npmzs
  Jul 20 12:27:57.342: INFO: Got endpoints: latency-svc-8s8l7 [751.800593ms]
  Jul 20 12:27:57.351: INFO: Created: latency-svc-sv46c
  Jul 20 12:27:57.399: INFO: Got endpoints: latency-svc-mlmtg [757.729923ms]
  Jul 20 12:27:57.408: INFO: Created: latency-svc-hlgm9
  Jul 20 12:27:57.439: INFO: Got endpoints: latency-svc-bdssl [745.774846ms]
  Jul 20 12:27:57.449: INFO: Created: latency-svc-4rgrd
  Jul 20 12:27:57.489: INFO: Got endpoints: latency-svc-ksswj [748.531117ms]
  Jul 20 12:27:57.498: INFO: Created: latency-svc-snvqf
  Jul 20 12:27:57.539: INFO: Got endpoints: latency-svc-lrbjd [749.019507ms]
  Jul 20 12:27:57.548: INFO: Created: latency-svc-dbn7j
  Jul 20 12:27:57.591: INFO: Got endpoints: latency-svc-b75n5 [749.741196ms]
  Jul 20 12:27:57.599: INFO: Created: latency-svc-wt7wv
  Jul 20 12:27:57.640: INFO: Got endpoints: latency-svc-2ssdj [748.764213ms]
  Jul 20 12:27:57.650: INFO: Created: latency-svc-6hxg6
  Jul 20 12:27:57.690: INFO: Got endpoints: latency-svc-h8zlg [750.05255ms]
  Jul 20 12:27:57.700: INFO: Created: latency-svc-qxmdb
  Jul 20 12:27:57.740: INFO: Got endpoints: latency-svc-k9mmj [748.436402ms]
  Jul 20 12:27:57.748: INFO: Created: latency-svc-pg5c9
  Jul 20 12:27:57.790: INFO: Got endpoints: latency-svc-5gb5w [752.370113ms]
  Jul 20 12:27:57.799: INFO: Created: latency-svc-bhb7d
  Jul 20 12:27:57.841: INFO: Got endpoints: latency-svc-6q4tx [749.903602ms]
  Jul 20 12:27:57.849: INFO: Created: latency-svc-dhqg6
  Jul 20 12:27:57.890: INFO: Got endpoints: latency-svc-4cpmf [749.459339ms]
  Jul 20 12:27:57.898: INFO: Created: latency-svc-mfqdv
  Jul 20 12:27:57.940: INFO: Got endpoints: latency-svc-4xjpp [752.158708ms]
  Jul 20 12:27:57.950: INFO: Created: latency-svc-smg5j
  Jul 20 12:27:57.990: INFO: Got endpoints: latency-svc-tsgqk [750.337627ms]
  Jul 20 12:27:58.000: INFO: Created: latency-svc-8kg86
  Jul 20 12:27:58.042: INFO: Got endpoints: latency-svc-npmzs [752.557034ms]
  Jul 20 12:27:58.049: INFO: Created: latency-svc-pqtzk
  Jul 20 12:27:58.090: INFO: Got endpoints: latency-svc-sv46c [747.476868ms]
  Jul 20 12:27:58.100: INFO: Created: latency-svc-l4f5p
  Jul 20 12:27:58.139: INFO: Got endpoints: latency-svc-hlgm9 [740.058101ms]
  Jul 20 12:27:58.149: INFO: Created: latency-svc-gr7k5
  Jul 20 12:27:58.188: INFO: Got endpoints: latency-svc-4rgrd [748.843676ms]
  Jul 20 12:27:58.198: INFO: Created: latency-svc-l6gdj
  Jul 20 12:27:58.239: INFO: Got endpoints: latency-svc-snvqf [749.884925ms]
  Jul 20 12:27:58.248: INFO: Created: latency-svc-968td
  Jul 20 12:27:58.291: INFO: Got endpoints: latency-svc-dbn7j [751.821193ms]
  Jul 20 12:27:58.299: INFO: Created: latency-svc-hhsfp
  Jul 20 12:27:58.340: INFO: Got endpoints: latency-svc-wt7wv [749.420756ms]
  Jul 20 12:27:58.349: INFO: Created: latency-svc-wt562
  Jul 20 12:27:58.391: INFO: Got endpoints: latency-svc-6hxg6 [750.232384ms]
  Jul 20 12:27:58.399: INFO: Created: latency-svc-h8vxg
  Jul 20 12:27:58.441: INFO: Got endpoints: latency-svc-qxmdb [751.21569ms]
  Jul 20 12:27:58.449: INFO: Created: latency-svc-qd5qd
  Jul 20 12:27:58.489: INFO: Got endpoints: latency-svc-pg5c9 [748.975212ms]
  Jul 20 12:27:58.499: INFO: Created: latency-svc-f7h47
  Jul 20 12:27:58.538: INFO: Got endpoints: latency-svc-bhb7d [748.03424ms]
  Jul 20 12:27:58.547: INFO: Created: latency-svc-mvhq6
  Jul 20 12:27:58.592: INFO: Got endpoints: latency-svc-dhqg6 [750.843731ms]
  Jul 20 12:27:58.601: INFO: Created: latency-svc-dqvpj
  Jul 20 12:27:58.641: INFO: Got endpoints: latency-svc-mfqdv [750.051708ms]
  Jul 20 12:27:58.651: INFO: Created: latency-svc-dlb8f
  Jul 20 12:27:58.692: INFO: Got endpoints: latency-svc-smg5j [751.902137ms]
  Jul 20 12:27:58.700: INFO: Created: latency-svc-mznk7
  Jul 20 12:27:58.741: INFO: Got endpoints: latency-svc-8kg86 [751.201493ms]
  Jul 20 12:27:58.749: INFO: Created: latency-svc-2f55f
  Jul 20 12:27:58.789: INFO: Got endpoints: latency-svc-pqtzk [747.452262ms]
  Jul 20 12:27:58.799: INFO: Created: latency-svc-c5mkh
  Jul 20 12:27:58.839: INFO: Got endpoints: latency-svc-l4f5p [749.206509ms]
  Jul 20 12:27:58.890: INFO: Got endpoints: latency-svc-gr7k5 [750.862661ms]
  Jul 20 12:27:58.939: INFO: Got endpoints: latency-svc-l6gdj [751.382565ms]
  Jul 20 12:27:58.991: INFO: Got endpoints: latency-svc-968td [751.404856ms]
  Jul 20 12:27:59.040: INFO: Got endpoints: latency-svc-hhsfp [748.480967ms]
  Jul 20 12:27:59.091: INFO: Got endpoints: latency-svc-wt562 [750.55045ms]
  Jul 20 12:27:59.139: INFO: Got endpoints: latency-svc-h8vxg [748.329828ms]
  Jul 20 12:27:59.192: INFO: Got endpoints: latency-svc-qd5qd [750.219575ms]
  Jul 20 12:27:59.239: INFO: Got endpoints: latency-svc-f7h47 [749.747891ms]
  Jul 20 12:27:59.291: INFO: Got endpoints: latency-svc-mvhq6 [752.49559ms]
  Jul 20 12:27:59.340: INFO: Got endpoints: latency-svc-dqvpj [748.468788ms]
  Jul 20 12:27:59.390: INFO: Got endpoints: latency-svc-dlb8f [749.349125ms]
  Jul 20 12:27:59.440: INFO: Got endpoints: latency-svc-mznk7 [747.232377ms]
  Jul 20 12:27:59.492: INFO: Got endpoints: latency-svc-2f55f [751.345761ms]
  Jul 20 12:27:59.540: INFO: Got endpoints: latency-svc-c5mkh [750.625493ms]
  Jul 20 12:27:59.540: INFO: Latencies: [16.355118ms 34.306328ms 35.894867ms 45.814108ms 55.631394ms 70.811078ms 79.506092ms 80.846614ms 88.84622ms 92.963978ms 96.486969ms 101.70233ms 104.659958ms 104.987154ms 105.166237ms 110.729479ms 111.448755ms 111.640856ms 111.87593ms 114.066682ms 114.770436ms 117.472905ms 118.960293ms 119.496179ms 119.847037ms 122.665122ms 128.813649ms 132.99379ms 134.454186ms 137.680389ms 142.515771ms 167.953592ms 173.448411ms 191.473295ms 192.508266ms 201.70621ms 228.36986ms 279.110234ms 312.802648ms 313.756723ms 317.065414ms 351.031977ms 419.020869ms 455.917103ms 520.20413ms 545.67731ms 625.642371ms 661.824806ms 713.31381ms 740.058101ms 742.282523ms 742.533271ms 745.444138ms 745.774846ms 745.822659ms 746.625192ms 746.918934ms 747.072899ms 747.120891ms 747.144658ms 747.232377ms 747.251317ms 747.304687ms 747.442861ms 747.452262ms 747.476868ms 747.493133ms 747.696858ms 747.745592ms 747.860423ms 747.873054ms 748.003461ms 748.03424ms 748.037248ms 748.091257ms 748.125825ms 748.329828ms 748.339703ms 748.401691ms 748.436402ms 748.468178ms 748.468788ms 748.480967ms 748.531117ms 748.536514ms 748.558571ms 748.571456ms 748.630484ms 748.672182ms 748.711892ms 748.738027ms 748.764213ms 748.838783ms 748.843676ms 748.878738ms 748.903259ms 748.975212ms 748.979216ms 749.019507ms 749.036923ms 749.044654ms 749.155475ms 749.176834ms 749.206509ms 749.227185ms 749.263308ms 749.266229ms 749.331207ms 749.336795ms 749.349125ms 749.420756ms 749.459339ms 749.623641ms 749.649942ms 749.673535ms 749.676381ms 749.741196ms 749.747891ms 749.786757ms 749.862264ms 749.884925ms 749.903602ms 749.916623ms 749.991512ms 749.996115ms 750.021314ms 750.023186ms 750.024904ms 750.051379ms 750.051708ms 750.05255ms 750.100859ms 750.107256ms 750.108931ms 750.196192ms 750.219575ms 750.232384ms 750.243845ms 750.337627ms 750.353704ms 750.379244ms 750.395326ms 750.407734ms 750.438427ms 750.448698ms 750.55045ms 750.555572ms 750.607598ms 750.625493ms 750.683891ms 750.710127ms 750.717976ms 750.740759ms 750.797247ms 750.81292ms 750.843731ms 750.862661ms 751.024871ms 751.109807ms 751.13928ms 751.183261ms 751.201493ms 751.21569ms 751.243794ms 751.256328ms 751.281211ms 751.330964ms 751.345761ms 751.365332ms 751.382565ms 751.404856ms 751.445734ms 751.451339ms 751.490172ms 751.647761ms 751.799509ms 751.800593ms 751.821193ms 751.833336ms 751.902137ms 752.158708ms 752.196253ms 752.370113ms 752.40241ms 752.49559ms 752.557034ms 752.773118ms 752.878847ms 753.072256ms 753.370291ms 753.383351ms 753.383441ms 753.514762ms 753.541126ms 753.580477ms 753.848018ms 757.119512ms 757.729923ms 757.843686ms 760.682386ms]
  Jul 20 12:27:59.540: INFO: 50 %ile: 749.044654ms
  Jul 20 12:27:59.540: INFO: 90 %ile: 752.158708ms
  Jul 20 12:27:59.540: INFO: 99 %ile: 757.843686ms
  Jul 20 12:27:59.540: INFO: Total sample count: 200
  Jul 20 12:27:59.540: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-6193" for this suite. @ 07/20/24 12:27:59.545
• [10.755 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 07/20/24 12:27:59.552
  Jul 20 12:27:59.553: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename emptydir @ 07/20/24 12:27:59.553
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:27:59.565
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:27:59.567
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 07/20/24 12:27:59.57
  STEP: Saw pod success @ 07/20/24 12:28:03.593
  Jul 20 12:28:03.596: INFO: Trying to get logs from node ip-172-31-79-190 pod pod-4d972369-e656-4f97-8dbf-0517acdf2e01 container test-container: <nil>
  STEP: delete the pod @ 07/20/24 12:28:03.614
  Jul 20 12:28:03.629: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1750" for this suite. @ 07/20/24 12:28:03.632
• [4.085 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 07/20/24 12:28:03.638
  Jul 20 12:28:03.638: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename projected @ 07/20/24 12:28:03.638
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:28:03.651
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:28:03.654
  STEP: Creating a pod to test downward API volume plugin @ 07/20/24 12:28:03.659
  STEP: Saw pod success @ 07/20/24 12:28:05.675
  Jul 20 12:28:05.678: INFO: Trying to get logs from node ip-172-31-25-173 pod downwardapi-volume-e086bc2c-21d0-4a5e-8b60-590513b855ab container client-container: <nil>
  STEP: delete the pod @ 07/20/24 12:28:05.699
  Jul 20 12:28:05.715: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6684" for this suite. @ 07/20/24 12:28:05.718
• [2.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:51
  STEP: Creating a kubernetes client @ 07/20/24 12:28:05.725
  Jul 20 12:28:05.725: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename kubelet-test @ 07/20/24 12:28:05.725
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:28:05.737
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:28:05.74
  Jul 20 12:28:07.766: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4403" for this suite. @ 07/20/24 12:28:07.769
• [2.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 07/20/24 12:28:07.779
  Jul 20 12:28:07.779: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename pod-network-test @ 07/20/24 12:28:07.78
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:28:07.794
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:28:07.797
  STEP: Performing setup for networking test in namespace pod-network-test-9681 @ 07/20/24 12:28:07.802
  STEP: creating a selector @ 07/20/24 12:28:07.802
  STEP: Creating the service pods in kubernetes @ 07/20/24 12:28:07.802
  Jul 20 12:28:07.802: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 07/20/24 12:28:19.871
  Jul 20 12:28:21.888: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Jul 20 12:28:21.888: INFO: Breadth first check of 192.168.245.206 on host 172.31.25.173...
  Jul 20 12:28:21.891: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.245.207:9080/dial?request=hostname&protocol=udp&host=192.168.245.206&port=8081&tries=1'] Namespace:pod-network-test-9681 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 20 12:28:21.891: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  Jul 20 12:28:21.891: INFO: ExecWithOptions: Clientset creation
  Jul 20 12:28:21.891: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9681/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.245.207%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.245.206%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jul 20 12:28:21.947: INFO: Waiting for responses: map[]
  Jul 20 12:28:21.947: INFO: reached 192.168.245.206 after 0/1 tries
  Jul 20 12:28:21.947: INFO: Breadth first check of 192.168.15.74 on host 172.31.3.74...
  Jul 20 12:28:21.950: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.245.207:9080/dial?request=hostname&protocol=udp&host=192.168.15.74&port=8081&tries=1'] Namespace:pod-network-test-9681 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 20 12:28:21.950: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  Jul 20 12:28:21.951: INFO: ExecWithOptions: Clientset creation
  Jul 20 12:28:21.951: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9681/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.245.207%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.15.74%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jul 20 12:28:21.991: INFO: Waiting for responses: map[]
  Jul 20 12:28:21.991: INFO: reached 192.168.15.74 after 0/1 tries
  Jul 20 12:28:21.991: INFO: Breadth first check of 192.168.120.220 on host 172.31.79.190...
  Jul 20 12:28:21.994: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.245.207:9080/dial?request=hostname&protocol=udp&host=192.168.120.220&port=8081&tries=1'] Namespace:pod-network-test-9681 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 20 12:28:21.994: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  Jul 20 12:28:21.995: INFO: ExecWithOptions: Clientset creation
  Jul 20 12:28:21.995: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9681/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.245.207%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.120.220%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jul 20 12:28:22.043: INFO: Waiting for responses: map[]
  Jul 20 12:28:22.043: INFO: reached 192.168.120.220 after 0/1 tries
  Jul 20 12:28:22.043: INFO: Going to retry 0 out of 3 pods....
  Jul 20 12:28:22.043: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9681" for this suite. @ 07/20/24 12:28:22.047
• [14.277 seconds]
------------------------------
SS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 07/20/24 12:28:22.056
  Jul 20 12:28:22.056: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 07/20/24 12:28:22.057
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:28:22.077
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:28:22.079
  STEP: creating a target pod @ 07/20/24 12:28:22.082
  STEP: adding an ephemeral container @ 07/20/24 12:28:24.103
  STEP: checking pod container endpoints @ 07/20/24 12:28:26.13
  Jul 20 12:28:26.130: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-5337 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 20 12:28:26.130: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  Jul 20 12:28:26.131: INFO: ExecWithOptions: Clientset creation
  Jul 20 12:28:26.131: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-5337/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Jul 20 12:28:26.195: INFO: Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 07/20/24 12:28:26.202
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 07/20/24 12:28:26.206
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 07/20/24 12:28:26.216
  Jul 20 12:28:26.221: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-5337" for this suite. @ 07/20/24 12:28:26.224
• [4.174 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 07/20/24 12:28:26.23
  Jul 20 12:28:26.230: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename projected @ 07/20/24 12:28:26.231
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:28:26.247
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:28:26.25
  STEP: Creating projection with secret that has name projected-secret-test-cc46cd4a-13a1-424c-83cc-061e70404535 @ 07/20/24 12:28:26.253
  STEP: Creating a pod to test consume secrets @ 07/20/24 12:28:26.258
  STEP: Saw pod success @ 07/20/24 12:28:28.274
  Jul 20 12:28:28.277: INFO: Trying to get logs from node ip-172-31-79-190 pod pod-projected-secrets-3e5a1ca6-4a81-4788-bf0e-1f73fe7d6b76 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 07/20/24 12:28:28.282
  Jul 20 12:28:28.297: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7380" for this suite. @ 07/20/24 12:28:28.3
• [2.074 seconds]
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 07/20/24 12:28:28.305
  Jul 20 12:28:28.305: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename kubectl-logs @ 07/20/24 12:28:28.306
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:28:28.321
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:28:28.323
  STEP: creating an pod @ 07/20/24 12:28:28.326
  Jul 20 12:28:28.326: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-logs-9194 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.47 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  Jul 20 12:28:28.384: INFO: stderr: ""
  Jul 20 12:28:28.384: INFO: stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 07/20/24 12:28:28.384
  Jul 20 12:28:28.384: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  Jul 20 12:28:30.394: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 07/20/24 12:28:30.394
  Jul 20 12:28:30.394: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-logs-9194 logs logs-generator logs-generator'
  Jul 20 12:28:30.443: INFO: stderr: ""
  Jul 20 12:28:30.443: INFO: stdout: "I0720 12:28:28.940945       1 logs_generator.go:76] 0 GET /api/v1/namespaces/ns/pods/lvmr 222\nI0720 12:28:29.141308       1 logs_generator.go:76] 1 GET /api/v1/namespaces/ns/pods/2sp8 597\nI0720 12:28:29.341559       1 logs_generator.go:76] 2 POST /api/v1/namespaces/ns/pods/chs 223\nI0720 12:28:29.541987       1 logs_generator.go:76] 3 GET /api/v1/namespaces/ns/pods/nlt 394\nI0720 12:28:29.741114       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/ns/pods/b6h 359\nI0720 12:28:29.941405       1 logs_generator.go:76] 5 GET /api/v1/namespaces/default/pods/587t 429\nI0720 12:28:30.141709       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/ns/pods/bt9 508\nI0720 12:28:30.341018       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/fb44 492\n"
  STEP: limiting log lines @ 07/20/24 12:28:30.443
  Jul 20 12:28:30.443: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-logs-9194 logs logs-generator logs-generator --tail=1'
  Jul 20 12:28:30.492: INFO: stderr: ""
  Jul 20 12:28:30.492: INFO: stdout: "I0720 12:28:30.341018       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/fb44 492\n"
  Jul 20 12:28:30.492: INFO: got output "I0720 12:28:30.341018       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/fb44 492\n"
  STEP: limiting log bytes @ 07/20/24 12:28:30.492
  Jul 20 12:28:30.492: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-logs-9194 logs logs-generator logs-generator --limit-bytes=1'
  Jul 20 12:28:30.540: INFO: stderr: ""
  Jul 20 12:28:30.540: INFO: stdout: "I"
  Jul 20 12:28:30.540: INFO: got output "I"
  STEP: exposing timestamps @ 07/20/24 12:28:30.54
  Jul 20 12:28:30.540: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-logs-9194 logs logs-generator logs-generator --tail=1 --timestamps'
  Jul 20 12:28:30.590: INFO: stderr: ""
  Jul 20 12:28:30.590: INFO: stdout: "2024-07-20T12:28:30.541532477Z I0720 12:28:30.541449       1 logs_generator.go:76] 8 GET /api/v1/namespaces/ns/pods/h8n 309\n"
  Jul 20 12:28:30.590: INFO: got output "2024-07-20T12:28:30.541532477Z I0720 12:28:30.541449       1 logs_generator.go:76] 8 GET /api/v1/namespaces/ns/pods/h8n 309\n"
  STEP: restricting to a time range @ 07/20/24 12:28:30.59
  Jul 20 12:28:33.092: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-logs-9194 logs logs-generator logs-generator --since=1s'
  Jul 20 12:28:33.141: INFO: stderr: ""
  Jul 20 12:28:33.141: INFO: stdout: "I0720 12:28:32.142025       1 logs_generator.go:76] 16 GET /api/v1/namespaces/kube-system/pods/j6p 581\nI0720 12:28:32.341329       1 logs_generator.go:76] 17 GET /api/v1/namespaces/default/pods/k6n 557\nI0720 12:28:32.541628       1 logs_generator.go:76] 18 GET /api/v1/namespaces/ns/pods/bv6g 410\nI0720 12:28:32.741944       1 logs_generator.go:76] 19 POST /api/v1/namespaces/kube-system/pods/l2vw 471\nI0720 12:28:32.941025       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/ns/pods/s752 401\n"
  Jul 20 12:28:33.141: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-logs-9194 logs logs-generator logs-generator --since=24h'
  Jul 20 12:28:33.186: INFO: stderr: ""
  Jul 20 12:28:33.186: INFO: stdout: "I0720 12:28:28.940945       1 logs_generator.go:76] 0 GET /api/v1/namespaces/ns/pods/lvmr 222\nI0720 12:28:29.141308       1 logs_generator.go:76] 1 GET /api/v1/namespaces/ns/pods/2sp8 597\nI0720 12:28:29.341559       1 logs_generator.go:76] 2 POST /api/v1/namespaces/ns/pods/chs 223\nI0720 12:28:29.541987       1 logs_generator.go:76] 3 GET /api/v1/namespaces/ns/pods/nlt 394\nI0720 12:28:29.741114       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/ns/pods/b6h 359\nI0720 12:28:29.941405       1 logs_generator.go:76] 5 GET /api/v1/namespaces/default/pods/587t 429\nI0720 12:28:30.141709       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/ns/pods/bt9 508\nI0720 12:28:30.341018       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/fb44 492\nI0720 12:28:30.541449       1 logs_generator.go:76] 8 GET /api/v1/namespaces/ns/pods/h8n 309\nI0720 12:28:30.741963       1 logs_generator.go:76] 9 POST /api/v1/namespaces/default/pods/r8r 307\nI0720 12:28:30.941260       1 logs_generator.go:76] 10 GET /api/v1/namespaces/ns/pods/hln8 565\nI0720 12:28:31.141551       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/default/pods/l6m 258\nI0720 12:28:31.341850       1 logs_generator.go:76] 12 POST /api/v1/namespaces/kube-system/pods/9fn 219\nI0720 12:28:31.541042       1 logs_generator.go:76] 13 PUT /api/v1/namespaces/ns/pods/xbjb 360\nI0720 12:28:31.741339       1 logs_generator.go:76] 14 PUT /api/v1/namespaces/kube-system/pods/v9cj 201\nI0720 12:28:31.941645       1 logs_generator.go:76] 15 POST /api/v1/namespaces/ns/pods/jlwl 597\nI0720 12:28:32.142025       1 logs_generator.go:76] 16 GET /api/v1/namespaces/kube-system/pods/j6p 581\nI0720 12:28:32.341329       1 logs_generator.go:76] 17 GET /api/v1/namespaces/default/pods/k6n 557\nI0720 12:28:32.541628       1 logs_generator.go:76] 18 GET /api/v1/namespaces/ns/pods/bv6g 410\nI0720 12:28:32.741944       1 logs_generator.go:76] 19 POST /api/v1/namespaces/kube-system/pods/l2vw 471\nI0720 12:28:32.941025       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/ns/pods/s752 401\nI0720 12:28:33.141294       1 logs_generator.go:76] 21 GET /api/v1/namespaces/kube-system/pods/2mz 349\n"
  Jul 20 12:28:33.186: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-logs-9194 delete pod logs-generator'
  Jul 20 12:28:34.400: INFO: stderr: ""
  Jul 20 12:28:34.400: INFO: stdout: "pod \"logs-generator\" deleted\n"
  Jul 20 12:28:34.400: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-9194" for this suite. @ 07/20/24 12:28:34.403
• [6.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 07/20/24 12:28:34.411
  Jul 20 12:28:34.411: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename configmap @ 07/20/24 12:28:34.411
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:28:34.428
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:28:34.43
  STEP: Creating configMap with name configmap-test-upd-870c0140-d813-47d9-ad1e-6771320c2a09 @ 07/20/24 12:28:34.435
  STEP: Creating the pod @ 07/20/24 12:28:34.439
  STEP: Waiting for pod with text data @ 07/20/24 12:28:36.454
  STEP: Waiting for pod with binary data @ 07/20/24 12:28:36.459
  Jul 20 12:28:36.465: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2883" for this suite. @ 07/20/24 12:28:36.468
• [2.062 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:349
  STEP: Creating a kubernetes client @ 07/20/24 12:28:36.473
  Jul 20 12:28:36.473: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename disruption @ 07/20/24 12:28:36.474
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:28:36.49
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:28:36.493
  STEP: Creating a pdb that targets all three pods in a test replica set @ 07/20/24 12:28:36.497
  STEP: Waiting for the pdb to be processed @ 07/20/24 12:28:36.501
  STEP: First trying to evict a pod which shouldn't be evictable @ 07/20/24 12:28:38.512
  STEP: Waiting for all pods to be running @ 07/20/24 12:28:38.512
  Jul 20 12:28:38.515: INFO: pods: 0 < 3
  STEP: locating a running pod @ 07/20/24 12:28:40.516
  STEP: Updating the pdb to allow a pod to be evicted @ 07/20/24 12:28:40.525
  STEP: Waiting for the pdb to be processed @ 07/20/24 12:28:40.532
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 07/20/24 12:28:42.538
  STEP: Waiting for all pods to be running @ 07/20/24 12:28:42.538
  STEP: Waiting for the pdb to observed all healthy pods @ 07/20/24 12:28:42.542
  STEP: Patching the pdb to disallow a pod to be evicted @ 07/20/24 12:28:42.563
  STEP: Waiting for the pdb to be processed @ 07/20/24 12:28:42.58
  STEP: Waiting for all pods to be running @ 07/20/24 12:28:44.585
  STEP: locating a running pod @ 07/20/24 12:28:44.588
  STEP: Deleting the pdb to allow a pod to be evicted @ 07/20/24 12:28:44.596
  STEP: Waiting for the pdb to be deleted @ 07/20/24 12:28:44.603
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 07/20/24 12:28:44.605
  STEP: Waiting for all pods to be running @ 07/20/24 12:28:44.605
  Jul 20 12:28:44.624: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2702" for this suite. @ 07/20/24 12:28:44.628
• [8.168 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 07/20/24 12:28:44.642
  Jul 20 12:28:44.642: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename endpointslice @ 07/20/24 12:28:44.643
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:28:44.661
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:28:44.664
  Jul 20 12:28:48.730: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-1382" for this suite. @ 07/20/24 12:28:48.732
• [4.096 seconds]
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 07/20/24 12:28:48.738
  Jul 20 12:28:48.738: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename field-validation @ 07/20/24 12:28:48.739
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:28:48.754
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:28:48.756
  STEP: apply creating a deployment @ 07/20/24 12:28:48.759
  Jul 20 12:28:48.769: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2496" for this suite. @ 07/20/24 12:28:48.772
• [0.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1533
  STEP: Creating a kubernetes client @ 07/20/24 12:28:48.779
  Jul 20 12:28:48.779: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename services @ 07/20/24 12:28:48.78
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:28:48.801
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:28:48.803
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-6214 @ 07/20/24 12:28:48.806
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 07/20/24 12:28:48.817
  STEP: creating service externalsvc in namespace services-6214 @ 07/20/24 12:28:48.817
  STEP: creating replication controller externalsvc in namespace services-6214 @ 07/20/24 12:28:48.833
  I0720 12:28:48.841657      19 runners.go:197] Created replication controller with name: externalsvc, namespace: services-6214, replica count: 2
  I0720 12:28:51.893157      19 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 07/20/24 12:28:51.896
  Jul 20 12:28:51.912: INFO: Creating new exec pod
  Jul 20 12:28:53.931: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=services-6214 exec execpodfd972 -- /bin/sh -x -c nslookup nodeport-service.services-6214.svc.cluster.local'
  Jul 20 12:28:54.035: INFO: stderr: "+ nslookup nodeport-service.services-6214.svc.cluster.local\n"
  Jul 20 12:28:54.035: INFO: stdout: "Server:\t\t10.152.183.58\nAddress:\t10.152.183.58#53\n\nnodeport-service.services-6214.svc.cluster.local\tcanonical name = externalsvc.services-6214.svc.cluster.local.\nName:\texternalsvc.services-6214.svc.cluster.local\nAddress: 10.152.183.145\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-6214, will wait for the garbage collector to delete the pods @ 07/20/24 12:28:54.035
  Jul 20 12:28:54.097: INFO: Deleting ReplicationController externalsvc took: 6.406592ms
  Jul 20 12:28:54.198: INFO: Terminating ReplicationController externalsvc pods took: 100.350217ms
  Jul 20 12:28:57.213: INFO: Cleaning up the NodePort to ExternalName test service
  Jul 20 12:28:57.223: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6214" for this suite. @ 07/20/24 12:28:57.227
• [8.454 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:948
  STEP: Creating a kubernetes client @ 07/20/24 12:28:57.233
  Jul 20 12:28:57.233: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename resourcequota @ 07/20/24 12:28:57.234
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:28:57.249
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:28:57.251
  STEP: Creating a ResourceQuota @ 07/20/24 12:28:57.254
  STEP: Getting a ResourceQuota @ 07/20/24 12:28:57.258
  STEP: Listing all ResourceQuotas with LabelSelector @ 07/20/24 12:28:57.262
  STEP: Patching the ResourceQuota @ 07/20/24 12:28:57.265
  STEP: Deleting a Collection of ResourceQuotas @ 07/20/24 12:28:57.271
  STEP: Verifying the deleted ResourceQuota @ 07/20/24 12:28:57.28
  Jul 20 12:28:57.283: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1525" for this suite. @ 07/20/24 12:28:57.286
• [0.060 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 07/20/24 12:28:57.293
  Jul 20 12:28:57.293: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename projected @ 07/20/24 12:28:57.294
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:28:57.307
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:28:57.31
  STEP: Creating projection with secret that has name projected-secret-test-e27c2da5-928b-44d7-bdb4-bba62662f9e1 @ 07/20/24 12:28:57.313
  STEP: Creating a pod to test consume secrets @ 07/20/24 12:28:57.317
  STEP: Saw pod success @ 07/20/24 12:28:59.332
  Jul 20 12:28:59.334: INFO: Trying to get logs from node ip-172-31-79-190 pod pod-projected-secrets-6c11ba47-e9b4-450a-92ca-7f63b1364e61 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 07/20/24 12:28:59.34
  Jul 20 12:28:59.354: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9710" for this suite. @ 07/20/24 12:28:59.357
• [2.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:808
  STEP: Creating a kubernetes client @ 07/20/24 12:28:59.364
  Jul 20 12:28:59.364: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename resourcequota @ 07/20/24 12:28:59.364
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:28:59.377
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:28:59.38
  STEP: Creating a ResourceQuota with best effort scope @ 07/20/24 12:28:59.383
  STEP: Ensuring ResourceQuota status is calculated @ 07/20/24 12:28:59.388
  STEP: Creating a ResourceQuota with not best effort scope @ 07/20/24 12:29:01.392
  STEP: Ensuring ResourceQuota status is calculated @ 07/20/24 12:29:01.398
  STEP: Creating a best-effort pod @ 07/20/24 12:29:03.403
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 07/20/24 12:29:03.414
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 07/20/24 12:29:05.418
  STEP: Deleting the pod @ 07/20/24 12:29:07.423
  STEP: Ensuring resource quota status released the pod usage @ 07/20/24 12:29:07.436
  STEP: Creating a not best-effort pod @ 07/20/24 12:29:09.441
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 07/20/24 12:29:09.452
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 07/20/24 12:29:11.457
  STEP: Deleting the pod @ 07/20/24 12:29:13.461
  STEP: Ensuring resource quota status released the pod usage @ 07/20/24 12:29:13.474
  Jul 20 12:29:15.478: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3529" for this suite. @ 07/20/24 12:29:15.481
• [16.124 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 07/20/24 12:29:15.488
  Jul 20 12:29:15.488: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename configmap @ 07/20/24 12:29:15.489
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:29:15.503
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:29:15.505
  STEP: Creating configMap with name configmap-test-volume-map-3cf7a74c-1b1e-4aaf-b225-080facab5ce1 @ 07/20/24 12:29:15.508
  STEP: Creating a pod to test consume configMaps @ 07/20/24 12:29:15.511
  STEP: Saw pod success @ 07/20/24 12:29:19.531
  Jul 20 12:29:19.534: INFO: Trying to get logs from node ip-172-31-79-190 pod pod-configmaps-74532c01-f3ce-47ba-8298-beee46b93046 container agnhost-container: <nil>
  STEP: delete the pod @ 07/20/24 12:29:19.54
  Jul 20 12:29:19.553: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-97" for this suite. @ 07/20/24 12:29:19.556
• [4.074 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 07/20/24 12:29:19.562
  Jul 20 12:29:19.562: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename emptydir @ 07/20/24 12:29:19.563
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:29:19.576
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:29:19.579
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 07/20/24 12:29:19.582
  STEP: Saw pod success @ 07/20/24 12:29:23.603
  Jul 20 12:29:23.607: INFO: Trying to get logs from node ip-172-31-79-190 pod pod-f6f0921e-36f4-4b96-a268-1dcf6038ee44 container test-container: <nil>
  STEP: delete the pod @ 07/20/24 12:29:23.612
  Jul 20 12:29:23.626: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9206" for this suite. @ 07/20/24 12:29:23.629
• [4.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 07/20/24 12:29:23.638
  Jul 20 12:29:23.638: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename runtimeclass @ 07/20/24 12:29:23.639
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:29:23.652
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:29:23.654
  STEP: Deleting RuntimeClass runtimeclass-8522-delete-me @ 07/20/24 12:29:23.66
  STEP: Waiting for the RuntimeClass to disappear @ 07/20/24 12:29:23.667
  Jul 20 12:29:23.675: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8522" for this suite. @ 07/20/24 12:29:23.678
• [0.045 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 07/20/24 12:29:23.684
  Jul 20 12:29:23.684: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/20/24 12:29:23.684
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:29:23.697
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:29:23.7
  Jul 20 12:29:23.703: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  Jul 20 12:29:24.237: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2886" for this suite. @ 07/20/24 12:29:24.244
• [0.569 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:470
  STEP: Creating a kubernetes client @ 07/20/24 12:29:24.254
  Jul 20 12:29:24.254: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename sched-pred @ 07/20/24 12:29:24.255
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:29:24.269
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:29:24.271
  Jul 20 12:29:24.274: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Jul 20 12:29:24.280: INFO: Waiting for terminating namespaces to be deleted...
  Jul 20 12:29:24.282: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-25-173 before test
  Jul 20 12:29:24.286: INFO: nginx-ingress-controller-kubernetes-worker-rj7j7 from ingress-nginx-kubernetes-worker started at 2024-07-20 12:06:00 +0000 UTC (1 container statuses recorded)
  Jul 20 12:29:24.286: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jul 20 12:29:24.286: INFO: calico-node-zlt4r from kube-system started at 2024-07-20 12:09:35 +0000 UTC (1 container statuses recorded)
  Jul 20 12:29:24.286: INFO: 	Container calico-node ready: true, restart count 0
  Jul 20 12:29:24.286: INFO: sonobuoy-e2e-job-b5db9657854845c0 from sonobuoy started at 2024-07-20 12:11:23 +0000 UTC (2 container statuses recorded)
  Jul 20 12:29:24.286: INFO: 	Container e2e ready: true, restart count 0
  Jul 20 12:29:24.286: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jul 20 12:29:24.286: INFO: sonobuoy-systemd-logs-daemon-set-eaeef1be74044e0f-stlh6 from sonobuoy started at 2024-07-20 12:11:23 +0000 UTC (2 container statuses recorded)
  Jul 20 12:29:24.286: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jul 20 12:29:24.286: INFO: 	Container systemd-logs ready: true, restart count 0
  Jul 20 12:29:24.286: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-3-74 before test
  Jul 20 12:29:24.290: INFO: nginx-ingress-controller-kubernetes-worker-pl5dm from ingress-nginx-kubernetes-worker started at 2024-07-20 12:05:02 +0000 UTC (1 container statuses recorded)
  Jul 20 12:29:24.290: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jul 20 12:29:24.290: INFO: calico-node-jj9gt from kube-system started at 2024-07-20 12:09:25 +0000 UTC (1 container statuses recorded)
  Jul 20 12:29:24.290: INFO: 	Container calico-node ready: true, restart count 0
  Jul 20 12:29:24.290: INFO: coredns-bddfd76d7-tsxnn from kube-system started at 2024-07-20 12:05:01 +0000 UTC (1 container statuses recorded)
  Jul 20 12:29:24.290: INFO: 	Container coredns ready: true, restart count 0
  Jul 20 12:29:24.290: INFO: kube-state-metrics-6f48cdd76-rvxkr from kube-system started at 2024-07-20 12:05:01 +0000 UTC (1 container statuses recorded)
  Jul 20 12:29:24.290: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Jul 20 12:29:24.290: INFO: metrics-server-v0.6.3-69d7fbfdf8-pmcp9 from kube-system started at 2024-07-20 12:05:01 +0000 UTC (2 container statuses recorded)
  Jul 20 12:29:24.290: INFO: 	Container metrics-server ready: true, restart count 0
  Jul 20 12:29:24.290: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Jul 20 12:29:24.290: INFO: dashboard-metrics-scraper-5dd7cb5fc-zdfwg from kubernetes-dashboard started at 2024-07-20 12:05:01 +0000 UTC (1 container statuses recorded)
  Jul 20 12:29:24.290: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Jul 20 12:29:24.290: INFO: kubernetes-dashboard-7b899cb9d9-v2smr from kubernetes-dashboard started at 2024-07-20 12:05:01 +0000 UTC (1 container statuses recorded)
  Jul 20 12:29:24.290: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Jul 20 12:29:24.290: INFO: sonobuoy-systemd-logs-daemon-set-eaeef1be74044e0f-wnr5n from sonobuoy started at 2024-07-20 12:11:23 +0000 UTC (2 container statuses recorded)
  Jul 20 12:29:24.290: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jul 20 12:29:24.290: INFO: 	Container systemd-logs ready: true, restart count 0
  Jul 20 12:29:24.290: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-79-190 before test
  Jul 20 12:29:24.294: INFO: nginx-ingress-controller-kubernetes-worker-q9zkf from ingress-nginx-kubernetes-worker started at 2024-07-20 12:05:11 +0000 UTC (1 container statuses recorded)
  Jul 20 12:29:24.294: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jul 20 12:29:24.294: INFO: calico-node-fxs4g from kube-system started at 2024-07-20 12:09:45 +0000 UTC (1 container statuses recorded)
  Jul 20 12:29:24.294: INFO: 	Container calico-node ready: true, restart count 0
  Jul 20 12:29:24.294: INFO: sonobuoy from sonobuoy started at 2024-07-20 12:11:21 +0000 UTC (1 container statuses recorded)
  Jul 20 12:29:24.294: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Jul 20 12:29:24.294: INFO: sonobuoy-systemd-logs-daemon-set-eaeef1be74044e0f-qfbvq from sonobuoy started at 2024-07-20 12:11:23 +0000 UTC (2 container statuses recorded)
  Jul 20 12:29:24.294: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jul 20 12:29:24.294: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 07/20/24 12:29:24.294
  STEP: Explicitly delete pod here to free the resource it takes. @ 07/20/24 12:29:26.312
  STEP: Trying to apply a random label on the found node. @ 07/20/24 12:29:26.331
  STEP: verifying the node has the label kubernetes.io/e2e-2068fbda-80ff-4aa3-b683-72b76f6d52be 42 @ 07/20/24 12:29:26.347
  STEP: Trying to relaunch the pod, now with labels. @ 07/20/24 12:29:26.356
  STEP: removing the label kubernetes.io/e2e-2068fbda-80ff-4aa3-b683-72b76f6d52be off the node ip-172-31-79-190 @ 07/20/24 12:29:28.377
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-2068fbda-80ff-4aa3-b683-72b76f6d52be @ 07/20/24 12:29:28.389
  Jul 20 12:29:28.392: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-9931" for this suite. @ 07/20/24 12:29:28.396
• [4.149 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:488
  STEP: Creating a kubernetes client @ 07/20/24 12:29:28.403
  Jul 20 12:29:28.403: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename security-context-test @ 07/20/24 12:29:28.404
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:29:28.418
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:29:28.421
  Jul 20 12:29:32.443: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-6029" for this suite. @ 07/20/24 12:29:32.447
• [4.050 seconds]
------------------------------
SSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 07/20/24 12:29:32.453
  Jul 20 12:29:32.454: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename container-runtime @ 07/20/24 12:29:32.454
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:29:32.468
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:29:32.471
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 07/20/24 12:29:32.482
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 07/20/24 12:29:48.554
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 07/20/24 12:29:48.557
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 07/20/24 12:29:48.562
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 07/20/24 12:29:48.562
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 07/20/24 12:29:48.58
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 07/20/24 12:29:51.597
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 07/20/24 12:29:52.604
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 07/20/24 12:29:52.61
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 07/20/24 12:29:52.61
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 07/20/24 12:29:52.631
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 07/20/24 12:29:53.641
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 07/20/24 12:29:55.654
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 07/20/24 12:29:55.66
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 07/20/24 12:29:55.66
  Jul 20 12:29:55.682: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-417" for this suite. @ 07/20/24 12:29:55.685
• [23.239 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1838
  STEP: Creating a kubernetes client @ 07/20/24 12:29:55.693
  Jul 20 12:29:55.693: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename kubectl @ 07/20/24 12:29:55.693
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:29:55.704
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:29:55.709
  STEP: starting the proxy server @ 07/20/24 12:29:55.711
  Jul 20 12:29:55.711: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-5972 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 07/20/24 12:29:55.741
  Jul 20 12:29:55.747: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5972" for this suite. @ 07/20/24 12:29:55.751
• [0.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:161
  STEP: Creating a kubernetes client @ 07/20/24 12:29:55.757
  Jul 20 12:29:55.757: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename cronjob @ 07/20/24 12:29:55.758
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:29:55.773
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:29:55.776
  STEP: Creating a ReplaceConcurrent cronjob @ 07/20/24 12:29:55.779
  STEP: Ensuring a job is scheduled @ 07/20/24 12:29:55.785
  STEP: Ensuring exactly one is scheduled @ 07/20/24 12:30:01.79
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 07/20/24 12:30:01.793
  STEP: Ensuring the job is replaced with a new one @ 07/20/24 12:30:01.796
  STEP: Removing cronjob @ 07/20/24 12:31:01.801
  Jul 20 12:31:01.807: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-1749" for this suite. @ 07/20/24 12:31:01.811
• [66.060 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1015
  STEP: Creating a kubernetes client @ 07/20/24 12:31:01.818
  Jul 20 12:31:01.818: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename resourcequota @ 07/20/24 12:31:01.819
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:31:01.839
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:31:01.843
  STEP: Creating resourceQuota "e2e-rq-status-55jck" @ 07/20/24 12:31:01.848
  Jul 20 12:31:01.855: INFO: Resource quota "e2e-rq-status-55jck" reports spec: hard cpu limit of 500m
  Jul 20 12:31:01.855: INFO: Resource quota "e2e-rq-status-55jck" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-55jck" /status @ 07/20/24 12:31:01.855
  STEP: Confirm /status for "e2e-rq-status-55jck" resourceQuota via watch @ 07/20/24 12:31:01.863
  Jul 20 12:31:01.864: INFO: observed resourceQuota "e2e-rq-status-55jck" in namespace "resourcequota-5431" with hard status: v1.ResourceList(nil)
  Jul 20 12:31:01.864: INFO: Found resourceQuota "e2e-rq-status-55jck" in namespace "resourcequota-5431" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Jul 20 12:31:01.865: INFO: ResourceQuota "e2e-rq-status-55jck" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 07/20/24 12:31:01.867
  Jul 20 12:31:01.872: INFO: Resource quota "e2e-rq-status-55jck" reports spec: hard cpu limit of 1
  Jul 20 12:31:01.872: INFO: Resource quota "e2e-rq-status-55jck" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-55jck" /status @ 07/20/24 12:31:01.872
  STEP: Confirm /status for "e2e-rq-status-55jck" resourceQuota via watch @ 07/20/24 12:31:01.878
  Jul 20 12:31:01.880: INFO: observed resourceQuota "e2e-rq-status-55jck" in namespace "resourcequota-5431" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Jul 20 12:31:01.880: INFO: Found resourceQuota "e2e-rq-status-55jck" in namespace "resourcequota-5431" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  Jul 20 12:31:01.880: INFO: ResourceQuota "e2e-rq-status-55jck" /status was patched
  STEP: Get "e2e-rq-status-55jck" /status @ 07/20/24 12:31:01.88
  Jul 20 12:31:01.883: INFO: Resourcequota "e2e-rq-status-55jck" reports status: hard cpu of 1
  Jul 20 12:31:01.883: INFO: Resourcequota "e2e-rq-status-55jck" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-55jck" /status before checking Spec is unchanged @ 07/20/24 12:31:01.885
  Jul 20 12:31:01.889: INFO: Resourcequota "e2e-rq-status-55jck" reports status: hard cpu of 2
  Jul 20 12:31:01.889: INFO: Resourcequota "e2e-rq-status-55jck" reports status: hard memory of 2Gi
  Jul 20 12:31:01.890: INFO: Found resourceQuota "e2e-rq-status-55jck" in namespace "resourcequota-5431" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  Jul 20 12:31:01.893: INFO: ResourceQuota "e2e-rq-status-55jck" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-55jck", GenerateName:"", Namespace:"resourcequota-5431", SelfLink:"", UID:"e699d610-2b0f-42e1-9062-0a982e9c2e4b", ResourceVersion:"10751", Generation:0, CreationTimestamp:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-55jck"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d1d3b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d1d458), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d1d488), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul 20 12:31:06.897: INFO: ResourceQuota "e2e-rq-status-55jck" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-55jck", GenerateName:"", Namespace:"resourcequota-5431", SelfLink:"", UID:"e699d610-2b0f-42e1-9062-0a982e9c2e4b", ResourceVersion:"10751", Generation:0, CreationTimestamp:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-55jck"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd46d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd4708), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd4780), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul 20 12:31:11.895: INFO: ResourceQuota "e2e-rq-status-55jck" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-55jck", GenerateName:"", Namespace:"resourcequota-5431", SelfLink:"", UID:"e699d610-2b0f-42e1-9062-0a982e9c2e4b", ResourceVersion:"10751", Generation:0, CreationTimestamp:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-55jck"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd4948), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd4990), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd49d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul 20 12:31:16.896: INFO: ResourceQuota "e2e-rq-status-55jck" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-55jck", GenerateName:"", Namespace:"resourcequota-5431", SelfLink:"", UID:"e699d610-2b0f-42e1-9062-0a982e9c2e4b", ResourceVersion:"10751", Generation:0, CreationTimestamp:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-55jck"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d1d620), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d1d668), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d1d6b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul 20 12:31:21.897: INFO: ResourceQuota "e2e-rq-status-55jck" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-55jck", GenerateName:"", Namespace:"resourcequota-5431", SelfLink:"", UID:"e699d610-2b0f-42e1-9062-0a982e9c2e4b", ResourceVersion:"10751", Generation:0, CreationTimestamp:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-55jck"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd4b70), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd4bd0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd4c00), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul 20 12:31:26.895: INFO: ResourceQuota "e2e-rq-status-55jck" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-55jck", GenerateName:"", Namespace:"resourcequota-5431", SelfLink:"", UID:"e699d610-2b0f-42e1-9062-0a982e9c2e4b", ResourceVersion:"10751", Generation:0, CreationTimestamp:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-55jck"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d1d8d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d1d908), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d1d968), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul 20 12:31:31.895: INFO: ResourceQuota "e2e-rq-status-55jck" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-55jck", GenerateName:"", Namespace:"resourcequota-5431", SelfLink:"", UID:"e699d610-2b0f-42e1-9062-0a982e9c2e4b", ResourceVersion:"10751", Generation:0, CreationTimestamp:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-55jck"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d1db60), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d1dbc0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d1dbf0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul 20 12:31:36.896: INFO: ResourceQuota "e2e-rq-status-55jck" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-55jck", GenerateName:"", Namespace:"resourcequota-5431", SelfLink:"", UID:"e699d610-2b0f-42e1-9062-0a982e9c2e4b", ResourceVersion:"10751", Generation:0, CreationTimestamp:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-55jck"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d1dd88), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d1ddb8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d1dde8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul 20 12:31:41.895: INFO: ResourceQuota "e2e-rq-status-55jck" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-55jck", GenerateName:"", Namespace:"resourcequota-5431", SelfLink:"", UID:"e699d610-2b0f-42e1-9062-0a982e9c2e4b", ResourceVersion:"10751", Generation:0, CreationTimestamp:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-55jck"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0061fc060), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0061fc0a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0061fc0d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul 20 12:31:46.896: INFO: ResourceQuota "e2e-rq-status-55jck" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-55jck", GenerateName:"", Namespace:"resourcequota-5431", SelfLink:"", UID:"e699d610-2b0f-42e1-9062-0a982e9c2e4b", ResourceVersion:"10751", Generation:0, CreationTimestamp:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-55jck"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0061fc270), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0061fc2a0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0061fc2e8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul 20 12:31:51.895: INFO: ResourceQuota "e2e-rq-status-55jck" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-55jck", GenerateName:"", Namespace:"resourcequota-5431", SelfLink:"", UID:"e699d610-2b0f-42e1-9062-0a982e9c2e4b", ResourceVersion:"10751", Generation:0, CreationTimestamp:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-55jck"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd4db0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd4e10), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd4e40), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul 20 12:31:56.896: INFO: ResourceQuota "e2e-rq-status-55jck" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-55jck", GenerateName:"", Namespace:"resourcequota-5431", SelfLink:"", UID:"e699d610-2b0f-42e1-9062-0a982e9c2e4b", ResourceVersion:"10751", Generation:0, CreationTimestamp:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-55jck"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd4fd8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd5020), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd5068), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul 20 12:32:01.896: INFO: ResourceQuota "e2e-rq-status-55jck" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-55jck", GenerateName:"", Namespace:"resourcequota-5431", SelfLink:"", UID:"e699d610-2b0f-42e1-9062-0a982e9c2e4b", ResourceVersion:"10751", Generation:0, CreationTimestamp:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-55jck"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0061fc450), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0061fc498), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0061fc4c8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul 20 12:32:06.895: INFO: ResourceQuota "e2e-rq-status-55jck" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-55jck", GenerateName:"", Namespace:"resourcequota-5431", SelfLink:"", UID:"e699d610-2b0f-42e1-9062-0a982e9c2e4b", ResourceVersion:"10751", Generation:0, CreationTimestamp:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-55jck"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd5230), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd5278), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd52f0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul 20 12:32:11.896: INFO: ResourceQuota "e2e-rq-status-55jck" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-55jck", GenerateName:"", Namespace:"resourcequota-5431", SelfLink:"", UID:"e699d610-2b0f-42e1-9062-0a982e9c2e4b", ResourceVersion:"10751", Generation:0, CreationTimestamp:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-55jck"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0061fc6a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0061fc6f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0061fc720), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul 20 12:32:16.896: INFO: ResourceQuota "e2e-rq-status-55jck" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-55jck", GenerateName:"", Namespace:"resourcequota-5431", SelfLink:"", UID:"e699d610-2b0f-42e1-9062-0a982e9c2e4b", ResourceVersion:"10751", Generation:0, CreationTimestamp:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-55jck"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0061fc840), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0061fc888), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0061fc8b8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul 20 12:32:21.896: INFO: ResourceQuota "e2e-rq-status-55jck" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-55jck", GenerateName:"", Namespace:"resourcequota-5431", SelfLink:"", UID:"e699d610-2b0f-42e1-9062-0a982e9c2e4b", ResourceVersion:"10751", Generation:0, CreationTimestamp:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-55jck"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0061fca38), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0061fca68), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0061fcac8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul 20 12:32:26.896: INFO: ResourceQuota "e2e-rq-status-55jck" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-55jck", GenerateName:"", Namespace:"resourcequota-5431", SelfLink:"", UID:"e699d610-2b0f-42e1-9062-0a982e9c2e4b", ResourceVersion:"10751", Generation:0, CreationTimestamp:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-55jck"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd5560), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd5590), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd55c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul 20 12:32:31.896: INFO: ResourceQuota "e2e-rq-status-55jck" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-55jck", GenerateName:"", Namespace:"resourcequota-5431", SelfLink:"", UID:"e699d610-2b0f-42e1-9062-0a982e9c2e4b", ResourceVersion:"10751", Generation:0, CreationTimestamp:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-55jck"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0061fcd98), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0061fce28), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0061fce88), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul 20 12:32:36.895: INFO: ResourceQuota "e2e-rq-status-55jck" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-55jck", GenerateName:"", Namespace:"resourcequota-5431", SelfLink:"", UID:"e699d610-2b0f-42e1-9062-0a982e9c2e4b", ResourceVersion:"10751", Generation:0, CreationTimestamp:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-55jck"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd5710), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd5758), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd57a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul 20 12:32:41.896: INFO: ResourceQuota "e2e-rq-status-55jck" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-55jck", GenerateName:"", Namespace:"resourcequota-5431", SelfLink:"", UID:"e699d610-2b0f-42e1-9062-0a982e9c2e4b", ResourceVersion:"10751", Generation:0, CreationTimestamp:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-55jck"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0061fd068), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0061fd098), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0061fd0c8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul 20 12:32:46.896: INFO: ResourceQuota "e2e-rq-status-55jck" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-55jck", GenerateName:"", Namespace:"resourcequota-5431", SelfLink:"", UID:"e699d610-2b0f-42e1-9062-0a982e9c2e4b", ResourceVersion:"10751", Generation:0, CreationTimestamp:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-55jck"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd40d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd4120), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd4198), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul 20 12:32:51.895: INFO: ResourceQuota "e2e-rq-status-55jck" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-55jck", GenerateName:"", Namespace:"resourcequota-5431", SelfLink:"", UID:"e699d610-2b0f-42e1-9062-0a982e9c2e4b", ResourceVersion:"10751", Generation:0, CreationTimestamp:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-55jck"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0061fc0a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0061fc0d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0061fc108), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul 20 12:32:56.895: INFO: ResourceQuota "e2e-rq-status-55jck" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-55jck", GenerateName:"", Namespace:"resourcequota-5431", SelfLink:"", UID:"e699d610-2b0f-42e1-9062-0a982e9c2e4b", ResourceVersion:"10751", Generation:0, CreationTimestamp:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-55jck"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0061fc2a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0061fc2e8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0061fc318), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul 20 12:33:01.896: INFO: ResourceQuota "e2e-rq-status-55jck" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-55jck", GenerateName:"", Namespace:"resourcequota-5431", SelfLink:"", UID:"e699d610-2b0f-42e1-9062-0a982e9c2e4b", ResourceVersion:"10751", Generation:0, CreationTimestamp:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-55jck"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0061fc438), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0061fc468), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0061fc4b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul 20 12:33:06.895: INFO: ResourceQuota "e2e-rq-status-55jck" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-55jck", GenerateName:"", Namespace:"resourcequota-5431", SelfLink:"", UID:"e699d610-2b0f-42e1-9062-0a982e9c2e4b", ResourceVersion:"10751", Generation:0, CreationTimestamp:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-55jck"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0061fc690), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0061fc6d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0061fc708), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul 20 12:33:11.896: INFO: ResourceQuota "e2e-rq-status-55jck" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-55jck", GenerateName:"", Namespace:"resourcequota-5431", SelfLink:"", UID:"e699d610-2b0f-42e1-9062-0a982e9c2e4b", ResourceVersion:"10751", Generation:0, CreationTimestamp:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-55jck"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd4438), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd4480), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd44b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul 20 12:33:16.895: INFO: ResourceQuota "e2e-rq-status-55jck" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-55jck", GenerateName:"", Namespace:"resourcequota-5431", SelfLink:"", UID:"e699d610-2b0f-42e1-9062-0a982e9c2e4b", ResourceVersion:"10751", Generation:0, CreationTimestamp:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-55jck"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0061fc888), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0061fc8b8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0061fc8e8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul 20 12:33:21.895: INFO: ResourceQuota "e2e-rq-status-55jck" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-55jck", GenerateName:"", Namespace:"resourcequota-5431", SelfLink:"", UID:"e699d610-2b0f-42e1-9062-0a982e9c2e4b", ResourceVersion:"10751", Generation:0, CreationTimestamp:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-55jck"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd4630), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd4660), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd46c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul 20 12:33:26.895: INFO: ResourceQuota "e2e-rq-status-55jck" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-55jck", GenerateName:"", Namespace:"resourcequota-5431", SelfLink:"", UID:"e699d610-2b0f-42e1-9062-0a982e9c2e4b", ResourceVersion:"10751", Generation:0, CreationTimestamp:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-55jck"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0061fcae0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0061fcb10), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0061fcb58), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul 20 12:33:31.895: INFO: ResourceQuota "e2e-rq-status-55jck" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-55jck", GenerateName:"", Namespace:"resourcequota-5431", SelfLink:"", UID:"e699d610-2b0f-42e1-9062-0a982e9c2e4b", ResourceVersion:"10751", Generation:0, CreationTimestamp:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-55jck"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0061fcdf8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0061fce58), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0061fceb8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul 20 12:33:36.896: INFO: ResourceQuota "e2e-rq-status-55jck" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-55jck", GenerateName:"", Namespace:"resourcequota-5431", SelfLink:"", UID:"e699d610-2b0f-42e1-9062-0a982e9c2e4b", ResourceVersion:"10751", Generation:0, CreationTimestamp:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-55jck"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0061fd068), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0061fd098), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0061fd0c8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul 20 12:33:41.896: INFO: ResourceQuota "e2e-rq-status-55jck" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-55jck", GenerateName:"", Namespace:"resourcequota-5431", SelfLink:"", UID:"e699d610-2b0f-42e1-9062-0a982e9c2e4b", ResourceVersion:"10751", Generation:0, CreationTimestamp:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-55jck"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd4858), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd48a0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd48e8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul 20 12:33:46.896: INFO: ResourceQuota "e2e-rq-status-55jck" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-55jck", GenerateName:"", Namespace:"resourcequota-5431", SelfLink:"", UID:"e699d610-2b0f-42e1-9062-0a982e9c2e4b", ResourceVersion:"10751", Generation:0, CreationTimestamp:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-55jck"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0061fd2d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0061fd308), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0061fd350), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul 20 12:33:51.895: INFO: ResourceQuota "e2e-rq-status-55jck" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-55jck", GenerateName:"", Namespace:"resourcequota-5431", SelfLink:"", UID:"e699d610-2b0f-42e1-9062-0a982e9c2e4b", ResourceVersion:"10751", Generation:0, CreationTimestamp:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-55jck"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd4a50), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd4a80), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd4ab0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul 20 12:33:56.896: INFO: ResourceQuota "e2e-rq-status-55jck" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-55jck", GenerateName:"", Namespace:"resourcequota-5431", SelfLink:"", UID:"e699d610-2b0f-42e1-9062-0a982e9c2e4b", ResourceVersion:"10751", Generation:0, CreationTimestamp:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-55jck"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd4c78), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd4cc0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd4cf0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul 20 12:34:01.896: INFO: ResourceQuota "e2e-rq-status-55jck" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-55jck", GenerateName:"", Namespace:"resourcequota-5431", SelfLink:"", UID:"e699d610-2b0f-42e1-9062-0a982e9c2e4b", ResourceVersion:"10751", Generation:0, CreationTimestamp:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-55jck"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0061fd698), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0061fd728), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0061fd788), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul 20 12:34:06.896: INFO: ResourceQuota "e2e-rq-status-55jck" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-55jck", GenerateName:"", Namespace:"resourcequota-5431", SelfLink:"", UID:"e699d610-2b0f-42e1-9062-0a982e9c2e4b", ResourceVersion:"10751", Generation:0, CreationTimestamp:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-55jck"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0061fd9c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0061fda10), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0061fda40), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul 20 12:34:11.896: INFO: ResourceQuota "e2e-rq-status-55jck" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-55jck", GenerateName:"", Namespace:"resourcequota-5431", SelfLink:"", UID:"e699d610-2b0f-42e1-9062-0a982e9c2e4b", ResourceVersion:"10751", Generation:0, CreationTimestamp:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-55jck"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0061fdb60), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0061fdba8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0061fdbd8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul 20 12:34:16.895: INFO: ResourceQuota "e2e-rq-status-55jck" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-55jck", GenerateName:"", Namespace:"resourcequota-5431", SelfLink:"", UID:"e699d610-2b0f-42e1-9062-0a982e9c2e4b", ResourceVersion:"10751", Generation:0, CreationTimestamp:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-55jck"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0061fddb8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0061fde00), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0061fde30), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul 20 12:34:21.896: INFO: ResourceQuota "e2e-rq-status-55jck" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-55jck", GenerateName:"", Namespace:"resourcequota-5431", SelfLink:"", UID:"e699d610-2b0f-42e1-9062-0a982e9c2e4b", ResourceVersion:"10751", Generation:0, CreationTimestamp:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-55jck"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00505a0d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00505a120), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00505a180), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul 20 12:34:26.895: INFO: ResourceQuota "e2e-rq-status-55jck" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-55jck", GenerateName:"", Namespace:"resourcequota-5431", SelfLink:"", UID:"e699d610-2b0f-42e1-9062-0a982e9c2e4b", ResourceVersion:"10751", Generation:0, CreationTimestamp:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-55jck"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00505a300), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00505a330), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00505a390), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul 20 12:34:31.896: INFO: ResourceQuota "e2e-rq-status-55jck" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-55jck", GenerateName:"", Namespace:"resourcequota-5431", SelfLink:"", UID:"e699d610-2b0f-42e1-9062-0a982e9c2e4b", ResourceVersion:"10751", Generation:0, CreationTimestamp:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-55jck"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd4fd8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd5020), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd5068), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul 20 12:34:36.895: INFO: ResourceQuota "e2e-rq-status-55jck" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-55jck", GenerateName:"", Namespace:"resourcequota-5431", SelfLink:"", UID:"e699d610-2b0f-42e1-9062-0a982e9c2e4b", ResourceVersion:"10751", Generation:0, CreationTimestamp:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-55jck"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00505a5b8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00505a5e8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00505a678), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul 20 12:34:41.895: INFO: ResourceQuota "e2e-rq-status-55jck" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-55jck", GenerateName:"", Namespace:"resourcequota-5431", SelfLink:"", UID:"e699d610-2b0f-42e1-9062-0a982e9c2e4b", ResourceVersion:"10751", Generation:0, CreationTimestamp:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-55jck"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd5218), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd5248), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd52c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul 20 12:34:46.895: INFO: ResourceQuota "e2e-rq-status-55jck" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-55jck", GenerateName:"", Namespace:"resourcequota-5431", SelfLink:"", UID:"e699d610-2b0f-42e1-9062-0a982e9c2e4b", ResourceVersion:"10751", Generation:0, CreationTimestamp:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-55jck"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd40a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd40f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd4168), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul 20 12:34:51.894: INFO: ResourceQuota "e2e-rq-status-55jck" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-55jck", GenerateName:"", Namespace:"resourcequota-5431", SelfLink:"", UID:"e699d610-2b0f-42e1-9062-0a982e9c2e4b", ResourceVersion:"10751", Generation:0, CreationTimestamp:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-55jck"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00505a0a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00505a0f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00505a168), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul 20 12:34:56.895: INFO: ResourceQuota "e2e-rq-status-55jck" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-55jck", GenerateName:"", Namespace:"resourcequota-5431", SelfLink:"", UID:"e699d610-2b0f-42e1-9062-0a982e9c2e4b", ResourceVersion:"10751", Generation:0, CreationTimestamp:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-55jck"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd43d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd4408), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd4450), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul 20 12:35:01.895: INFO: ResourceQuota "e2e-rq-status-55jck" Spec was unchanged and /status reset
  Jul 20 12:35:01.895: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5431" for this suite. @ 07/20/24 12:35:01.898
• [240.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:141
  STEP: Creating a kubernetes client @ 07/20/24 12:35:01.906
  Jul 20 12:35:01.906: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename secrets @ 07/20/24 12:35:01.906
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:35:01.92
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:35:01.923
  STEP: Creating projection with secret that has name secret-emptykey-test-c29c1a23-8266-4a1a-8252-8fd6f94fd37e @ 07/20/24 12:35:01.927
  Jul 20 12:35:01.929: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5214" for this suite. @ 07/20/24 12:35:01.932
• [0.033 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3565
  STEP: Creating a kubernetes client @ 07/20/24 12:35:01.939
  Jul 20 12:35:01.939: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename services @ 07/20/24 12:35:01.939
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:35:01.951
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:35:01.954
  STEP: creating a collection of services @ 07/20/24 12:35:01.956
  Jul 20 12:35:01.956: INFO: Creating e2e-svc-a-7pm2n
  Jul 20 12:35:01.966: INFO: Creating e2e-svc-b-5zjvv
  Jul 20 12:35:01.977: INFO: Creating e2e-svc-c-w48jx
  STEP: deleting service collection @ 07/20/24 12:35:01.987
  Jul 20 12:35:02.008: INFO: Collection of services has been deleted
  Jul 20 12:35:02.009: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5885" for this suite. @ 07/20/24 12:35:02.011
• [0.079 seconds]
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 07/20/24 12:35:02.017
  Jul 20 12:35:02.017: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename container-probe @ 07/20/24 12:35:02.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:35:02.032
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:35:02.035
  STEP: Creating pod test-grpc-eddfcf9f-22bc-4364-b446-b4b343a8dda1 in namespace container-probe-5927 @ 07/20/24 12:35:02.037
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/20/24 12:35:04.057
  Jul 20 12:35:04.060: INFO: Initial restart count of pod test-grpc-eddfcf9f-22bc-4364-b446-b4b343a8dda1 is 0
  Jul 20 12:35:04.062: INFO: Get pod test-grpc-eddfcf9f-22bc-4364-b446-b4b343a8dda1 in namespace container-probe-5927
  Jul 20 12:35:06.067: INFO: Get pod test-grpc-eddfcf9f-22bc-4364-b446-b4b343a8dda1 in namespace container-probe-5927
  Jul 20 12:35:08.072: INFO: Get pod test-grpc-eddfcf9f-22bc-4364-b446-b4b343a8dda1 in namespace container-probe-5927
  Jul 20 12:35:10.077: INFO: Get pod test-grpc-eddfcf9f-22bc-4364-b446-b4b343a8dda1 in namespace container-probe-5927
  Jul 20 12:35:12.081: INFO: Get pod test-grpc-eddfcf9f-22bc-4364-b446-b4b343a8dda1 in namespace container-probe-5927
  Jul 20 12:35:14.085: INFO: Get pod test-grpc-eddfcf9f-22bc-4364-b446-b4b343a8dda1 in namespace container-probe-5927
  Jul 20 12:35:16.091: INFO: Get pod test-grpc-eddfcf9f-22bc-4364-b446-b4b343a8dda1 in namespace container-probe-5927
  Jul 20 12:35:18.096: INFO: Get pod test-grpc-eddfcf9f-22bc-4364-b446-b4b343a8dda1 in namespace container-probe-5927
  Jul 20 12:35:20.100: INFO: Get pod test-grpc-eddfcf9f-22bc-4364-b446-b4b343a8dda1 in namespace container-probe-5927
  Jul 20 12:35:22.105: INFO: Get pod test-grpc-eddfcf9f-22bc-4364-b446-b4b343a8dda1 in namespace container-probe-5927
  Jul 20 12:35:24.109: INFO: Get pod test-grpc-eddfcf9f-22bc-4364-b446-b4b343a8dda1 in namespace container-probe-5927
  Jul 20 12:35:26.113: INFO: Get pod test-grpc-eddfcf9f-22bc-4364-b446-b4b343a8dda1 in namespace container-probe-5927
  Jul 20 12:35:28.118: INFO: Get pod test-grpc-eddfcf9f-22bc-4364-b446-b4b343a8dda1 in namespace container-probe-5927
  Jul 20 12:35:30.123: INFO: Get pod test-grpc-eddfcf9f-22bc-4364-b446-b4b343a8dda1 in namespace container-probe-5927
  Jul 20 12:35:32.128: INFO: Get pod test-grpc-eddfcf9f-22bc-4364-b446-b4b343a8dda1 in namespace container-probe-5927
  Jul 20 12:35:34.132: INFO: Get pod test-grpc-eddfcf9f-22bc-4364-b446-b4b343a8dda1 in namespace container-probe-5927
  Jul 20 12:35:36.137: INFO: Get pod test-grpc-eddfcf9f-22bc-4364-b446-b4b343a8dda1 in namespace container-probe-5927
  Jul 20 12:35:38.142: INFO: Get pod test-grpc-eddfcf9f-22bc-4364-b446-b4b343a8dda1 in namespace container-probe-5927
  Jul 20 12:35:40.147: INFO: Get pod test-grpc-eddfcf9f-22bc-4364-b446-b4b343a8dda1 in namespace container-probe-5927
  Jul 20 12:35:42.151: INFO: Get pod test-grpc-eddfcf9f-22bc-4364-b446-b4b343a8dda1 in namespace container-probe-5927
  Jul 20 12:35:44.156: INFO: Get pod test-grpc-eddfcf9f-22bc-4364-b446-b4b343a8dda1 in namespace container-probe-5927
  Jul 20 12:35:46.160: INFO: Get pod test-grpc-eddfcf9f-22bc-4364-b446-b4b343a8dda1 in namespace container-probe-5927
  Jul 20 12:35:48.165: INFO: Get pod test-grpc-eddfcf9f-22bc-4364-b446-b4b343a8dda1 in namespace container-probe-5927
  Jul 20 12:35:50.170: INFO: Get pod test-grpc-eddfcf9f-22bc-4364-b446-b4b343a8dda1 in namespace container-probe-5927
  Jul 20 12:35:52.174: INFO: Get pod test-grpc-eddfcf9f-22bc-4364-b446-b4b343a8dda1 in namespace container-probe-5927
  Jul 20 12:35:54.178: INFO: Get pod test-grpc-eddfcf9f-22bc-4364-b446-b4b343a8dda1 in namespace container-probe-5927
  Jul 20 12:35:56.183: INFO: Get pod test-grpc-eddfcf9f-22bc-4364-b446-b4b343a8dda1 in namespace container-probe-5927
  Jul 20 12:35:58.189: INFO: Get pod test-grpc-eddfcf9f-22bc-4364-b446-b4b343a8dda1 in namespace container-probe-5927
  Jul 20 12:36:00.194: INFO: Get pod test-grpc-eddfcf9f-22bc-4364-b446-b4b343a8dda1 in namespace container-probe-5927
  Jul 20 12:36:02.198: INFO: Get pod test-grpc-eddfcf9f-22bc-4364-b446-b4b343a8dda1 in namespace container-probe-5927
  Jul 20 12:36:04.203: INFO: Get pod test-grpc-eddfcf9f-22bc-4364-b446-b4b343a8dda1 in namespace container-probe-5927
  Jul 20 12:36:06.208: INFO: Get pod test-grpc-eddfcf9f-22bc-4364-b446-b4b343a8dda1 in namespace container-probe-5927
  Jul 20 12:36:08.212: INFO: Get pod test-grpc-eddfcf9f-22bc-4364-b446-b4b343a8dda1 in namespace container-probe-5927
  Jul 20 12:36:08.212: INFO: Restart count of pod container-probe-5927/test-grpc-eddfcf9f-22bc-4364-b446-b4b343a8dda1 is now 1 (1m4.15226546s elapsed)
  STEP: deleting the pod @ 07/20/24 12:36:08.212
  Jul 20 12:36:08.225: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5927" for this suite. @ 07/20/24 12:36:08.228
• [66.218 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 07/20/24 12:36:08.235
  Jul 20 12:36:08.235: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename field-validation @ 07/20/24 12:36:08.236
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:36:08.252
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:36:08.254
  Jul 20 12:36:08.256: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  W0720 12:36:08.257269      19 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc000a81600 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  W0720 12:36:10.794447      19 warnings.go:70] unknown field "alpha"
  W0720 12:36:10.794467      19 warnings.go:70] unknown field "beta"
  W0720 12:36:10.794470      19 warnings.go:70] unknown field "delta"
  W0720 12:36:10.794474      19 warnings.go:70] unknown field "epsilon"
  W0720 12:36:10.794477      19 warnings.go:70] unknown field "gamma"
  Jul 20 12:36:11.334: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1012" for this suite. @ 07/20/24 12:36:11.337
• [3.110 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 07/20/24 12:36:11.346
  Jul 20 12:36:11.346: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename lease-test @ 07/20/24 12:36:11.347
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:36:11.361
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:36:11.364
  Jul 20 12:36:11.411: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-5483" for this suite. @ 07/20/24 12:36:11.414
• [0.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:627
  STEP: Creating a kubernetes client @ 07/20/24 12:36:11.422
  Jul 20 12:36:11.422: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename job @ 07/20/24 12:36:11.422
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:36:11.435
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:36:11.438
  STEP: Creating a job @ 07/20/24 12:36:11.441
  STEP: Ensuring active pods == parallelism @ 07/20/24 12:36:11.446
  STEP: delete a job @ 07/20/24 12:36:13.45
  STEP: deleting Job.batch foo in namespace job-1305, will wait for the garbage collector to delete the pods @ 07/20/24 12:36:13.45
  Jul 20 12:36:13.509: INFO: Deleting Job.batch foo took: 6.142823ms
  Jul 20 12:36:13.609: INFO: Terminating Job.batch foo pods took: 100.381465ms
  STEP: Ensuring job was deleted @ 07/20/24 12:36:14.91
  Jul 20 12:36:14.913: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1305" for this suite. @ 07/20/24 12:36:14.917
• [3.501 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1698
  STEP: Creating a kubernetes client @ 07/20/24 12:36:14.923
  Jul 20 12:36:14.923: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename kubectl @ 07/20/24 12:36:14.924
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:36:14.939
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:36:14.941
  STEP: creating Agnhost RC @ 07/20/24 12:36:14.944
  Jul 20 12:36:14.944: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-3433 create -f -'
  Jul 20 12:36:15.029: INFO: stderr: ""
  Jul 20 12:36:15.029: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 07/20/24 12:36:15.029
  Jul 20 12:36:16.034: INFO: Selector matched 1 pods for map[app:agnhost]
  Jul 20 12:36:16.034: INFO: Found 1 / 1
  Jul 20 12:36:16.034: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 07/20/24 12:36:16.034
  Jul 20 12:36:16.038: INFO: Selector matched 1 pods for map[app:agnhost]
  Jul 20 12:36:16.038: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Jul 20 12:36:16.038: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-3433 patch pod agnhost-primary-7ck57 -p {"metadata":{"annotations":{"x":"y"}}}'
  Jul 20 12:36:16.088: INFO: stderr: ""
  Jul 20 12:36:16.088: INFO: stdout: "pod/agnhost-primary-7ck57 patched\n"
  STEP: checking annotations @ 07/20/24 12:36:16.088
  Jul 20 12:36:16.099: INFO: Selector matched 1 pods for map[app:agnhost]
  Jul 20 12:36:16.099: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Jul 20 12:36:16.099: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3433" for this suite. @ 07/20/24 12:36:16.102
• [1.184 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:194
  STEP: Creating a kubernetes client @ 07/20/24 12:36:16.109
  Jul 20 12:36:16.109: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/20/24 12:36:16.11
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:36:16.124
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:36:16.126
  Jul 20 12:36:16.129: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 07/20/24 12:36:17.562
  Jul 20 12:36:17.562: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=crd-publish-openapi-2959 --namespace=crd-publish-openapi-2959 create -f -'
  Jul 20 12:36:19.619: INFO: stderr: ""
  Jul 20 12:36:19.619: INFO: stdout: "e2e-test-crd-publish-openapi-6366-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Jul 20 12:36:19.619: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=crd-publish-openapi-2959 --namespace=crd-publish-openapi-2959 delete e2e-test-crd-publish-openapi-6366-crds test-cr'
  Jul 20 12:36:19.675: INFO: stderr: ""
  Jul 20 12:36:19.675: INFO: stdout: "e2e-test-crd-publish-openapi-6366-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  Jul 20 12:36:19.675: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=crd-publish-openapi-2959 --namespace=crd-publish-openapi-2959 apply -f -'
  Jul 20 12:36:19.727: INFO: stderr: ""
  Jul 20 12:36:19.727: INFO: stdout: "e2e-test-crd-publish-openapi-6366-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Jul 20 12:36:19.728: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=crd-publish-openapi-2959 --namespace=crd-publish-openapi-2959 delete e2e-test-crd-publish-openapi-6366-crds test-cr'
  Jul 20 12:36:19.774: INFO: stderr: ""
  Jul 20 12:36:19.774: INFO: stdout: "e2e-test-crd-publish-openapi-6366-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 07/20/24 12:36:19.774
  Jul 20 12:36:19.775: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=crd-publish-openapi-2959 explain e2e-test-crd-publish-openapi-6366-crds'
  Jul 20 12:36:19.814: INFO: stderr: ""
  Jul 20 12:36:19.814: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-6366-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  Jul 20 12:36:21.006: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2959" for this suite. @ 07/20/24 12:36:21.013
• [4.911 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 07/20/24 12:36:21.02
  Jul 20 12:36:21.020: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename downward-api @ 07/20/24 12:36:21.021
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:36:21.036
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:36:21.039
  STEP: Creating a pod to test downward API volume plugin @ 07/20/24 12:36:21.041
  STEP: Saw pod success @ 07/20/24 12:36:25.061
  Jul 20 12:36:25.063: INFO: Trying to get logs from node ip-172-31-25-173 pod downwardapi-volume-01e46414-c37b-4553-90fd-bb9984c469e2 container client-container: <nil>
  STEP: delete the pod @ 07/20/24 12:36:25.077
  Jul 20 12:36:25.091: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-257" for this suite. @ 07/20/24 12:36:25.094
• [4.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:611
  STEP: Creating a kubernetes client @ 07/20/24 12:36:25.099
  Jul 20 12:36:25.099: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename security-context-test @ 07/20/24 12:36:25.1
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:36:25.116
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:36:25.117
  Jul 20 12:36:29.154: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-4770" for this suite. @ 07/20/24 12:36:29.157
• [4.063 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:153
  STEP: Creating a kubernetes client @ 07/20/24 12:36:29.163
  Jul 20 12:36:29.163: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/20/24 12:36:29.163
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:36:29.178
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:36:29.18
  Jul 20 12:36:29.225: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 07/20/24 12:36:30.499
  Jul 20 12:36:30.500: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=crd-publish-openapi-7972 --namespace=crd-publish-openapi-7972 create -f -'
  Jul 20 12:36:32.562: INFO: stderr: ""
  Jul 20 12:36:32.562: INFO: stdout: "e2e-test-crd-publish-openapi-3832-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Jul 20 12:36:32.562: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=crd-publish-openapi-7972 --namespace=crd-publish-openapi-7972 delete e2e-test-crd-publish-openapi-3832-crds test-cr'
  Jul 20 12:36:32.609: INFO: stderr: ""
  Jul 20 12:36:32.609: INFO: stdout: "e2e-test-crd-publish-openapi-3832-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  Jul 20 12:36:32.609: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=crd-publish-openapi-7972 --namespace=crd-publish-openapi-7972 apply -f -'
  Jul 20 12:36:32.660: INFO: stderr: ""
  Jul 20 12:36:32.660: INFO: stdout: "e2e-test-crd-publish-openapi-3832-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Jul 20 12:36:32.660: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=crd-publish-openapi-7972 --namespace=crd-publish-openapi-7972 delete e2e-test-crd-publish-openapi-3832-crds test-cr'
  Jul 20 12:36:32.707: INFO: stderr: ""
  Jul 20 12:36:32.707: INFO: stdout: "e2e-test-crd-publish-openapi-3832-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 07/20/24 12:36:32.707
  Jul 20 12:36:32.707: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=crd-publish-openapi-7972 explain e2e-test-crd-publish-openapi-3832-crds'
  Jul 20 12:36:32.747: INFO: stderr: ""
  Jul 20 12:36:32.747: INFO: stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-3832-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  Jul 20 12:36:33.958: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7972" for this suite. @ 07/20/24 12:36:33.962
• [4.805 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:655
  STEP: Creating a kubernetes client @ 07/20/24 12:36:33.968
  Jul 20 12:36:33.968: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename job @ 07/20/24 12:36:33.969
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:36:33.985
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:36:33.987
  STEP: Creating a job @ 07/20/24 12:36:33.989
  STEP: Ensuring active pods == parallelism @ 07/20/24 12:36:33.994
  STEP: Orphaning one of the Job's Pods @ 07/20/24 12:36:35.999
  Jul 20 12:36:36.514: INFO: Successfully updated pod "adopt-release-7pfbl"
  STEP: Checking that the Job readopts the Pod @ 07/20/24 12:36:36.514
  STEP: Removing the labels from the Job's Pod @ 07/20/24 12:36:38.52
  Jul 20 12:36:39.029: INFO: Successfully updated pod "adopt-release-7pfbl"
  STEP: Checking that the Job releases the Pod @ 07/20/24 12:36:39.029
  Jul 20 12:36:41.036: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2435" for this suite. @ 07/20/24 12:36:41.039
• [7.076 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 07/20/24 12:36:41.044
  Jul 20 12:36:41.044: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename disruption @ 07/20/24 12:36:41.045
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:36:41.061
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:36:41.063
  STEP: Creating a kubernetes client @ 07/20/24 12:36:41.065
  Jul 20 12:36:41.065: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename disruption-2 @ 07/20/24 12:36:41.065
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:36:41.081
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:36:41.082
  STEP: Waiting for the pdb to be processed @ 07/20/24 12:36:41.089
  STEP: Waiting for the pdb to be processed @ 07/20/24 12:36:43.097
  STEP: Waiting for the pdb to be processed @ 07/20/24 12:36:45.107
  STEP: listing a collection of PDBs across all namespaces @ 07/20/24 12:36:47.11
  STEP: listing a collection of PDBs in namespace disruption-6458 @ 07/20/24 12:36:47.113
  STEP: deleting a collection of PDBs @ 07/20/24 12:36:47.116
  STEP: Waiting for the PDB collection to be deleted @ 07/20/24 12:36:47.125
  Jul 20 12:36:47.127: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-6810" for this suite. @ 07/20/24 12:36:47.129
  Jul 20 12:36:47.134: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-6458" for this suite. @ 07/20/24 12:36:47.137
• [6.098 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 07/20/24 12:36:47.143
  Jul 20 12:36:47.143: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename emptydir @ 07/20/24 12:36:47.143
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:36:47.164
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:36:47.168
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 07/20/24 12:36:47.172
  STEP: Saw pod success @ 07/20/24 12:36:49.189
  Jul 20 12:36:49.191: INFO: Trying to get logs from node ip-172-31-79-190 pod pod-96075ede-004c-4690-b95c-e572a79c126c container test-container: <nil>
  STEP: delete the pod @ 07/20/24 12:36:49.196
  Jul 20 12:36:49.210: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6678" for this suite. @ 07/20/24 12:36:49.212
• [2.078 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 07/20/24 12:36:49.22
  Jul 20 12:36:49.220: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename daemonsets @ 07/20/24 12:36:49.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:36:49.235
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:36:49.237
  STEP: Creating simple DaemonSet "daemon-set" @ 07/20/24 12:36:49.251
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/20/24 12:36:49.256
  Jul 20 12:36:49.258: INFO: DaemonSet pods can't tolerate node ip-172-31-19-200 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 20 12:36:49.258: INFO: DaemonSet pods can't tolerate node ip-172-31-76-81 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 20 12:36:49.262: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul 20 12:36:49.262: INFO: Node ip-172-31-25-173 is running 0 daemon pod, expected 1
  Jul 20 12:36:50.259: INFO: DaemonSet pods can't tolerate node ip-172-31-19-200 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 20 12:36:50.260: INFO: DaemonSet pods can't tolerate node ip-172-31-76-81 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 20 12:36:50.262: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jul 20 12:36:50.262: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 07/20/24 12:36:50.264
  Jul 20 12:36:50.276: INFO: DaemonSet pods can't tolerate node ip-172-31-19-200 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 20 12:36:50.276: INFO: DaemonSet pods can't tolerate node ip-172-31-76-81 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 20 12:36:50.278: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jul 20 12:36:50.278: INFO: Node ip-172-31-79-190 is running 0 daemon pod, expected 1
  Jul 20 12:36:51.277: INFO: DaemonSet pods can't tolerate node ip-172-31-19-200 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 20 12:36:51.277: INFO: DaemonSet pods can't tolerate node ip-172-31-76-81 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 20 12:36:51.280: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jul 20 12:36:51.280: INFO: Node ip-172-31-79-190 is running 0 daemon pod, expected 1
  Jul 20 12:36:52.276: INFO: DaemonSet pods can't tolerate node ip-172-31-19-200 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 20 12:36:52.276: INFO: DaemonSet pods can't tolerate node ip-172-31-76-81 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 20 12:36:52.278: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jul 20 12:36:52.278: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 07/20/24 12:36:52.28
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3904, will wait for the garbage collector to delete the pods @ 07/20/24 12:36:52.28
  Jul 20 12:36:52.339: INFO: Deleting DaemonSet.extensions daemon-set took: 4.295863ms
  Jul 20 12:36:52.440: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.894013ms
  Jul 20 12:36:53.944: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul 20 12:36:53.944: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jul 20 12:36:53.947: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"12087"},"items":null}

  Jul 20 12:36:53.950: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"12087"},"items":null}

  Jul 20 12:36:53.959: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3904" for this suite. @ 07/20/24 12:36:53.962
• [4.747 seconds]
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 07/20/24 12:36:53.967
  Jul 20 12:36:53.967: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename runtimeclass @ 07/20/24 12:36:53.968
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:36:53.987
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:36:53.989
  Jul 20 12:36:56.013: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-4924" for this suite. @ 07/20/24 12:36:56.015
• [2.054 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 07/20/24 12:36:56.022
  Jul 20 12:36:56.022: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename deployment @ 07/20/24 12:36:56.022
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:36:56.038
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:36:56.04
  Jul 20 12:36:56.041: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
  Jul 20 12:36:56.048: INFO: Pod name sample-pod: Found 0 pods out of 1
  Jul 20 12:37:01.051: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/20/24 12:37:01.051
  Jul 20 12:37:01.051: INFO: Creating deployment "test-rolling-update-deployment"
  Jul 20 12:37:01.056: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  Jul 20 12:37:01.061: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  Jul 20 12:37:03.067: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
  Jul 20 12:37:03.069: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  Jul 20 12:37:03.082: INFO: Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8904",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "acc7e134-2b17-4ec4-84f8-d0347e1d8051",
      ResourceVersion: (string) (len=5) "12221",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857075821,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857075821,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857075822,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857075821,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857075821,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857075822,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857075821,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-7ddb77f68b\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jul 20 12:37:03.112: INFO: New ReplicaSet "test-rolling-update-deployment-7ddb77f68b" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-7ddb77f68b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8904",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7290c7fb-b1f7-4a71-856d-26924b7b4e97",
      ResourceVersion: (string) (len=5) "12211",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857075821,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "acc7e134-2b17-4ec4-84f8-d0347e1d8051",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857075821,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 61 63 63 37 65 31  33 34 2d 32 62 31 37 2d  |\"acc7e134-2b17-|
              00000120  34 65 63 34 2d 38 34 66  38 2d 64 30 33 34 37 65  |4ec4-84f8-d0347e|
              00000130  31 64 38 30 35 31 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |1d8051\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857075822,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jul 20 12:37:03.113: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
  Jul 20 12:37:03.113: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8904",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f87c2dba-89d5-46be-a982-2cff3bf2971d",
      ResourceVersion: (string) (len=5) "12220",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857075816,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "acc7e134-2b17-4ec4-84f8-d0347e1d8051",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857075816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857075822,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 61 63 63 37 65 31 33  |"uid\":\"acc7e13|
              000000b0  34 2d 32 62 31 37 2d 34  65 63 34 2d 38 34 66 38  |4-2b17-4ec4-84f8|
              000000c0  2d 64 30 33 34 37 65 31  64 38 30 35 31 5c 22 7d  |-d0347e1d8051\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857075822,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "pod": (string) (len=5) "httpd",
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jul 20 12:37:03.120: INFO: Pod "test-rolling-update-deployment-7ddb77f68b-fqc46" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-7ddb77f68b-fqc46",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-7ddb77f68b-",
      Namespace: (string) (len=15) "deployment-8904",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7aca4a54-f437-4e31-99b4-ec0e73906f3a",
      ResourceVersion: (string) (len=5) "12210",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857075821,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-7ddb77f68b",
          UID: (types.UID) (len=36) "7290c7fb-b1f7-4a71-856d-26924b7b4e97",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857075821,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 32  39 30 63 37 66 62 2d 62  |d\":\"7290c7fb-b|
              00000090  31 66 37 2d 34 61 37 31  2d 38 35 36 64 2d 32 36  |1f7-4a71-856d-26|
              000000a0  39 32 34 62 37 62 34 65  39 37 5c 22 7d 22 3a 7b  |924b7b4e97\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857075822,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  30 2e 32 34 32 5c 22 7d  |2.168.120.242\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bqp6w",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bqp6w",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-79-190",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857075822,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857075821,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857075822,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857075822,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857075821,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.79.190",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.79.190"
        }
      },
      PodIP: (string) (len=15) "192.168.120.242",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.120.242"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857075821,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63857075821,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253",
          ContainerID: (string) (len=77) "containerd://72fb027b6302b742b50c885237dfbf161d946dddc4090102591907566e35e96e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 20 12:37:03.121: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8904" for this suite. @ 07/20/24 12:37:03.125
• [7.108 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 07/20/24 12:37:03.13
  Jul 20 12:37:03.130: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename namespaces @ 07/20/24 12:37:03.131
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:37:03.148
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:37:03.15
  STEP: Creating namespace "e2e-ns-tqfsw" @ 07/20/24 12:37:03.151
  Jul 20 12:37:03.170: INFO: Namespace "e2e-ns-tqfsw-7953" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-tqfsw-7953" @ 07/20/24 12:37:03.17
  Jul 20 12:37:03.175: INFO: Namespace "e2e-ns-tqfsw-7953" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-tqfsw-7953" @ 07/20/24 12:37:03.175
  Jul 20 12:37:03.181: INFO: Namespace "e2e-ns-tqfsw-7953" has []v1.FinalizerName{"kubernetes"}
  Jul 20 12:37:03.181: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8070" for this suite. @ 07/20/24 12:37:03.184
  STEP: Destroying namespace "e2e-ns-tqfsw-7953" for this suite. @ 07/20/24 12:37:03.188
• [0.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 07/20/24 12:37:03.193
  Jul 20 12:37:03.193: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename projected @ 07/20/24 12:37:03.194
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:37:03.206
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:37:03.208
  STEP: Creating projection with secret that has name projected-secret-test-d377ef73-f40c-41e7-bf53-4c3161cbd448 @ 07/20/24 12:37:03.21
  STEP: Creating a pod to test consume secrets @ 07/20/24 12:37:03.214
  STEP: Saw pod success @ 07/20/24 12:37:07.231
  Jul 20 12:37:07.234: INFO: Trying to get logs from node ip-172-31-25-173 pod pod-projected-secrets-bdc83ddd-c38c-47ec-8de3-97b772ff32ec container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 07/20/24 12:37:07.239
  Jul 20 12:37:07.254: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7977" for this suite. @ 07/20/24 12:37:07.256
• [4.067 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 07/20/24 12:37:07.26
  Jul 20 12:37:07.260: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename emptydir @ 07/20/24 12:37:07.261
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:37:07.278
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:37:07.28
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 07/20/24 12:37:07.282
  STEP: Saw pod success @ 07/20/24 12:37:11.303
  Jul 20 12:37:11.306: INFO: Trying to get logs from node ip-172-31-25-173 pod pod-6471448f-222c-4dde-93f4-2537c987346b container test-container: <nil>
  STEP: delete the pod @ 07/20/24 12:37:11.31
  Jul 20 12:37:11.321: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3954" for this suite. @ 07/20/24 12:37:11.324
• [4.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 07/20/24 12:37:11.33
  Jul 20 12:37:11.330: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename subjectreview @ 07/20/24 12:37:11.331
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:37:11.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:37:11.347
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-8891" @ 07/20/24 12:37:11.349
  Jul 20 12:37:11.354: INFO: saUsername: "system:serviceaccount:subjectreview-8891:e2e"
  Jul 20 12:37:11.354: INFO: saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-8891"}
  Jul 20 12:37:11.354: INFO: saUID: "1f6a592d-47dc-4b20-9f0a-b9c41411ae18"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-8891:e2e" @ 07/20/24 12:37:11.354
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-8891:e2e" @ 07/20/24 12:37:11.354
  Jul 20 12:37:11.355: INFO: sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-8891:e2e" api 'list' configmaps in "subjectreview-8891" namespace @ 07/20/24 12:37:11.355
  Jul 20 12:37:11.356: INFO: SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-8891:e2e" @ 07/20/24 12:37:11.356
  Jul 20 12:37:11.357: INFO: lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  Jul 20 12:37:11.357: INFO: LocalSubjectAccessReview has been verified
  Jul 20 12:37:11.358: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-8891" for this suite. @ 07/20/24 12:37:11.36
• [0.034 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 07/20/24 12:37:11.365
  Jul 20 12:37:11.365: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename subpath @ 07/20/24 12:37:11.365
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:37:11.379
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:37:11.381
  STEP: Setting up data @ 07/20/24 12:37:11.382
  STEP: Creating pod pod-subpath-test-configmap-xwx7 @ 07/20/24 12:37:11.391
  STEP: Creating a pod to test atomic-volume-subpath @ 07/20/24 12:37:11.391
  STEP: Saw pod success @ 07/20/24 12:37:35.456
  Jul 20 12:37:35.459: INFO: Trying to get logs from node ip-172-31-79-190 pod pod-subpath-test-configmap-xwx7 container test-container-subpath-configmap-xwx7: <nil>
  STEP: delete the pod @ 07/20/24 12:37:35.464
  STEP: Deleting pod pod-subpath-test-configmap-xwx7 @ 07/20/24 12:37:35.476
  Jul 20 12:37:35.476: INFO: Deleting pod "pod-subpath-test-configmap-xwx7" in namespace "subpath-5386"
  Jul 20 12:37:35.478: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-5386" for this suite. @ 07/20/24 12:37:35.481
• [24.121 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 07/20/24 12:37:35.485
  Jul 20 12:37:35.485: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename watch @ 07/20/24 12:37:35.486
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:37:35.503
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:37:35.504
  STEP: creating a watch on configmaps @ 07/20/24 12:37:35.506
  STEP: creating a new configmap @ 07/20/24 12:37:35.506
  STEP: modifying the configmap once @ 07/20/24 12:37:35.51
  STEP: closing the watch once it receives two notifications @ 07/20/24 12:37:35.516
  Jul 20 12:37:35.516: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3519  e1c369ca-b4d2-4143-b77e-6c8e819f54d8 12468 0 2024-07-20 12:37:35 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-07-20 12:37:35 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jul 20 12:37:35.516: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3519  e1c369ca-b4d2-4143-b77e-6c8e819f54d8 12469 0 2024-07-20 12:37:35 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-07-20 12:37:35 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 07/20/24 12:37:35.516
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 07/20/24 12:37:35.521
  STEP: deleting the configmap @ 07/20/24 12:37:35.522
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 07/20/24 12:37:35.527
  Jul 20 12:37:35.527: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3519  e1c369ca-b4d2-4143-b77e-6c8e819f54d8 12470 0 2024-07-20 12:37:35 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-07-20 12:37:35 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jul 20 12:37:35.527: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3519  e1c369ca-b4d2-4143-b77e-6c8e819f54d8 12471 0 2024-07-20 12:37:35 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-07-20 12:37:35 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jul 20 12:37:35.527: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3519" for this suite. @ 07/20/24 12:37:35.529
• [0.048 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 07/20/24 12:37:35.534
  Jul 20 12:37:35.534: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename projected @ 07/20/24 12:37:35.534
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:37:35.549
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:37:35.551
  STEP: Creating configMap with name projected-configmap-test-volume-1b446375-9d0a-4713-ab43-8fa94a78d46d @ 07/20/24 12:37:35.552
  STEP: Creating a pod to test consume configMaps @ 07/20/24 12:37:35.556
  STEP: Saw pod success @ 07/20/24 12:37:39.572
  Jul 20 12:37:39.575: INFO: Trying to get logs from node ip-172-31-79-190 pod pod-projected-configmaps-3baf6518-9257-4fce-8416-f26835a983b5 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 07/20/24 12:37:39.58
  Jul 20 12:37:39.593: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9510" for this suite. @ 07/20/24 12:37:39.595
• [4.066 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 07/20/24 12:37:39.6
  Jul 20 12:37:39.600: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename projected @ 07/20/24 12:37:39.601
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:37:39.617
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:37:39.619
  STEP: Creating a pod to test downward API volume plugin @ 07/20/24 12:37:39.62
  STEP: Saw pod success @ 07/20/24 12:37:43.64
  Jul 20 12:37:43.642: INFO: Trying to get logs from node ip-172-31-79-190 pod downwardapi-volume-50f43fc3-5701-43f0-9988-78b6abeff416 container client-container: <nil>
  STEP: delete the pod @ 07/20/24 12:37:43.647
  Jul 20 12:37:43.659: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9074" for this suite. @ 07/20/24 12:37:43.662
• [4.067 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:330
  STEP: Creating a kubernetes client @ 07/20/24 12:37:43.667
  Jul 20 12:37:43.667: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename resourcequota @ 07/20/24 12:37:43.668
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:37:43.688
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:37:43.69
  STEP: Counting existing ResourceQuota @ 07/20/24 12:38:00.696
  STEP: Creating a ResourceQuota @ 07/20/24 12:38:05.7
  STEP: Ensuring resource quota status is calculated @ 07/20/24 12:38:05.706
  STEP: Creating a ConfigMap @ 07/20/24 12:38:07.71
  STEP: Ensuring resource quota status captures configMap creation @ 07/20/24 12:38:07.72
  STEP: Deleting a ConfigMap @ 07/20/24 12:38:09.724
  STEP: Ensuring resource quota status released usage @ 07/20/24 12:38:09.73
  Jul 20 12:38:11.735: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6038" for this suite. @ 07/20/24 12:38:11.737
• [28.075 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:177
  STEP: Creating a kubernetes client @ 07/20/24 12:38:11.742
  Jul 20 12:38:11.742: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename crd-webhook @ 07/20/24 12:38:11.743
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:38:11.759
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:38:11.762
  STEP: Setting up server cert @ 07/20/24 12:38:11.764
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 07/20/24 12:38:12.042
  STEP: Deploying the custom resource conversion webhook pod @ 07/20/24 12:38:12.051
  STEP: Wait for the deployment to be ready @ 07/20/24 12:38:12.063
  Jul 20 12:38:12.068: INFO: new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 07/20/24 12:38:14.078
  STEP: Verifying the service has paired with the endpoint @ 07/20/24 12:38:14.088
  Jul 20 12:38:15.089: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Jul 20 12:38:15.095: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Creating a v1 custom resource @ 07/20/24 12:38:17.646
  STEP: Create a v2 custom resource @ 07/20/24 12:38:17.661
  STEP: List CRs in v1 @ 07/20/24 12:38:17.688
  STEP: List CRs in v2 @ 07/20/24 12:38:17.692
  Jul 20 12:38:18.236: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-5640" for this suite. @ 07/20/24 12:38:18.239
• [6.507 seconds]
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 07/20/24 12:38:18.249
  Jul 20 12:38:18.249: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename secrets @ 07/20/24 12:38:18.25
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:38:18.27
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:38:18.274
  Jul 20 12:38:18.304: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4428" for this suite. @ 07/20/24 12:38:18.307
• [0.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1764
  STEP: Creating a kubernetes client @ 07/20/24 12:38:18.311
  Jul 20 12:38:18.311: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename kubectl @ 07/20/24 12:38:18.312
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:38:18.326
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:38:18.328
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 07/20/24 12:38:18.329
  Jul 20 12:38:18.329: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-6279 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  Jul 20 12:38:18.376: INFO: stderr: ""
  Jul 20 12:38:18.376: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 07/20/24 12:38:18.376
  Jul 20 12:38:18.380: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-6279 delete pods e2e-test-httpd-pod'
  Jul 20 12:38:20.057: INFO: stderr: ""
  Jul 20 12:38:20.057: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Jul 20 12:38:20.057: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6279" for this suite. @ 07/20/24 12:38:20.061
• [1.754 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 07/20/24 12:38:20.066
  Jul 20 12:38:20.066: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename projected @ 07/20/24 12:38:20.066
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:38:20.083
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:38:20.085
  STEP: Creating a pod to test downward API volume plugin @ 07/20/24 12:38:20.087
  STEP: Saw pod success @ 07/20/24 12:38:24.109
  Jul 20 12:38:24.113: INFO: Trying to get logs from node ip-172-31-79-190 pod downwardapi-volume-dfec587c-daa6-41e2-9507-d6bf60ce6129 container client-container: <nil>
  STEP: delete the pod @ 07/20/24 12:38:24.118
  Jul 20 12:38:24.129: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1375" for this suite. @ 07/20/24 12:38:24.132
• [4.071 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 07/20/24 12:38:24.137
  Jul 20 12:38:24.137: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename webhook @ 07/20/24 12:38:24.137
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:38:24.151
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:38:24.153
  STEP: Setting up server cert @ 07/20/24 12:38:24.174
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/20/24 12:38:24.33
  STEP: Deploying the webhook pod @ 07/20/24 12:38:24.335
  STEP: Wait for the deployment to be ready @ 07/20/24 12:38:24.347
  Jul 20 12:38:24.354: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/20/24 12:38:26.364
  STEP: Verifying the service has paired with the endpoint @ 07/20/24 12:38:26.371
  Jul 20 12:38:27.371: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jul 20 12:38:27.376: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-6587-crds.webhook.example.com via the AdmissionRegistration API @ 07/20/24 12:38:27.886
  STEP: Creating a custom resource while v1 is storage version @ 07/20/24 12:38:27.9
  STEP: Patching Custom Resource Definition to set v2 as storage @ 07/20/24 12:38:29.929
  STEP: Patching the custom resource while v2 is storage version @ 07/20/24 12:38:29.94
  Jul 20 12:38:30.521: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6108" for this suite. @ 07/20/24 12:38:30.525
  STEP: Destroying namespace "webhook-markers-600" for this suite. @ 07/20/24 12:38:30.53
• [6.399 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 07/20/24 12:38:30.535
  Jul 20 12:38:30.536: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename projected @ 07/20/24 12:38:30.536
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:38:30.55
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:38:30.551
  STEP: Creating the pod @ 07/20/24 12:38:30.553
  Jul 20 12:38:33.085: INFO: Successfully updated pod "annotationupdatec24bf529-cfad-46e3-877d-a1a309578731"
  Jul 20 12:38:37.104: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5381" for this suite. @ 07/20/24 12:38:37.108
• [6.579 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 07/20/24 12:38:37.114
  Jul 20 12:38:37.114: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename emptydir @ 07/20/24 12:38:37.115
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:38:37.13
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:38:37.132
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 07/20/24 12:38:37.134
  STEP: Saw pod success @ 07/20/24 12:38:41.15
  Jul 20 12:38:41.153: INFO: Trying to get logs from node ip-172-31-25-173 pod pod-a241e927-7b6b-4a22-8b94-9cb1ff12b254 container test-container: <nil>
  STEP: delete the pod @ 07/20/24 12:38:41.157
  Jul 20 12:38:41.174: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9715" for this suite. @ 07/20/24 12:38:41.177
• [4.067 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 07/20/24 12:38:41.182
  Jul 20 12:38:41.182: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename namespaces @ 07/20/24 12:38:41.182
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:38:41.197
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:38:41.198
  STEP: Read namespace status @ 07/20/24 12:38:41.2
  Jul 20 12:38:41.202: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 07/20/24 12:38:41.202
  Jul 20 12:38:41.208: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 07/20/24 12:38:41.208
  Jul 20 12:38:41.213: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  Jul 20 12:38:41.213: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5947" for this suite. @ 07/20/24 12:38:41.216
• [0.040 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:669
  STEP: Creating a kubernetes client @ 07/20/24 12:38:41.222
  Jul 20 12:38:41.222: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename pv @ 07/20/24 12:38:41.223
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:38:41.237
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:38:41.238
  STEP: Creating initial PV and PVC @ 07/20/24 12:38:41.24
  Jul 20 12:38:41.240: INFO: Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-9621" @ 07/20/24 12:38:41.25
  STEP: Listing PVCs in namespace "pv-9621" @ 07/20/24 12:38:41.253
  STEP: Reading "pvc-k86g6" Status @ 07/20/24 12:38:41.256
  STEP: Reading "pv-9621-2gm2d" Status @ 07/20/24 12:38:41.26
  STEP: Patching "pvc-k86g6" Status @ 07/20/24 12:38:41.263
  STEP: Patching "pv-9621-2gm2d" Status @ 07/20/24 12:38:41.267
  STEP: Updating "pvc-k86g6" Status @ 07/20/24 12:38:41.281
  STEP: Updating "pv-9621-2gm2d" Status @ 07/20/24 12:38:41.289
  Jul 20 12:38:41.295: INFO: AfterEach: deleting 1 PVCs and 1 PVs...
  Jul 20 12:38:41.295: INFO: Deleting PersistentVolumeClaim "pvc-k86g6"
  Jul 20 12:38:41.302: INFO: Deleting PersistentVolume "pv-9621-2gm2d"
  Jul 20 12:38:41.309: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-9621" for this suite. @ 07/20/24 12:38:41.311
• [0.094 seconds]
------------------------------
SSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 07/20/24 12:38:41.316
  Jul 20 12:38:41.316: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename events @ 07/20/24 12:38:41.317
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:38:41.33
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:38:41.331
  STEP: Create set of events @ 07/20/24 12:38:41.333
  Jul 20 12:38:41.338: INFO: created test-event-1
  Jul 20 12:38:41.342: INFO: created test-event-2
  Jul 20 12:38:41.346: INFO: created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 07/20/24 12:38:41.346
  STEP: delete collection of events @ 07/20/24 12:38:41.349
  Jul 20 12:38:41.349: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 07/20/24 12:38:41.365
  Jul 20 12:38:41.365: INFO: requesting list of events to confirm quantity
  Jul 20 12:38:41.367: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-3472" for this suite. @ 07/20/24 12:38:41.37
• [0.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:269
  STEP: Creating a kubernetes client @ 07/20/24 12:38:41.375
  Jul 20 12:38:41.375: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename downward-api @ 07/20/24 12:38:41.376
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:38:41.389
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:38:41.391
  STEP: Creating a pod to test downward api env vars @ 07/20/24 12:38:41.392
  STEP: Saw pod success @ 07/20/24 12:38:43.407
  Jul 20 12:38:43.410: INFO: Trying to get logs from node ip-172-31-79-190 pod downward-api-564d185b-a846-4765-9920-8436eac187a2 container dapi-container: <nil>
  STEP: delete the pod @ 07/20/24 12:38:43.416
  Jul 20 12:38:43.429: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1974" for this suite. @ 07/20/24 12:38:43.431
• [2.062 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 07/20/24 12:38:43.438
  Jul 20 12:38:43.438: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename replicaset @ 07/20/24 12:38:43.438
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:38:43.452
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:38:43.454
  STEP: Create a Replicaset @ 07/20/24 12:38:43.459
  STEP: Verify that the required pods have come up. @ 07/20/24 12:38:43.464
  Jul 20 12:38:43.465: INFO: Pod name sample-pod: Found 0 pods out of 1
  Jul 20 12:38:48.470: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/20/24 12:38:48.47
  STEP: Getting /status @ 07/20/24 12:38:48.471
  Jul 20 12:38:48.473: INFO: Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 07/20/24 12:38:48.473
  Jul 20 12:38:48.480: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 07/20/24 12:38:48.48
  Jul 20 12:38:48.482: INFO: Observed &ReplicaSet event: ADDED
  Jul 20 12:38:48.482: INFO: Observed &ReplicaSet event: MODIFIED
  Jul 20 12:38:48.482: INFO: Observed &ReplicaSet event: MODIFIED
  Jul 20 12:38:48.482: INFO: Observed &ReplicaSet event: MODIFIED
  Jul 20 12:38:48.482: INFO: Found replicaset test-rs in namespace replicaset-4200 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Jul 20 12:38:48.482: INFO: Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 07/20/24 12:38:48.482
  Jul 20 12:38:48.482: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Jul 20 12:38:48.486: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 07/20/24 12:38:48.486
  Jul 20 12:38:48.487: INFO: Observed &ReplicaSet event: ADDED
  Jul 20 12:38:48.487: INFO: Observed &ReplicaSet event: MODIFIED
  Jul 20 12:38:48.487: INFO: Observed &ReplicaSet event: MODIFIED
  Jul 20 12:38:48.487: INFO: Observed &ReplicaSet event: MODIFIED
  Jul 20 12:38:48.487: INFO: Observed replicaset test-rs in namespace replicaset-4200 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jul 20 12:38:48.487: INFO: Observed &ReplicaSet event: MODIFIED
  Jul 20 12:38:48.487: INFO: Found replicaset test-rs in namespace replicaset-4200 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  Jul 20 12:38:48.487: INFO: Replicaset test-rs has a patched status
  Jul 20 12:38:48.487: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4200" for this suite. @ 07/20/24 12:38:48.49
• [5.057 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 07/20/24 12:38:48.495
  Jul 20 12:38:48.495: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename cronjob @ 07/20/24 12:38:48.495
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:38:48.509
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:38:48.511
  STEP: Creating a cronjob @ 07/20/24 12:38:48.513
  STEP: Ensuring more than one job is running at a time @ 07/20/24 12:38:48.518
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 07/20/24 12:40:00.521
  STEP: Removing cronjob @ 07/20/24 12:40:00.524
  Jul 20 12:40:00.528: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7617" for this suite. @ 07/20/24 12:40:00.532
• [72.044 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 07/20/24 12:40:00.539
  Jul 20 12:40:00.539: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename emptydir @ 07/20/24 12:40:00.54
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:40:00.558
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:40:00.56
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 07/20/24 12:40:00.561
  STEP: Saw pod success @ 07/20/24 12:40:04.581
  Jul 20 12:40:04.584: INFO: Trying to get logs from node ip-172-31-25-173 pod pod-59066360-02fb-479b-9569-f6d12f6cb78f container test-container: <nil>
  STEP: delete the pod @ 07/20/24 12:40:04.589
  Jul 20 12:40:04.599: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7566" for this suite. @ 07/20/24 12:40:04.601
• [4.067 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:775
  STEP: Creating a kubernetes client @ 07/20/24 12:40:04.606
  Jul 20 12:40:04.606: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename services @ 07/20/24 12:40:04.606
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:40:04.62
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:40:04.622
  Jul 20 12:40:04.627: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2582" for this suite. @ 07/20/24 12:40:04.63
• [0.029 seconds]
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 07/20/24 12:40:04.634
  Jul 20 12:40:04.634: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/20/24 12:40:04.635
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:40:04.65
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:40:04.651
  Jul 20 12:40:04.653: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  Jul 20 12:40:10.808: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-9469" for this suite. @ 07/20/24 12:40:10.811
• [6.183 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3649
  STEP: Creating a kubernetes client @ 07/20/24 12:40:10.818
  Jul 20 12:40:10.818: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename services @ 07/20/24 12:40:10.818
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:40:10.834
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:40:10.836
  STEP: creating service multiprotocol-test in namespace services-1190 @ 07/20/24 12:40:10.838
  STEP: creating pod pod1 in namespace services-1190 @ 07/20/24 12:40:10.846
  STEP: Creating pod pod1 in namespace services-1190 @ 07/20/24 12:40:10.846
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-1190 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 07/20/24 12:40:12.863
  Jul 20 12:40:12.872: INFO: successfully validated that service multiprotocol-test in namespace services-1190 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 07/20/24 12:40:12.872
  Jul 20 12:40:12.872: INFO: Creating new exec pod
  Jul 20 12:40:14.883: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=services-1190 exec execpodhc9mj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.190 80'
  Jul 20 12:40:14.978: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.190 80\nConnection to 10.152.183.190 80 port [tcp/http] succeeded!\n"
  Jul 20 12:40:14.978: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul 20 12:40:14.978: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=services-1190 exec execpodhc9mj -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.190 80'
  Jul 20 12:40:19.078: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.190 80\nConnection to 10.152.183.190 80 port [udp/*] succeeded!\n"
  Jul 20 12:40:19.078: INFO: stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 07/20/24 12:40:19.078
  Jul 20 12:40:19.087: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=services-1190 exec execpodhc9mj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.190 80'
  Jul 20 12:40:19.181: INFO: stderr: "+ nc -v -t -w 2 10.152.183.190 80\n+ echo hostName\nConnection to 10.152.183.190 80 port [tcp/http] succeeded!\n"
  Jul 20 12:40:19.181: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul 20 12:40:19.181: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=services-1190 exec execpodhc9mj -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.190 80'
  Jul 20 12:40:23.267: INFO: stderr: "+ nc -v -u -w 2 10.152.183.190 80\n+ echo hostName\nConnection to 10.152.183.190 80 port [udp/*] succeeded!\n"
  Jul 20 12:40:23.267: INFO: stdout: ""
  Jul 20 12:40:23.267: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=services-1190 exec execpodhc9mj -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.190 80'
  Jul 20 12:40:27.367: INFO: stderr: "+ nc -v -u -w 2 10.152.183.190 80\n+ echo hostName\nConnection to 10.152.183.190 80 port [udp/*] succeeded!\n"
  Jul 20 12:40:27.367: INFO: stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 07/20/24 12:40:27.368
  Jul 20 12:40:27.375: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=services-1190 exec execpodhc9mj -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.190 80'
  Jul 20 12:40:31.467: INFO: stderr: "+ nc -v -u -w 2 10.152.183.190 80\n+ echo hostName\nConnection to 10.152.183.190 80 port [udp/*] succeeded!\n"
  Jul 20 12:40:31.467: INFO: stdout: "pod1"
  Jul 20 12:40:31.467: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=services-1190 exec execpodhc9mj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.190 80'
  Jul 20 12:40:33.554: INFO: rc: 1
  Jul 20 12:40:33.554: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=services-1190 exec execpodhc9mj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.190 80:
  Command stdout:

  stderr:
  + nc -v -t -w 2 10.152.183.190 80
  + echo hostName
  nc: connect to 10.152.183.190 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Jul 20 12:40:33.554: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=services-1190 exec execpodhc9mj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.190 80'
  Jul 20 12:40:35.646: INFO: rc: 1
  Jul 20 12:40:35.646: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=services-1190 exec execpodhc9mj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.190 80:
  Command stdout:

  stderr:
  + nc -v -t -w 2 10.152.183.190 80
  + echo hostName
  nc: connect to 10.152.183.190 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Jul 20 12:40:35.646: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=services-1190 exec execpodhc9mj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.190 80'
  Jul 20 12:40:37.746: INFO: rc: 1
  Jul 20 12:40:37.746: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=services-1190 exec execpodhc9mj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.190 80:
  Command stdout:

  stderr:
  + nc -v -t -w 2 10.152.183.190 80
  + echo hostName
  nc: connect to 10.152.183.190 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Jul 20 12:40:37.746: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1190" for this suite. @ 07/20/24 12:40:37.75
• [26.938 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 07/20/24 12:40:37.756
  Jul 20 12:40:37.756: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename dns @ 07/20/24 12:40:37.756
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:40:37.775
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:40:37.777
  STEP: Creating a test headless service @ 07/20/24 12:40:37.778
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-8541.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-8541.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-8541.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-8541.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-8541.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-8541.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-8541.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-8541.svc.cluster.local;sleep 1; done
   @ 07/20/24 12:40:37.783
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-8541.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-8541.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-8541.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-8541.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-8541.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-8541.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-8541.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-8541.svc.cluster.local;sleep 1; done
   @ 07/20/24 12:40:37.783
  STEP: creating a pod to probe DNS @ 07/20/24 12:40:37.783
  STEP: submitting the pod to kubernetes @ 07/20/24 12:40:37.783
  STEP: retrieving the pod @ 07/20/24 12:40:43.809
  STEP: looking for the results for each expected name from probers @ 07/20/24 12:40:43.811
  Jul 20 12:40:43.826: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-8541.svc.cluster.local from pod dns-8541/dns-test-771bd713-4092-409d-a802-f5b7c10e0765: the server could not find the requested resource (get pods dns-test-771bd713-4092-409d-a802-f5b7c10e0765)
  Jul 20 12:40:43.828: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-8541.svc.cluster.local from pod dns-8541/dns-test-771bd713-4092-409d-a802-f5b7c10e0765: the server could not find the requested resource (get pods dns-test-771bd713-4092-409d-a802-f5b7c10e0765)
  Jul 20 12:40:43.831: INFO: Unable to read jessie_udp@dns-test-service-2.dns-8541.svc.cluster.local from pod dns-8541/dns-test-771bd713-4092-409d-a802-f5b7c10e0765: the server could not find the requested resource (get pods dns-test-771bd713-4092-409d-a802-f5b7c10e0765)
  Jul 20 12:40:43.834: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-8541.svc.cluster.local from pod dns-8541/dns-test-771bd713-4092-409d-a802-f5b7c10e0765: the server could not find the requested resource (get pods dns-test-771bd713-4092-409d-a802-f5b7c10e0765)
  Jul 20 12:40:43.834: INFO: Lookups using dns-8541/dns-test-771bd713-4092-409d-a802-f5b7c10e0765 failed for: [jessie_udp@dns-querier-2.dns-test-service-2.dns-8541.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-8541.svc.cluster.local jessie_udp@dns-test-service-2.dns-8541.svc.cluster.local jessie_tcp@dns-test-service-2.dns-8541.svc.cluster.local]

  Jul 20 12:40:43.842: INFO: Pod client logs for webserver: 
  Jul 20 12:40:43.847: INFO: Pod client logs for querier: 
  Jul 20 12:40:43.851: INFO: Pod client logs for jessie-querier: 
  Jul 20 12:40:48.838: INFO: DNS probes using dns-8541/dns-test-771bd713-4092-409d-a802-f5b7c10e0765 succeeded

  STEP: deleting the pod @ 07/20/24 12:40:48.838
  STEP: deleting the test headless service @ 07/20/24 12:40:48.852
  Jul 20 12:40:48.865: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8541" for this suite. @ 07/20/24 12:40:48.868
• [11.119 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:695
  STEP: Creating a kubernetes client @ 07/20/24 12:40:48.875
  Jul 20 12:40:48.875: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename resourcequota @ 07/20/24 12:40:48.875
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:40:48.89
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:40:48.892
  STEP: Creating a ResourceQuota with terminating scope @ 07/20/24 12:40:48.893
  STEP: Ensuring ResourceQuota status is calculated @ 07/20/24 12:40:48.897
  STEP: Creating a ResourceQuota with not terminating scope @ 07/20/24 12:40:50.902
  STEP: Ensuring ResourceQuota status is calculated @ 07/20/24 12:40:50.907
  STEP: Creating a long running pod @ 07/20/24 12:40:52.91
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 07/20/24 12:40:52.923
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 07/20/24 12:40:54.927
  STEP: Deleting the pod @ 07/20/24 12:40:56.93
  STEP: Ensuring resource quota status released the pod usage @ 07/20/24 12:40:56.94
  STEP: Creating a terminating pod @ 07/20/24 12:40:58.945
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 07/20/24 12:40:58.957
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 07/20/24 12:41:00.961
  STEP: Deleting the pod @ 07/20/24 12:41:02.966
  STEP: Ensuring resource quota status released the pod usage @ 07/20/24 12:41:02.977
  Jul 20 12:41:04.982: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2218" for this suite. @ 07/20/24 12:41:04.985
• [16.115 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 07/20/24 12:41:04.99
  Jul 20 12:41:04.990: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename events @ 07/20/24 12:41:04.991
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:41:05.006
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:41:05.008
  STEP: creating a test event @ 07/20/24 12:41:05.01
  STEP: listing all events in all namespaces @ 07/20/24 12:41:05.016
  STEP: patching the test event @ 07/20/24 12:41:05.025
  STEP: fetching the test event @ 07/20/24 12:41:05.032
  STEP: updating the test event @ 07/20/24 12:41:05.034
  STEP: getting the test event @ 07/20/24 12:41:05.041
  STEP: deleting the test event @ 07/20/24 12:41:05.044
  STEP: listing all events in all namespaces @ 07/20/24 12:41:05.05
  Jul 20 12:41:05.059: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-366" for this suite. @ 07/20/24 12:41:05.064
• [0.078 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:135
  STEP: Creating a kubernetes client @ 07/20/24 12:41:05.069
  Jul 20 12:41:05.069: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename security-context @ 07/20/24 12:41:05.069
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:41:05.085
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:41:05.086
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 07/20/24 12:41:05.088
  STEP: Saw pod success @ 07/20/24 12:41:09.106
  Jul 20 12:41:09.108: INFO: Trying to get logs from node ip-172-31-79-190 pod security-context-e450786b-8a48-4656-811c-f24a06582135 container test-container: <nil>
  STEP: delete the pod @ 07/20/24 12:41:09.115
  Jul 20 12:41:09.127: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-8524" for this suite. @ 07/20/24 12:41:09.13
• [4.066 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 07/20/24 12:41:09.134
  Jul 20 12:41:09.134: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename limitrange @ 07/20/24 12:41:09.135
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:41:09.15
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:41:09.152
  STEP: Creating LimitRange "e2e-limitrange-xvd58" in namespace "limitrange-6688" @ 07/20/24 12:41:09.153
  STEP: Creating another limitRange in another namespace @ 07/20/24 12:41:09.158
  Jul 20 12:41:09.171: INFO: Namespace "e2e-limitrange-xvd58-6819" created
  Jul 20 12:41:09.171: INFO: Creating LimitRange "e2e-limitrange-xvd58" in namespace "e2e-limitrange-xvd58-6819"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-xvd58" @ 07/20/24 12:41:09.175
  Jul 20 12:41:09.178: INFO: Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-xvd58" in "limitrange-6688" namespace @ 07/20/24 12:41:09.178
  Jul 20 12:41:09.183: INFO: LimitRange "e2e-limitrange-xvd58" has been patched
  STEP: Delete LimitRange "e2e-limitrange-xvd58" by Collection with labelSelector: "e2e-limitrange-xvd58=patched" @ 07/20/24 12:41:09.183
  STEP: Confirm that the limitRange "e2e-limitrange-xvd58" has been deleted @ 07/20/24 12:41:09.189
  Jul 20 12:41:09.189: INFO: Requesting list of LimitRange to confirm quantity
  Jul 20 12:41:09.191: INFO: Found 0 LimitRange with label "e2e-limitrange-xvd58=patched"
  Jul 20 12:41:09.191: INFO: LimitRange "e2e-limitrange-xvd58" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-xvd58" @ 07/20/24 12:41:09.191
  Jul 20 12:41:09.193: INFO: Found 1 limitRange
  Jul 20 12:41:09.193: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-6688" for this suite. @ 07/20/24 12:41:09.195
  STEP: Destroying namespace "e2e-limitrange-xvd58-6819" for this suite. @ 07/20/24 12:41:09.2
• [0.071 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 07/20/24 12:41:09.207
  Jul 20 12:41:09.207: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename taint-multiple-pods @ 07/20/24 12:41:09.208
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:41:09.223
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:41:09.224
  Jul 20 12:41:09.226: INFO: Waiting up to 1m0s for all nodes to be ready
  Jul 20 12:42:09.228: INFO: Waiting for terminating namespaces to be deleted...
  Jul 20 12:42:09.232: INFO: Starting informer...
  STEP: Starting pods... @ 07/20/24 12:42:09.232
  Jul 20 12:42:09.446: INFO: Pod1 is running on ip-172-31-79-190. Tainting Node
  Jul 20 12:42:11.662: INFO: Pod2 is running on ip-172-31-79-190. Tainting Node
  STEP: Trying to apply a taint on the Node @ 07/20/24 12:42:11.662
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 07/20/24 12:42:11.67
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 07/20/24 12:42:11.673
  Jul 20 12:42:17.459: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
  Jul 20 12:42:37.479: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 07/20/24 12:42:37.488
  Jul 20 12:42:37.490: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-2998" for this suite. @ 07/20/24 12:42:37.493
• [88.292 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 07/20/24 12:42:37.5
  Jul 20 12:42:37.500: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename init-container @ 07/20/24 12:42:37.5
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:42:37.571
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:42:37.573
  STEP: creating the pod @ 07/20/24 12:42:37.574
  Jul 20 12:42:37.574: INFO: PodSpec: initContainers in spec.initContainers
  Jul 20 12:42:40.469: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-3639" for this suite. @ 07/20/24 12:42:40.472
• [2.981 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:558
  STEP: Creating a kubernetes client @ 07/20/24 12:42:40.488
  Jul 20 12:42:40.488: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename ingress @ 07/20/24 12:42:40.489
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:42:40.505
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:42:40.506
  STEP: getting /apis @ 07/20/24 12:42:40.508
  STEP: getting /apis/networking.k8s.io @ 07/20/24 12:42:40.511
  STEP: getting /apis/networking.k8s.iov1 @ 07/20/24 12:42:40.511
  STEP: creating @ 07/20/24 12:42:40.512
  STEP: getting @ 07/20/24 12:42:40.527
  STEP: listing @ 07/20/24 12:42:40.531
  STEP: watching @ 07/20/24 12:42:40.534
  Jul 20 12:42:40.534: INFO: starting watch
  STEP: cluster-wide listing @ 07/20/24 12:42:40.535
  STEP: cluster-wide watching @ 07/20/24 12:42:40.537
  Jul 20 12:42:40.537: INFO: starting watch
  STEP: patching @ 07/20/24 12:42:40.538
  STEP: updating @ 07/20/24 12:42:40.544
  Jul 20 12:42:40.550: INFO: waiting for watch events with expected annotations
  Jul 20 12:42:40.550: INFO: saw patched and updated annotations
  STEP: patching /status @ 07/20/24 12:42:40.55
  STEP: updating /status @ 07/20/24 12:42:40.556
  STEP: get /status @ 07/20/24 12:42:40.563
  STEP: deleting @ 07/20/24 12:42:40.568
  STEP: deleting a collection @ 07/20/24 12:42:40.58
  Jul 20 12:42:40.596: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-1093" for this suite. @ 07/20/24 12:42:40.602
• [0.121 seconds]
------------------------------
SSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:902
  STEP: Creating a kubernetes client @ 07/20/24 12:42:40.608
  Jul 20 12:42:40.608: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename statefulset @ 07/20/24 12:42:40.609
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:42:40.626
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:42:40.634
  STEP: Creating service test in namespace statefulset-7123 @ 07/20/24 12:42:40.642
  STEP: Creating statefulset ss in namespace statefulset-7123 @ 07/20/24 12:42:40.648
  Jul 20 12:42:40.657: INFO: Found 0 stateful pods, waiting for 1
  Jul 20 12:42:50.658: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 07/20/24 12:42:50.664
  STEP: updating a scale subresource @ 07/20/24 12:42:50.666
  STEP: verifying the statefulset Spec.Replicas was modified @ 07/20/24 12:42:50.67
  STEP: Patch a scale subresource @ 07/20/24 12:42:50.672
  STEP: verifying the statefulset Spec.Replicas was modified @ 07/20/24 12:42:50.68
  Jul 20 12:42:50.681: INFO: Deleting all statefulset in ns statefulset-7123
  Jul 20 12:42:50.687: INFO: Scaling statefulset ss to 0
  Jul 20 12:43:00.699: INFO: Waiting for statefulset status.replicas updated to 0
  Jul 20 12:43:00.702: INFO: Deleting statefulset ss
  Jul 20 12:43:00.711: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7123" for this suite. @ 07/20/24 12:43:00.713
• [20.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 07/20/24 12:43:00.72
  Jul 20 12:43:00.720: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename watch @ 07/20/24 12:43:00.72
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:43:00.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:43:00.74
  STEP: getting a starting resourceVersion @ 07/20/24 12:43:00.741
  STEP: starting a background goroutine to produce watch events @ 07/20/24 12:43:00.744
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 07/20/24 12:43:00.744
  Jul 20 12:43:03.526: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5558" for this suite. @ 07/20/24 12:43:03.575
• [2.910 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 07/20/24 12:43:03.631
  Jul 20 12:43:03.631: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename pods @ 07/20/24 12:43:03.631
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:43:03.647
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:43:03.648
  STEP: creating the pod @ 07/20/24 12:43:03.65
  STEP: submitting the pod to kubernetes @ 07/20/24 12:43:03.65
  STEP: verifying the pod is in kubernetes @ 07/20/24 12:43:05.666
  STEP: updating the pod @ 07/20/24 12:43:05.67
  Jul 20 12:43:06.180: INFO: Successfully updated pod "pod-update-8c7c33bf-b589-49c6-a260-3d55e857222f"
  STEP: verifying the updated pod is in kubernetes @ 07/20/24 12:43:06.183
  Jul 20 12:43:06.187: INFO: Pod update OK
  Jul 20 12:43:06.187: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6843" for this suite. @ 07/20/24 12:43:06.191
• [2.565 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1632
  STEP: Creating a kubernetes client @ 07/20/24 12:43:06.196
  Jul 20 12:43:06.196: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename kubectl @ 07/20/24 12:43:06.197
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:43:06.21
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:43:06.212
  STEP: creating the pod @ 07/20/24 12:43:06.213
  Jul 20 12:43:06.214: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-6785 create -f -'
  Jul 20 12:43:06.297: INFO: stderr: ""
  Jul 20 12:43:06.297: INFO: stdout: "pod/pause created\n"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 07/20/24 12:43:08.306
  Jul 20 12:43:08.306: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-6785 label pods pause testing-label=testing-label-value'
  Jul 20 12:43:08.380: INFO: stderr: ""
  Jul 20 12:43:08.380: INFO: stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 07/20/24 12:43:08.38
  Jul 20 12:43:08.380: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-6785 get pod pause -L testing-label'
  Jul 20 12:43:08.430: INFO: stderr: ""
  Jul 20 12:43:08.430: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 07/20/24 12:43:08.43
  Jul 20 12:43:08.431: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-6785 label pods pause testing-label-'
  Jul 20 12:43:08.476: INFO: stderr: ""
  Jul 20 12:43:08.476: INFO: stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 07/20/24 12:43:08.476
  Jul 20 12:43:08.476: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-6785 get pod pause -L testing-label'
  Jul 20 12:43:08.521: INFO: stderr: ""
  Jul 20 12:43:08.521: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 07/20/24 12:43:08.521
  Jul 20 12:43:08.522: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-6785 delete --grace-period=0 --force -f -'
  Jul 20 12:43:08.572: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jul 20 12:43:08.572: INFO: stdout: "pod \"pause\" force deleted\n"
  Jul 20 12:43:08.572: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-6785 get rc,svc -l name=pause --no-headers'
  Jul 20 12:43:08.618: INFO: stderr: "No resources found in kubectl-6785 namespace.\n"
  Jul 20 12:43:08.618: INFO: stdout: ""
  Jul 20 12:43:08.618: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-6785 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Jul 20 12:43:08.659: INFO: stderr: ""
  Jul 20 12:43:08.659: INFO: stdout: ""
  Jul 20 12:43:08.659: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6785" for this suite. @ 07/20/24 12:43:08.662
• [2.471 seconds]
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:399
  STEP: Creating a kubernetes client @ 07/20/24 12:43:08.667
  Jul 20 12:43:08.667: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename kubectl @ 07/20/24 12:43:08.668
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:43:08.682
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:43:08.684
  STEP: creating all guestbook components @ 07/20/24 12:43:08.686
  Jul 20 12:43:08.686: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  Jul 20 12:43:08.686: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-4139 create -f -'
  Jul 20 12:43:08.779: INFO: stderr: ""
  Jul 20 12:43:08.779: INFO: stdout: "service/agnhost-replica created\n"
  Jul 20 12:43:08.779: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  Jul 20 12:43:08.779: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-4139 create -f -'
  Jul 20 12:43:08.867: INFO: stderr: ""
  Jul 20 12:43:08.867: INFO: stdout: "service/agnhost-primary created\n"
  Jul 20 12:43:08.867: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  Jul 20 12:43:08.867: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-4139 create -f -'
  Jul 20 12:43:08.948: INFO: stderr: ""
  Jul 20 12:43:08.948: INFO: stdout: "service/frontend created\n"
  Jul 20 12:43:08.948: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  Jul 20 12:43:08.949: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-4139 create -f -'
  Jul 20 12:43:09.011: INFO: stderr: ""
  Jul 20 12:43:09.011: INFO: stdout: "deployment.apps/frontend created\n"
  Jul 20 12:43:09.011: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Jul 20 12:43:09.011: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-4139 create -f -'
  Jul 20 12:43:09.079: INFO: stderr: ""
  Jul 20 12:43:09.079: INFO: stdout: "deployment.apps/agnhost-primary created\n"
  Jul 20 12:43:09.079: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Jul 20 12:43:09.079: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-4139 create -f -'
  Jul 20 12:43:09.143: INFO: stderr: ""
  Jul 20 12:43:09.143: INFO: stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 07/20/24 12:43:09.143
  Jul 20 12:43:09.143: INFO: Waiting for all frontend pods to be Running.
  Jul 20 12:43:14.194: INFO: Waiting for frontend to serve content.
  Jul 20 12:43:14.205: INFO: Trying to add a new entry to the guestbook.
  Jul 20 12:43:14.215: INFO: Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 07/20/24 12:43:14.222
  Jul 20 12:43:14.222: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-4139 delete --grace-period=0 --force -f -'
  Jul 20 12:43:14.276: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jul 20 12:43:14.276: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 07/20/24 12:43:14.276
  Jul 20 12:43:14.276: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-4139 delete --grace-period=0 --force -f -'
  Jul 20 12:43:14.339: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jul 20 12:43:14.339: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 07/20/24 12:43:14.339
  Jul 20 12:43:14.339: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-4139 delete --grace-period=0 --force -f -'
  Jul 20 12:43:14.392: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jul 20 12:43:14.392: INFO: stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 07/20/24 12:43:14.392
  Jul 20 12:43:14.392: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-4139 delete --grace-period=0 --force -f -'
  Jul 20 12:43:14.436: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jul 20 12:43:14.436: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 07/20/24 12:43:14.436
  Jul 20 12:43:14.437: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-4139 delete --grace-period=0 --force -f -'
  Jul 20 12:43:14.506: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jul 20 12:43:14.506: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 07/20/24 12:43:14.506
  Jul 20 12:43:14.506: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-4139 delete --grace-period=0 --force -f -'
  Jul 20 12:43:14.570: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jul 20 12:43:14.570: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  Jul 20 12:43:14.570: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4139" for this suite. @ 07/20/24 12:43:14.573
• [5.913 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:300
  STEP: Creating a kubernetes client @ 07/20/24 12:43:14.581
  Jul 20 12:43:14.581: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename var-expansion @ 07/20/24 12:43:14.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:43:14.601
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:43:14.604
  STEP: creating the pod @ 07/20/24 12:43:14.611
  STEP: waiting for pod running @ 07/20/24 12:43:14.619
  STEP: creating a file in subpath @ 07/20/24 12:43:16.63
  Jul 20 12:43:16.632: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-9954 PodName:var-expansion-59850e29-0c63-4ed6-a500-98fce6e81d52 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 20 12:43:16.632: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  Jul 20 12:43:16.633: INFO: ExecWithOptions: Clientset creation
  Jul 20 12:43:16.633: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-9954/pods/var-expansion-59850e29-0c63-4ed6-a500-98fce6e81d52/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 07/20/24 12:43:16.689
  Jul 20 12:43:16.692: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-9954 PodName:var-expansion-59850e29-0c63-4ed6-a500-98fce6e81d52 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 20 12:43:16.692: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  Jul 20 12:43:16.692: INFO: ExecWithOptions: Clientset creation
  Jul 20 12:43:16.693: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-9954/pods/var-expansion-59850e29-0c63-4ed6-a500-98fce6e81d52/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 07/20/24 12:43:16.732
  Jul 20 12:43:17.243: INFO: Successfully updated pod "var-expansion-59850e29-0c63-4ed6-a500-98fce6e81d52"
  STEP: waiting for annotated pod running @ 07/20/24 12:43:17.244
  STEP: deleting the pod gracefully @ 07/20/24 12:43:17.247
  Jul 20 12:43:17.247: INFO: Deleting pod "var-expansion-59850e29-0c63-4ed6-a500-98fce6e81d52" in namespace "var-expansion-9954"
  Jul 20 12:43:17.253: INFO: Wait up to 5m0s for pod "var-expansion-59850e29-0c63-4ed6-a500-98fce6e81d52" to be fully deleted
  Jul 20 12:43:49.323: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9954" for this suite. @ 07/20/24 12:43:49.326
• [34.751 seconds]
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:139
  STEP: Creating a kubernetes client @ 07/20/24 12:43:49.332
  Jul 20 12:43:49.332: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename configmap @ 07/20/24 12:43:49.332
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:43:49.349
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:43:49.351
  STEP: Creating configMap that has name configmap-test-emptyKey-a2dac739-9f69-47fa-8122-51adfd2e6ffb @ 07/20/24 12:43:49.352
  Jul 20 12:43:49.354: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1601" for this suite. @ 07/20/24 12:43:49.357
• [0.030 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 07/20/24 12:43:49.362
  Jul 20 12:43:49.362: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename projected @ 07/20/24 12:43:49.363
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:43:49.378
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:43:49.38
  STEP: Creating projection with secret that has name projected-secret-test-map-0fd9d6bb-e3b1-400f-af67-f9d55d157046 @ 07/20/24 12:43:49.382
  STEP: Creating a pod to test consume secrets @ 07/20/24 12:43:49.386
  STEP: Saw pod success @ 07/20/24 12:43:53.411
  Jul 20 12:43:53.414: INFO: Trying to get logs from node ip-172-31-79-190 pod pod-projected-secrets-a4404508-f59e-4a15-a92b-6904634c07e6 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 07/20/24 12:43:53.432
  Jul 20 12:43:53.445: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3654" for this suite. @ 07/20/24 12:43:53.447
• [4.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 07/20/24 12:43:53.453
  Jul 20 12:43:53.453: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename deployment @ 07/20/24 12:43:53.453
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:43:53.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:43:53.471
  STEP: creating a Deployment @ 07/20/24 12:43:53.476
  Jul 20 12:43:53.476: INFO: Creating simple deployment test-deployment-vcwjj
  Jul 20 12:43:53.487: INFO: deployment "test-deployment-vcwjj" doesn't have the required revision set
  STEP: Getting /status @ 07/20/24 12:43:55.498
  Jul 20 12:43:55.500: INFO: Deployment test-deployment-vcwjj has Conditions: [{Available True 2024-07-20 12:43:54 +0000 UTC 2024-07-20 12:43:54 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2024-07-20 12:43:54 +0000 UTC 2024-07-20 12:43:53 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-vcwjj-5d576bd769" has successfully progressed.}]
  STEP: updating Deployment Status @ 07/20/24 12:43:55.5
  Jul 20 12:43:55.507: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.July, 20, 12, 43, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 20, 12, 43, 54, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 20, 12, 43, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 20, 12, 43, 53, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-vcwjj-5d576bd769\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 07/20/24 12:43:55.507
  Jul 20 12:43:55.508: INFO: Observed &Deployment event: ADDED
  Jul 20 12:43:55.508: INFO: Observed Deployment test-deployment-vcwjj in namespace deployment-8610 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-20 12:43:53 +0000 UTC 2024-07-20 12:43:53 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-vcwjj-5d576bd769"}
  Jul 20 12:43:55.508: INFO: Observed &Deployment event: MODIFIED
  Jul 20 12:43:55.508: INFO: Observed Deployment test-deployment-vcwjj in namespace deployment-8610 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-20 12:43:53 +0000 UTC 2024-07-20 12:43:53 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-vcwjj-5d576bd769"}
  Jul 20 12:43:55.508: INFO: Observed Deployment test-deployment-vcwjj in namespace deployment-8610 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-07-20 12:43:53 +0000 UTC 2024-07-20 12:43:53 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Jul 20 12:43:55.509: INFO: Observed &Deployment event: MODIFIED
  Jul 20 12:43:55.509: INFO: Observed Deployment test-deployment-vcwjj in namespace deployment-8610 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-07-20 12:43:53 +0000 UTC 2024-07-20 12:43:53 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Jul 20 12:43:55.509: INFO: Observed Deployment test-deployment-vcwjj in namespace deployment-8610 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-20 12:43:53 +0000 UTC 2024-07-20 12:43:53 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-vcwjj-5d576bd769" is progressing.}
  Jul 20 12:43:55.509: INFO: Observed &Deployment event: MODIFIED
  Jul 20 12:43:55.509: INFO: Observed Deployment test-deployment-vcwjj in namespace deployment-8610 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-07-20 12:43:54 +0000 UTC 2024-07-20 12:43:54 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Jul 20 12:43:55.509: INFO: Observed Deployment test-deployment-vcwjj in namespace deployment-8610 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-20 12:43:54 +0000 UTC 2024-07-20 12:43:53 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-vcwjj-5d576bd769" has successfully progressed.}
  Jul 20 12:43:55.509: INFO: Observed &Deployment event: MODIFIED
  Jul 20 12:43:55.509: INFO: Observed Deployment test-deployment-vcwjj in namespace deployment-8610 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-07-20 12:43:54 +0000 UTC 2024-07-20 12:43:54 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Jul 20 12:43:55.509: INFO: Observed Deployment test-deployment-vcwjj in namespace deployment-8610 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-20 12:43:54 +0000 UTC 2024-07-20 12:43:53 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-vcwjj-5d576bd769" has successfully progressed.}
  Jul 20 12:43:55.509: INFO: Found Deployment test-deployment-vcwjj in namespace deployment-8610 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jul 20 12:43:55.509: INFO: Deployment test-deployment-vcwjj has an updated status
  STEP: patching the Statefulset Status @ 07/20/24 12:43:55.509
  Jul 20 12:43:55.509: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Jul 20 12:43:55.514: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 07/20/24 12:43:55.514
  Jul 20 12:43:55.515: INFO: Observed &Deployment event: ADDED
  Jul 20 12:43:55.515: INFO: Observed deployment test-deployment-vcwjj in namespace deployment-8610 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-20 12:43:53 +0000 UTC 2024-07-20 12:43:53 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-vcwjj-5d576bd769"}
  Jul 20 12:43:55.515: INFO: Observed &Deployment event: MODIFIED
  Jul 20 12:43:55.515: INFO: Observed deployment test-deployment-vcwjj in namespace deployment-8610 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-20 12:43:53 +0000 UTC 2024-07-20 12:43:53 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-vcwjj-5d576bd769"}
  Jul 20 12:43:55.515: INFO: Observed deployment test-deployment-vcwjj in namespace deployment-8610 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-07-20 12:43:53 +0000 UTC 2024-07-20 12:43:53 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Jul 20 12:43:55.515: INFO: Observed &Deployment event: MODIFIED
  Jul 20 12:43:55.515: INFO: Observed deployment test-deployment-vcwjj in namespace deployment-8610 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-07-20 12:43:53 +0000 UTC 2024-07-20 12:43:53 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Jul 20 12:43:55.515: INFO: Observed deployment test-deployment-vcwjj in namespace deployment-8610 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-20 12:43:53 +0000 UTC 2024-07-20 12:43:53 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-vcwjj-5d576bd769" is progressing.}
  Jul 20 12:43:55.515: INFO: Observed &Deployment event: MODIFIED
  Jul 20 12:43:55.515: INFO: Observed deployment test-deployment-vcwjj in namespace deployment-8610 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-07-20 12:43:54 +0000 UTC 2024-07-20 12:43:54 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Jul 20 12:43:55.515: INFO: Observed deployment test-deployment-vcwjj in namespace deployment-8610 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-20 12:43:54 +0000 UTC 2024-07-20 12:43:53 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-vcwjj-5d576bd769" has successfully progressed.}
  Jul 20 12:43:55.515: INFO: Observed &Deployment event: MODIFIED
  Jul 20 12:43:55.515: INFO: Observed deployment test-deployment-vcwjj in namespace deployment-8610 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-07-20 12:43:54 +0000 UTC 2024-07-20 12:43:54 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Jul 20 12:43:55.515: INFO: Observed deployment test-deployment-vcwjj in namespace deployment-8610 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-20 12:43:54 +0000 UTC 2024-07-20 12:43:53 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-vcwjj-5d576bd769" has successfully progressed.}
  Jul 20 12:43:55.516: INFO: Observed deployment test-deployment-vcwjj in namespace deployment-8610 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jul 20 12:43:55.516: INFO: Observed &Deployment event: MODIFIED
  Jul 20 12:43:55.516: INFO: Found deployment test-deployment-vcwjj in namespace deployment-8610 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  Jul 20 12:43:55.516: INFO: Deployment test-deployment-vcwjj has a patched status
  Jul 20 12:43:55.518: INFO: Deployment "test-deployment-vcwjj":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-vcwjj",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8610",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6b141946-06f2-47e6-8216-27e6562f50e5",
      ResourceVersion: (string) (len=5) "15019",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857076233,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857076233,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857076234,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=224) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |ions":{},"f:obse|
              00000090  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              000000a0  7b 7d 2c 22 66 3a 72 65  61 64 79 52 65 70 6c 69  |{},"f:readyRepli|
              000000b0  63 61 73 22 3a 7b 7d 2c  22 66 3a 72 65 70 6c 69  |cas":{},"f:repli|
              000000c0  63 61 73 22 3a 7b 7d 2c  22 66 3a 75 70 64 61 74  |cas":{},"f:updat|
              000000d0  65 64 52 65 70 6c 69 63  61 73 22 3a 7b 7d 7d 7d  |edReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857076235,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=1) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jul 20 12:43:55.521: INFO: New ReplicaSet "test-deployment-vcwjj-5d576bd769" of Deployment "test-deployment-vcwjj":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-vcwjj-5d576bd769",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8610",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c7688bfe-ff46-4924-862a-3df40b53327f",
      ResourceVersion: (string) (len=5) "15014",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857076233,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-vcwjj",
          UID: (types.UID) (len=36) "6b141946-06f2-47e6-8216-27e6562f50e5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857076233,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 36 62 31  |k:{\"uid\":\"6b1|
              00000120  34 31 39 34 36 2d 30 36  66 32 2d 34 37 65 36 2d  |41946-06f2-47e6-|
              00000130  38 32 31 36 2d 32 37 65  36 35 36 32 66 35 30 65  |8216-27e6562f50e|
              00000140  35 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |5\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857076234,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769",
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jul 20 12:43:55.524: INFO: Pod "test-deployment-vcwjj-5d576bd769-dkkfj" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-vcwjj-5d576bd769-dkkfj",
      GenerateName: (string) (len=33) "test-deployment-vcwjj-5d576bd769-",
      Namespace: (string) (len=15) "deployment-8610",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1e0e13ba-a441-4554-bf6e-b89f655a15c6",
      ResourceVersion: (string) (len=5) "15013",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857076233,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-vcwjj-5d576bd769",
          UID: (types.UID) (len=36) "c7688bfe-ff46-4924-862a-3df40b53327f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857076233,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 63 37 36 38 38 62 66  65 2d 66 66 34 36 2d 34  |"c7688bfe-ff46-4|
              000000a0  39 32 34 2d 38 36 32 61  2d 33 64 66 34 30 62 35  |924-862a-3df40b5|
              000000b0  33 33 32 37 66 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |3327f\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857076234,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  30 2e 32 30 33 5c 22 7d  |2.168.120.203\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qlttf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qlttf",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-79-190",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857076234,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857076233,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857076234,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857076234,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857076233,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.79.190",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.79.190"
        }
      },
      PodIP: (string) (len=15) "192.168.120.203",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.120.203"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857076233,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63857076234,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://4e648c4a61ee2541feb1de8fb815212fee73f43ce3227857ae93727a99de4d35",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 20 12:43:55.525: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8610" for this suite. @ 07/20/24 12:43:55.531
• [2.085 seconds]
------------------------------
SS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:170
  STEP: Creating a kubernetes client @ 07/20/24 12:43:55.538
  Jul 20 12:43:55.538: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename configmap @ 07/20/24 12:43:55.539
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:43:55.553
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:43:55.554
  STEP: creating a ConfigMap @ 07/20/24 12:43:55.556
  STEP: fetching the ConfigMap @ 07/20/24 12:43:55.563
  STEP: patching the ConfigMap @ 07/20/24 12:43:55.569
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 07/20/24 12:43:55.572
  STEP: deleting the ConfigMap by collection with a label selector @ 07/20/24 12:43:55.575
  STEP: listing all ConfigMaps in test namespace @ 07/20/24 12:43:55.582
  Jul 20 12:43:55.584: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1022" for this suite. @ 07/20/24 12:43:55.587
• [0.054 seconds]
------------------------------
SSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 07/20/24 12:43:55.592
  Jul 20 12:43:55.592: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename proxy @ 07/20/24 12:43:55.592
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:43:55.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:43:55.607
  STEP: starting an echo server on multiple ports @ 07/20/24 12:43:55.616
  STEP: creating replication controller proxy-service-2rx5g in namespace proxy-6471 @ 07/20/24 12:43:55.616
  I0720 12:43:55.623488      19 runners.go:197] Created replication controller with name: proxy-service-2rx5g, namespace: proxy-6471, replica count: 1
  I0720 12:43:56.673749      19 runners.go:197] proxy-service-2rx5g Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  I0720 12:43:57.674770      19 runners.go:197] proxy-service-2rx5g Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jul 20 12:43:57.678: INFO: setup took 2.068956993s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 07/20/24 12:43:57.678
  Jul 20 12:43:57.682: INFO: (0) /api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:1080/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:1080/proxy/rewriteme">... (200; 4.762668ms)
  Jul 20 12:43:57.683: INFO: (0) /api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:160/proxy/: foo (200; 5.819468ms)
  Jul 20 12:43:57.684: INFO: (0) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv/proxy/rewriteme">test</a> (200; 5.859607ms)
  Jul 20 12:43:57.684: INFO: (0) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:160/proxy/: foo (200; 5.788644ms)
  Jul 20 12:43:57.684: INFO: (0) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:1080/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:1080/proxy/rewriteme">test<... (200; 6.261882ms)
  Jul 20 12:43:57.684: INFO: (0) /api/v1/namespaces/proxy-6471/services/proxy-service-2rx5g:portname1/proxy/: foo (200; 6.568623ms)
  Jul 20 12:43:57.686: INFO: (0) /api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:162/proxy/: bar (200; 7.601214ms)
  Jul 20 12:43:57.687: INFO: (0) /api/v1/namespaces/proxy-6471/services/proxy-service-2rx5g:portname2/proxy/: bar (200; 9.085189ms)
  Jul 20 12:43:57.687: INFO: (0) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:162/proxy/: bar (200; 9.162352ms)
  Jul 20 12:43:57.687: INFO: (0) /api/v1/namespaces/proxy-6471/services/http:proxy-service-2rx5g:portname2/proxy/: bar (200; 9.034673ms)
  Jul 20 12:43:57.687: INFO: (0) /api/v1/namespaces/proxy-6471/services/http:proxy-service-2rx5g:portname1/proxy/: foo (200; 9.168196ms)
  Jul 20 12:43:57.688: INFO: (0) /api/v1/namespaces/proxy-6471/services/https:proxy-service-2rx5g:tlsportname2/proxy/: tls qux (200; 10.421228ms)
  Jul 20 12:43:57.688: INFO: (0) /api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:443/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:443/proxy/tlsrewritem... (200; 10.431155ms)
  Jul 20 12:43:57.688: INFO: (0) /api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:462/proxy/: tls qux (200; 10.392465ms)
  Jul 20 12:43:57.688: INFO: (0) /api/v1/namespaces/proxy-6471/services/https:proxy-service-2rx5g:tlsportname1/proxy/: tls baz (200; 10.462007ms)
  Jul 20 12:43:57.688: INFO: (0) /api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:460/proxy/: tls baz (200; 10.796874ms)
  Jul 20 12:43:57.692: INFO: (1) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv/proxy/rewriteme">test</a> (200; 2.954028ms)
  Jul 20 12:43:57.692: INFO: (1) /api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:460/proxy/: tls baz (200; 3.458289ms)
  Jul 20 12:43:57.692: INFO: (1) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:162/proxy/: bar (200; 3.258961ms)
  Jul 20 12:43:57.693: INFO: (1) /api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:1080/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:1080/proxy/rewriteme">... (200; 4.053421ms)
  Jul 20 12:43:57.693: INFO: (1) /api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:443/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:443/proxy/tlsrewritem... (200; 4.45606ms)
  Jul 20 12:43:57.694: INFO: (1) /api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:162/proxy/: bar (200; 4.980447ms)
  Jul 20 12:43:57.694: INFO: (1) /api/v1/namespaces/proxy-6471/services/http:proxy-service-2rx5g:portname2/proxy/: bar (200; 5.553598ms)
  Jul 20 12:43:57.695: INFO: (1) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:160/proxy/: foo (200; 5.758273ms)
  Jul 20 12:43:57.695: INFO: (1) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:1080/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:1080/proxy/rewriteme">test<... (200; 5.937484ms)
  Jul 20 12:43:57.695: INFO: (1) /api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:462/proxy/: tls qux (200; 5.890506ms)
  Jul 20 12:43:57.695: INFO: (1) /api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:160/proxy/: foo (200; 5.978119ms)
  Jul 20 12:43:57.695: INFO: (1) /api/v1/namespaces/proxy-6471/services/proxy-service-2rx5g:portname2/proxy/: bar (200; 5.910104ms)
  Jul 20 12:43:57.695: INFO: (1) /api/v1/namespaces/proxy-6471/services/http:proxy-service-2rx5g:portname1/proxy/: foo (200; 6.410444ms)
  Jul 20 12:43:57.695: INFO: (1) /api/v1/namespaces/proxy-6471/services/proxy-service-2rx5g:portname1/proxy/: foo (200; 6.755091ms)
  Jul 20 12:43:57.696: INFO: (1) /api/v1/namespaces/proxy-6471/services/https:proxy-service-2rx5g:tlsportname1/proxy/: tls baz (200; 7.187459ms)
  Jul 20 12:43:57.696: INFO: (1) /api/v1/namespaces/proxy-6471/services/https:proxy-service-2rx5g:tlsportname2/proxy/: tls qux (200; 7.206252ms)
  Jul 20 12:43:57.699: INFO: (2) /api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:460/proxy/: tls baz (200; 2.966706ms)
  Jul 20 12:43:57.699: INFO: (2) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv/proxy/rewriteme">test</a> (200; 3.247365ms)
  Jul 20 12:43:57.700: INFO: (2) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:1080/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:1080/proxy/rewriteme">test<... (200; 3.559117ms)
  Jul 20 12:43:57.700: INFO: (2) /api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:1080/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:1080/proxy/rewriteme">... (200; 4.093518ms)
  Jul 20 12:43:57.700: INFO: (2) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:160/proxy/: foo (200; 4.215854ms)
  Jul 20 12:43:57.701: INFO: (2) /api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:162/proxy/: bar (200; 5.030707ms)
  Jul 20 12:43:57.701: INFO: (2) /api/v1/namespaces/proxy-6471/services/proxy-service-2rx5g:portname1/proxy/: foo (200; 5.251494ms)
  Jul 20 12:43:57.702: INFO: (2) /api/v1/namespaces/proxy-6471/services/proxy-service-2rx5g:portname2/proxy/: bar (200; 5.815664ms)
  Jul 20 12:43:57.702: INFO: (2) /api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:462/proxy/: tls qux (200; 5.614653ms)
  Jul 20 12:43:57.702: INFO: (2) /api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:443/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:443/proxy/tlsrewritem... (200; 5.691496ms)
  Jul 20 12:43:57.703: INFO: (2) /api/v1/namespaces/proxy-6471/services/https:proxy-service-2rx5g:tlsportname1/proxy/: tls baz (200; 6.563941ms)
  Jul 20 12:43:57.703: INFO: (2) /api/v1/namespaces/proxy-6471/services/http:proxy-service-2rx5g:portname1/proxy/: foo (200; 6.70325ms)
  Jul 20 12:43:57.703: INFO: (2) /api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:160/proxy/: foo (200; 6.62564ms)
  Jul 20 12:43:57.703: INFO: (2) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:162/proxy/: bar (200; 6.688607ms)
  Jul 20 12:43:57.703: INFO: (2) /api/v1/namespaces/proxy-6471/services/https:proxy-service-2rx5g:tlsportname2/proxy/: tls qux (200; 6.83597ms)
  Jul 20 12:43:57.703: INFO: (2) /api/v1/namespaces/proxy-6471/services/http:proxy-service-2rx5g:portname2/proxy/: bar (200; 7.080047ms)
  Jul 20 12:43:57.706: INFO: (3) /api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:443/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:443/proxy/tlsrewritem... (200; 2.776106ms)
  Jul 20 12:43:57.707: INFO: (3) /api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:162/proxy/: bar (200; 3.388314ms)
  Jul 20 12:43:57.707: INFO: (3) /api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:460/proxy/: tls baz (200; 3.572277ms)
  Jul 20 12:43:57.707: INFO: (3) /api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:462/proxy/: tls qux (200; 3.778478ms)
  Jul 20 12:43:57.708: INFO: (3) /api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:1080/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:1080/proxy/rewriteme">... (200; 4.514666ms)
  Jul 20 12:43:57.708: INFO: (3) /api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:160/proxy/: foo (200; 4.661205ms)
  Jul 20 12:43:57.708: INFO: (3) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv/proxy/rewriteme">test</a> (200; 4.892024ms)
  Jul 20 12:43:57.709: INFO: (3) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:160/proxy/: foo (200; 5.135987ms)
  Jul 20 12:43:57.709: INFO: (3) /api/v1/namespaces/proxy-6471/services/https:proxy-service-2rx5g:tlsportname2/proxy/: tls qux (200; 5.791151ms)
  Jul 20 12:43:57.710: INFO: (3) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:162/proxy/: bar (200; 6.2189ms)
  Jul 20 12:43:57.710: INFO: (3) /api/v1/namespaces/proxy-6471/services/http:proxy-service-2rx5g:portname2/proxy/: bar (200; 6.443915ms)
  Jul 20 12:43:57.710: INFO: (3) /api/v1/namespaces/proxy-6471/services/http:proxy-service-2rx5g:portname1/proxy/: foo (200; 6.679235ms)
  Jul 20 12:43:57.710: INFO: (3) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:1080/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:1080/proxy/rewriteme">test<... (200; 6.485741ms)
  Jul 20 12:43:57.710: INFO: (3) /api/v1/namespaces/proxy-6471/services/https:proxy-service-2rx5g:tlsportname1/proxy/: tls baz (200; 6.75296ms)
  Jul 20 12:43:57.711: INFO: (3) /api/v1/namespaces/proxy-6471/services/proxy-service-2rx5g:portname2/proxy/: bar (200; 7.145164ms)
  Jul 20 12:43:57.711: INFO: (3) /api/v1/namespaces/proxy-6471/services/proxy-service-2rx5g:portname1/proxy/: foo (200; 7.370386ms)
  Jul 20 12:43:57.714: INFO: (4) /api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:462/proxy/: tls qux (200; 3.402436ms)
  Jul 20 12:43:57.715: INFO: (4) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:1080/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:1080/proxy/rewriteme">test<... (200; 3.516409ms)
  Jul 20 12:43:57.715: INFO: (4) /api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:1080/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:1080/proxy/rewriteme">... (200; 3.575371ms)
  Jul 20 12:43:57.716: INFO: (4) /api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:162/proxy/: bar (200; 4.575058ms)
  Jul 20 12:43:57.716: INFO: (4) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv/proxy/rewriteme">test</a> (200; 5.039462ms)
  Jul 20 12:43:57.716: INFO: (4) /api/v1/namespaces/proxy-6471/services/https:proxy-service-2rx5g:tlsportname2/proxy/: tls qux (200; 5.066756ms)
  Jul 20 12:43:57.716: INFO: (4) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:162/proxy/: bar (200; 5.04273ms)
  Jul 20 12:43:57.717: INFO: (4) /api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:160/proxy/: foo (200; 5.46881ms)
  Jul 20 12:43:57.717: INFO: (4) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:160/proxy/: foo (200; 5.30749ms)
  Jul 20 12:43:57.717: INFO: (4) /api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:460/proxy/: tls baz (200; 5.657326ms)
  Jul 20 12:43:57.717: INFO: (4) /api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:443/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:443/proxy/tlsrewritem... (200; 6.051123ms)
  Jul 20 12:43:57.718: INFO: (4) /api/v1/namespaces/proxy-6471/services/proxy-service-2rx5g:portname1/proxy/: foo (200; 6.655144ms)
  Jul 20 12:43:57.718: INFO: (4) /api/v1/namespaces/proxy-6471/services/http:proxy-service-2rx5g:portname1/proxy/: foo (200; 6.624854ms)
  Jul 20 12:43:57.718: INFO: (4) /api/v1/namespaces/proxy-6471/services/https:proxy-service-2rx5g:tlsportname1/proxy/: tls baz (200; 6.621041ms)
  Jul 20 12:43:57.718: INFO: (4) /api/v1/namespaces/proxy-6471/services/http:proxy-service-2rx5g:portname2/proxy/: bar (200; 6.707612ms)
  Jul 20 12:43:57.718: INFO: (4) /api/v1/namespaces/proxy-6471/services/proxy-service-2rx5g:portname2/proxy/: bar (200; 7.219482ms)
  Jul 20 12:43:57.721: INFO: (5) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:1080/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:1080/proxy/rewriteme">test<... (200; 2.496368ms)
  Jul 20 12:43:57.722: INFO: (5) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:160/proxy/: foo (200; 3.100179ms)
  Jul 20 12:43:57.723: INFO: (5) /api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:443/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:443/proxy/tlsrewritem... (200; 4.079317ms)
  Jul 20 12:43:57.723: INFO: (5) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv/proxy/rewriteme">test</a> (200; 4.401109ms)
  Jul 20 12:43:57.724: INFO: (5) /api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:462/proxy/: tls qux (200; 5.295981ms)
  Jul 20 12:43:57.724: INFO: (5) /api/v1/namespaces/proxy-6471/services/https:proxy-service-2rx5g:tlsportname1/proxy/: tls baz (200; 5.543297ms)
  Jul 20 12:43:57.724: INFO: (5) /api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:1080/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:1080/proxy/rewriteme">... (200; 5.647806ms)
  Jul 20 12:43:57.724: INFO: (5) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:162/proxy/: bar (200; 5.66647ms)
  Jul 20 12:43:57.724: INFO: (5) /api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:162/proxy/: bar (200; 5.826475ms)
  Jul 20 12:43:57.725: INFO: (5) /api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:460/proxy/: tls baz (200; 5.880854ms)
  Jul 20 12:43:57.725: INFO: (5) /api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:160/proxy/: foo (200; 6.008885ms)
  Jul 20 12:43:57.725: INFO: (5) /api/v1/namespaces/proxy-6471/services/http:proxy-service-2rx5g:portname2/proxy/: bar (200; 6.18294ms)
  Jul 20 12:43:57.725: INFO: (5) /api/v1/namespaces/proxy-6471/services/https:proxy-service-2rx5g:tlsportname2/proxy/: tls qux (200; 5.988803ms)
  Jul 20 12:43:57.725: INFO: (5) /api/v1/namespaces/proxy-6471/services/proxy-service-2rx5g:portname2/proxy/: bar (200; 6.112286ms)
  Jul 20 12:43:57.725: INFO: (5) /api/v1/namespaces/proxy-6471/services/proxy-service-2rx5g:portname1/proxy/: foo (200; 6.415961ms)
  Jul 20 12:43:57.726: INFO: (5) /api/v1/namespaces/proxy-6471/services/http:proxy-service-2rx5g:portname1/proxy/: foo (200; 7.048056ms)
  Jul 20 12:43:57.729: INFO: (6) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv/proxy/rewriteme">test</a> (200; 2.803026ms)
  Jul 20 12:43:57.730: INFO: (6) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:1080/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:1080/proxy/rewriteme">test<... (200; 3.602921ms)
  Jul 20 12:43:57.730: INFO: (6) /api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:1080/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:1080/proxy/rewriteme">... (200; 4.401021ms)
  Jul 20 12:43:57.731: INFO: (6) /api/v1/namespaces/proxy-6471/services/https:proxy-service-2rx5g:tlsportname1/proxy/: tls baz (200; 4.61477ms)
  Jul 20 12:43:57.731: INFO: (6) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:160/proxy/: foo (200; 4.668148ms)
  Jul 20 12:43:57.731: INFO: (6) /api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:443/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:443/proxy/tlsrewritem... (200; 5.118098ms)
  Jul 20 12:43:57.732: INFO: (6) /api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:160/proxy/: foo (200; 5.619989ms)
  Jul 20 12:43:57.732: INFO: (6) /api/v1/namespaces/proxy-6471/services/http:proxy-service-2rx5g:portname1/proxy/: foo (200; 5.84363ms)
  Jul 20 12:43:57.732: INFO: (6) /api/v1/namespaces/proxy-6471/services/http:proxy-service-2rx5g:portname2/proxy/: bar (200; 6.200081ms)
  Jul 20 12:43:57.732: INFO: (6) /api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:462/proxy/: tls qux (200; 6.067186ms)
  Jul 20 12:43:57.732: INFO: (6) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:162/proxy/: bar (200; 6.259592ms)
  Jul 20 12:43:57.733: INFO: (6) /api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:162/proxy/: bar (200; 6.489505ms)
  Jul 20 12:43:57.733: INFO: (6) /api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:460/proxy/: tls baz (200; 6.531903ms)
  Jul 20 12:43:57.733: INFO: (6) /api/v1/namespaces/proxy-6471/services/proxy-service-2rx5g:portname1/proxy/: foo (200; 7.018226ms)
  Jul 20 12:43:57.733: INFO: (6) /api/v1/namespaces/proxy-6471/services/https:proxy-service-2rx5g:tlsportname2/proxy/: tls qux (200; 6.987742ms)
  Jul 20 12:43:57.734: INFO: (6) /api/v1/namespaces/proxy-6471/services/proxy-service-2rx5g:portname2/proxy/: bar (200; 7.383597ms)
  Jul 20 12:43:57.736: INFO: (7) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:162/proxy/: bar (200; 2.427855ms)
  Jul 20 12:43:57.737: INFO: (7) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:160/proxy/: foo (200; 3.002848ms)
  Jul 20 12:43:57.737: INFO: (7) /api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:162/proxy/: bar (200; 3.616478ms)
  Jul 20 12:43:57.739: INFO: (7) /api/v1/namespaces/proxy-6471/services/proxy-service-2rx5g:portname2/proxy/: bar (200; 4.763165ms)
  Jul 20 12:43:57.739: INFO: (7) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:1080/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:1080/proxy/rewriteme">test<... (200; 4.768526ms)
  Jul 20 12:43:57.739: INFO: (7) /api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:460/proxy/: tls baz (200; 4.843806ms)
  Jul 20 12:43:57.739: INFO: (7) /api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:443/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:443/proxy/tlsrewritem... (200; 5.078241ms)
  Jul 20 12:43:57.739: INFO: (7) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv/proxy/rewriteme">test</a> (200; 5.10538ms)
  Jul 20 12:43:57.740: INFO: (7) /api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:462/proxy/: tls qux (200; 5.678495ms)
  Jul 20 12:43:57.740: INFO: (7) /api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:1080/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:1080/proxy/rewriteme">... (200; 5.696722ms)
  Jul 20 12:43:57.740: INFO: (7) /api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:160/proxy/: foo (200; 5.713093ms)
  Jul 20 12:43:57.740: INFO: (7) /api/v1/namespaces/proxy-6471/services/proxy-service-2rx5g:portname1/proxy/: foo (200; 6.142002ms)
  Jul 20 12:43:57.741: INFO: (7) /api/v1/namespaces/proxy-6471/services/https:proxy-service-2rx5g:tlsportname1/proxy/: tls baz (200; 6.559314ms)
  Jul 20 12:43:57.741: INFO: (7) /api/v1/namespaces/proxy-6471/services/http:proxy-service-2rx5g:portname2/proxy/: bar (200; 6.788652ms)
  Jul 20 12:43:57.743: INFO: (7) /api/v1/namespaces/proxy-6471/services/http:proxy-service-2rx5g:portname1/proxy/: foo (200; 9.578791ms)
  Jul 20 12:43:57.744: INFO: (7) /api/v1/namespaces/proxy-6471/services/https:proxy-service-2rx5g:tlsportname2/proxy/: tls qux (200; 10.074422ms)
  Jul 20 12:43:57.747: INFO: (8) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv/proxy/rewriteme">test</a> (200; 2.924584ms)
  Jul 20 12:43:57.748: INFO: (8) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:1080/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:1080/proxy/rewriteme">test<... (200; 4.203901ms)
  Jul 20 12:43:57.748: INFO: (8) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:160/proxy/: foo (200; 4.283272ms)
  Jul 20 12:43:57.749: INFO: (8) /api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:1080/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:1080/proxy/rewriteme">... (200; 4.726402ms)
  Jul 20 12:43:57.749: INFO: (8) /api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:162/proxy/: bar (200; 4.705429ms)
  Jul 20 12:43:57.749: INFO: (8) /api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:462/proxy/: tls qux (200; 5.080651ms)
  Jul 20 12:43:57.750: INFO: (8) /api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:460/proxy/: tls baz (200; 5.575663ms)
  Jul 20 12:43:57.750: INFO: (8) /api/v1/namespaces/proxy-6471/services/https:proxy-service-2rx5g:tlsportname2/proxy/: tls qux (200; 6.273357ms)
  Jul 20 12:43:57.751: INFO: (8) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:162/proxy/: bar (200; 6.205298ms)
  Jul 20 12:43:57.751: INFO: (8) /api/v1/namespaces/proxy-6471/services/proxy-service-2rx5g:portname1/proxy/: foo (200; 6.49959ms)
  Jul 20 12:43:57.751: INFO: (8) /api/v1/namespaces/proxy-6471/services/https:proxy-service-2rx5g:tlsportname1/proxy/: tls baz (200; 7.088772ms)
  Jul 20 12:43:57.751: INFO: (8) /api/v1/namespaces/proxy-6471/services/http:proxy-service-2rx5g:portname2/proxy/: bar (200; 7.065935ms)
  Jul 20 12:43:57.751: INFO: (8) /api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:160/proxy/: foo (200; 7.237351ms)
  Jul 20 12:43:57.751: INFO: (8) /api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:443/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:443/proxy/tlsrewritem... (200; 7.21122ms)
  Jul 20 12:43:57.752: INFO: (8) /api/v1/namespaces/proxy-6471/services/proxy-service-2rx5g:portname2/proxy/: bar (200; 7.584193ms)
  Jul 20 12:43:57.752: INFO: (8) /api/v1/namespaces/proxy-6471/services/http:proxy-service-2rx5g:portname1/proxy/: foo (200; 7.739697ms)
  Jul 20 12:43:57.756: INFO: (9) /api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:160/proxy/: foo (200; 3.980894ms)
  Jul 20 12:43:57.756: INFO: (9) /api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:162/proxy/: bar (200; 3.965073ms)
  Jul 20 12:43:57.756: INFO: (9) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:160/proxy/: foo (200; 4.273749ms)
  Jul 20 12:43:57.758: INFO: (9) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv/proxy/rewriteme">test</a> (200; 5.177175ms)
  Jul 20 12:43:57.758: INFO: (9) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:1080/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:1080/proxy/rewriteme">test<... (200; 5.320653ms)
  Jul 20 12:43:57.758: INFO: (9) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:162/proxy/: bar (200; 5.804361ms)
  Jul 20 12:43:57.758: INFO: (9) /api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:443/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:443/proxy/tlsrewritem... (200; 6.013752ms)
  Jul 20 12:43:57.758: INFO: (9) /api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:460/proxy/: tls baz (200; 6.146738ms)
  Jul 20 12:43:57.758: INFO: (9) /api/v1/namespaces/proxy-6471/services/https:proxy-service-2rx5g:tlsportname2/proxy/: tls qux (200; 6.207089ms)
  Jul 20 12:43:57.759: INFO: (9) /api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:462/proxy/: tls qux (200; 6.40459ms)
  Jul 20 12:43:57.759: INFO: (9) /api/v1/namespaces/proxy-6471/services/proxy-service-2rx5g:portname1/proxy/: foo (200; 6.61596ms)
  Jul 20 12:43:57.759: INFO: (9) /api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:1080/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:1080/proxy/rewriteme">... (200; 6.767571ms)
  Jul 20 12:43:57.759: INFO: (9) /api/v1/namespaces/proxy-6471/services/http:proxy-service-2rx5g:portname1/proxy/: foo (200; 6.825162ms)
  Jul 20 12:43:57.759: INFO: (9) /api/v1/namespaces/proxy-6471/services/https:proxy-service-2rx5g:tlsportname1/proxy/: tls baz (200; 6.863025ms)
  Jul 20 12:43:57.759: INFO: (9) /api/v1/namespaces/proxy-6471/services/http:proxy-service-2rx5g:portname2/proxy/: bar (200; 6.98114ms)
  Jul 20 12:43:57.760: INFO: (9) /api/v1/namespaces/proxy-6471/services/proxy-service-2rx5g:portname2/proxy/: bar (200; 7.35679ms)
  Jul 20 12:43:57.763: INFO: (10) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv/proxy/rewriteme">test</a> (200; 3.321809ms)
  Jul 20 12:43:57.763: INFO: (10) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:162/proxy/: bar (200; 3.510163ms)
  Jul 20 12:43:57.764: INFO: (10) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:1080/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:1080/proxy/rewriteme">test<... (200; 3.662836ms)
  Jul 20 12:43:57.765: INFO: (10) /api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:460/proxy/: tls baz (200; 4.731247ms)
  Jul 20 12:43:57.765: INFO: (10) /api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:160/proxy/: foo (200; 5.140324ms)
  Jul 20 12:43:57.765: INFO: (10) /api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:162/proxy/: bar (200; 5.337771ms)
  Jul 20 12:43:57.765: INFO: (10) /api/v1/namespaces/proxy-6471/services/http:proxy-service-2rx5g:portname1/proxy/: foo (200; 5.464527ms)
  Jul 20 12:43:57.766: INFO: (10) /api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:443/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:443/proxy/tlsrewritem... (200; 5.634962ms)
  Jul 20 12:43:57.766: INFO: (10) /api/v1/namespaces/proxy-6471/services/https:proxy-service-2rx5g:tlsportname2/proxy/: tls qux (200; 5.985051ms)
  Jul 20 12:43:57.766: INFO: (10) /api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:1080/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:1080/proxy/rewriteme">... (200; 6.09778ms)
  Jul 20 12:43:57.766: INFO: (10) /api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:462/proxy/: tls qux (200; 6.051225ms)
  Jul 20 12:43:57.766: INFO: (10) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:160/proxy/: foo (200; 6.163254ms)
  Jul 20 12:43:57.766: INFO: (10) /api/v1/namespaces/proxy-6471/services/https:proxy-service-2rx5g:tlsportname1/proxy/: tls baz (200; 6.441424ms)
  Jul 20 12:43:57.767: INFO: (10) /api/v1/namespaces/proxy-6471/services/proxy-service-2rx5g:portname1/proxy/: foo (200; 6.771786ms)
  Jul 20 12:43:57.767: INFO: (10) /api/v1/namespaces/proxy-6471/services/http:proxy-service-2rx5g:portname2/proxy/: bar (200; 6.679483ms)
  Jul 20 12:43:57.767: INFO: (10) /api/v1/namespaces/proxy-6471/services/proxy-service-2rx5g:portname2/proxy/: bar (200; 6.948879ms)
  Jul 20 12:43:57.770: INFO: (11) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv/proxy/rewriteme">test</a> (200; 2.9218ms)
  Jul 20 12:43:57.770: INFO: (11) /api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:1080/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:1080/proxy/rewriteme">... (200; 2.994585ms)
  Jul 20 12:43:57.771: INFO: (11) /api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:462/proxy/: tls qux (200; 3.800364ms)
  Jul 20 12:43:57.771: INFO: (11) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:1080/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:1080/proxy/rewriteme">test<... (200; 4.100729ms)
  Jul 20 12:43:57.771: INFO: (11) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:162/proxy/: bar (200; 3.866439ms)
  Jul 20 12:43:57.772: INFO: (11) /api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:162/proxy/: bar (200; 4.547173ms)
  Jul 20 12:43:57.772: INFO: (11) /api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:160/proxy/: foo (200; 4.452924ms)
  Jul 20 12:43:57.773: INFO: (11) /api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:443/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:443/proxy/tlsrewritem... (200; 5.134152ms)
  Jul 20 12:43:57.773: INFO: (11) /api/v1/namespaces/proxy-6471/services/proxy-service-2rx5g:portname1/proxy/: foo (200; 5.659347ms)
  Jul 20 12:43:57.773: INFO: (11) /api/v1/namespaces/proxy-6471/services/https:proxy-service-2rx5g:tlsportname2/proxy/: tls qux (200; 6.276972ms)
  Jul 20 12:43:57.774: INFO: (11) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:160/proxy/: foo (200; 6.466284ms)
  Jul 20 12:43:57.774: INFO: (11) /api/v1/namespaces/proxy-6471/services/http:proxy-service-2rx5g:portname1/proxy/: foo (200; 6.359533ms)
  Jul 20 12:43:57.774: INFO: (11) /api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:460/proxy/: tls baz (200; 6.474779ms)
  Jul 20 12:43:57.774: INFO: (11) /api/v1/namespaces/proxy-6471/services/http:proxy-service-2rx5g:portname2/proxy/: bar (200; 6.832417ms)
  Jul 20 12:43:57.774: INFO: (11) /api/v1/namespaces/proxy-6471/services/proxy-service-2rx5g:portname2/proxy/: bar (200; 6.643778ms)
  Jul 20 12:43:57.774: INFO: (11) /api/v1/namespaces/proxy-6471/services/https:proxy-service-2rx5g:tlsportname1/proxy/: tls baz (200; 6.97346ms)
  Jul 20 12:43:57.778: INFO: (12) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:1080/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:1080/proxy/rewriteme">test<... (200; 3.762438ms)
  Jul 20 12:43:57.778: INFO: (12) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv/proxy/rewriteme">test</a> (200; 3.821283ms)
  Jul 20 12:43:57.779: INFO: (12) /api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:160/proxy/: foo (200; 4.293376ms)
  Jul 20 12:43:57.779: INFO: (12) /api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:462/proxy/: tls qux (200; 4.86635ms)
  Jul 20 12:43:57.780: INFO: (12) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:162/proxy/: bar (200; 5.522872ms)
  Jul 20 12:43:57.780: INFO: (12) /api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:443/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:443/proxy/tlsrewritem... (200; 5.635191ms)
  Jul 20 12:43:57.780: INFO: (12) /api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:162/proxy/: bar (200; 5.735208ms)
  Jul 20 12:43:57.781: INFO: (12) /api/v1/namespaces/proxy-6471/services/proxy-service-2rx5g:portname2/proxy/: bar (200; 7.063479ms)
  Jul 20 12:43:57.782: INFO: (12) /api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:1080/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:1080/proxy/rewriteme">... (200; 6.95399ms)
  Jul 20 12:43:57.782: INFO: (12) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:160/proxy/: foo (200; 7.203604ms)
  Jul 20 12:43:57.782: INFO: (12) /api/v1/namespaces/proxy-6471/services/http:proxy-service-2rx5g:portname2/proxy/: bar (200; 7.276139ms)
  Jul 20 12:43:57.782: INFO: (12) /api/v1/namespaces/proxy-6471/services/proxy-service-2rx5g:portname1/proxy/: foo (200; 7.361015ms)
  Jul 20 12:43:57.782: INFO: (12) /api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:460/proxy/: tls baz (200; 7.13656ms)
  Jul 20 12:43:57.782: INFO: (12) /api/v1/namespaces/proxy-6471/services/http:proxy-service-2rx5g:portname1/proxy/: foo (200; 7.41467ms)
  Jul 20 12:43:57.782: INFO: (12) /api/v1/namespaces/proxy-6471/services/https:proxy-service-2rx5g:tlsportname1/proxy/: tls baz (200; 7.865175ms)
  Jul 20 12:43:57.783: INFO: (12) /api/v1/namespaces/proxy-6471/services/https:proxy-service-2rx5g:tlsportname2/proxy/: tls qux (200; 8.48208ms)
  Jul 20 12:43:57.786: INFO: (13) /api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:460/proxy/: tls baz (200; 3.04987ms)
  Jul 20 12:43:57.787: INFO: (13) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv/proxy/rewriteme">test</a> (200; 3.438148ms)
  Jul 20 12:43:57.787: INFO: (13) /api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:160/proxy/: foo (200; 3.591802ms)
  Jul 20 12:43:57.788: INFO: (13) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:1080/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:1080/proxy/rewriteme">test<... (200; 4.450278ms)
  Jul 20 12:43:57.788: INFO: (13) /api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:462/proxy/: tls qux (200; 4.695335ms)
  Jul 20 12:43:57.788: INFO: (13) /api/v1/namespaces/proxy-6471/services/https:proxy-service-2rx5g:tlsportname1/proxy/: tls baz (200; 4.927988ms)
  Jul 20 12:43:57.789: INFO: (13) /api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:162/proxy/: bar (200; 5.244934ms)
  Jul 20 12:43:57.789: INFO: (13) /api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:1080/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:1080/proxy/rewriteme">... (200; 5.600648ms)
  Jul 20 12:43:57.789: INFO: (13) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:162/proxy/: bar (200; 6.108022ms)
  Jul 20 12:43:57.789: INFO: (13) /api/v1/namespaces/proxy-6471/services/http:proxy-service-2rx5g:portname1/proxy/: foo (200; 6.293927ms)
  Jul 20 12:43:57.789: INFO: (13) /api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:443/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:443/proxy/tlsrewritem... (200; 6.382288ms)
  Jul 20 12:43:57.790: INFO: (13) /api/v1/namespaces/proxy-6471/services/https:proxy-service-2rx5g:tlsportname2/proxy/: tls qux (200; 6.522907ms)
  Jul 20 12:43:57.790: INFO: (13) /api/v1/namespaces/proxy-6471/services/proxy-service-2rx5g:portname2/proxy/: bar (200; 6.626489ms)
  Jul 20 12:43:57.790: INFO: (13) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:160/proxy/: foo (200; 6.64336ms)
  Jul 20 12:43:57.790: INFO: (13) /api/v1/namespaces/proxy-6471/services/http:proxy-service-2rx5g:portname2/proxy/: bar (200; 6.827336ms)
  Jul 20 12:43:57.790: INFO: (13) /api/v1/namespaces/proxy-6471/services/proxy-service-2rx5g:portname1/proxy/: foo (200; 7.172047ms)
  Jul 20 12:43:57.794: INFO: (14) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:162/proxy/: bar (200; 3.126408ms)
  Jul 20 12:43:57.794: INFO: (14) /api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:462/proxy/: tls qux (200; 3.652833ms)
  Jul 20 12:43:57.795: INFO: (14) /api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:1080/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:1080/proxy/rewriteme">... (200; 3.82287ms)
  Jul 20 12:43:57.795: INFO: (14) /api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:162/proxy/: bar (200; 4.242501ms)
  Jul 20 12:43:57.795: INFO: (14) /api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:443/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:443/proxy/tlsrewritem... (200; 4.520877ms)
  Jul 20 12:43:57.796: INFO: (14) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:1080/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:1080/proxy/rewriteme">test<... (200; 5.034755ms)
  Jul 20 12:43:57.796: INFO: (14) /api/v1/namespaces/proxy-6471/services/http:proxy-service-2rx5g:portname1/proxy/: foo (200; 5.465154ms)
  Jul 20 12:43:57.796: INFO: (14) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv/proxy/rewriteme">test</a> (200; 5.75722ms)
  Jul 20 12:43:57.797: INFO: (14) /api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:460/proxy/: tls baz (200; 6.257219ms)
  Jul 20 12:43:57.797: INFO: (14) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:160/proxy/: foo (200; 6.099626ms)
  Jul 20 12:43:57.797: INFO: (14) /api/v1/namespaces/proxy-6471/services/proxy-service-2rx5g:portname2/proxy/: bar (200; 6.262275ms)
  Jul 20 12:43:57.797: INFO: (14) /api/v1/namespaces/proxy-6471/services/http:proxy-service-2rx5g:portname2/proxy/: bar (200; 6.727848ms)
  Jul 20 12:43:57.798: INFO: (14) /api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:160/proxy/: foo (200; 6.691364ms)
  Jul 20 12:43:57.798: INFO: (14) /api/v1/namespaces/proxy-6471/services/https:proxy-service-2rx5g:tlsportname2/proxy/: tls qux (200; 6.909626ms)
  Jul 20 12:43:57.798: INFO: (14) /api/v1/namespaces/proxy-6471/services/https:proxy-service-2rx5g:tlsportname1/proxy/: tls baz (200; 7.05389ms)
  Jul 20 12:43:57.798: INFO: (14) /api/v1/namespaces/proxy-6471/services/proxy-service-2rx5g:portname1/proxy/: foo (200; 7.462893ms)
  Jul 20 12:43:57.801: INFO: (15) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:1080/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:1080/proxy/rewriteme">test<... (200; 2.94925ms)
  Jul 20 12:43:57.802: INFO: (15) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv/proxy/rewriteme">test</a> (200; 3.25428ms)
  Jul 20 12:43:57.803: INFO: (15) /api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:460/proxy/: tls baz (200; 3.96271ms)
  Jul 20 12:43:57.804: INFO: (15) /api/v1/namespaces/proxy-6471/services/proxy-service-2rx5g:portname2/proxy/: bar (200; 5.47042ms)
  Jul 20 12:43:57.805: INFO: (15) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:162/proxy/: bar (200; 5.920056ms)
  Jul 20 12:43:57.805: INFO: (15) /api/v1/namespaces/proxy-6471/services/https:proxy-service-2rx5g:tlsportname1/proxy/: tls baz (200; 6.465948ms)
  Jul 20 12:43:57.805: INFO: (15) /api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:443/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:443/proxy/tlsrewritem... (200; 6.560689ms)
  Jul 20 12:43:57.805: INFO: (15) /api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:160/proxy/: foo (200; 6.462504ms)
  Jul 20 12:43:57.805: INFO: (15) /api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:462/proxy/: tls qux (200; 6.846093ms)
  Jul 20 12:43:57.805: INFO: (15) /api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:162/proxy/: bar (200; 6.580822ms)
  Jul 20 12:43:57.805: INFO: (15) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:160/proxy/: foo (200; 6.554403ms)
  Jul 20 12:43:57.805: INFO: (15) /api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:1080/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:1080/proxy/rewriteme">... (200; 6.544705ms)
  Jul 20 12:43:57.806: INFO: (15) /api/v1/namespaces/proxy-6471/services/http:proxy-service-2rx5g:portname1/proxy/: foo (200; 7.254081ms)
  Jul 20 12:43:57.806: INFO: (15) /api/v1/namespaces/proxy-6471/services/http:proxy-service-2rx5g:portname2/proxy/: bar (200; 7.126449ms)
  Jul 20 12:43:57.806: INFO: (15) /api/v1/namespaces/proxy-6471/services/https:proxy-service-2rx5g:tlsportname2/proxy/: tls qux (200; 7.095127ms)
  Jul 20 12:43:57.806: INFO: (15) /api/v1/namespaces/proxy-6471/services/proxy-service-2rx5g:portname1/proxy/: foo (200; 7.590788ms)
  Jul 20 12:43:57.809: INFO: (16) /api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:162/proxy/: bar (200; 2.821259ms)
  Jul 20 12:43:57.809: INFO: (16) /api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:460/proxy/: tls baz (200; 3.194476ms)
  Jul 20 12:43:57.810: INFO: (16) /api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:443/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:443/proxy/tlsrewritem... (200; 3.345262ms)
  Jul 20 12:43:57.810: INFO: (16) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:160/proxy/: foo (200; 3.816393ms)
  Jul 20 12:43:57.811: INFO: (16) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:1080/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:1080/proxy/rewriteme">test<... (200; 4.818362ms)
  Jul 20 12:43:57.811: INFO: (16) /api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:160/proxy/: foo (200; 4.893892ms)
  Jul 20 12:43:57.812: INFO: (16) /api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:462/proxy/: tls qux (200; 5.191312ms)
  Jul 20 12:43:57.812: INFO: (16) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:162/proxy/: bar (200; 5.217601ms)
  Jul 20 12:43:57.812: INFO: (16) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv/proxy/rewriteme">test</a> (200; 6.133993ms)
  Jul 20 12:43:57.812: INFO: (16) /api/v1/namespaces/proxy-6471/services/proxy-service-2rx5g:portname2/proxy/: bar (200; 6.195012ms)
  Jul 20 12:43:57.813: INFO: (16) /api/v1/namespaces/proxy-6471/services/proxy-service-2rx5g:portname1/proxy/: foo (200; 6.512185ms)
  Jul 20 12:43:57.813: INFO: (16) /api/v1/namespaces/proxy-6471/services/http:proxy-service-2rx5g:portname1/proxy/: foo (200; 6.973399ms)
  Jul 20 12:43:57.813: INFO: (16) /api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:1080/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:1080/proxy/rewriteme">... (200; 6.874378ms)
  Jul 20 12:43:57.813: INFO: (16) /api/v1/namespaces/proxy-6471/services/http:proxy-service-2rx5g:portname2/proxy/: bar (200; 7.090164ms)
  Jul 20 12:43:57.814: INFO: (16) /api/v1/namespaces/proxy-6471/services/https:proxy-service-2rx5g:tlsportname2/proxy/: tls qux (200; 7.201436ms)
  Jul 20 12:43:57.814: INFO: (16) /api/v1/namespaces/proxy-6471/services/https:proxy-service-2rx5g:tlsportname1/proxy/: tls baz (200; 7.289634ms)
  Jul 20 12:43:57.817: INFO: (17) /api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:462/proxy/: tls qux (200; 3.234334ms)
  Jul 20 12:43:57.817: INFO: (17) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:1080/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:1080/proxy/rewriteme">test<... (200; 3.43352ms)
  Jul 20 12:43:57.818: INFO: (17) /api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:460/proxy/: tls baz (200; 3.856866ms)
  Jul 20 12:43:57.818: INFO: (17) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv/proxy/rewriteme">test</a> (200; 4.507901ms)
  Jul 20 12:43:57.821: INFO: (17) /api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:160/proxy/: foo (200; 6.796628ms)
  Jul 20 12:43:57.821: INFO: (17) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:162/proxy/: bar (200; 6.975741ms)
  Jul 20 12:43:57.821: INFO: (17) /api/v1/namespaces/proxy-6471/services/http:proxy-service-2rx5g:portname2/proxy/: bar (200; 7.019109ms)
  Jul 20 12:43:57.821: INFO: (17) /api/v1/namespaces/proxy-6471/services/proxy-service-2rx5g:portname1/proxy/: foo (200; 7.31476ms)
  Jul 20 12:43:57.822: INFO: (17) /api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:443/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:443/proxy/tlsrewritem... (200; 7.809629ms)
  Jul 20 12:43:57.822: INFO: (17) /api/v1/namespaces/proxy-6471/services/https:proxy-service-2rx5g:tlsportname2/proxy/: tls qux (200; 8.065944ms)
  Jul 20 12:43:57.822: INFO: (17) /api/v1/namespaces/proxy-6471/services/proxy-service-2rx5g:portname2/proxy/: bar (200; 8.250338ms)
  Jul 20 12:43:57.822: INFO: (17) /api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:1080/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:1080/proxy/rewriteme">... (200; 8.188539ms)
  Jul 20 12:43:57.822: INFO: (17) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:160/proxy/: foo (200; 8.24392ms)
  Jul 20 12:43:57.822: INFO: (17) /api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:162/proxy/: bar (200; 8.28529ms)
  Jul 20 12:43:57.822: INFO: (17) /api/v1/namespaces/proxy-6471/services/https:proxy-service-2rx5g:tlsportname1/proxy/: tls baz (200; 8.340619ms)
  Jul 20 12:43:57.822: INFO: (17) /api/v1/namespaces/proxy-6471/services/http:proxy-service-2rx5g:portname1/proxy/: foo (200; 8.459366ms)
  Jul 20 12:43:57.826: INFO: (18) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:162/proxy/: bar (200; 3.506888ms)
  Jul 20 12:43:57.826: INFO: (18) /api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:160/proxy/: foo (200; 3.810594ms)
  Jul 20 12:43:57.827: INFO: (18) /api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:1080/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:1080/proxy/rewriteme">... (200; 4.005706ms)
  Jul 20 12:43:57.827: INFO: (18) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:1080/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:1080/proxy/rewriteme">test<... (200; 4.120137ms)
  Jul 20 12:43:57.827: INFO: (18) /api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:162/proxy/: bar (200; 4.205885ms)
  Jul 20 12:43:57.827: INFO: (18) /api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:462/proxy/: tls qux (200; 4.513347ms)
  Jul 20 12:43:57.828: INFO: (18) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv/proxy/rewriteme">test</a> (200; 4.7648ms)
  Jul 20 12:43:57.828: INFO: (18) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:160/proxy/: foo (200; 5.418609ms)
  Jul 20 12:43:57.828: INFO: (18) /api/v1/namespaces/proxy-6471/services/http:proxy-service-2rx5g:portname1/proxy/: foo (200; 5.342019ms)
  Jul 20 12:43:57.829: INFO: (18) /api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:443/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:443/proxy/tlsrewritem... (200; 5.952146ms)
  Jul 20 12:43:57.829: INFO: (18) /api/v1/namespaces/proxy-6471/services/http:proxy-service-2rx5g:portname2/proxy/: bar (200; 6.404362ms)
  Jul 20 12:43:57.829: INFO: (18) /api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:460/proxy/: tls baz (200; 6.191716ms)
  Jul 20 12:43:57.829: INFO: (18) /api/v1/namespaces/proxy-6471/services/https:proxy-service-2rx5g:tlsportname2/proxy/: tls qux (200; 6.544733ms)
  Jul 20 12:43:57.830: INFO: (18) /api/v1/namespaces/proxy-6471/services/proxy-service-2rx5g:portname1/proxy/: foo (200; 6.987989ms)
  Jul 20 12:43:57.830: INFO: (18) /api/v1/namespaces/proxy-6471/services/https:proxy-service-2rx5g:tlsportname1/proxy/: tls baz (200; 7.190959ms)
  Jul 20 12:43:57.830: INFO: (18) /api/v1/namespaces/proxy-6471/services/proxy-service-2rx5g:portname2/proxy/: bar (200; 7.363271ms)
  Jul 20 12:43:57.833: INFO: (19) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv/proxy/rewriteme">test</a> (200; 2.980952ms)
  Jul 20 12:43:57.833: INFO: (19) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:1080/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:1080/proxy/rewriteme">test<... (200; 3.069656ms)
  Jul 20 12:43:57.834: INFO: (19) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:162/proxy/: bar (200; 3.174482ms)
  Jul 20 12:43:57.834: INFO: (19) /api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:160/proxy/: foo (200; 3.68485ms)
  Jul 20 12:43:57.835: INFO: (19) /api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:162/proxy/: bar (200; 4.341151ms)
  Jul 20 12:43:57.835: INFO: (19) /api/v1/namespaces/proxy-6471/services/http:proxy-service-2rx5g:portname1/proxy/: foo (200; 4.638649ms)
  Jul 20 12:43:57.836: INFO: (19) /api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:1080/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/http:proxy-service-2rx5g-cmxnv:1080/proxy/rewriteme">... (200; 5.418246ms)
  Jul 20 12:43:57.836: INFO: (19) /api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:462/proxy/: tls qux (200; 5.379102ms)
  Jul 20 12:43:57.836: INFO: (19) /api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:443/proxy/: <a href="/api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:443/proxy/tlsrewritem... (200; 5.408369ms)
  Jul 20 12:43:57.836: INFO: (19) /api/v1/namespaces/proxy-6471/pods/https:proxy-service-2rx5g-cmxnv:460/proxy/: tls baz (200; 5.646818ms)
  Jul 20 12:43:57.836: INFO: (19) /api/v1/namespaces/proxy-6471/pods/proxy-service-2rx5g-cmxnv:160/proxy/: foo (200; 5.612261ms)
  Jul 20 12:43:57.836: INFO: (19) /api/v1/namespaces/proxy-6471/services/http:proxy-service-2rx5g:portname2/proxy/: bar (200; 6.117468ms)
  Jul 20 12:43:57.837: INFO: (19) /api/v1/namespaces/proxy-6471/services/https:proxy-service-2rx5g:tlsportname1/proxy/: tls baz (200; 6.274428ms)
  Jul 20 12:43:57.837: INFO: (19) /api/v1/namespaces/proxy-6471/services/https:proxy-service-2rx5g:tlsportname2/proxy/: tls qux (200; 6.254359ms)
  Jul 20 12:43:57.837: INFO: (19) /api/v1/namespaces/proxy-6471/services/proxy-service-2rx5g:portname1/proxy/: foo (200; 6.513465ms)
  Jul 20 12:43:57.837: INFO: (19) /api/v1/namespaces/proxy-6471/services/proxy-service-2rx5g:portname2/proxy/: bar (200; 6.824934ms)
  STEP: deleting ReplicationController proxy-service-2rx5g in namespace proxy-6471, will wait for the garbage collector to delete the pods @ 07/20/24 12:43:57.837
  Jul 20 12:43:57.897: INFO: Deleting ReplicationController proxy-service-2rx5g took: 6.976638ms
  Jul 20 12:43:57.997: INFO: Terminating ReplicationController proxy-service-2rx5g pods took: 100.423121ms
  Jul 20 12:44:00.698: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-6471" for this suite. @ 07/20/24 12:44:00.7
• [5.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:810
  STEP: Creating a kubernetes client @ 07/20/24 12:44:00.708
  Jul 20 12:44:00.708: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename svcaccounts @ 07/20/24 12:44:00.708
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:44:00.725
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:44:00.726
  STEP: Creating ServiceAccount "e2e-sa-c8pvc"  @ 07/20/24 12:44:00.728
  Jul 20 12:44:00.733: INFO: AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-c8pvc"  @ 07/20/24 12:44:00.733
  Jul 20 12:44:00.740: INFO: AutomountServiceAccountToken: true
  Jul 20 12:44:00.740: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7741" for this suite. @ 07/20/24 12:44:00.743
• [0.040 seconds]
------------------------------
SSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:332
  STEP: Creating a kubernetes client @ 07/20/24 12:44:00.748
  Jul 20 12:44:00.748: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename statefulset @ 07/20/24 12:44:00.749
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:44:00.772
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:44:00.774
  STEP: Creating service test in namespace statefulset-6049 @ 07/20/24 12:44:00.775
  STEP: Creating a new StatefulSet @ 07/20/24 12:44:00.779
  Jul 20 12:44:00.787: INFO: Found 0 stateful pods, waiting for 3
  Jul 20 12:44:10.789: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Jul 20 12:44:10.789: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Jul 20 12:44:10.789: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 07/20/24 12:44:10.797
  Jul 20 12:44:10.815: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 07/20/24 12:44:10.815
  STEP: Not applying an update when the partition is greater than the number of replicas @ 07/20/24 12:44:20.821
  STEP: Performing a canary update @ 07/20/24 12:44:20.821
  Jul 20 12:44:20.841: INFO: Updating stateful set ss2
  Jul 20 12:44:20.854: INFO: Waiting for Pod statefulset-6049/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Restoring Pods to the correct revision when they are deleted @ 07/20/24 12:44:30.85
  Jul 20 12:44:30.876: INFO: Found 1 stateful pods, waiting for 3
  Jul 20 12:44:40.879: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Jul 20 12:44:40.879: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Jul 20 12:44:40.879: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 07/20/24 12:44:40.884
  Jul 20 12:44:40.903: INFO: Updating stateful set ss2
  Jul 20 12:44:40.912: INFO: Waiting for Pod statefulset-6049/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  Jul 20 12:44:50.928: INFO: Updating stateful set ss2
  Jul 20 12:44:50.933: INFO: Waiting for StatefulSet statefulset-6049/ss2 to complete update
  Jul 20 12:44:50.933: INFO: Waiting for Pod statefulset-6049/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  Jul 20 12:45:00.936: INFO: Deleting all statefulset in ns statefulset-6049
  Jul 20 12:45:00.938: INFO: Scaling statefulset ss2 to 0
  Jul 20 12:45:10.952: INFO: Waiting for statefulset status.replicas updated to 0
  Jul 20 12:45:10.954: INFO: Deleting statefulset ss2
  Jul 20 12:45:10.964: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6049" for this suite. @ 07/20/24 12:45:10.966
• [70.224 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 07/20/24 12:45:10.973
  Jul 20 12:45:10.973: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename container-probe @ 07/20/24 12:45:10.973
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:45:10.989
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:45:10.992
  STEP: Creating pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315 @ 07/20/24 12:45:10.995
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/20/24 12:45:13.009
  Jul 20 12:45:13.012: INFO: Initial restart count of pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 is 0
  Jul 20 12:45:13.014: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:45:15.018: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:45:17.021: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:45:19.027: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:45:21.033: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:45:23.037: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:45:25.042: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:45:27.048: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:45:29.052: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:45:31.057: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:45:33.061: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:45:35.065: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:45:37.069: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:45:39.072: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:45:41.077: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:45:43.080: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:45:45.084: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:45:47.088: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:45:49.092: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:45:51.096: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:45:53.100: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:45:55.104: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:45:57.108: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:45:59.111: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:46:01.117: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:46:03.121: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:46:05.126: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:46:07.131: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:46:09.135: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:46:11.140: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:46:13.143: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:46:15.147: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:46:17.152: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:46:19.157: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:46:21.160: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:46:23.165: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:46:25.169: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:46:27.173: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:46:29.176: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:46:31.180: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:46:33.183: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:46:35.188: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:46:37.192: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:46:39.197: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:46:41.202: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:46:43.207: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:46:45.210: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:46:47.214: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:46:49.217: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:46:51.222: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:46:53.225: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:46:55.230: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:46:57.234: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:46:59.239: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:47:01.243: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:47:03.248: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:47:05.252: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:47:07.256: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:47:09.260: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:47:11.264: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:47:13.268: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:47:15.272: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:47:17.276: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:47:19.279: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:47:21.284: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:47:23.289: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:47:25.294: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:47:27.298: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:47:29.302: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:47:31.307: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:47:33.311: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:47:35.314: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:47:37.320: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:47:39.324: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:47:41.328: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:47:43.332: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:47:45.336: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:47:47.341: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:47:49.346: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:47:51.351: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:47:53.355: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:47:55.359: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:47:57.363: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:47:59.367: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:48:01.372: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:48:03.377: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:48:05.380: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:48:07.385: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:48:09.390: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:48:11.395: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:48:13.400: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:48:15.403: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:48:17.407: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:48:19.414: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:48:21.419: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:48:23.424: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:48:25.428: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:48:27.432: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:48:29.436: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:48:31.442: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:48:33.446: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:48:35.450: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:48:37.454: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:48:39.459: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:48:41.464: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:48:43.470: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:48:45.473: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:48:47.478: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:48:49.482: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:48:51.487: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:48:53.491: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:48:55.494: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:48:57.498: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:48:59.502: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:49:01.506: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:49:03.512: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:49:05.516: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:49:07.520: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:49:09.524: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  Jul 20 12:49:11.530: INFO: Get pod liveness-15316b18-47b7-47e1-be4c-04beae00f203 in namespace container-probe-1315
  STEP: deleting the pod @ 07/20/24 12:49:13.531
  Jul 20 12:49:13.542: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1315" for this suite. @ 07/20/24 12:49:13.548
• [242.581 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:357
  STEP: Creating a kubernetes client @ 07/20/24 12:49:13.554
  Jul 20 12:49:13.554: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/20/24 12:49:13.554
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:49:13.568
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:49:13.57
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 07/20/24 12:49:13.572
  Jul 20 12:49:13.572: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  Jul 20 12:49:14.779: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  Jul 20 12:49:19.903: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4727" for this suite. @ 07/20/24 12:49:19.909
• [6.363 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 07/20/24 12:49:19.917
  Jul 20 12:49:19.917: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename pods @ 07/20/24 12:49:19.917
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:49:19.932
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:49:19.935
  STEP: Saw pod success @ 07/20/24 12:49:25.997
  Jul 20 12:49:26.000: INFO: Trying to get logs from node ip-172-31-79-190 pod client-envvars-5754a0ab-c648-458f-8639-eb509ca5e86a container env3cont: <nil>
  STEP: delete the pod @ 07/20/24 12:49:26.014
  Jul 20 12:49:26.030: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3630" for this suite. @ 07/20/24 12:49:26.033
• [6.122 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 07/20/24 12:49:26.039
  Jul 20 12:49:26.039: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename webhook @ 07/20/24 12:49:26.039
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:49:26.053
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:49:26.056
  STEP: Setting up server cert @ 07/20/24 12:49:26.079
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/20/24 12:49:26.265
  STEP: Deploying the webhook pod @ 07/20/24 12:49:26.274
  STEP: Wait for the deployment to be ready @ 07/20/24 12:49:26.284
  Jul 20 12:49:26.292: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/20/24 12:49:28.302
  STEP: Verifying the service has paired with the endpoint @ 07/20/24 12:49:28.31
  Jul 20 12:49:29.310: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 07/20/24 12:49:29.317
  STEP: Registering slow webhook via the AdmissionRegistration API @ 07/20/24 12:49:29.317
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 07/20/24 12:49:29.329
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 07/20/24 12:49:30.34
  STEP: Registering slow webhook via the AdmissionRegistration API @ 07/20/24 12:49:30.34
  STEP: Having no error when timeout is longer than webhook latency @ 07/20/24 12:49:31.367
  STEP: Registering slow webhook via the AdmissionRegistration API @ 07/20/24 12:49:31.367
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 07/20/24 12:49:36.396
  STEP: Registering slow webhook via the AdmissionRegistration API @ 07/20/24 12:49:36.396
  Jul 20 12:49:41.474: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9810" for this suite. @ 07/20/24 12:49:41.477
  STEP: Destroying namespace "webhook-markers-9948" for this suite. @ 07/20/24 12:49:41.483
• [15.450 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 07/20/24 12:49:41.489
  Jul 20 12:49:41.489: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename pods @ 07/20/24 12:49:41.49
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:49:41.508
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:49:41.511
  STEP: Create set of pods @ 07/20/24 12:49:41.514
  Jul 20 12:49:41.521: INFO: created test-pod-1
  Jul 20 12:49:41.531: INFO: created test-pod-2
  Jul 20 12:49:41.539: INFO: created test-pod-3
  STEP: waiting for all 3 pods to be running @ 07/20/24 12:49:41.539
  STEP: waiting for all pods to be deleted @ 07/20/24 12:49:43.581
  Jul 20 12:49:43.585: INFO: Pod quantity 3 is different from expected quantity 0
  Jul 20 12:49:44.586: INFO: Pod quantity 1 is different from expected quantity 0
  Jul 20 12:49:45.586: INFO: Pod quantity 1 is different from expected quantity 0
  Jul 20 12:49:46.586: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4521" for this suite. @ 07/20/24 12:49:46.589
• [5.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2199
  STEP: Creating a kubernetes client @ 07/20/24 12:49:46.596
  Jul 20 12:49:46.596: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename services @ 07/20/24 12:49:46.596
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:49:46.61
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:49:46.613
  STEP: creating service in namespace services-6931 @ 07/20/24 12:49:46.616
  STEP: creating service affinity-clusterip-transition in namespace services-6931 @ 07/20/24 12:49:46.616
  STEP: creating replication controller affinity-clusterip-transition in namespace services-6931 @ 07/20/24 12:49:46.627
  I0720 12:49:46.638896      19 runners.go:197] Created replication controller with name: affinity-clusterip-transition, namespace: services-6931, replica count: 3
  I0720 12:49:49.689221      19 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jul 20 12:49:49.696: INFO: Creating new exec pod
  Jul 20 12:49:52.708: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=services-6931 exec execpod-affinityfbfpl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  Jul 20 12:49:52.798: INFO: stderr: "+ nc -v -t -w 2 affinity-clusterip-transition 80\n+ echo hostName\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  Jul 20 12:49:52.798: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul 20 12:49:52.798: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=services-6931 exec execpod-affinityfbfpl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.185 80'
  Jul 20 12:49:52.885: INFO: stderr: "+ nc -v -t -w 2 10.152.183.185 80\n+ echo hostName\nConnection to 10.152.183.185 80 port [tcp/http] succeeded!\n"
  Jul 20 12:49:52.885: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul 20 12:49:52.893: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=services-6931 exec execpod-affinityfbfpl -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.185:80/ ; done'
  Jul 20 12:49:53.028: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.185:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.185:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.185:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.185:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.185:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.185:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.185:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.185:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.185:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.185:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.185:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.185:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.185:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.185:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.185:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.185:80/\n"
  Jul 20 12:49:53.028: INFO: stdout: "\naffinity-clusterip-transition-dmlnc\naffinity-clusterip-transition-dmlnc\naffinity-clusterip-transition-glt5w\naffinity-clusterip-transition-gbwqt\naffinity-clusterip-transition-gbwqt\naffinity-clusterip-transition-dmlnc\naffinity-clusterip-transition-dmlnc\naffinity-clusterip-transition-glt5w\naffinity-clusterip-transition-dmlnc\naffinity-clusterip-transition-glt5w\naffinity-clusterip-transition-gbwqt\naffinity-clusterip-transition-dmlnc\naffinity-clusterip-transition-gbwqt\naffinity-clusterip-transition-glt5w\naffinity-clusterip-transition-glt5w\naffinity-clusterip-transition-gbwqt"
  Jul 20 12:49:53.028: INFO: Received response from host: affinity-clusterip-transition-dmlnc
  Jul 20 12:49:53.028: INFO: Received response from host: affinity-clusterip-transition-dmlnc
  Jul 20 12:49:53.028: INFO: Received response from host: affinity-clusterip-transition-glt5w
  Jul 20 12:49:53.028: INFO: Received response from host: affinity-clusterip-transition-gbwqt
  Jul 20 12:49:53.028: INFO: Received response from host: affinity-clusterip-transition-gbwqt
  Jul 20 12:49:53.028: INFO: Received response from host: affinity-clusterip-transition-dmlnc
  Jul 20 12:49:53.028: INFO: Received response from host: affinity-clusterip-transition-dmlnc
  Jul 20 12:49:53.028: INFO: Received response from host: affinity-clusterip-transition-glt5w
  Jul 20 12:49:53.028: INFO: Received response from host: affinity-clusterip-transition-dmlnc
  Jul 20 12:49:53.028: INFO: Received response from host: affinity-clusterip-transition-glt5w
  Jul 20 12:49:53.028: INFO: Received response from host: affinity-clusterip-transition-gbwqt
  Jul 20 12:49:53.028: INFO: Received response from host: affinity-clusterip-transition-dmlnc
  Jul 20 12:49:53.028: INFO: Received response from host: affinity-clusterip-transition-gbwqt
  Jul 20 12:49:53.028: INFO: Received response from host: affinity-clusterip-transition-glt5w
  Jul 20 12:49:53.028: INFO: Received response from host: affinity-clusterip-transition-glt5w
  Jul 20 12:49:53.028: INFO: Received response from host: affinity-clusterip-transition-gbwqt
  Jul 20 12:49:53.038: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=services-6931 exec execpod-affinityfbfpl -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.185:80/ ; done'
  Jul 20 12:49:53.176: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.185:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.185:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.185:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.185:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.185:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.185:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.185:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.185:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.185:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.185:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.185:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.185:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.185:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.185:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.185:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.185:80/\n"
  Jul 20 12:49:53.176: INFO: stdout: "\naffinity-clusterip-transition-glt5w\naffinity-clusterip-transition-glt5w\naffinity-clusterip-transition-glt5w\naffinity-clusterip-transition-glt5w\naffinity-clusterip-transition-glt5w\naffinity-clusterip-transition-glt5w\naffinity-clusterip-transition-glt5w\naffinity-clusterip-transition-glt5w\naffinity-clusterip-transition-glt5w\naffinity-clusterip-transition-glt5w\naffinity-clusterip-transition-glt5w\naffinity-clusterip-transition-glt5w\naffinity-clusterip-transition-glt5w\naffinity-clusterip-transition-glt5w\naffinity-clusterip-transition-glt5w\naffinity-clusterip-transition-glt5w"
  Jul 20 12:49:53.176: INFO: Received response from host: affinity-clusterip-transition-glt5w
  Jul 20 12:49:53.176: INFO: Received response from host: affinity-clusterip-transition-glt5w
  Jul 20 12:49:53.176: INFO: Received response from host: affinity-clusterip-transition-glt5w
  Jul 20 12:49:53.176: INFO: Received response from host: affinity-clusterip-transition-glt5w
  Jul 20 12:49:53.176: INFO: Received response from host: affinity-clusterip-transition-glt5w
  Jul 20 12:49:53.176: INFO: Received response from host: affinity-clusterip-transition-glt5w
  Jul 20 12:49:53.176: INFO: Received response from host: affinity-clusterip-transition-glt5w
  Jul 20 12:49:53.176: INFO: Received response from host: affinity-clusterip-transition-glt5w
  Jul 20 12:49:53.176: INFO: Received response from host: affinity-clusterip-transition-glt5w
  Jul 20 12:49:53.176: INFO: Received response from host: affinity-clusterip-transition-glt5w
  Jul 20 12:49:53.176: INFO: Received response from host: affinity-clusterip-transition-glt5w
  Jul 20 12:49:53.176: INFO: Received response from host: affinity-clusterip-transition-glt5w
  Jul 20 12:49:53.176: INFO: Received response from host: affinity-clusterip-transition-glt5w
  Jul 20 12:49:53.176: INFO: Received response from host: affinity-clusterip-transition-glt5w
  Jul 20 12:49:53.176: INFO: Received response from host: affinity-clusterip-transition-glt5w
  Jul 20 12:49:53.176: INFO: Received response from host: affinity-clusterip-transition-glt5w
  Jul 20 12:49:53.176: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-6931, will wait for the garbage collector to delete the pods @ 07/20/24 12:49:53.19
  Jul 20 12:49:53.251: INFO: Deleting ReplicationController affinity-clusterip-transition took: 7.90869ms
  Jul 20 12:49:53.352: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 100.435882ms
  Jul 20 12:49:56.568: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6931" for this suite. @ 07/20/24 12:49:56.57
• [9.980 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 07/20/24 12:49:56.577
  Jul 20 12:49:56.577: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename controllerrevisions @ 07/20/24 12:49:56.577
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:49:56.589
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:49:56.594
  STEP: Creating DaemonSet "e2e-cxxjw-daemon-set" @ 07/20/24 12:49:56.614
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/20/24 12:49:56.619
  Jul 20 12:49:56.622: INFO: DaemonSet pods can't tolerate node ip-172-31-19-200 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 20 12:49:56.622: INFO: DaemonSet pods can't tolerate node ip-172-31-76-81 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 20 12:49:56.625: INFO: Number of nodes with available pods controlled by daemonset e2e-cxxjw-daemon-set: 0
  Jul 20 12:49:56.625: INFO: Node ip-172-31-25-173 is running 0 daemon pod, expected 1
  Jul 20 12:49:57.623: INFO: DaemonSet pods can't tolerate node ip-172-31-19-200 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 20 12:49:57.623: INFO: DaemonSet pods can't tolerate node ip-172-31-76-81 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 20 12:49:57.626: INFO: Number of nodes with available pods controlled by daemonset e2e-cxxjw-daemon-set: 3
  Jul 20 12:49:57.626: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset e2e-cxxjw-daemon-set
  STEP: Confirm DaemonSet "e2e-cxxjw-daemon-set" successfully created with "daemonset-name=e2e-cxxjw-daemon-set" label @ 07/20/24 12:49:57.629
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-cxxjw-daemon-set" @ 07/20/24 12:49:57.634
  Jul 20 12:49:57.637: INFO: Located ControllerRevision: "e2e-cxxjw-daemon-set-5fbfd976df"
  STEP: Patching ControllerRevision "e2e-cxxjw-daemon-set-5fbfd976df" @ 07/20/24 12:49:57.64
  Jul 20 12:49:57.646: INFO: e2e-cxxjw-daemon-set-5fbfd976df has been patched
  STEP: Create a new ControllerRevision @ 07/20/24 12:49:57.646
  Jul 20 12:49:57.653: INFO: Created ControllerRevision: e2e-cxxjw-daemon-set-5949988ccc
  STEP: Confirm that there are two ControllerRevisions @ 07/20/24 12:49:57.653
  Jul 20 12:49:57.653: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jul 20 12:49:57.655: INFO: Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-cxxjw-daemon-set-5fbfd976df" @ 07/20/24 12:49:57.655
  STEP: Confirm that there is only one ControllerRevision @ 07/20/24 12:49:57.66
  Jul 20 12:49:57.660: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jul 20 12:49:57.663: INFO: Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-cxxjw-daemon-set-5949988ccc" @ 07/20/24 12:49:57.665
  Jul 20 12:49:57.672: INFO: e2e-cxxjw-daemon-set-5949988ccc has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 07/20/24 12:49:57.672
  W0720 12:49:57.678617      19 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 07/20/24 12:49:57.678
  Jul 20 12:49:57.678: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jul 20 12:49:58.679: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jul 20 12:49:58.682: INFO: Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-cxxjw-daemon-set-5949988ccc=updated" @ 07/20/24 12:49:58.682
  STEP: Confirm that there is only one ControllerRevision @ 07/20/24 12:49:58.689
  Jul 20 12:49:58.689: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jul 20 12:49:58.692: INFO: Found 1 ControllerRevisions
  Jul 20 12:49:58.694: INFO: ControllerRevision "e2e-cxxjw-daemon-set-5d845c5d8d" has revision 3
  STEP: Deleting DaemonSet "e2e-cxxjw-daemon-set" @ 07/20/24 12:49:58.697
  STEP: deleting DaemonSet.extensions e2e-cxxjw-daemon-set in namespace controllerrevisions-488, will wait for the garbage collector to delete the pods @ 07/20/24 12:49:58.697
  Jul 20 12:49:58.756: INFO: Deleting DaemonSet.extensions e2e-cxxjw-daemon-set took: 6.395787ms
  Jul 20 12:49:58.857: INFO: Terminating DaemonSet.extensions e2e-cxxjw-daemon-set pods took: 100.380937ms
  Jul 20 12:50:00.361: INFO: Number of nodes with available pods controlled by daemonset e2e-cxxjw-daemon-set: 0
  Jul 20 12:50:00.361: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-cxxjw-daemon-set
  Jul 20 12:50:00.364: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"16728"},"items":null}

  Jul 20 12:50:00.366: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"16728"},"items":null}

  Jul 20 12:50:00.377: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-488" for this suite. @ 07/20/24 12:50:00.379
• [3.810 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 07/20/24 12:50:00.387
  Jul 20 12:50:00.387: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename configmap @ 07/20/24 12:50:00.387
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:50:00.401
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:50:00.403
  STEP: Creating configMap with name configmap-test-volume-d122c3ae-3999-498d-a990-cbbf36cfd4e8 @ 07/20/24 12:50:00.406
  STEP: Creating a pod to test consume configMaps @ 07/20/24 12:50:00.41
  STEP: Saw pod success @ 07/20/24 12:50:02.427
  Jul 20 12:50:02.430: INFO: Trying to get logs from node ip-172-31-79-190 pod pod-configmaps-03b0107e-bc4b-44b9-8957-ec7a3b3448ce container agnhost-container: <nil>
  STEP: delete the pod @ 07/20/24 12:50:02.435
  Jul 20 12:50:02.451: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9436" for this suite. @ 07/20/24 12:50:02.454
• [2.073 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 07/20/24 12:50:02.46
  Jul 20 12:50:02.460: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename downward-api @ 07/20/24 12:50:02.461
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:50:02.476
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:50:02.479
  STEP: Creating a pod to test downward API volume plugin @ 07/20/24 12:50:02.482
  STEP: Saw pod success @ 07/20/24 12:50:04.504
  Jul 20 12:50:04.507: INFO: Trying to get logs from node ip-172-31-79-190 pod downwardapi-volume-cf7eba8b-4749-414d-86ec-3984e9f3a8fe container client-container: <nil>
  STEP: delete the pod @ 07/20/24 12:50:04.512
  Jul 20 12:50:04.527: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4573" for this suite. @ 07/20/24 12:50:04.53
• [2.077 seconds]
------------------------------
S
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:155
  STEP: Creating a kubernetes client @ 07/20/24 12:50:04.537
  Jul 20 12:50:04.537: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename var-expansion @ 07/20/24 12:50:04.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:50:04.549
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:50:04.552
  Jul 20 12:50:06.570: INFO: Deleting pod "var-expansion-ddeddda5-3c51-46a7-a033-754bf3e83a71" in namespace "var-expansion-4915"
  Jul 20 12:50:06.577: INFO: Wait up to 5m0s for pod "var-expansion-ddeddda5-3c51-46a7-a033-754bf3e83a71" to be fully deleted
  Jul 20 12:50:08.585: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4915" for this suite. @ 07/20/24 12:50:08.588
• [4.056 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 07/20/24 12:50:08.594
  Jul 20 12:50:08.594: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename secrets @ 07/20/24 12:50:08.595
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:50:08.609
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:50:08.611
  STEP: Creating secret with name secret-test-37e38228-99d4-4190-8eb9-97ea43b5cb73 @ 07/20/24 12:50:08.614
  STEP: Creating a pod to test consume secrets @ 07/20/24 12:50:08.618
  STEP: Saw pod success @ 07/20/24 12:50:10.633
  Jul 20 12:50:10.636: INFO: Trying to get logs from node ip-172-31-79-190 pod pod-secrets-85294f1e-9873-42a7-a1e2-9422dd736d65 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/20/24 12:50:10.641
  Jul 20 12:50:10.655: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6383" for this suite. @ 07/20/24 12:50:10.658
• [2.070 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:228
  STEP: Creating a kubernetes client @ 07/20/24 12:50:10.665
  Jul 20 12:50:10.665: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename var-expansion @ 07/20/24 12:50:10.665
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:50:10.679
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:50:10.681
  STEP: creating the pod with failed condition @ 07/20/24 12:50:10.684
  STEP: updating the pod @ 07/20/24 12:52:10.693
  Jul 20 12:52:11.204: INFO: Successfully updated pod "var-expansion-57b435dd-1240-4004-9bc9-ed4e78ef6a18"
  STEP: waiting for pod running @ 07/20/24 12:52:11.204
  STEP: deleting the pod gracefully @ 07/20/24 12:52:13.212
  Jul 20 12:52:13.212: INFO: Deleting pod "var-expansion-57b435dd-1240-4004-9bc9-ed4e78ef6a18" in namespace "var-expansion-5080"
  Jul 20 12:52:13.221: INFO: Wait up to 5m0s for pod "var-expansion-57b435dd-1240-4004-9bc9-ed4e78ef6a18" to be fully deleted
  Jul 20 12:52:45.296: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5080" for this suite. @ 07/20/24 12:52:45.299
• [154.641 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 07/20/24 12:52:45.306
  Jul 20 12:52:45.306: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename projected @ 07/20/24 12:52:45.306
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:52:45.32
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:52:45.324
  STEP: Creating a pod to test downward API volume plugin @ 07/20/24 12:52:45.327
  STEP: Saw pod success @ 07/20/24 12:52:49.348
  Jul 20 12:52:49.350: INFO: Trying to get logs from node ip-172-31-79-190 pod downwardapi-volume-3579dc9b-4c53-404e-87f1-25f2d37e0077 container client-container: <nil>
  STEP: delete the pod @ 07/20/24 12:52:49.36
  Jul 20 12:52:49.373: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8236" for this suite. @ 07/20/24 12:52:49.375
• [4.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 07/20/24 12:52:49.384
  Jul 20 12:52:49.384: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename projected @ 07/20/24 12:52:49.385
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:52:49.399
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:52:49.401
  STEP: Creating configMap with name configmap-projected-all-test-volume-947246c4-0d68-462a-b7e9-cf7a8dfe7af0 @ 07/20/24 12:52:49.404
  STEP: Creating secret with name secret-projected-all-test-volume-83adfd66-0825-4387-991d-b67afe244012 @ 07/20/24 12:52:49.408
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 07/20/24 12:52:49.412
  STEP: Saw pod success @ 07/20/24 12:52:53.432
  Jul 20 12:52:53.435: INFO: Trying to get logs from node ip-172-31-79-190 pod projected-volume-2a9703f1-47e6-4e21-897d-d3c18c6cc98b container projected-all-volume-test: <nil>
  STEP: delete the pod @ 07/20/24 12:52:53.44
  Jul 20 12:52:53.455: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5672" for this suite. @ 07/20/24 12:52:53.458
• [4.079 seconds]
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3338
  STEP: Creating a kubernetes client @ 07/20/24 12:52:53.463
  Jul 20 12:52:53.463: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename services @ 07/20/24 12:52:53.464
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:52:53.476
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:52:53.479
  STEP: creating a Service @ 07/20/24 12:52:53.484
  STEP: watching for the Service to be added @ 07/20/24 12:52:53.496
  Jul 20 12:52:53.498: INFO: Found Service test-service-lj4rk in namespace services-3675 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 31973}]
  Jul 20 12:52:53.498: INFO: Service test-service-lj4rk created
  STEP: Getting /status @ 07/20/24 12:52:53.499
  Jul 20 12:52:53.503: INFO: Service test-service-lj4rk has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 07/20/24 12:52:53.503
  STEP: watching for the Service to be patched @ 07/20/24 12:52:53.509
  Jul 20 12:52:53.511: INFO: observed Service test-service-lj4rk in namespace services-3675 with annotations: map[] & LoadBalancer: {[]}
  Jul 20 12:52:53.511: INFO: Found Service test-service-lj4rk in namespace services-3675 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  <nil> []}]}
  Jul 20 12:52:53.511: INFO: Service test-service-lj4rk has service status patched
  STEP: updating the ServiceStatus @ 07/20/24 12:52:53.511
  Jul 20 12:52:53.517: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 07/20/24 12:52:53.517
  Jul 20 12:52:53.518: INFO: Observed Service test-service-lj4rk in namespace services-3675 with annotations: map[] & Conditions: {[]}
  Jul 20 12:52:53.518: INFO: Observed event: &Service{ObjectMeta:{test-service-lj4rk  services-3675  268c6eee-05a6-451d-a398-2bc9f76b1c37 17374 0 2024-07-20 12:52:53 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2024-07-20 12:52:53 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:allocateLoadBalancerNodePorts":{},"f:externalTrafficPolicy":{},"f:internalTrafficPolicy":{},"f:loadBalancerClass":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2024-07-20 12:52:53 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:31973,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.152.183.74,Type:LoadBalancer,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:Cluster,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.152.183.74],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:*true,LoadBalancerClass:*example.com/internal-vip,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,IPMode:nil,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  Jul 20 12:52:53.519: INFO: Found Service test-service-lj4rk in namespace services-3675 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Jul 20 12:52:53.519: INFO: Service test-service-lj4rk has service status updated
  STEP: patching the service @ 07/20/24 12:52:53.519
  STEP: watching for the Service to be patched @ 07/20/24 12:52:53.531
  Jul 20 12:52:53.533: INFO: observed Service test-service-lj4rk in namespace services-3675 with labels: map[test-service-static:true]
  Jul 20 12:52:53.533: INFO: observed Service test-service-lj4rk in namespace services-3675 with labels: map[test-service-static:true]
  Jul 20 12:52:53.533: INFO: observed Service test-service-lj4rk in namespace services-3675 with labels: map[test-service-static:true]
  Jul 20 12:52:53.533: INFO: Found Service test-service-lj4rk in namespace services-3675 with labels: map[test-service:patched test-service-static:true]
  Jul 20 12:52:53.533: INFO: Service test-service-lj4rk patched
  STEP: deleting the service @ 07/20/24 12:52:53.533
  STEP: watching for the Service to be deleted @ 07/20/24 12:52:53.547
  Jul 20 12:52:53.548: INFO: Observed event: ADDED
  Jul 20 12:52:53.549: INFO: Observed event: MODIFIED
  Jul 20 12:52:53.549: INFO: Observed event: MODIFIED
  Jul 20 12:52:53.549: INFO: Observed event: MODIFIED
  Jul 20 12:52:53.549: INFO: Found Service test-service-lj4rk in namespace services-3675 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  Jul 20 12:52:53.549: INFO: Service test-service-lj4rk deleted
  Jul 20 12:52:53.549: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3675" for this suite. @ 07/20/24 12:52:53.552
• [0.094 seconds]
------------------------------
S
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 07/20/24 12:52:53.557
  Jul 20 12:52:53.557: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename container-runtime @ 07/20/24 12:52:53.558
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:52:53.571
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:52:53.574
  STEP: create the container @ 07/20/24 12:52:53.576
  W0720 12:52:53.584221      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 07/20/24 12:52:53.584
  STEP: get the container status @ 07/20/24 12:52:56.601
  STEP: the container should be terminated @ 07/20/24 12:52:56.605
  STEP: the termination message should be set @ 07/20/24 12:52:56.605
  Jul 20 12:52:56.605: INFO: Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 07/20/24 12:52:56.605
  Jul 20 12:52:56.622: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-8901" for this suite. @ 07/20/24 12:52:56.625
• [3.073 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 07/20/24 12:52:56.631
  Jul 20 12:52:56.631: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename gc @ 07/20/24 12:52:56.631
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:52:56.645
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:52:56.654
  STEP: create the deployment @ 07/20/24 12:52:56.656
  W0720 12:52:56.660992      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 07/20/24 12:52:56.661
  STEP: delete the deployment @ 07/20/24 12:52:57.167
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 07/20/24 12:52:57.173
  STEP: Gathering metrics @ 07/20/24 12:52:57.688
  W0720 12:52:57.693418      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Jul 20 12:52:57.693: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jul 20 12:52:57.694: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5141" for this suite. @ 07/20/24 12:52:57.697
• [1.072 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:889
  STEP: Creating a kubernetes client @ 07/20/24 12:52:57.703
  Jul 20 12:52:57.703: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename resourcequota @ 07/20/24 12:52:57.704
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:52:57.721
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:52:57.728
  STEP: Creating a ResourceQuota @ 07/20/24 12:52:57.734
  STEP: Getting a ResourceQuota @ 07/20/24 12:52:57.744
  STEP: Updating a ResourceQuota @ 07/20/24 12:52:57.747
  STEP: Verifying a ResourceQuota was modified @ 07/20/24 12:52:57.756
  STEP: Deleting a ResourceQuota @ 07/20/24 12:52:57.76
  STEP: Verifying the deleted ResourceQuota @ 07/20/24 12:52:57.765
  Jul 20 12:52:57.768: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2083" for this suite. @ 07/20/24 12:52:57.771
• [0.081 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 07/20/24 12:52:57.784
  Jul 20 12:52:57.784: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename field-validation @ 07/20/24 12:52:57.785
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:52:57.807
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:52:57.81
  STEP: apply creating a deployment @ 07/20/24 12:52:57.813
  Jul 20 12:52:57.823: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9270" for this suite. @ 07/20/24 12:52:57.826
• [0.048 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 07/20/24 12:52:57.833
  Jul 20 12:52:57.833: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename dns @ 07/20/24 12:52:57.833
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:52:57.849
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:52:57.853
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 07/20/24 12:52:57.855
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 07/20/24 12:52:57.855
  STEP: creating a pod to probe DNS @ 07/20/24 12:52:57.855
  STEP: submitting the pod to kubernetes @ 07/20/24 12:52:57.855
  STEP: retrieving the pod @ 07/20/24 12:52:59.875
  STEP: looking for the results for each expected name from probers @ 07/20/24 12:52:59.877
  Jul 20 12:52:59.889: INFO: DNS probes using dns-1782/dns-test-c216a737-21ee-4625-862e-d78f1872ae98 succeeded

  STEP: deleting the pod @ 07/20/24 12:52:59.89
  Jul 20 12:52:59.902: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1782" for this suite. @ 07/20/24 12:52:59.906
• [2.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 07/20/24 12:52:59.911
  Jul 20 12:52:59.911: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename configmap @ 07/20/24 12:52:59.912
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:52:59.932
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:52:59.934
  STEP: Creating configMap with name cm-test-opt-del-2127f209-9628-473a-87c7-b7a321ea6e0c @ 07/20/24 12:52:59.94
  STEP: Creating configMap with name cm-test-opt-upd-74fccfcd-2593-4625-9616-b62bd6bb3878 @ 07/20/24 12:52:59.944
  STEP: Creating the pod @ 07/20/24 12:52:59.949
  STEP: Deleting configmap cm-test-opt-del-2127f209-9628-473a-87c7-b7a321ea6e0c @ 07/20/24 12:53:01.98
  STEP: Updating configmap cm-test-opt-upd-74fccfcd-2593-4625-9616-b62bd6bb3878 @ 07/20/24 12:53:01.986
  STEP: Creating configMap with name cm-test-opt-create-d12ddba4-537a-4615-9793-b83a84ed4839 @ 07/20/24 12:53:01.99
  STEP: waiting to observe update in volume @ 07/20/24 12:53:01.994
  Jul 20 12:53:06.024: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8749" for this suite. @ 07/20/24 12:53:06.027
• [6.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:430
  STEP: Creating a kubernetes client @ 07/20/24 12:53:06.034
  Jul 20 12:53:06.034: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename pv @ 07/20/24 12:53:06.034
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:53:06.047
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:53:06.05
  STEP: Creating initial PV and PVC @ 07/20/24 12:53:06.053
  Jul 20 12:53:06.053: INFO: Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-5966" @ 07/20/24 12:53:06.065
  STEP: Listing PVCs in namespace "pv-5966" @ 07/20/24 12:53:06.068
  STEP: Patching the PV "pv-5966-sz6qn" @ 07/20/24 12:53:06.072
  STEP: Patching the PVC "pvc-7lrj2" @ 07/20/24 12:53:06.086
  STEP: Getting PV "pv-5966-sz6qn" @ 07/20/24 12:53:06.094
  STEP: Getting PVC "pvc-7lrj2" @ 07/20/24 12:53:06.096
  STEP: Deleting PVC "pvc-7lrj2" @ 07/20/24 12:53:06.099
  STEP: Confirm deletion of PVC "pvc-7lrj2" @ 07/20/24 12:53:06.104
  STEP: Deleting PV "pv-5966-sz6qn" @ 07/20/24 12:53:08.112
  STEP: Confirm deletion of PV "pv-5966-sz6qn" @ 07/20/24 12:53:08.118
  STEP: Recreating another PV & PVC @ 07/20/24 12:53:10.126
  Jul 20 12:53:10.126: INFO: Creating a PV followed by a PVC
  STEP: Updating the PV "pv-5966-vct8h" @ 07/20/24 12:53:10.138
  STEP: Updating the PVC "pvc-w5n7n" @ 07/20/24 12:53:10.146
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-w5n7n=updated" @ 07/20/24 12:53:10.153
  STEP: Deleting PVC "pvc-w5n7n" via DeleteCollection @ 07/20/24 12:53:10.155
  STEP: Confirm deletion of PVC "pvc-w5n7n" @ 07/20/24 12:53:10.167
  STEP: Deleting PV "pv-5966-vct8h" via DeleteCollection @ 07/20/24 12:53:12.173
  STEP: Confirm deletion of PV "pv-5966-vct8h" @ 07/20/24 12:53:12.182
  Jul 20 12:53:14.189: INFO: AfterEach: deleting 1 PVCs and 1 PVs...
  Jul 20 12:53:14.189: INFO: Deleting PersistentVolumeClaim "pvc-w5n7n"
  Jul 20 12:53:14.192: INFO: Deleting PersistentVolume "pv-5966-vct8h"
  Jul 20 12:53:14.195: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-5966" for this suite. @ 07/20/24 12:53:14.198
• [8.171 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 07/20/24 12:53:14.205
  Jul 20 12:53:14.205: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename replicaset @ 07/20/24 12:53:14.205
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:53:14.219
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:53:14.222
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 07/20/24 12:53:14.224
  Jul 20 12:53:14.233: INFO: Pod name sample-pod: Found 0 pods out of 1
  Jul 20 12:53:19.237: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/20/24 12:53:19.237
  STEP: getting scale subresource @ 07/20/24 12:53:19.237
  STEP: updating a scale subresource @ 07/20/24 12:53:19.24
  STEP: verifying the replicaset Spec.Replicas was modified @ 07/20/24 12:53:19.247
  STEP: Patch a scale subresource @ 07/20/24 12:53:19.252
  Jul 20 12:53:19.265: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2191" for this suite. @ 07/20/24 12:53:19.268
• [5.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:109
  STEP: Creating a kubernetes client @ 07/20/24 12:53:19.276
  Jul 20 12:53:19.276: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename kubelet-test @ 07/20/24 12:53:19.277
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:53:19.3
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:53:19.302
  Jul 20 12:53:23.323: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-233" for this suite. @ 07/20/24 12:53:23.327
• [4.058 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 07/20/24 12:53:23.334
  Jul 20 12:53:23.334: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename sched-preemption @ 07/20/24 12:53:23.335
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:53:23.35
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:53:23.352
  Jul 20 12:53:23.368: INFO: Waiting up to 1m0s for all nodes to be ready
  Jul 20 12:54:23.372: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 07/20/24 12:54:23.375
  Jul 20 12:54:23.393: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Jul 20 12:54:23.400: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Jul 20 12:54:23.419: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Jul 20 12:54:23.425: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Jul 20 12:54:23.439: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Jul 20 12:54:23.446: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 07/20/24 12:54:23.446
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 07/20/24 12:54:25.468
  Jul 20 12:54:29.541: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-3838" for this suite. @ 07/20/24 12:54:29.544
• [66.217 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:103
  STEP: Creating a kubernetes client @ 07/20/24 12:54:29.551
  Jul 20 12:54:29.551: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename resourcequota @ 07/20/24 12:54:29.552
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:54:29.566
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:54:29.569
  STEP: Counting existing ResourceQuota @ 07/20/24 12:54:29.571
  STEP: Creating a ResourceQuota @ 07/20/24 12:54:34.575
  STEP: Ensuring resource quota status is calculated @ 07/20/24 12:54:34.581
  STEP: Creating a Service @ 07/20/24 12:54:36.585
  STEP: Creating a NodePort Service @ 07/20/24 12:54:36.6
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 07/20/24 12:54:36.619
  STEP: Ensuring resource quota status captures service creation @ 07/20/24 12:54:36.635
  STEP: Deleting Services @ 07/20/24 12:54:38.64
  STEP: Ensuring resource quota status released usage @ 07/20/24 12:54:38.677
  Jul 20 12:54:40.682: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9655" for this suite. @ 07/20/24 12:54:40.685
• [11.141 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 07/20/24 12:54:40.692
  Jul 20 12:54:40.692: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename pod-network-test @ 07/20/24 12:54:40.693
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:54:40.709
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:54:40.712
  STEP: Performing setup for networking test in namespace pod-network-test-9724 @ 07/20/24 12:54:40.715
  STEP: creating a selector @ 07/20/24 12:54:40.715
  STEP: Creating the service pods in kubernetes @ 07/20/24 12:54:40.715
  Jul 20 12:54:40.715: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 07/20/24 12:54:52.786
  Jul 20 12:54:54.805: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Jul 20 12:54:54.805: INFO: Breadth first check of 192.168.245.242 on host 172.31.25.173...
  Jul 20 12:54:54.807: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.120.232:9080/dial?request=hostname&protocol=http&host=192.168.245.242&port=8083&tries=1'] Namespace:pod-network-test-9724 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 20 12:54:54.807: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  Jul 20 12:54:54.808: INFO: ExecWithOptions: Clientset creation
  Jul 20 12:54:54.808: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9724/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.120.232%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.245.242%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jul 20 12:54:54.863: INFO: Waiting for responses: map[]
  Jul 20 12:54:54.863: INFO: reached 192.168.245.242 after 0/1 tries
  Jul 20 12:54:54.863: INFO: Breadth first check of 192.168.15.85 on host 172.31.3.74...
  Jul 20 12:54:54.867: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.120.232:9080/dial?request=hostname&protocol=http&host=192.168.15.85&port=8083&tries=1'] Namespace:pod-network-test-9724 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 20 12:54:54.867: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  Jul 20 12:54:54.867: INFO: ExecWithOptions: Clientset creation
  Jul 20 12:54:54.867: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9724/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.120.232%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.15.85%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jul 20 12:54:54.910: INFO: Waiting for responses: map[]
  Jul 20 12:54:54.910: INFO: reached 192.168.15.85 after 0/1 tries
  Jul 20 12:54:54.910: INFO: Breadth first check of 192.168.120.231 on host 172.31.79.190...
  Jul 20 12:54:54.914: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.120.232:9080/dial?request=hostname&protocol=http&host=192.168.120.231&port=8083&tries=1'] Namespace:pod-network-test-9724 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 20 12:54:54.914: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  Jul 20 12:54:54.914: INFO: ExecWithOptions: Clientset creation
  Jul 20 12:54:54.914: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9724/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.120.232%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.120.231%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jul 20 12:54:54.961: INFO: Waiting for responses: map[]
  Jul 20 12:54:54.961: INFO: reached 192.168.120.231 after 0/1 tries
  Jul 20 12:54:54.961: INFO: Going to retry 0 out of 3 pods....
  Jul 20 12:54:54.961: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9724" for this suite. @ 07/20/24 12:54:54.965
• [14.279 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 07/20/24 12:54:54.971
  Jul 20 12:54:54.971: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename container-runtime @ 07/20/24 12:54:54.972
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:54:54.985
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:54:54.989
  STEP: create the container @ 07/20/24 12:54:54.991
  W0720 12:54:54.997396      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 07/20/24 12:54:54.997
  STEP: get the container status @ 07/20/24 12:54:58.018
  STEP: the container should be terminated @ 07/20/24 12:54:58.021
  STEP: the termination message should be set @ 07/20/24 12:54:58.021
  Jul 20 12:54:58.021: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 07/20/24 12:54:58.021
  Jul 20 12:54:58.038: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6085" for this suite. @ 07/20/24 12:54:58.04
• [3.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 07/20/24 12:54:58.047
  Jul 20 12:54:58.047: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename server-version @ 07/20/24 12:54:58.047
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:54:58.061
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:54:58.065
  STEP: Request ServerVersion @ 07/20/24 12:54:58.068
  STEP: Confirm major version @ 07/20/24 12:54:58.069
  Jul 20 12:54:58.069: INFO: Major version: 1
  STEP: Confirm minor version @ 07/20/24 12:54:58.069
  Jul 20 12:54:58.069: INFO: cleanMinorVersion: 29
  Jul 20 12:54:58.069: INFO: Minor version: 29
  Jul 20 12:54:58.069: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-9848" for this suite. @ 07/20/24 12:54:58.071
• [0.030 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 07/20/24 12:54:58.077
  Jul 20 12:54:58.077: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename prestop @ 07/20/24 12:54:58.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:54:58.09
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:54:58.094
  STEP: Creating server pod server in namespace prestop-5624 @ 07/20/24 12:54:58.096
  STEP: Waiting for pods to come up. @ 07/20/24 12:54:58.103
  STEP: Creating tester pod tester in namespace prestop-5624 @ 07/20/24 12:55:00.115
  STEP: Deleting pre-stop pod @ 07/20/24 12:55:02.131
  Jul 20 12:55:07.143: INFO: Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 07/20/24 12:55:07.143
  Jul 20 12:55:07.157: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-5624" for this suite. @ 07/20/24 12:55:07.16
• [9.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 07/20/24 12:55:07.166
  Jul 20 12:55:07.166: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename endpointslicemirroring @ 07/20/24 12:55:07.167
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:55:07.179
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:55:07.184
  STEP: mirroring a new custom Endpoint @ 07/20/24 12:55:07.195
  Jul 20 12:55:07.204: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 07/20/24 12:55:09.209
  Jul 20 12:55:09.218: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  STEP: mirroring deletion of a custom Endpoint @ 07/20/24 12:55:11.223
  Jul 20 12:55:11.232: INFO: Waiting for 0 EndpointSlices to exist, got 1
  Jul 20 12:55:13.237: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-5530" for this suite. @ 07/20/24 12:55:13.24
• [6.080 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:530
  STEP: Creating a kubernetes client @ 07/20/24 12:55:13.246
  Jul 20 12:55:13.246: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename security-context-test @ 07/20/24 12:55:13.247
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:55:13.263
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:55:13.265
  Jul 20 12:55:17.306: INFO: Got logs for pod "busybox-privileged-false-e737db34-8bdc-46eb-b16b-0c30d361ae1a": "ip: RTNETLINK answers: Operation not permitted\n"
  Jul 20 12:55:17.306: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-2916" for this suite. @ 07/20/24 12:55:17.309
• [4.070 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 07/20/24 12:55:17.316
  Jul 20 12:55:17.316: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename configmap @ 07/20/24 12:55:17.317
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:55:17.33
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:55:17.333
  STEP: Creating configMap with name configmap-test-volume-e52979ab-5053-417d-9715-e34c5b50c27e @ 07/20/24 12:55:17.338
  STEP: Creating a pod to test consume configMaps @ 07/20/24 12:55:17.343
  STEP: Saw pod success @ 07/20/24 12:55:21.362
  Jul 20 12:55:21.365: INFO: Trying to get logs from node ip-172-31-79-190 pod pod-configmaps-1c017c2d-bd03-42f2-b16a-0fcd8db0779a container configmap-volume-test: <nil>
  STEP: delete the pod @ 07/20/24 12:55:21.371
  Jul 20 12:55:21.386: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9256" for this suite. @ 07/20/24 12:55:21.388
• [4.078 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 07/20/24 12:55:21.394
  Jul 20 12:55:21.395: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename init-container @ 07/20/24 12:55:21.395
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:55:21.408
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:55:21.411
  STEP: creating the pod @ 07/20/24 12:55:21.414
  Jul 20 12:55:21.414: INFO: PodSpec: initContainers in spec.initContainers
  Jul 20 12:56:07.893: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-c1fe6a09-fb79-43dc-b6bc-6d0a0136eafd", GenerateName:"", Namespace:"init-container-2079", SelfLink:"", UID:"25c2b5cc-f945-4f9a-b3de-aa91d2d4220c", ResourceVersion:"18705", Generation:0, CreationTimestamp:time.Date(2024, time.July, 20, 12, 55, 21, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"414463768"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 55, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00509c210), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 20, 12, 56, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00509c2a0), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-h4rkl", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc0000c0860), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-h4rkl", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-h4rkl", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-h4rkl", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc00119d9e0), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ip-172-31-79-190", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc00023bf10), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc00119da70)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc00119da90)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc00119da98), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc00119da9c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc0052e9050), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.July, 20, 12, 55, 22, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.July, 20, 12, 55, 21, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.July, 20, 12, 55, 21, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.July, 20, 12, 55, 21, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.July, 20, 12, 55, 21, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.31.79.190", HostIPs:[]v1.HostIP{v1.HostIP{IP:"172.31.79.190"}}, PodIP:"192.168.120.236", PodIPs:[]v1.PodIP{v1.PodIP{IP:"192.168.120.236"}}, StartTime:time.Date(2024, time.July, 20, 12, 55, 21, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc00039a540)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc00039a5b0)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://22c2a14ad5aa4359a4bc833f13a84a3619cbd4434fdd7dd4dd51c928394ddbbd", Started:(*bool)(0xc00119db3f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0000c08c0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc00119db45), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0000c08a0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc00119db14), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  Jul 20 12:56:07.893: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-2079" for this suite. @ 07/20/24 12:56:07.897
• [46.509 seconds]
------------------------------
S
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 07/20/24 12:56:07.903
  Jul 20 12:56:07.903: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename ingressclass @ 07/20/24 12:56:07.904
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:56:07.917
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:56:07.919
  STEP: getting /apis @ 07/20/24 12:56:07.922
  STEP: getting /apis/networking.k8s.io @ 07/20/24 12:56:07.924
  STEP: getting /apis/networking.k8s.iov1 @ 07/20/24 12:56:07.925
  STEP: creating @ 07/20/24 12:56:07.926
  STEP: getting @ 07/20/24 12:56:07.938
  STEP: listing @ 07/20/24 12:56:07.94
  STEP: watching @ 07/20/24 12:56:07.943
  Jul 20 12:56:07.943: INFO: starting watch
  STEP: patching @ 07/20/24 12:56:07.944
  STEP: updating @ 07/20/24 12:56:07.949
  Jul 20 12:56:07.954: INFO: waiting for watch events with expected annotations
  Jul 20 12:56:07.954: INFO: saw patched and updated annotations
  STEP: deleting @ 07/20/24 12:56:07.954
  STEP: deleting a collection @ 07/20/24 12:56:07.963
  Jul 20 12:56:07.976: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-2464" for this suite. @ 07/20/24 12:56:07.979
• [0.081 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 07/20/24 12:56:07.985
  Jul 20 12:56:07.985: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename emptydir @ 07/20/24 12:56:07.985
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:56:07.997
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:56:08
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 07/20/24 12:56:08.003
  STEP: Saw pod success @ 07/20/24 12:56:12.022
  Jul 20 12:56:12.025: INFO: Trying to get logs from node ip-172-31-25-173 pod pod-415b60a0-145d-426c-9019-da7e37239f8e container test-container: <nil>
  STEP: delete the pod @ 07/20/24 12:56:12.041
  Jul 20 12:56:12.054: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3536" for this suite. @ 07/20/24 12:56:12.057
• [4.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 07/20/24 12:56:12.064
  Jul 20 12:56:12.064: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename replicaset @ 07/20/24 12:56:12.064
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:56:12.078
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:56:12.081
  Jul 20 12:56:12.083: INFO: Creating ReplicaSet my-hostname-basic-5a73e0de-0d38-481a-938a-8b6bde3f1ba4
  Jul 20 12:56:12.092: INFO: Pod name my-hostname-basic-5a73e0de-0d38-481a-938a-8b6bde3f1ba4: Found 0 pods out of 1
  Jul 20 12:56:17.096: INFO: Pod name my-hostname-basic-5a73e0de-0d38-481a-938a-8b6bde3f1ba4: Found 1 pods out of 1
  Jul 20 12:56:17.096: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-5a73e0de-0d38-481a-938a-8b6bde3f1ba4" is running
  Jul 20 12:56:17.099: INFO: Pod "my-hostname-basic-5a73e0de-0d38-481a-938a-8b6bde3f1ba4-d2vqj" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-20 12:56:13 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-20 12:56:12 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-20 12:56:13 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-20 12:56:13 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-20 12:56:12 +0000 UTC Reason: Message:}])
  Jul 20 12:56:17.099: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 07/20/24 12:56:17.099
  Jul 20 12:56:17.108: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2504" for this suite. @ 07/20/24 12:56:17.111
• [5.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 07/20/24 12:56:17.117
  Jul 20 12:56:17.118: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename projected @ 07/20/24 12:56:17.118
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:56:17.132
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:56:17.138
  STEP: Creating a pod to test downward API volume plugin @ 07/20/24 12:56:17.141
  STEP: Saw pod success @ 07/20/24 12:56:19.157
  Jul 20 12:56:19.161: INFO: Trying to get logs from node ip-172-31-79-190 pod downwardapi-volume-9367ab1b-4125-4509-9688-26b28d46f62f container client-container: <nil>
  STEP: delete the pod @ 07/20/24 12:56:19.166
  Jul 20 12:56:19.177: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8795" for this suite. @ 07/20/24 12:56:19.18
• [2.069 seconds]
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 07/20/24 12:56:19.186
  Jul 20 12:56:19.186: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename watch @ 07/20/24 12:56:19.187
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:56:19.2
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:56:19.202
  STEP: creating a watch on configmaps with a certain label @ 07/20/24 12:56:19.205
  STEP: creating a new configmap @ 07/20/24 12:56:19.206
  STEP: modifying the configmap once @ 07/20/24 12:56:19.21
  STEP: changing the label value of the configmap @ 07/20/24 12:56:19.216
  STEP: Expecting to observe a delete notification for the watched object @ 07/20/24 12:56:19.222
  Jul 20 12:56:19.222: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8712  5bb1f671-20d0-45aa-bf89-a1ffdc843a42 18854 0 2024-07-20 12:56:19 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-07-20 12:56:19 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jul 20 12:56:19.222: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8712  5bb1f671-20d0-45aa-bf89-a1ffdc843a42 18855 0 2024-07-20 12:56:19 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-07-20 12:56:19 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jul 20 12:56:19.222: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8712  5bb1f671-20d0-45aa-bf89-a1ffdc843a42 18856 0 2024-07-20 12:56:19 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-07-20 12:56:19 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 07/20/24 12:56:19.222
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 07/20/24 12:56:19.228
  STEP: changing the label value of the configmap back @ 07/20/24 12:56:29.229
  STEP: modifying the configmap a third time @ 07/20/24 12:56:29.24
  STEP: deleting the configmap @ 07/20/24 12:56:29.249
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 07/20/24 12:56:29.255
  Jul 20 12:56:29.255: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8712  5bb1f671-20d0-45aa-bf89-a1ffdc843a42 18905 0 2024-07-20 12:56:19 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-07-20 12:56:29 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jul 20 12:56:29.255: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8712  5bb1f671-20d0-45aa-bf89-a1ffdc843a42 18906 0 2024-07-20 12:56:19 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-07-20 12:56:29 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jul 20 12:56:29.255: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8712  5bb1f671-20d0-45aa-bf89-a1ffdc843a42 18907 0 2024-07-20 12:56:19 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-07-20 12:56:29 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jul 20 12:56:29.255: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-8712" for this suite. @ 07/20/24 12:56:29.258
• [10.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 07/20/24 12:56:29.265
  Jul 20 12:56:29.265: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename secrets @ 07/20/24 12:56:29.266
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:56:29.279
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:56:29.282
  STEP: Creating secret with name secret-test-a05616e9-cd58-437f-b774-713a16cb3e7f @ 07/20/24 12:56:29.284
  STEP: Creating a pod to test consume secrets @ 07/20/24 12:56:29.289
  STEP: Saw pod success @ 07/20/24 12:56:31.303
  Jul 20 12:56:31.306: INFO: Trying to get logs from node ip-172-31-79-190 pod pod-secrets-d3af0630-e809-4bb9-8334-f25508ee4a47 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/20/24 12:56:31.312
  Jul 20 12:56:31.325: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2729" for this suite. @ 07/20/24 12:56:31.328
• [2.069 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 07/20/24 12:56:31.334
  Jul 20 12:56:31.334: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename tables @ 07/20/24 12:56:31.335
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:56:31.349
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:56:31.351
  Jul 20 12:56:31.355: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-3583" for this suite. @ 07/20/24 12:56:31.358
• [0.030 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1031
  STEP: Creating a kubernetes client @ 07/20/24 12:56:31.364
  Jul 20 12:56:31.364: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename statefulset @ 07/20/24 12:56:31.364
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:56:31.375
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:56:31.379
  STEP: Creating service test in namespace statefulset-2518 @ 07/20/24 12:56:31.381
  STEP: Creating statefulset ss in namespace statefulset-2518 @ 07/20/24 12:56:31.398
  Jul 20 12:56:31.413: INFO: Found 0 stateful pods, waiting for 1
  Jul 20 12:56:41.412: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 07/20/24 12:56:41.417
  STEP: Getting /status @ 07/20/24 12:56:41.426
  Jul 20 12:56:41.429: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 07/20/24 12:56:41.429
  Jul 20 12:56:41.438: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 07/20/24 12:56:41.438
  Jul 20 12:56:41.439: INFO: Observed &StatefulSet event: ADDED
  Jul 20 12:56:41.439: INFO: Found Statefulset ss in namespace statefulset-2518 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jul 20 12:56:41.439: INFO: Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 07/20/24 12:56:41.439
  Jul 20 12:56:41.439: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Jul 20 12:56:41.445: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 07/20/24 12:56:41.445
  Jul 20 12:56:41.446: INFO: Observed &StatefulSet event: ADDED
  Jul 20 12:56:41.447: INFO: Deleting all statefulset in ns statefulset-2518
  Jul 20 12:56:41.449: INFO: Scaling statefulset ss to 0
  Jul 20 12:56:51.464: INFO: Waiting for statefulset status.replicas updated to 0
  Jul 20 12:56:51.467: INFO: Deleting statefulset ss
  Jul 20 12:56:51.479: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2518" for this suite. @ 07/20/24 12:56:51.482
• [20.124 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:453
  STEP: Creating a kubernetes client @ 07/20/24 12:56:51.488
  Jul 20 12:56:51.488: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename resourcequota @ 07/20/24 12:56:51.489
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:56:51.502
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:56:51.505
  STEP: Counting existing ResourceQuota @ 07/20/24 12:56:51.507
  STEP: Creating a ResourceQuota @ 07/20/24 12:56:56.51
  STEP: Ensuring resource quota status is calculated @ 07/20/24 12:56:56.517
  STEP: Creating a ReplicaSet @ 07/20/24 12:56:58.522
  STEP: Ensuring resource quota status captures replicaset creation @ 07/20/24 12:56:58.533
  STEP: Deleting a ReplicaSet @ 07/20/24 12:57:00.538
  STEP: Ensuring resource quota status released usage @ 07/20/24 12:57:00.545
  Jul 20 12:57:02.550: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4466" for this suite. @ 07/20/24 12:57:02.553
• [11.072 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1084
  STEP: Creating a kubernetes client @ 07/20/24 12:57:02.56
  Jul 20 12:57:02.560: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename kubectl @ 07/20/24 12:57:02.561
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:57:02.572
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:57:02.575
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 07/20/24 12:57:02.579
  Jul 20 12:57:02.579: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-7528 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Jul 20 12:57:02.627: INFO: stderr: ""
  Jul 20 12:57:02.628: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 07/20/24 12:57:02.628
  Jul 20 12:57:02.628: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-7528 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  Jul 20 12:57:02.672: INFO: stderr: ""
  Jul 20 12:57:02.672: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 07/20/24 12:57:02.672
  Jul 20 12:57:02.675: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-7528 delete pods e2e-test-httpd-pod'
  Jul 20 12:57:04.016: INFO: stderr: ""
  Jul 20 12:57:04.016: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Jul 20 12:57:04.017: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7528" for this suite. @ 07/20/24 12:57:04.021
• [1.467 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 07/20/24 12:57:04.027
  Jul 20 12:57:04.027: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename container-probe @ 07/20/24 12:57:04.028
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 12:57:04.042
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 12:57:04.046
  STEP: Creating pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918 @ 07/20/24 12:57:04.05
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/20/24 12:57:06.07
  Jul 20 12:57:06.074: INFO: Initial restart count of pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 is 0
  Jul 20 12:57:06.076: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:57:08.080: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:57:10.085: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:57:12.089: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:57:14.094: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:57:16.098: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:57:18.103: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:57:20.107: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:57:22.112: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:57:24.116: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:57:26.120: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:57:28.125: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:57:30.129: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:57:32.133: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:57:34.139: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:57:36.143: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:57:38.148: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:57:40.152: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:57:42.158: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:57:44.163: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:57:46.167: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:57:48.172: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:57:50.176: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:57:52.180: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:57:54.184: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:57:56.188: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:57:58.192: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:58:00.197: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:58:02.202: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:58:04.207: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:58:06.211: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:58:08.215: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:58:10.220: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:58:12.226: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:58:14.231: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:58:16.235: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:58:18.240: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:58:20.245: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:58:22.250: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:58:24.255: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:58:26.260: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:58:28.264: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:58:30.268: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:58:32.272: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:58:34.278: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:58:36.282: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:58:38.287: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:58:40.291: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:58:42.295: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:58:44.300: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:58:46.305: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:58:48.310: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:58:50.315: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:58:52.320: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:58:54.325: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:58:56.330: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:58:58.335: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:59:00.340: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:59:02.345: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:59:04.350: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:59:06.354: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:59:08.359: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:59:10.363: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:59:12.369: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:59:14.373: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:59:16.378: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:59:18.383: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:59:20.387: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:59:22.392: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:59:24.396: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:59:26.400: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:59:28.404: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:59:30.409: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:59:32.413: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:59:34.418: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:59:36.422: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:59:38.427: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:59:40.430: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:59:42.435: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:59:44.439: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:59:46.443: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:59:48.447: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:59:50.452: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:59:52.456: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:59:54.461: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:59:56.466: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 12:59:58.472: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 13:00:00.476: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 13:00:02.480: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 13:00:04.485: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 13:00:06.490: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 13:00:08.495: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 13:00:10.500: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 13:00:12.504: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 13:00:14.509: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 13:00:16.514: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 13:00:18.518: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 13:00:20.523: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 13:00:22.527: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 13:00:24.532: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 13:00:26.536: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 13:00:28.540: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 13:00:30.547: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 13:00:32.551: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 13:00:34.556: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 13:00:36.561: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 13:00:38.566: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 13:00:40.571: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 13:00:42.575: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 13:00:44.579: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 13:00:46.583: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 13:00:48.589: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 13:00:50.593: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 13:00:52.597: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 13:00:54.602: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 13:00:56.607: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 13:00:58.612: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 13:01:00.616: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 13:01:02.621: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  Jul 20 13:01:04.625: INFO: Get pod busybox-85ce83b1-0717-4d18-a924-fa139b72f6d0 in namespace container-probe-3918
  STEP: deleting the pod @ 07/20/24 13:01:06.626
  Jul 20 13:01:06.641: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3918" for this suite. @ 07/20/24 13:01:06.65
• [242.629 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 07/20/24 13:01:06.657
  Jul 20 13:01:06.657: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename watch @ 07/20/24 13:01:06.658
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:01:06.686
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:01:06.69
  STEP: creating a watch on configmaps with label A @ 07/20/24 13:01:06.694
  STEP: creating a watch on configmaps with label B @ 07/20/24 13:01:06.695
  STEP: creating a watch on configmaps with label A or B @ 07/20/24 13:01:06.696
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 07/20/24 13:01:06.698
  Jul 20 13:01:06.709: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2929  2ef78a1a-6afc-4ef4-ad89-4511c6ae7aff 19649 0 2024-07-20 13:01:06 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-07-20 13:01:06 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jul 20 13:01:06.709: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2929  2ef78a1a-6afc-4ef4-ad89-4511c6ae7aff 19649 0 2024-07-20 13:01:06 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-07-20 13:01:06 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 07/20/24 13:01:06.709
  Jul 20 13:01:06.717: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2929  2ef78a1a-6afc-4ef4-ad89-4511c6ae7aff 19650 0 2024-07-20 13:01:06 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-07-20 13:01:06 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jul 20 13:01:06.717: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2929  2ef78a1a-6afc-4ef4-ad89-4511c6ae7aff 19650 0 2024-07-20 13:01:06 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-07-20 13:01:06 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 07/20/24 13:01:06.717
  Jul 20 13:01:06.724: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2929  2ef78a1a-6afc-4ef4-ad89-4511c6ae7aff 19651 0 2024-07-20 13:01:06 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-07-20 13:01:06 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jul 20 13:01:06.724: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2929  2ef78a1a-6afc-4ef4-ad89-4511c6ae7aff 19651 0 2024-07-20 13:01:06 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-07-20 13:01:06 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 07/20/24 13:01:06.724
  Jul 20 13:01:06.731: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2929  2ef78a1a-6afc-4ef4-ad89-4511c6ae7aff 19652 0 2024-07-20 13:01:06 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-07-20 13:01:06 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jul 20 13:01:06.732: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2929  2ef78a1a-6afc-4ef4-ad89-4511c6ae7aff 19652 0 2024-07-20 13:01:06 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-07-20 13:01:06 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 07/20/24 13:01:06.732
  Jul 20 13:01:06.738: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-2929  b2658352-86f6-4a6f-ab28-9aca9b0729a4 19653 0 2024-07-20 13:01:06 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-07-20 13:01:06 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jul 20 13:01:06.738: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-2929  b2658352-86f6-4a6f-ab28-9aca9b0729a4 19653 0 2024-07-20 13:01:06 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-07-20 13:01:06 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 07/20/24 13:01:16.738
  Jul 20 13:01:16.746: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-2929  b2658352-86f6-4a6f-ab28-9aca9b0729a4 19684 0 2024-07-20 13:01:06 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-07-20 13:01:06 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jul 20 13:01:16.746: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-2929  b2658352-86f6-4a6f-ab28-9aca9b0729a4 19684 0 2024-07-20 13:01:06 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-07-20 13:01:06 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jul 20 13:01:26.748: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2929" for this suite. @ 07/20/24 13:01:26.752
• [20.103 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 07/20/24 13:01:26.76
  Jul 20 13:01:26.760: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename configmap @ 07/20/24 13:01:26.761
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:01:26.772
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:01:26.775
  STEP: Creating configMap with name configmap-test-volume-map-6b374f40-b861-4aad-b52e-f6c626b656c8 @ 07/20/24 13:01:26.777
  STEP: Creating a pod to test consume configMaps @ 07/20/24 13:01:26.781
  STEP: Saw pod success @ 07/20/24 13:01:30.803
  Jul 20 13:01:30.806: INFO: Trying to get logs from node ip-172-31-79-190 pod pod-configmaps-845ffa81-d2f5-476d-a817-629a19a24dac container agnhost-container: <nil>
  STEP: delete the pod @ 07/20/24 13:01:30.82
  Jul 20 13:01:30.835: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-835" for this suite. @ 07/20/24 13:01:30.838
• [4.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 07/20/24 13:01:30.844
  Jul 20 13:01:30.844: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename init-container @ 07/20/24 13:01:30.845
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:01:30.859
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:01:30.862
  STEP: creating the pod @ 07/20/24 13:01:30.865
  Jul 20 13:01:30.865: INFO: PodSpec: initContainers in spec.initContainers
  Jul 20 13:01:34.599: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-3813" for this suite. @ 07/20/24 13:01:34.602
• [3.763 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 07/20/24 13:01:34.607
  Jul 20 13:01:34.607: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename webhook @ 07/20/24 13:01:34.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:01:34.624
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:01:34.628
  STEP: Setting up server cert @ 07/20/24 13:01:34.647
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/20/24 13:01:34.849
  STEP: Deploying the webhook pod @ 07/20/24 13:01:34.857
  STEP: Wait for the deployment to be ready @ 07/20/24 13:01:34.869
  Jul 20 13:01:34.875: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 07/20/24 13:01:36.885
  STEP: Verifying the service has paired with the endpoint @ 07/20/24 13:01:36.892
  Jul 20 13:01:37.893: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 07/20/24 13:01:37.9
  STEP: create a namespace for the webhook @ 07/20/24 13:01:37.913
  STEP: create a configmap should be unconditionally rejected by the webhook @ 07/20/24 13:01:37.929
  Jul 20 13:01:38.009: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4641" for this suite. @ 07/20/24 13:01:38.013
  STEP: Destroying namespace "webhook-markers-3131" for this suite. @ 07/20/24 13:01:38.018
  STEP: Destroying namespace "fail-closed-namespace-126" for this suite. @ 07/20/24 13:01:38.023
• [3.421 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 07/20/24 13:01:38.029
  Jul 20 13:01:38.029: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename deployment @ 07/20/24 13:01:38.029
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:01:38.044
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:01:38.047
  Jul 20 13:01:38.050: INFO: Creating deployment "test-recreate-deployment"
  Jul 20 13:01:38.056: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
  Jul 20 13:01:38.061: INFO: deployment "test-recreate-deployment" doesn't have the required revision set
  Jul 20 13:01:40.069: INFO: Waiting deployment "test-recreate-deployment" to complete
  Jul 20 13:01:40.071: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
  Jul 20 13:01:40.078: INFO: Updating deployment test-recreate-deployment
  Jul 20 13:01:40.079: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  Jul 20 13:01:40.173: INFO: Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2190",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8e3bae0e-fca6-459d-bab1-80ed6f4f3680",
      ResourceVersion: (string) (len=5) "19928",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857077298,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857077300,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857077300,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857077300,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857077300,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857077300,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857077298,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-76fb77d45\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jul 20 13:01:40.182: INFO: New ReplicaSet "test-recreate-deployment-76fb77d45" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2190",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e08a0e72-a05e-45dd-b890-805a835cb8fd",
      ResourceVersion: (string) (len=5) "19926",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857077300,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "8e3bae0e-fca6-459d-bab1-80ed6f4f3680",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857077300,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 38 65 33 62 61 65  30 65 2d 66 63 61 36 2d  |\"8e3bae0e-fca6-|
              00000120  34 35 39 64 2d 62 61 62  31 2d 38 30 65 64 36 66  |459d-bab1-80ed6f|
              00000130  34 66 33 36 38 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |4f3680\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857077300,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jul 20 13:01:40.183: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
  Jul 20 13:01:40.183: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-5cf87b5b86",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2190",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8024955c-1200-4cef-94c3-ef2eb51852f4",
      ResourceVersion: (string) (len=5) "19916",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857077298,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "8e3bae0e-fca6-459d-bab1-80ed6f4f3680",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857077300,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 38 65 33 62 61 65  30 65 2d 66 63 61 36 2d  |\"8e3bae0e-fca6-|
              00000120  34 35 39 64 2d 62 61 62  31 2d 38 30 65 64 36 66  |459d-bab1-80ed6f|
              00000130  34 66 33 36 38 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |4f3680\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857077300,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86",
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jul 20 13:01:40.192: INFO: Pod "test-recreate-deployment-76fb77d45-rfdvk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-76fb77d45-rfdvk",
      GenerateName: (string) (len=35) "test-recreate-deployment-76fb77d45-",
      Namespace: (string) (len=15) "deployment-2190",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "96a0d2c4-c77c-4590-805b-89f989f5726a",
      ResourceVersion: (string) (len=5) "19927",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857077300,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
          UID: (types.UID) (len=36) "e08a0e72-a05e-45dd-b890-805a835cb8fd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857077300,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 30  38 61 30 65 37 32 2d 61  |d\":\"e08a0e72-a|
              00000090  30 35 65 2d 34 35 64 64  2d 62 38 39 30 2d 38 30  |05e-45dd-b890-80|
              000000a0  35 61 38 33 35 63 62 38  66 64 5c 22 7d 22 3a 7b  |5a835cb8fd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857077300,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9kp9k",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9kp9k",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-79-190",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857077300,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857077300,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857077300,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857077300,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857077300,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.79.190",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.79.190"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857077300,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 20 13:01:40.193: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2190" for this suite. @ 07/20/24 13:01:40.202
• [2.181 seconds]
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 07/20/24 13:01:40.209
  Jul 20 13:01:40.209: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename csiinlinevolumes @ 07/20/24 13:01:40.21
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:01:40.224
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:01:40.227
  STEP: creating @ 07/20/24 13:01:40.23
  STEP: getting @ 07/20/24 13:01:40.242
  STEP: listing in namespace @ 07/20/24 13:01:40.246
  STEP: patching @ 07/20/24 13:01:40.25
  STEP: deleting @ 07/20/24 13:01:40.255
  Jul 20 13:01:40.266: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-6005" for this suite. @ 07/20/24 13:01:40.27
• [0.067 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:236
  STEP: Creating a kubernetes client @ 07/20/24 13:01:40.276
  Jul 20 13:01:40.276: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/20/24 13:01:40.277
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:01:40.29
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:01:40.294
  Jul 20 13:01:40.296: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 07/20/24 13:01:41.563
  Jul 20 13:01:41.564: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=crd-publish-openapi-6798 --namespace=crd-publish-openapi-6798 create -f -'
  Jul 20 13:01:43.629: INFO: stderr: ""
  Jul 20 13:01:43.629: INFO: stdout: "e2e-test-crd-publish-openapi-1231-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Jul 20 13:01:43.629: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=crd-publish-openapi-6798 --namespace=crd-publish-openapi-6798 delete e2e-test-crd-publish-openapi-1231-crds test-cr'
  Jul 20 13:01:43.676: INFO: stderr: ""
  Jul 20 13:01:43.676: INFO: stdout: "e2e-test-crd-publish-openapi-1231-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  Jul 20 13:01:43.676: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=crd-publish-openapi-6798 --namespace=crd-publish-openapi-6798 apply -f -'
  Jul 20 13:01:43.727: INFO: stderr: ""
  Jul 20 13:01:43.727: INFO: stdout: "e2e-test-crd-publish-openapi-1231-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Jul 20 13:01:43.727: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=crd-publish-openapi-6798 --namespace=crd-publish-openapi-6798 delete e2e-test-crd-publish-openapi-1231-crds test-cr'
  Jul 20 13:01:43.772: INFO: stderr: ""
  Jul 20 13:01:43.772: INFO: stdout: "e2e-test-crd-publish-openapi-1231-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 07/20/24 13:01:43.772
  Jul 20 13:01:43.772: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=crd-publish-openapi-6798 explain e2e-test-crd-publish-openapi-1231-crds'
  Jul 20 13:01:43.813: INFO: stderr: ""
  Jul 20 13:01:43.813: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-1231-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  Jul 20 13:01:45.004: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6798" for this suite. @ 07/20/24 13:01:45.009
• [4.737 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 07/20/24 13:01:45.014
  Jul 20 13:01:45.014: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename replication-controller @ 07/20/24 13:01:45.014
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:01:45.031
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:01:45.033
  STEP: Creating replication controller my-hostname-basic-a0e0ce7b-a3af-445c-ad6b-ebc2613d95b7 @ 07/20/24 13:01:45.035
  Jul 20 13:01:45.041: INFO: Pod name my-hostname-basic-a0e0ce7b-a3af-445c-ad6b-ebc2613d95b7: Found 0 pods out of 1
  Jul 20 13:01:50.043: INFO: Pod name my-hostname-basic-a0e0ce7b-a3af-445c-ad6b-ebc2613d95b7: Found 1 pods out of 1
  Jul 20 13:01:50.043: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-a0e0ce7b-a3af-445c-ad6b-ebc2613d95b7" are running
  Jul 20 13:01:50.046: INFO: Pod "my-hostname-basic-a0e0ce7b-a3af-445c-ad6b-ebc2613d95b7-zkbfc" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-20 13:01:46 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-20 13:01:45 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-20 13:01:46 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-20 13:01:46 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-20 13:01:45 +0000 UTC Reason: Message:}])
  Jul 20 13:01:50.046: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 07/20/24 13:01:50.046
  Jul 20 13:01:50.054: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3522" for this suite. @ 07/20/24 13:01:50.057
• [5.049 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 07/20/24 13:01:50.065
  Jul 20 13:01:50.065: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename projected @ 07/20/24 13:01:50.066
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:01:50.082
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:01:50.084
  STEP: Creating secret with name projected-secret-test-533977a9-4415-4e7e-86aa-a048fc9da113 @ 07/20/24 13:01:50.085
  STEP: Creating a pod to test consume secrets @ 07/20/24 13:01:50.089
  STEP: Saw pod success @ 07/20/24 13:01:54.103
  Jul 20 13:01:54.106: INFO: Trying to get logs from node ip-172-31-79-190 pod pod-projected-secrets-b320cdb6-cb11-4b75-bba1-f7014ebccb84 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/20/24 13:01:54.117
  Jul 20 13:01:54.130: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9130" for this suite. @ 07/20/24 13:01:54.132
• [4.072 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1455
  STEP: Creating a kubernetes client @ 07/20/24 13:01:54.138
  Jul 20 13:01:54.138: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename services @ 07/20/24 13:01:54.139
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:01:54.155
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:01:54.157
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-4449 @ 07/20/24 13:01:54.16
  STEP: changing the ExternalName service to type=NodePort @ 07/20/24 13:01:54.165
  STEP: creating replication controller externalname-service in namespace services-4449 @ 07/20/24 13:01:54.179
  I0720 13:01:54.186997      19 runners.go:197] Created replication controller with name: externalname-service, namespace: services-4449, replica count: 2
  I0720 13:01:57.238189      19 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jul 20 13:01:57.238: INFO: Creating new exec pod
  Jul 20 13:02:00.257: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=services-4449 exec execpodk46f6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Jul 20 13:02:00.354: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Jul 20 13:02:00.354: INFO: stdout: ""
  Jul 20 13:02:01.257: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=services-4449 exec execpodk46f6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Jul 20 13:02:01.341: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Jul 20 13:02:01.341: INFO: stdout: ""
  Jul 20 13:02:02.257: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=services-4449 exec execpodk46f6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Jul 20 13:02:02.349: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Jul 20 13:02:02.349: INFO: stdout: ""
  Jul 20 13:02:03.257: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=services-4449 exec execpodk46f6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Jul 20 13:02:03.341: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Jul 20 13:02:03.341: INFO: stdout: ""
  Jul 20 13:02:04.257: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=services-4449 exec execpodk46f6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Jul 20 13:02:04.341: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Jul 20 13:02:04.341: INFO: stdout: ""
  Jul 20 13:02:05.257: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=services-4449 exec execpodk46f6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Jul 20 13:02:05.342: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Jul 20 13:02:05.342: INFO: stdout: ""
  Jul 20 13:02:06.257: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=services-4449 exec execpodk46f6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Jul 20 13:02:06.341: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Jul 20 13:02:06.341: INFO: stdout: ""
  Jul 20 13:02:07.257: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=services-4449 exec execpodk46f6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Jul 20 13:02:07.350: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Jul 20 13:02:07.350: INFO: stdout: "externalname-service-7q2vh"
  Jul 20 13:02:07.350: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=services-4449 exec execpodk46f6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.110 80'
  Jul 20 13:02:07.436: INFO: stderr: "+ nc -v -t -w 2 10.152.183.110 80\nConnection to 10.152.183.110 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Jul 20 13:02:07.436: INFO: stdout: ""
  Jul 20 13:02:08.351: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=services-4449 exec execpodk46f6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.110 80'
  Jul 20 13:02:08.437: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.110 80\nConnection to 10.152.183.110 80 port [tcp/http] succeeded!\n"
  Jul 20 13:02:08.437: INFO: stdout: "externalname-service-ggtt2"
  Jul 20 13:02:08.437: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=services-4449 exec execpodk46f6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.3.74 32091'
  Jul 20 13:02:08.523: INFO: stderr: "+ nc -v -t -w 2 172.31.3.74 32091\n+ echo hostName\nConnection to 172.31.3.74 32091 port [tcp/*] succeeded!\n"
  Jul 20 13:02:08.523: INFO: stdout: ""
  Jul 20 13:02:09.437: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=services-4449 exec execpodk46f6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.3.74 32091'
  Jul 20 13:02:09.522: INFO: stderr: "+ nc -v -t -w 2 172.31.3.74 32091\n+ echo hostName\nConnection to 172.31.3.74 32091 port [tcp/*] succeeded!\n"
  Jul 20 13:02:09.522: INFO: stdout: "externalname-service-7q2vh"
  Jul 20 13:02:09.522: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=services-4449 exec execpodk46f6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.79.190 32091'
  Jul 20 13:02:09.609: INFO: stderr: "+ nc -v -t -w 2 172.31.79.190 32091\nConnection to 172.31.79.190 32091 port [tcp/*] succeeded!\n+ echo hostName\n"
  Jul 20 13:02:09.609: INFO: stdout: ""
  Jul 20 13:02:10.522: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=services-4449 exec execpodk46f6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.79.190 32091'
  Jul 20 13:02:10.608: INFO: stderr: "+ nc -v -t -w 2 172.31.79.190 32091\n+ echo hostName\nConnection to 172.31.79.190 32091 port [tcp/*] succeeded!\n"
  Jul 20 13:02:10.608: INFO: stdout: ""
  Jul 20 13:02:11.522: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=services-4449 exec execpodk46f6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.79.190 32091'
  Jul 20 13:02:11.604: INFO: stderr: "+ nc -v -t -w 2 172.31.79.190 32091\nConnection to 172.31.79.190 32091 port [tcp/*] succeeded!\n+ echo hostName\n"
  Jul 20 13:02:11.604: INFO: stdout: ""
  Jul 20 13:02:12.523: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=services-4449 exec execpodk46f6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.79.190 32091'
  Jul 20 13:02:12.613: INFO: stderr: "+ nc -v -t -w 2 172.31.79.190 32091\nConnection to 172.31.79.190 32091 port [tcp/*] succeeded!\n+ echo hostName\n"
  Jul 20 13:02:12.613: INFO: stdout: "externalname-service-ggtt2"
  Jul 20 13:02:12.613: INFO: Cleaning up the ExternalName to NodePort test service
  Jul 20 13:02:12.634: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4449" for this suite. @ 07/20/24 13:02:12.636
• [18.505 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 07/20/24 13:02:12.644
  Jul 20 13:02:12.644: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename daemonsets @ 07/20/24 13:02:12.644
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:02:12.659
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:02:12.66
  STEP: Creating simple DaemonSet "daemon-set" @ 07/20/24 13:02:12.683
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/20/24 13:02:12.686
  Jul 20 13:02:12.689: INFO: DaemonSet pods can't tolerate node ip-172-31-19-200 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 20 13:02:12.689: INFO: DaemonSet pods can't tolerate node ip-172-31-76-81 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 20 13:02:12.691: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul 20 13:02:12.691: INFO: Node ip-172-31-25-173 is running 0 daemon pod, expected 1
  Jul 20 13:02:13.691: INFO: DaemonSet pods can't tolerate node ip-172-31-19-200 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 20 13:02:13.691: INFO: DaemonSet pods can't tolerate node ip-172-31-76-81 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 20 13:02:13.696: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jul 20 13:02:13.696: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 07/20/24 13:02:13.7
  Jul 20 13:02:13.706: INFO: Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 07/20/24 13:02:13.706
  Jul 20 13:02:13.715: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 07/20/24 13:02:13.716
  Jul 20 13:02:13.717: INFO: Observed &DaemonSet event: ADDED
  Jul 20 13:02:13.717: INFO: Observed &DaemonSet event: MODIFIED
  Jul 20 13:02:13.717: INFO: Observed &DaemonSet event: MODIFIED
  Jul 20 13:02:13.717: INFO: Observed &DaemonSet event: MODIFIED
  Jul 20 13:02:13.717: INFO: Observed &DaemonSet event: MODIFIED
  Jul 20 13:02:13.717: INFO: Found daemon set daemon-set in namespace daemonsets-7981 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Jul 20 13:02:13.717: INFO: Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 07/20/24 13:02:13.717
  STEP: watching for the daemon set status to be patched @ 07/20/24 13:02:13.723
  Jul 20 13:02:13.724: INFO: Observed &DaemonSet event: ADDED
  Jul 20 13:02:13.724: INFO: Observed &DaemonSet event: MODIFIED
  Jul 20 13:02:13.724: INFO: Observed &DaemonSet event: MODIFIED
  Jul 20 13:02:13.724: INFO: Observed &DaemonSet event: MODIFIED
  Jul 20 13:02:13.724: INFO: Observed &DaemonSet event: MODIFIED
  Jul 20 13:02:13.724: INFO: Observed daemon set daemon-set in namespace daemonsets-7981 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Jul 20 13:02:13.724: INFO: Observed &DaemonSet event: MODIFIED
  Jul 20 13:02:13.724: INFO: Found daemon set daemon-set in namespace daemonsets-7981 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  Jul 20 13:02:13.724: INFO: Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 07/20/24 13:02:13.73
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7981, will wait for the garbage collector to delete the pods @ 07/20/24 13:02:13.73
  Jul 20 13:02:13.790: INFO: Deleting DaemonSet.extensions daemon-set took: 5.709859ms
  Jul 20 13:02:13.891: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.072505ms
  Jul 20 13:02:15.695: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul 20 13:02:15.695: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jul 20 13:02:15.698: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"20315"},"items":null}

  Jul 20 13:02:15.699: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"20315"},"items":null}

  Jul 20 13:02:15.707: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7981" for this suite. @ 07/20/24 13:02:15.71
• [3.072 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3154
  STEP: Creating a kubernetes client @ 07/20/24 13:02:15.716
  Jul 20 13:02:15.716: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename services @ 07/20/24 13:02:15.716
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:02:15.732
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:02:15.734
  STEP: creating an Endpoint @ 07/20/24 13:02:15.737
  STEP: waiting for available Endpoint @ 07/20/24 13:02:15.741
  STEP: listing all Endpoints @ 07/20/24 13:02:15.742
  STEP: updating the Endpoint @ 07/20/24 13:02:15.744
  STEP: fetching the Endpoint @ 07/20/24 13:02:15.748
  STEP: patching the Endpoint @ 07/20/24 13:02:15.753
  STEP: fetching the Endpoint @ 07/20/24 13:02:15.758
  STEP: deleting the Endpoint by Collection @ 07/20/24 13:02:15.761
  STEP: waiting for Endpoint deletion @ 07/20/24 13:02:15.775
  STEP: fetching the Endpoint @ 07/20/24 13:02:15.776
  Jul 20 13:02:15.778: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1598" for this suite. @ 07/20/24 13:02:15.781
• [0.070 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 07/20/24 13:02:15.786
  Jul 20 13:02:15.786: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename field-validation @ 07/20/24 13:02:15.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:02:15.802
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:02:15.806
  Jul 20 13:02:15.812: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  W0720 13:02:18.350035      19 warnings.go:70] unknown field "alpha"
  W0720 13:02:18.350056      19 warnings.go:70] unknown field "beta"
  W0720 13:02:18.350059      19 warnings.go:70] unknown field "delta"
  W0720 13:02:18.350063      19 warnings.go:70] unknown field "epsilon"
  W0720 13:02:18.350067      19 warnings.go:70] unknown field "gamma"
  Jul 20 13:02:18.880: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8259" for this suite. @ 07/20/24 13:02:18.882
• [3.103 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 07/20/24 13:02:18.889
  Jul 20 13:02:18.889: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename webhook @ 07/20/24 13:02:18.89
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:02:18.905
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:02:18.907
  STEP: Setting up server cert @ 07/20/24 13:02:18.931
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/20/24 13:02:19.074
  STEP: Deploying the webhook pod @ 07/20/24 13:02:19.082
  STEP: Wait for the deployment to be ready @ 07/20/24 13:02:19.091
  Jul 20 13:02:19.100: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/20/24 13:02:21.111
  STEP: Verifying the service has paired with the endpoint @ 07/20/24 13:02:21.118
  Jul 20 13:02:22.118: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 07/20/24 13:02:22.123
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/20/24 13:02:22.137
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 07/20/24 13:02:22.142
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/20/24 13:02:22.15
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 07/20/24 13:02:22.161
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/20/24 13:02:22.167
  Jul 20 13:02:22.206: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6886" for this suite. @ 07/20/24 13:02:22.208
  STEP: Destroying namespace "webhook-markers-9071" for this suite. @ 07/20/24 13:02:22.216
• [3.332 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:169
  STEP: Creating a kubernetes client @ 07/20/24 13:02:22.222
  Jul 20 13:02:22.222: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 07/20/24 13:02:22.223
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:02:22.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:02:22.241
  STEP: create the container to handle the HTTPGet hook request. @ 07/20/24 13:02:22.246
  STEP: create the pod with lifecycle hook @ 07/20/24 13:02:24.262
  STEP: check poststart hook @ 07/20/24 13:02:26.278
  STEP: delete the pod with lifecycle hook @ 07/20/24 13:02:26.296
  Jul 20 13:02:28.308: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-6468" for this suite. @ 07/20/24 13:02:28.311
• [6.095 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 07/20/24 13:02:28.317
  Jul 20 13:02:28.317: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename dns @ 07/20/24 13:02:28.317
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:02:28.334
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:02:28.336
  STEP: Creating a test externalName service @ 07/20/24 13:02:28.337
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-426.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-426.svc.cluster.local; sleep 1; done
   @ 07/20/24 13:02:28.341
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-426.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-426.svc.cluster.local; sleep 1; done
   @ 07/20/24 13:02:28.341
  STEP: creating a pod to probe DNS @ 07/20/24 13:02:28.341
  STEP: submitting the pod to kubernetes @ 07/20/24 13:02:28.341
  STEP: retrieving the pod @ 07/20/24 13:02:30.354
  STEP: looking for the results for each expected name from probers @ 07/20/24 13:02:30.356
  Jul 20 13:02:30.364: INFO: DNS probes using dns-test-77a84d49-f036-4828-abb4-727cee5bc5fb succeeded

  STEP: changing the externalName to bar.example.com @ 07/20/24 13:02:30.364
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-426.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-426.svc.cluster.local; sleep 1; done
   @ 07/20/24 13:02:30.371
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-426.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-426.svc.cluster.local; sleep 1; done
   @ 07/20/24 13:02:30.371
  STEP: creating a second pod to probe DNS @ 07/20/24 13:02:30.371
  STEP: submitting the pod to kubernetes @ 07/20/24 13:02:30.371
  STEP: retrieving the pod @ 07/20/24 13:02:36.392
  STEP: looking for the results for each expected name from probers @ 07/20/24 13:02:36.394
  Jul 20 13:02:36.400: INFO: DNS probes using dns-test-f0d482c5-3387-4397-ac20-546e701a1357 succeeded

  STEP: changing the service to type=ClusterIP @ 07/20/24 13:02:36.4
  W0720 13:02:36.412252      19 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-426.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-426.svc.cluster.local; sleep 1; done
   @ 07/20/24 13:02:36.412
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-426.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-426.svc.cluster.local; sleep 1; done
   @ 07/20/24 13:02:36.412
  STEP: creating a third pod to probe DNS @ 07/20/24 13:02:36.412
  STEP: submitting the pod to kubernetes @ 07/20/24 13:02:36.415
  STEP: retrieving the pod @ 07/20/24 13:02:38.427
  STEP: looking for the results for each expected name from probers @ 07/20/24 13:02:38.429
  Jul 20 13:02:38.437: INFO: DNS probes using dns-test-d7fb1f47-9c82-4752-b0f2-c66752f4203b succeeded

  STEP: deleting the pod @ 07/20/24 13:02:38.438
  STEP: deleting the pod @ 07/20/24 13:02:38.447
  STEP: deleting the pod @ 07/20/24 13:02:38.458
  STEP: deleting the test externalName service @ 07/20/24 13:02:38.469
  Jul 20 13:02:38.481: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-426" for this suite. @ 07/20/24 13:02:38.484
• [10.174 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:153
  STEP: Creating a kubernetes client @ 07/20/24 13:02:38.491
  Jul 20 13:02:38.491: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 07/20/24 13:02:38.491
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:02:38.507
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:02:38.508
  STEP: create the container to handle the HTTPGet hook request. @ 07/20/24 13:02:38.512
  STEP: create the pod with lifecycle hook @ 07/20/24 13:02:42.535
  STEP: delete the pod with lifecycle hook @ 07/20/24 13:02:44.549
  STEP: check prestop hook @ 07/20/24 13:02:46.561
  Jul 20 13:02:46.579: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-7991" for this suite. @ 07/20/24 13:02:46.582
• [8.097 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1538
  STEP: Creating a kubernetes client @ 07/20/24 13:02:46.588
  Jul 20 13:02:46.588: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename kubectl @ 07/20/24 13:02:46.588
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:02:46.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:02:46.607
  STEP: creating Agnhost RC @ 07/20/24 13:02:46.609
  Jul 20 13:02:46.609: INFO: namespace kubectl-6460
  Jul 20 13:02:46.609: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-6460 create -f -'
  Jul 20 13:02:46.689: INFO: stderr: ""
  Jul 20 13:02:46.689: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 07/20/24 13:02:46.689
  Jul 20 13:02:47.694: INFO: Selector matched 1 pods for map[app:agnhost]
  Jul 20 13:02:47.694: INFO: Found 1 / 1
  Jul 20 13:02:47.694: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Jul 20 13:02:47.696: INFO: Selector matched 1 pods for map[app:agnhost]
  Jul 20 13:02:47.696: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Jul 20 13:02:47.696: INFO: wait on agnhost-primary startup in kubectl-6460 
  Jul 20 13:02:47.696: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-6460 logs agnhost-primary-f26z5 agnhost-primary'
  Jul 20 13:02:47.745: INFO: stderr: ""
  Jul 20 13:02:47.745: INFO: stdout: "Paused\n"
  STEP: exposing RC @ 07/20/24 13:02:47.745
  Jul 20 13:02:47.745: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-6460 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  Jul 20 13:02:47.800: INFO: stderr: ""
  Jul 20 13:02:47.800: INFO: stdout: "service/rm2 exposed\n"
  Jul 20 13:02:47.805: INFO: Service rm2 in namespace kubectl-6460 found.
  STEP: exposing service @ 07/20/24 13:02:49.813
  Jul 20 13:02:49.813: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-6460 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  Jul 20 13:02:49.869: INFO: stderr: ""
  Jul 20 13:02:49.869: INFO: stdout: "service/rm3 exposed\n"
  Jul 20 13:02:49.873: INFO: Service rm3 in namespace kubectl-6460 found.
  Jul 20 13:02:51.878: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6460" for this suite. @ 07/20/24 13:02:51.889
• [5.308 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 07/20/24 13:02:51.896
  Jul 20 13:02:51.896: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename gc @ 07/20/24 13:02:51.897
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:02:51.912
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:02:51.914
  STEP: create the rc @ 07/20/24 13:02:51.919
  W0720 13:02:51.924174      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 07/20/24 13:02:57.93
  STEP: wait for the rc to be deleted @ 07/20/24 13:02:57.937
  Jul 20 13:02:58.956: INFO: 80 pods remaining
  Jul 20 13:02:58.956: INFO: 80 pods has nil DeletionTimestamp
  Jul 20 13:02:58.956: INFO: 
  Jul 20 13:02:59.953: INFO: 70 pods remaining
  Jul 20 13:02:59.953: INFO: 70 pods has nil DeletionTimestamp
  Jul 20 13:02:59.953: INFO: 
  Jul 20 13:03:00.944: INFO: 60 pods remaining
  Jul 20 13:03:00.944: INFO: 60 pods has nil DeletionTimestamp
  Jul 20 13:03:00.944: INFO: 
  Jul 20 13:03:01.959: INFO: 40 pods remaining
  Jul 20 13:03:01.968: INFO: 40 pods has nil DeletionTimestamp
  Jul 20 13:03:01.968: INFO: 
  Jul 20 13:03:02.953: INFO: 31 pods remaining
  Jul 20 13:03:02.953: INFO: 30 pods has nil DeletionTimestamp
  Jul 20 13:03:02.953: INFO: 
  Jul 20 13:03:03.943: INFO: 20 pods remaining
  Jul 20 13:03:03.943: INFO: 20 pods has nil DeletionTimestamp
  Jul 20 13:03:03.943: INFO: 
  STEP: Gathering metrics @ 07/20/24 13:03:04.946
  W0720 13:03:04.950073      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Jul 20 13:03:04.950: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jul 20 13:03:04.950: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8656" for this suite. @ 07/20/24 13:03:04.954
• [13.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 07/20/24 13:03:04.959
  Jul 20 13:03:04.959: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename subpath @ 07/20/24 13:03:04.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:03:04.976
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:03:04.979
  STEP: Setting up data @ 07/20/24 13:03:04.982
  STEP: Creating pod pod-subpath-test-projected-qglr @ 07/20/24 13:03:04.993
  STEP: Creating a pod to test atomic-volume-subpath @ 07/20/24 13:03:04.993
  STEP: Saw pod success @ 07/20/24 13:03:29.057
  Jul 20 13:03:29.060: INFO: Trying to get logs from node ip-172-31-79-190 pod pod-subpath-test-projected-qglr container test-container-subpath-projected-qglr: <nil>
  STEP: delete the pod @ 07/20/24 13:03:29.065
  STEP: Deleting pod pod-subpath-test-projected-qglr @ 07/20/24 13:03:29.078
  Jul 20 13:03:29.078: INFO: Deleting pod "pod-subpath-test-projected-qglr" in namespace "subpath-2372"
  Jul 20 13:03:29.080: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2372" for this suite. @ 07/20/24 13:03:29.083
• [24.130 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:47
  STEP: Creating a kubernetes client @ 07/20/24 13:03:29.089
  Jul 20 13:03:29.089: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename var-expansion @ 07/20/24 13:03:29.089
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:03:29.107
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:03:29.109
  STEP: Creating a pod to test env composition @ 07/20/24 13:03:29.11
  STEP: Saw pod success @ 07/20/24 13:03:31.123
  Jul 20 13:03:31.125: INFO: Trying to get logs from node ip-172-31-79-190 pod var-expansion-0c50c7d6-1ff6-413b-9779-6b500d269d61 container dapi-container: <nil>
  STEP: delete the pod @ 07/20/24 13:03:31.13
  Jul 20 13:03:31.143: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6943" for this suite. @ 07/20/24 13:03:31.146
• [2.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 07/20/24 13:03:31.151
  Jul 20 13:03:31.151: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename apf @ 07/20/24 13:03:31.152
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:03:31.168
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:03:31.169
  STEP: getting /apis @ 07/20/24 13:03:31.171
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 07/20/24 13:03:31.173
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 07/20/24 13:03:31.174
  STEP: creating @ 07/20/24 13:03:31.174
  STEP: getting @ 07/20/24 13:03:31.19
  STEP: listing @ 07/20/24 13:03:31.194
  STEP: watching @ 07/20/24 13:03:31.197
  Jul 20 13:03:31.197: INFO: starting watch
  STEP: patching @ 07/20/24 13:03:31.198
  STEP: updating @ 07/20/24 13:03:31.203
  Jul 20 13:03:31.210: INFO: waiting for watch events with expected annotations
  Jul 20 13:03:31.210: INFO: missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 07/20/24 13:03:31.21
  STEP: patching /status @ 07/20/24 13:03:31.212
  STEP: updating /status @ 07/20/24 13:03:31.218
  STEP: deleting @ 07/20/24 13:03:31.244
  STEP: deleting a collection @ 07/20/24 13:03:31.255
  Jul 20 13:03:31.276: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-3583" for this suite. @ 07/20/24 13:03:31.278
• [0.133 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 07/20/24 13:03:31.285
  Jul 20 13:03:31.285: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename apf @ 07/20/24 13:03:31.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:03:31.297
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:03:31.299
  STEP: getting /apis @ 07/20/24 13:03:31.301
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 07/20/24 13:03:31.303
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 07/20/24 13:03:31.304
  STEP: creating @ 07/20/24 13:03:31.305
  STEP: getting @ 07/20/24 13:03:31.318
  STEP: listing @ 07/20/24 13:03:31.32
  STEP: watching @ 07/20/24 13:03:31.322
  Jul 20 13:03:31.322: INFO: starting watch
  STEP: patching @ 07/20/24 13:03:31.323
  STEP: updating @ 07/20/24 13:03:31.328
  Jul 20 13:03:31.336: INFO: waiting for watch events with expected annotations
  STEP: getting /status @ 07/20/24 13:03:31.336
  STEP: patching /status @ 07/20/24 13:03:31.338
  STEP: updating /status @ 07/20/24 13:03:31.342
  STEP: deleting @ 07/20/24 13:03:31.347
  STEP: deleting a collection @ 07/20/24 13:03:31.357
  Jul 20 13:03:31.376: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-5757" for this suite. @ 07/20/24 13:03:31.378
• [0.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 07/20/24 13:03:31.383
  Jul 20 13:03:31.383: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename dns @ 07/20/24 13:03:31.384
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:03:31.4
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:03:31.402
  STEP: Creating a test headless service @ 07/20/24 13:03:31.403
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9704 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-9704;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9704 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-9704;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9704.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-9704.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9704.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-9704.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9704.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-9704.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9704.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-9704.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9704.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-9704.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9704.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-9704.svc;check="$$(dig +notcp +noall +answer +search 97.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.97_udp@PTR;check="$$(dig +tcp +noall +answer +search 97.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.97_tcp@PTR;sleep 1; done
   @ 07/20/24 13:03:31.416
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9704 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9704;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9704 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9704;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9704.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9704.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9704.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9704.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9704.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-9704.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9704.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-9704.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9704.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-9704.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9704.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-9704.svc;check="$$(dig +notcp +noall +answer +search 97.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.97_udp@PTR;check="$$(dig +tcp +noall +answer +search 97.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.97_tcp@PTR;sleep 1; done
   @ 07/20/24 13:03:31.416
  STEP: creating a pod to probe DNS @ 07/20/24 13:03:31.416
  STEP: submitting the pod to kubernetes @ 07/20/24 13:03:31.416
  STEP: retrieving the pod @ 07/20/24 13:03:33.433
  STEP: looking for the results for each expected name from probers @ 07/20/24 13:03:33.436
  Jul 20 13:03:33.439: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-9704/dns-test-8b00b341-18f1-444f-8d0a-3cc5a9db7ce8: the server could not find the requested resource (get pods dns-test-8b00b341-18f1-444f-8d0a-3cc5a9db7ce8)
  Jul 20 13:03:33.442: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-9704/dns-test-8b00b341-18f1-444f-8d0a-3cc5a9db7ce8: the server could not find the requested resource (get pods dns-test-8b00b341-18f1-444f-8d0a-3cc5a9db7ce8)
  Jul 20 13:03:33.445: INFO: Unable to read wheezy_udp@dns-test-service.dns-9704 from pod dns-9704/dns-test-8b00b341-18f1-444f-8d0a-3cc5a9db7ce8: the server could not find the requested resource (get pods dns-test-8b00b341-18f1-444f-8d0a-3cc5a9db7ce8)
  Jul 20 13:03:33.447: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9704 from pod dns-9704/dns-test-8b00b341-18f1-444f-8d0a-3cc5a9db7ce8: the server could not find the requested resource (get pods dns-test-8b00b341-18f1-444f-8d0a-3cc5a9db7ce8)
  Jul 20 13:03:33.451: INFO: Unable to read wheezy_udp@dns-test-service.dns-9704.svc from pod dns-9704/dns-test-8b00b341-18f1-444f-8d0a-3cc5a9db7ce8: the server could not find the requested resource (get pods dns-test-8b00b341-18f1-444f-8d0a-3cc5a9db7ce8)
  Jul 20 13:03:33.453: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9704.svc from pod dns-9704/dns-test-8b00b341-18f1-444f-8d0a-3cc5a9db7ce8: the server could not find the requested resource (get pods dns-test-8b00b341-18f1-444f-8d0a-3cc5a9db7ce8)
  Jul 20 13:03:33.455: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9704.svc from pod dns-9704/dns-test-8b00b341-18f1-444f-8d0a-3cc5a9db7ce8: the server could not find the requested resource (get pods dns-test-8b00b341-18f1-444f-8d0a-3cc5a9db7ce8)
  Jul 20 13:03:33.458: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9704.svc from pod dns-9704/dns-test-8b00b341-18f1-444f-8d0a-3cc5a9db7ce8: the server could not find the requested resource (get pods dns-test-8b00b341-18f1-444f-8d0a-3cc5a9db7ce8)
  Jul 20 13:03:33.471: INFO: Unable to read jessie_udp@dns-test-service from pod dns-9704/dns-test-8b00b341-18f1-444f-8d0a-3cc5a9db7ce8: the server could not find the requested resource (get pods dns-test-8b00b341-18f1-444f-8d0a-3cc5a9db7ce8)
  Jul 20 13:03:33.474: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-9704/dns-test-8b00b341-18f1-444f-8d0a-3cc5a9db7ce8: the server could not find the requested resource (get pods dns-test-8b00b341-18f1-444f-8d0a-3cc5a9db7ce8)
  Jul 20 13:03:33.477: INFO: Unable to read jessie_udp@dns-test-service.dns-9704 from pod dns-9704/dns-test-8b00b341-18f1-444f-8d0a-3cc5a9db7ce8: the server could not find the requested resource (get pods dns-test-8b00b341-18f1-444f-8d0a-3cc5a9db7ce8)
  Jul 20 13:03:33.479: INFO: Unable to read jessie_tcp@dns-test-service.dns-9704 from pod dns-9704/dns-test-8b00b341-18f1-444f-8d0a-3cc5a9db7ce8: the server could not find the requested resource (get pods dns-test-8b00b341-18f1-444f-8d0a-3cc5a9db7ce8)
  Jul 20 13:03:33.482: INFO: Unable to read jessie_udp@dns-test-service.dns-9704.svc from pod dns-9704/dns-test-8b00b341-18f1-444f-8d0a-3cc5a9db7ce8: the server could not find the requested resource (get pods dns-test-8b00b341-18f1-444f-8d0a-3cc5a9db7ce8)
  Jul 20 13:03:33.497: INFO: Unable to read jessie_tcp@dns-test-service.dns-9704.svc from pod dns-9704/dns-test-8b00b341-18f1-444f-8d0a-3cc5a9db7ce8: the server could not find the requested resource (get pods dns-test-8b00b341-18f1-444f-8d0a-3cc5a9db7ce8)
  Jul 20 13:03:33.502: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9704.svc from pod dns-9704/dns-test-8b00b341-18f1-444f-8d0a-3cc5a9db7ce8: the server could not find the requested resource (get pods dns-test-8b00b341-18f1-444f-8d0a-3cc5a9db7ce8)
  Jul 20 13:03:33.507: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9704.svc from pod dns-9704/dns-test-8b00b341-18f1-444f-8d0a-3cc5a9db7ce8: the server could not find the requested resource (get pods dns-test-8b00b341-18f1-444f-8d0a-3cc5a9db7ce8)
  Jul 20 13:03:33.528: INFO: Lookups using dns-9704/dns-test-8b00b341-18f1-444f-8d0a-3cc5a9db7ce8 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-9704 wheezy_tcp@dns-test-service.dns-9704 wheezy_udp@dns-test-service.dns-9704.svc wheezy_tcp@dns-test-service.dns-9704.svc wheezy_udp@_http._tcp.dns-test-service.dns-9704.svc wheezy_tcp@_http._tcp.dns-test-service.dns-9704.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-9704 jessie_tcp@dns-test-service.dns-9704 jessie_udp@dns-test-service.dns-9704.svc jessie_tcp@dns-test-service.dns-9704.svc jessie_udp@_http._tcp.dns-test-service.dns-9704.svc jessie_tcp@_http._tcp.dns-test-service.dns-9704.svc]

  Jul 20 13:03:33.534: INFO: Pod client logs for webserver: 
  Jul 20 13:03:33.545: INFO: Pod client logs for querier: 
  Jul 20 13:03:33.550: INFO: Pod client logs for jessie-querier: 
  Jul 20 13:03:38.503: INFO: DNS probes using dns-9704/dns-test-8b00b341-18f1-444f-8d0a-3cc5a9db7ce8 succeeded

  STEP: deleting the pod @ 07/20/24 13:03:38.503
  STEP: deleting the test service @ 07/20/24 13:03:38.513
  STEP: deleting the test headless service @ 07/20/24 13:03:38.529
  Jul 20 13:03:38.541: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9704" for this suite. @ 07/20/24 13:03:38.548
• [7.173 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 07/20/24 13:03:38.556
  Jul 20 13:03:38.556: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/20/24 13:03:38.556
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:03:38.571
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:03:38.574
  Jul 20 13:03:38.576: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  Jul 20 13:03:41.755: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6480" for this suite. @ 07/20/24 13:03:41.758
• [3.210 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 07/20/24 13:03:41.767
  Jul 20 13:03:41.767: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename disruption @ 07/20/24 13:03:41.767
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:03:41.782
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:03:41.784
  STEP: Waiting for the pdb to be processed @ 07/20/24 13:03:41.789
  STEP: Waiting for all pods to be running @ 07/20/24 13:03:43.813
  Jul 20 13:03:43.816: INFO: running pods: 0 < 3
  Jul 20 13:03:45.819: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2080" for this suite. @ 07/20/24 13:03:45.829
• [4.071 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 07/20/24 13:03:45.838
  Jul 20 13:03:45.838: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename downward-api @ 07/20/24 13:03:45.838
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:03:45.854
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:03:45.858
  STEP: Creating a pod to test downward API volume plugin @ 07/20/24 13:03:45.862
  STEP: Saw pod success @ 07/20/24 13:03:49.88
  Jul 20 13:03:49.882: INFO: Trying to get logs from node ip-172-31-79-190 pod downwardapi-volume-dc83f192-90ac-43f5-b178-eaff358669b2 container client-container: <nil>
  STEP: delete the pod @ 07/20/24 13:03:49.888
  Jul 20 13:03:49.902: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4964" for this suite. @ 07/20/24 13:03:49.904
• [4.072 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 07/20/24 13:03:49.91
  Jul 20 13:03:49.910: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename webhook @ 07/20/24 13:03:49.91
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:03:49.924
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:03:49.926
  STEP: Setting up server cert @ 07/20/24 13:03:49.945
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/20/24 13:03:50.24
  STEP: Deploying the webhook pod @ 07/20/24 13:03:50.247
  STEP: Wait for the deployment to be ready @ 07/20/24 13:03:50.257
  Jul 20 13:03:50.263: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 07/20/24 13:03:52.272
  STEP: Verifying the service has paired with the endpoint @ 07/20/24 13:03:52.281
  Jul 20 13:03:53.283: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jul 20 13:03:53.291: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 07/20/24 13:03:53.8
  STEP: Creating a custom resource that should be denied by the webhook @ 07/20/24 13:03:53.813
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 07/20/24 13:03:55.829
  STEP: Updating the custom resource with disallowed data should be denied @ 07/20/24 13:03:55.837
  STEP: Deleting the custom resource should be denied @ 07/20/24 13:03:55.844
  STEP: Remove the offending key and value from the custom resource data @ 07/20/24 13:03:55.85
  STEP: Deleting the updated custom resource should be successful @ 07/20/24 13:03:55.86
  Jul 20 13:03:56.422: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7787" for this suite. @ 07/20/24 13:03:56.426
  STEP: Destroying namespace "webhook-markers-9166" for this suite. @ 07/20/24 13:03:56.431
• [6.527 seconds]
------------------------------
SSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 07/20/24 13:03:56.437
  Jul 20 13:03:56.437: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename endpointslice @ 07/20/24 13:03:56.438
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:03:56.456
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:03:56.458
  STEP: getting /apis @ 07/20/24 13:03:56.46
  STEP: getting /apis/discovery.k8s.io @ 07/20/24 13:03:56.462
  STEP: getting /apis/discovery.k8s.iov1 @ 07/20/24 13:03:56.463
  STEP: creating @ 07/20/24 13:03:56.464
  STEP: getting @ 07/20/24 13:03:56.474
  STEP: listing @ 07/20/24 13:03:56.476
  STEP: watching @ 07/20/24 13:03:56.478
  Jul 20 13:03:56.478: INFO: starting watch
  STEP: cluster-wide listing @ 07/20/24 13:03:56.479
  STEP: cluster-wide watching @ 07/20/24 13:03:56.481
  Jul 20 13:03:56.481: INFO: starting watch
  STEP: patching @ 07/20/24 13:03:56.482
  STEP: updating @ 07/20/24 13:03:56.486
  Jul 20 13:03:56.495: INFO: waiting for watch events with expected annotations
  Jul 20 13:03:56.495: INFO: saw patched and updated annotations
  STEP: deleting @ 07/20/24 13:03:56.495
  STEP: deleting a collection @ 07/20/24 13:03:56.504
  Jul 20 13:03:56.516: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-8109" for this suite. @ 07/20/24 13:03:56.518
• [0.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1280
  STEP: Creating a kubernetes client @ 07/20/24 13:03:56.524
  Jul 20 13:03:56.524: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename services @ 07/20/24 13:03:56.525
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:03:56.538
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:03:56.54
  STEP: creating service nodeport-test with type=NodePort in namespace services-3533 @ 07/20/24 13:03:56.541
  STEP: creating replication controller nodeport-test in namespace services-3533 @ 07/20/24 13:03:56.554
  I0720 13:03:56.562659      19 runners.go:197] Created replication controller with name: nodeport-test, namespace: services-3533, replica count: 2
  I0720 13:03:59.613894      19 runners.go:197] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jul 20 13:03:59.613: INFO: Creating new exec pod
  Jul 20 13:04:02.630: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=services-3533 exec execpod7kqq6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Jul 20 13:04:02.720: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Jul 20 13:04:02.720: INFO: stdout: "nodeport-test-qfkrl"
  Jul 20 13:04:02.720: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=services-3533 exec execpod7kqq6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.113 80'
  Jul 20 13:04:02.806: INFO: stderr: "+ nc -v -t -w 2 10.152.183.113 80\n+ echo hostName\nConnection to 10.152.183.113 80 port [tcp/http] succeeded!\n"
  Jul 20 13:04:02.806: INFO: stdout: "nodeport-test-qfkrl"
  Jul 20 13:04:02.806: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=services-3533 exec execpod7kqq6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.3.74 31742'
  Jul 20 13:04:02.894: INFO: stderr: "+ nc -v -t -w 2 172.31.3.74 31742\n+ echo hostName\nConnection to 172.31.3.74 31742 port [tcp/*] succeeded!\n"
  Jul 20 13:04:02.894: INFO: stdout: ""
  Jul 20 13:04:03.806: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=services-3533 exec execpod7kqq6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.3.74 31742'
  Jul 20 13:04:03.894: INFO: stderr: "+ nc -v -t -w 2 172.31.3.74 31742\n+ echo hostName\nConnection to 172.31.3.74 31742 port [tcp/*] succeeded!\n"
  Jul 20 13:04:03.894: INFO: stdout: "nodeport-test-qfkrl"
  Jul 20 13:04:03.894: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=services-3533 exec execpod7kqq6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.79.190 31742'
  Jul 20 13:04:03.981: INFO: stderr: "+ nc -v -t -w 2 172.31.79.190 31742\n+ echo hostName\nConnection to 172.31.79.190 31742 port [tcp/*] succeeded!\n"
  Jul 20 13:04:03.981: INFO: stdout: "nodeport-test-qfkrl"
  Jul 20 13:04:03.981: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3533" for this suite. @ 07/20/24 13:04:03.985
• [7.466 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 07/20/24 13:04:03.99
  Jul 20 13:04:03.990: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename secrets @ 07/20/24 13:04:03.99
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:04:04.007
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:04:04.008
  STEP: Creating secret with name s-test-opt-del-b34868a1-56fe-43f2-810c-a3fd20247784 @ 07/20/24 13:04:04.012
  STEP: Creating secret with name s-test-opt-upd-2b348c91-e48a-4186-91a3-ce46ed5a0a6d @ 07/20/24 13:04:04.015
  STEP: Creating the pod @ 07/20/24 13:04:04.02
  STEP: Deleting secret s-test-opt-del-b34868a1-56fe-43f2-810c-a3fd20247784 @ 07/20/24 13:04:06.05
  STEP: Updating secret s-test-opt-upd-2b348c91-e48a-4186-91a3-ce46ed5a0a6d @ 07/20/24 13:04:06.055
  STEP: Creating secret with name s-test-opt-create-320b1049-81eb-4d62-ac89-b03f9615f97b @ 07/20/24 13:04:06.059
  STEP: waiting to observe update in volume @ 07/20/24 13:04:06.062
  Jul 20 13:05:36.394: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7985" for this suite. @ 07/20/24 13:05:36.397
• [92.413 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 07/20/24 13:05:36.403
  Jul 20 13:05:36.403: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename csistoragecapacity @ 07/20/24 13:05:36.403
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:05:36.418
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:05:36.42
  STEP: getting /apis @ 07/20/24 13:05:36.421
  STEP: getting /apis/storage.k8s.io @ 07/20/24 13:05:36.424
  STEP: getting /apis/storage.k8s.io/v1 @ 07/20/24 13:05:36.425
  STEP: creating @ 07/20/24 13:05:36.426
  STEP: watching @ 07/20/24 13:05:36.437
  Jul 20 13:05:36.437: INFO: starting watch
  STEP: getting @ 07/20/24 13:05:36.442
  STEP: listing in namespace @ 07/20/24 13:05:36.444
  STEP: listing across namespaces @ 07/20/24 13:05:36.446
  STEP: patching @ 07/20/24 13:05:36.448
  STEP: updating @ 07/20/24 13:05:36.452
  Jul 20 13:05:36.457: INFO: waiting for watch events with expected annotations in namespace
  Jul 20 13:05:36.457: INFO: waiting for watch events with expected annotations across namespace
  STEP: deleting @ 07/20/24 13:05:36.457
  STEP: deleting a collection @ 07/20/24 13:05:36.465
  Jul 20 13:05:36.476: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-3590" for this suite. @ 07/20/24 13:05:36.478
• [0.081 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1416
  STEP: Creating a kubernetes client @ 07/20/24 13:05:36.484
  Jul 20 13:05:36.484: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename services @ 07/20/24 13:05:36.484
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:05:36.499
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:05:36.5
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-9528 @ 07/20/24 13:05:36.502
  STEP: changing the ExternalName service to type=ClusterIP @ 07/20/24 13:05:36.506
  STEP: creating replication controller externalname-service in namespace services-9528 @ 07/20/24 13:05:36.517
  I0720 13:05:36.523405      19 runners.go:197] Created replication controller with name: externalname-service, namespace: services-9528, replica count: 2
  I0720 13:05:39.574736      19 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jul 20 13:05:39.574: INFO: Creating new exec pod
  Jul 20 13:05:42.587: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=services-9528 exec execpod288pb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Jul 20 13:05:42.683: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Jul 20 13:05:42.683: INFO: stdout: "externalname-service-mr8fn"
  Jul 20 13:05:42.683: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=services-9528 exec execpod288pb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.176 80'
  Jul 20 13:05:42.772: INFO: stderr: "+ nc -v -t -w 2 10.152.183.176 80\nConnection to 10.152.183.176 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Jul 20 13:05:42.772: INFO: stdout: ""
  Jul 20 13:05:43.683: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=services-9528 exec execpod288pb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.176 80'
  Jul 20 13:05:43.773: INFO: stderr: "+ nc -v -t -w 2 10.152.183.176 80\n+ echo hostName\nConnection to 10.152.183.176 80 port [tcp/http] succeeded!\n"
  Jul 20 13:05:43.773: INFO: stdout: "externalname-service-mr8fn"
  Jul 20 13:05:43.773: INFO: Cleaning up the ExternalName to ClusterIP test service
  Jul 20 13:05:43.786: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9528" for this suite. @ 07/20/24 13:05:43.789
• [7.310 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 07/20/24 13:05:43.795
  Jul 20 13:05:43.795: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename emptydir @ 07/20/24 13:05:43.795
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:05:43.812
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:05:43.813
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 07/20/24 13:05:43.815
  STEP: Saw pod success @ 07/20/24 13:05:47.836
  Jul 20 13:05:47.839: INFO: Trying to get logs from node ip-172-31-79-190 pod pod-8205b1af-539b-4565-8461-50272317ed5b container test-container: <nil>
  STEP: delete the pod @ 07/20/24 13:05:47.848
  Jul 20 13:05:47.860: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6299" for this suite. @ 07/20/24 13:05:47.863
• [4.074 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 07/20/24 13:05:47.869
  Jul 20 13:05:47.869: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename container-probe @ 07/20/24 13:05:47.87
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:05:47.884
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:05:47.886
  STEP: Creating pod liveness-491ba889-c03a-47cd-bd2e-59610571bd4f in namespace container-probe-3105 @ 07/20/24 13:05:47.887
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/20/24 13:05:49.9
  Jul 20 13:05:49.903: INFO: Initial restart count of pod liveness-491ba889-c03a-47cd-bd2e-59610571bd4f is 0
  Jul 20 13:05:49.905: INFO: Get pod liveness-491ba889-c03a-47cd-bd2e-59610571bd4f in namespace container-probe-3105
  Jul 20 13:05:51.912: INFO: Get pod liveness-491ba889-c03a-47cd-bd2e-59610571bd4f in namespace container-probe-3105
  Jul 20 13:05:53.917: INFO: Get pod liveness-491ba889-c03a-47cd-bd2e-59610571bd4f in namespace container-probe-3105
  Jul 20 13:05:55.922: INFO: Get pod liveness-491ba889-c03a-47cd-bd2e-59610571bd4f in namespace container-probe-3105
  Jul 20 13:05:57.927: INFO: Get pod liveness-491ba889-c03a-47cd-bd2e-59610571bd4f in namespace container-probe-3105
  Jul 20 13:05:59.931: INFO: Get pod liveness-491ba889-c03a-47cd-bd2e-59610571bd4f in namespace container-probe-3105
  Jul 20 13:06:01.936: INFO: Get pod liveness-491ba889-c03a-47cd-bd2e-59610571bd4f in namespace container-probe-3105
  Jul 20 13:06:03.941: INFO: Get pod liveness-491ba889-c03a-47cd-bd2e-59610571bd4f in namespace container-probe-3105
  Jul 20 13:06:05.945: INFO: Get pod liveness-491ba889-c03a-47cd-bd2e-59610571bd4f in namespace container-probe-3105
  Jul 20 13:06:07.949: INFO: Get pod liveness-491ba889-c03a-47cd-bd2e-59610571bd4f in namespace container-probe-3105
  Jul 20 13:06:09.953: INFO: Get pod liveness-491ba889-c03a-47cd-bd2e-59610571bd4f in namespace container-probe-3105
  Jul 20 13:06:09.953: INFO: Restart count of pod container-probe-3105/liveness-491ba889-c03a-47cd-bd2e-59610571bd4f is now 1 (20.050186464s elapsed)
  STEP: deleting the pod @ 07/20/24 13:06:09.953
  Jul 20 13:06:09.963: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3105" for this suite. @ 07/20/24 13:06:09.967
• [22.106 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 07/20/24 13:06:09.975
  Jul 20 13:06:09.975: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename emptydir @ 07/20/24 13:06:09.976
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:06:09.991
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:06:09.993
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 07/20/24 13:06:09.994
  STEP: Saw pod success @ 07/20/24 13:06:14.013
  Jul 20 13:06:14.015: INFO: Trying to get logs from node ip-172-31-79-190 pod pod-758bdd22-6c07-40e5-8a17-ec17430fa0d2 container test-container: <nil>
  STEP: delete the pod @ 07/20/24 13:06:14.02
  Jul 20 13:06:14.031: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4862" for this suite. @ 07/20/24 13:06:14.035
• [4.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 07/20/24 13:06:14.041
  Jul 20 13:06:14.041: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename field-validation @ 07/20/24 13:06:14.041
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:06:14.058
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:06:14.06
  Jul 20 13:06:14.061: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  W0720 13:06:16.593647      19 warnings.go:70] unknown field "alpha"
  W0720 13:06:16.593671      19 warnings.go:70] unknown field "beta"
  W0720 13:06:16.593675      19 warnings.go:70] unknown field "delta"
  W0720 13:06:16.593680      19 warnings.go:70] unknown field "epsilon"
  W0720 13:06:16.593683      19 warnings.go:70] unknown field "gamma"
  Jul 20 13:06:17.130: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3949" for this suite. @ 07/20/24 13:06:17.132
• [3.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3129
  STEP: Creating a kubernetes client @ 07/20/24 13:06:17.138
  Jul 20 13:06:17.138: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename services @ 07/20/24 13:06:17.139
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:06:17.156
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:06:17.157
  STEP: fetching services @ 07/20/24 13:06:17.159
  Jul 20 13:06:17.161: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3564" for this suite. @ 07/20/24 13:06:17.163
• [0.029 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 07/20/24 13:06:17.168
  Jul 20 13:06:17.168: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename projected @ 07/20/24 13:06:17.168
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:06:17.183
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:06:17.184
  STEP: Creating configMap with name projected-configmap-test-volume-map-07481f32-2c83-4ccb-b5bd-3ffd3712d946 @ 07/20/24 13:06:17.186
  STEP: Creating a pod to test consume configMaps @ 07/20/24 13:06:17.193
  STEP: Saw pod success @ 07/20/24 13:06:21.208
  Jul 20 13:06:21.211: INFO: Trying to get logs from node ip-172-31-79-190 pod pod-projected-configmaps-40b17260-36b2-4373-bc77-79cf18a23669 container agnhost-container: <nil>
  STEP: delete the pod @ 07/20/24 13:06:21.215
  Jul 20 13:06:21.227: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3495" for this suite. @ 07/20/24 13:06:21.23
• [4.066 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:785
  STEP: Creating a kubernetes client @ 07/20/24 13:06:21.234
  Jul 20 13:06:21.234: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename services @ 07/20/24 13:06:21.235
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:06:21.25
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:06:21.251
  STEP: creating service endpoint-test2 in namespace services-87 @ 07/20/24 13:06:21.253
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-87 to expose endpoints map[] @ 07/20/24 13:06:21.261
  Jul 20 13:06:21.265: INFO: Failed go get Endpoints object: endpoints "endpoint-test2" not found
  Jul 20 13:06:22.270: INFO: successfully validated that service endpoint-test2 in namespace services-87 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-87 @ 07/20/24 13:06:22.27
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-87 to expose endpoints map[pod1:[80]] @ 07/20/24 13:06:24.286
  Jul 20 13:06:24.293: INFO: successfully validated that service endpoint-test2 in namespace services-87 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 07/20/24 13:06:24.293
  Jul 20 13:06:24.293: INFO: Creating new exec pod
  Jul 20 13:06:27.305: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=services-87 exec execpoddj92c -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Jul 20 13:06:27.397: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Jul 20 13:06:27.398: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul 20 13:06:27.398: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=services-87 exec execpoddj92c -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.113 80'
  Jul 20 13:06:27.485: INFO: stderr: "+ nc -v -t -w 2 10.152.183.113 80\n+ echo hostName\nConnection to 10.152.183.113 80 port [tcp/http] succeeded!\n"
  Jul 20 13:06:27.485: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-87 @ 07/20/24 13:06:27.485
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-87 to expose endpoints map[pod1:[80] pod2:[80]] @ 07/20/24 13:06:29.499
  Jul 20 13:06:29.508: INFO: successfully validated that service endpoint-test2 in namespace services-87 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 07/20/24 13:06:29.508
  Jul 20 13:06:30.509: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=services-87 exec execpoddj92c -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Jul 20 13:06:30.598: INFO: stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Jul 20 13:06:30.598: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul 20 13:06:30.598: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=services-87 exec execpoddj92c -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.113 80'
  Jul 20 13:06:30.689: INFO: stderr: "+ nc -v -t -w 2 10.152.183.113 80\n+ echo hostName\nConnection to 10.152.183.113 80 port [tcp/http] succeeded!\n"
  Jul 20 13:06:30.689: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-87 @ 07/20/24 13:06:30.689
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-87 to expose endpoints map[pod2:[80]] @ 07/20/24 13:06:30.704
  Jul 20 13:06:31.722: INFO: successfully validated that service endpoint-test2 in namespace services-87 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 07/20/24 13:06:31.722
  Jul 20 13:06:32.724: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=services-87 exec execpoddj92c -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Jul 20 13:06:32.814: INFO: stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Jul 20 13:06:32.814: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul 20 13:06:32.814: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=services-87 exec execpoddj92c -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.113 80'
  Jul 20 13:06:32.906: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.113 80\nConnection to 10.152.183.113 80 port [tcp/http] succeeded!\n"
  Jul 20 13:06:32.906: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-87 @ 07/20/24 13:06:32.907
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-87 to expose endpoints map[] @ 07/20/24 13:06:32.918
  Jul 20 13:06:32.931: INFO: successfully validated that service endpoint-test2 in namespace services-87 exposes endpoints map[]
  Jul 20 13:06:32.944: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-87" for this suite. @ 07/20/24 13:06:32.946
• [11.719 seconds]
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 07/20/24 13:06:32.953
  Jul 20 13:06:32.953: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename dns @ 07/20/24 13:06:32.954
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:06:32.97
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:06:32.972
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 07/20/24 13:06:32.974
  Jul 20 13:06:32.980: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-697  7ef0e011-3c15-4846-99dd-9a2b1f6ff5d9 24755 0 2024-07-20 13:06:32 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2024-07-20 13:06:32 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-tfvnz,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.47,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-tfvnz,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 07/20/24 13:06:34.987
  Jul 20 13:06:34.987: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-697 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 20 13:06:34.987: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  Jul 20 13:06:34.987: INFO: ExecWithOptions: Clientset creation
  Jul 20 13:06:34.987: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-697/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 07/20/24 13:06:35.04
  Jul 20 13:06:35.040: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-697 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 20 13:06:35.040: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  Jul 20 13:06:35.040: INFO: ExecWithOptions: Clientset creation
  Jul 20 13:06:35.040: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-697/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jul 20 13:06:35.091: INFO: Deleting pod test-dns-nameservers...
  Jul 20 13:06:35.105: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-697" for this suite. @ 07/20/24 13:06:35.108
• [2.159 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:94
  STEP: Creating a kubernetes client @ 07/20/24 13:06:35.112
  Jul 20 13:06:35.112: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename configmap @ 07/20/24 13:06:35.113
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:06:35.13
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:06:35.132
  STEP: Creating configMap configmap-9602/configmap-test-3c685611-5279-4af0-8bcc-e63d21334232 @ 07/20/24 13:06:35.134
  STEP: Creating a pod to test consume configMaps @ 07/20/24 13:06:35.138
  STEP: Saw pod success @ 07/20/24 13:06:37.151
  Jul 20 13:06:37.153: INFO: Trying to get logs from node ip-172-31-25-173 pod pod-configmaps-e162e693-7912-494d-95a1-951b8638c2f4 container env-test: <nil>
  STEP: delete the pod @ 07/20/24 13:06:37.159
  Jul 20 13:06:37.173: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9602" for this suite. @ 07/20/24 13:06:37.176
• [2.068 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 07/20/24 13:06:37.18
  Jul 20 13:06:37.180: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename certificates @ 07/20/24 13:06:37.181
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:06:37.195
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:06:37.197
  STEP: getting /apis @ 07/20/24 13:06:37.506
  STEP: getting /apis/certificates.k8s.io @ 07/20/24 13:06:37.509
  STEP: getting /apis/certificates.k8s.io/v1 @ 07/20/24 13:06:37.51
  STEP: creating @ 07/20/24 13:06:37.511
  STEP: getting @ 07/20/24 13:06:37.525
  STEP: listing @ 07/20/24 13:06:37.527
  STEP: watching @ 07/20/24 13:06:37.529
  Jul 20 13:06:37.529: INFO: starting watch
  STEP: patching @ 07/20/24 13:06:37.53
  STEP: updating @ 07/20/24 13:06:37.536
  Jul 20 13:06:37.541: INFO: waiting for watch events with expected annotations
  Jul 20 13:06:37.541: INFO: saw patched and updated annotations
  STEP: getting /approval @ 07/20/24 13:06:37.541
  STEP: patching /approval @ 07/20/24 13:06:37.543
  STEP: updating /approval @ 07/20/24 13:06:37.549
  STEP: getting /status @ 07/20/24 13:06:37.555
  STEP: patching /status @ 07/20/24 13:06:37.557
  STEP: updating /status @ 07/20/24 13:06:37.564
  STEP: deleting @ 07/20/24 13:06:37.57
  STEP: deleting a collection @ 07/20/24 13:06:37.578
  Jul 20 13:06:37.589: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-6631" for this suite. @ 07/20/24 13:06:37.592
• [0.417 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1053
  STEP: Creating a kubernetes client @ 07/20/24 13:06:37.598
  Jul 20 13:06:37.598: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename kubectl @ 07/20/24 13:06:37.598
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:06:37.614
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:06:37.616
  STEP: create deployment with httpd image @ 07/20/24 13:06:37.618
  Jul 20 13:06:37.618: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-1859 create -f -'
  Jul 20 13:06:37.678: INFO: stderr: ""
  Jul 20 13:06:37.678: INFO: stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 07/20/24 13:06:37.678
  Jul 20 13:06:37.678: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-1859 diff -f -'
  Jul 20 13:06:41.968: INFO: rc: 1
  Jul 20 13:06:41.968: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-1859 delete -f -'
  Jul 20 13:06:42.014: INFO: stderr: ""
  Jul 20 13:06:42.014: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  Jul 20 13:06:42.014: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1859" for this suite. @ 07/20/24 13:06:42.018
• [4.427 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 07/20/24 13:06:42.025
  Jul 20 13:06:42.025: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename subpath @ 07/20/24 13:06:42.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:06:42.04
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:06:42.041
  STEP: Setting up data @ 07/20/24 13:06:42.043
  STEP: Creating pod pod-subpath-test-downwardapi-qmgh @ 07/20/24 13:06:42.051
  STEP: Creating a pod to test atomic-volume-subpath @ 07/20/24 13:06:42.051
  STEP: Saw pod success @ 07/20/24 13:07:04.103
  Jul 20 13:07:04.106: INFO: Trying to get logs from node ip-172-31-25-173 pod pod-subpath-test-downwardapi-qmgh container test-container-subpath-downwardapi-qmgh: <nil>
  STEP: delete the pod @ 07/20/24 13:07:04.111
  STEP: Deleting pod pod-subpath-test-downwardapi-qmgh @ 07/20/24 13:07:04.123
  Jul 20 13:07:04.123: INFO: Deleting pod "pod-subpath-test-downwardapi-qmgh" in namespace "subpath-8106"
  Jul 20 13:07:04.126: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-8106" for this suite. @ 07/20/24 13:07:04.128
• [22.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:147
  STEP: Creating a kubernetes client @ 07/20/24 13:07:04.135
  Jul 20 13:07:04.135: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename kubelet-test @ 07/20/24 13:07:04.136
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:07:04.149
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:07:04.151
  STEP: Waiting for pod completion @ 07/20/24 13:07:04.159
  Jul 20 13:07:08.181: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4520" for this suite. @ 07/20/24 13:07:08.184
• [4.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:163
  STEP: Creating a kubernetes client @ 07/20/24 13:07:08.19
  Jul 20 13:07:08.190: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename svcaccounts @ 07/20/24 13:07:08.191
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:07:08.208
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:07:08.21
  Jul 20 13:07:08.227: INFO: created pod pod-service-account-defaultsa
  Jul 20 13:07:08.227: INFO: pod pod-service-account-defaultsa service account token volume mount: true
  Jul 20 13:07:08.234: INFO: created pod pod-service-account-mountsa
  Jul 20 13:07:08.234: INFO: pod pod-service-account-mountsa service account token volume mount: true
  Jul 20 13:07:08.248: INFO: created pod pod-service-account-nomountsa
  Jul 20 13:07:08.248: INFO: pod pod-service-account-nomountsa service account token volume mount: false
  Jul 20 13:07:08.256: INFO: created pod pod-service-account-defaultsa-mountspec
  Jul 20 13:07:08.256: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  Jul 20 13:07:08.261: INFO: created pod pod-service-account-mountsa-mountspec
  Jul 20 13:07:08.261: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
  Jul 20 13:07:08.268: INFO: created pod pod-service-account-nomountsa-mountspec
  Jul 20 13:07:08.268: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  Jul 20 13:07:08.273: INFO: created pod pod-service-account-defaultsa-nomountspec
  Jul 20 13:07:08.274: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  Jul 20 13:07:08.283: INFO: created pod pod-service-account-mountsa-nomountspec
  Jul 20 13:07:08.283: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  Jul 20 13:07:08.288: INFO: created pod pod-service-account-nomountsa-nomountspec
  Jul 20 13:07:08.288: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  Jul 20 13:07:08.288: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2387" for this suite. @ 07/20/24 13:07:08.291
• [0.111 seconds]
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 07/20/24 13:07:08.302
  Jul 20 13:07:08.302: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename events @ 07/20/24 13:07:08.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:07:08.32
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:07:08.322
  STEP: creating a test event @ 07/20/24 13:07:08.324
  STEP: listing events in all namespaces @ 07/20/24 13:07:08.331
  STEP: listing events in test namespace @ 07/20/24 13:07:08.339
  STEP: listing events with field selection filtering on source @ 07/20/24 13:07:08.342
  STEP: listing events with field selection filtering on reportingController @ 07/20/24 13:07:08.345
  STEP: getting the test event @ 07/20/24 13:07:08.349
  STEP: patching the test event @ 07/20/24 13:07:08.352
  STEP: getting the test event @ 07/20/24 13:07:08.362
  STEP: updating the test event @ 07/20/24 13:07:08.364
  STEP: getting the test event @ 07/20/24 13:07:08.369
  STEP: deleting the test event @ 07/20/24 13:07:08.371
  STEP: listing events in all namespaces @ 07/20/24 13:07:08.377
  STEP: listing events in test namespace @ 07/20/24 13:07:08.384
  Jul 20 13:07:08.386: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-6574" for this suite. @ 07/20/24 13:07:08.389
• [0.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2236
  STEP: Creating a kubernetes client @ 07/20/24 13:07:08.395
  Jul 20 13:07:08.395: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename services @ 07/20/24 13:07:08.396
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:07:08.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:07:08.412
  STEP: creating service in namespace services-3246 @ 07/20/24 13:07:08.414
  STEP: creating service affinity-nodeport-transition in namespace services-3246 @ 07/20/24 13:07:08.414
  STEP: creating replication controller affinity-nodeport-transition in namespace services-3246 @ 07/20/24 13:07:08.431
  I0720 13:07:08.438857      19 runners.go:197] Created replication controller with name: affinity-nodeport-transition, namespace: services-3246, replica count: 3
  I0720 13:07:11.497691      19 runners.go:197] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jul 20 13:07:11.507: INFO: Creating new exec pod
  Jul 20 13:07:14.524: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=services-3246 exec execpod-affinity7jn5k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  Jul 20 13:07:14.624: INFO: stderr: "+ nc -v -t -w 2 affinity-nodeport-transition 80\n+ echo hostName\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  Jul 20 13:07:14.624: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul 20 13:07:14.624: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=services-3246 exec execpod-affinity7jn5k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.220 80'
  Jul 20 13:07:14.712: INFO: stderr: "+ nc -v -t -w 2 10.152.183.220 80\n+ echo hostName\nConnection to 10.152.183.220 80 port [tcp/http] succeeded!\n"
  Jul 20 13:07:14.712: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul 20 13:07:14.712: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=services-3246 exec execpod-affinity7jn5k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.3.74 30412'
  Jul 20 13:07:14.798: INFO: stderr: "+ nc -v -t -w 2 172.31.3.74 30412\n+ echo hostName\nConnection to 172.31.3.74 30412 port [tcp/*] succeeded!\n"
  Jul 20 13:07:14.798: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul 20 13:07:14.799: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=services-3246 exec execpod-affinity7jn5k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.79.190 30412'
  Jul 20 13:07:14.892: INFO: stderr: "+ nc -v -t -w 2 172.31.79.190 30412\n+ echo hostName\nConnection to 172.31.79.190 30412 port [tcp/*] succeeded!\n"
  Jul 20 13:07:14.892: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul 20 13:07:14.902: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=services-3246 exec execpod-affinity7jn5k -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.25.173:30412/ ; done'
  Jul 20 13:07:15.064: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.173:30412/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.173:30412/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.173:30412/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.173:30412/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.173:30412/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.173:30412/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.173:30412/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.173:30412/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.173:30412/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.173:30412/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.173:30412/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.173:30412/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.173:30412/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.173:30412/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.173:30412/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.173:30412/\n"
  Jul 20 13:07:15.064: INFO: stdout: "\naffinity-nodeport-transition-8rsjt\naffinity-nodeport-transition-8rsjt\naffinity-nodeport-transition-8rsjt\naffinity-nodeport-transition-5zn72\naffinity-nodeport-transition-5zn72\naffinity-nodeport-transition-8rsjt\naffinity-nodeport-transition-2wpxw\naffinity-nodeport-transition-5zn72\naffinity-nodeport-transition-2wpxw\naffinity-nodeport-transition-5zn72\naffinity-nodeport-transition-2wpxw\naffinity-nodeport-transition-5zn72\naffinity-nodeport-transition-2wpxw\naffinity-nodeport-transition-5zn72\naffinity-nodeport-transition-5zn72\naffinity-nodeport-transition-5zn72"
  Jul 20 13:07:15.064: INFO: Received response from host: affinity-nodeport-transition-8rsjt
  Jul 20 13:07:15.064: INFO: Received response from host: affinity-nodeport-transition-8rsjt
  Jul 20 13:07:15.064: INFO: Received response from host: affinity-nodeport-transition-8rsjt
  Jul 20 13:07:15.064: INFO: Received response from host: affinity-nodeport-transition-5zn72
  Jul 20 13:07:15.064: INFO: Received response from host: affinity-nodeport-transition-5zn72
  Jul 20 13:07:15.064: INFO: Received response from host: affinity-nodeport-transition-8rsjt
  Jul 20 13:07:15.064: INFO: Received response from host: affinity-nodeport-transition-2wpxw
  Jul 20 13:07:15.064: INFO: Received response from host: affinity-nodeport-transition-5zn72
  Jul 20 13:07:15.064: INFO: Received response from host: affinity-nodeport-transition-2wpxw
  Jul 20 13:07:15.064: INFO: Received response from host: affinity-nodeport-transition-5zn72
  Jul 20 13:07:15.064: INFO: Received response from host: affinity-nodeport-transition-2wpxw
  Jul 20 13:07:15.064: INFO: Received response from host: affinity-nodeport-transition-5zn72
  Jul 20 13:07:15.064: INFO: Received response from host: affinity-nodeport-transition-2wpxw
  Jul 20 13:07:15.064: INFO: Received response from host: affinity-nodeport-transition-5zn72
  Jul 20 13:07:15.064: INFO: Received response from host: affinity-nodeport-transition-5zn72
  Jul 20 13:07:15.064: INFO: Received response from host: affinity-nodeport-transition-5zn72
  Jul 20 13:07:15.075: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=services-3246 exec execpod-affinity7jn5k -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.25.173:30412/ ; done'
  Jul 20 13:07:15.235: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.173:30412/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.173:30412/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.173:30412/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.173:30412/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.173:30412/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.173:30412/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.173:30412/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.173:30412/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.173:30412/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.173:30412/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.173:30412/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.173:30412/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.173:30412/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.173:30412/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.173:30412/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.173:30412/\n"
  Jul 20 13:07:15.235: INFO: stdout: "\naffinity-nodeport-transition-5zn72\naffinity-nodeport-transition-5zn72\naffinity-nodeport-transition-5zn72\naffinity-nodeport-transition-5zn72\naffinity-nodeport-transition-5zn72\naffinity-nodeport-transition-5zn72\naffinity-nodeport-transition-5zn72\naffinity-nodeport-transition-5zn72\naffinity-nodeport-transition-5zn72\naffinity-nodeport-transition-5zn72\naffinity-nodeport-transition-5zn72\naffinity-nodeport-transition-5zn72\naffinity-nodeport-transition-5zn72\naffinity-nodeport-transition-5zn72\naffinity-nodeport-transition-5zn72\naffinity-nodeport-transition-5zn72"
  Jul 20 13:07:15.235: INFO: Received response from host: affinity-nodeport-transition-5zn72
  Jul 20 13:07:15.235: INFO: Received response from host: affinity-nodeport-transition-5zn72
  Jul 20 13:07:15.235: INFO: Received response from host: affinity-nodeport-transition-5zn72
  Jul 20 13:07:15.235: INFO: Received response from host: affinity-nodeport-transition-5zn72
  Jul 20 13:07:15.235: INFO: Received response from host: affinity-nodeport-transition-5zn72
  Jul 20 13:07:15.235: INFO: Received response from host: affinity-nodeport-transition-5zn72
  Jul 20 13:07:15.235: INFO: Received response from host: affinity-nodeport-transition-5zn72
  Jul 20 13:07:15.235: INFO: Received response from host: affinity-nodeport-transition-5zn72
  Jul 20 13:07:15.235: INFO: Received response from host: affinity-nodeport-transition-5zn72
  Jul 20 13:07:15.235: INFO: Received response from host: affinity-nodeport-transition-5zn72
  Jul 20 13:07:15.235: INFO: Received response from host: affinity-nodeport-transition-5zn72
  Jul 20 13:07:15.235: INFO: Received response from host: affinity-nodeport-transition-5zn72
  Jul 20 13:07:15.235: INFO: Received response from host: affinity-nodeport-transition-5zn72
  Jul 20 13:07:15.235: INFO: Received response from host: affinity-nodeport-transition-5zn72
  Jul 20 13:07:15.235: INFO: Received response from host: affinity-nodeport-transition-5zn72
  Jul 20 13:07:15.235: INFO: Received response from host: affinity-nodeport-transition-5zn72
  Jul 20 13:07:15.235: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-3246, will wait for the garbage collector to delete the pods @ 07/20/24 13:07:15.247
  Jul 20 13:07:15.309: INFO: Deleting ReplicationController affinity-nodeport-transition took: 6.15092ms
  Jul 20 13:07:15.409: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 100.117079ms
  Jul 20 13:07:18.530: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3246" for this suite. @ 07/20/24 13:07:18.532
• [10.249 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 07/20/24 13:07:18.645
  Jul 20 13:07:18.645: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename replication-controller @ 07/20/24 13:07:18.645
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:07:18.663
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:07:18.665
  Jul 20 13:07:18.667: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 07/20/24 13:07:19.678
  STEP: Checking rc "condition-test" has the desired failure condition set @ 07/20/24 13:07:19.683
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 07/20/24 13:07:20.688
  Jul 20 13:07:20.696: INFO: Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 07/20/24 13:07:20.696
  Jul 20 13:07:21.704: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-463" for this suite. @ 07/20/24 13:07:21.707
• [3.069 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 07/20/24 13:07:21.714
  Jul 20 13:07:21.714: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename pods @ 07/20/24 13:07:21.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:07:21.733
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:07:21.734
  STEP: Create a pod @ 07/20/24 13:07:21.737
  STEP: patching /status @ 07/20/24 13:07:23.751
  Jul 20 13:07:23.758: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
  Jul 20 13:07:23.758: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1110" for this suite. @ 07/20/24 13:07:23.761
• [2.053 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 07/20/24 13:07:23.767
  Jul 20 13:07:23.767: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename replicaset @ 07/20/24 13:07:23.767
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:07:23.783
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:07:23.785
  STEP: Create a ReplicaSet @ 07/20/24 13:07:23.786
  STEP: Verify that the required pods have come up @ 07/20/24 13:07:23.791
  Jul 20 13:07:23.793: INFO: Pod name sample-pod: Found 0 pods out of 3
  Jul 20 13:07:28.799: INFO: Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 07/20/24 13:07:28.799
  Jul 20 13:07:28.802: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 07/20/24 13:07:28.802
  STEP: DeleteCollection of the ReplicaSets @ 07/20/24 13:07:28.804
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 07/20/24 13:07:28.81
  Jul 20 13:07:28.814: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3457" for this suite. @ 07/20/24 13:07:28.816
• [5.055 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 07/20/24 13:07:28.822
  Jul 20 13:07:28.822: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename emptydir-wrapper @ 07/20/24 13:07:28.823
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:07:28.849
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:07:28.85
  STEP: Creating 50 configmaps @ 07/20/24 13:07:28.852
  STEP: Creating RC which spawns configmap-volume pods @ 07/20/24 13:07:29.078
  Jul 20 13:07:29.204: INFO: Pod name wrapped-volume-race-c8a17c78-563e-426d-bd79-b9f1b5747ed3: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 07/20/24 13:07:29.204
  STEP: Creating RC which spawns configmap-volume pods @ 07/20/24 13:07:31.245
  Jul 20 13:07:31.255: INFO: Pod name wrapped-volume-race-ea68803c-f4f7-483d-a9e9-21d6502f55df: Found 0 pods out of 5
  Jul 20 13:07:36.261: INFO: Pod name wrapped-volume-race-ea68803c-f4f7-483d-a9e9-21d6502f55df: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 07/20/24 13:07:36.262
  STEP: Creating RC which spawns configmap-volume pods @ 07/20/24 13:07:36.288
  Jul 20 13:07:36.299: INFO: Pod name wrapped-volume-race-574e4bee-630d-4d04-b22b-1dabd7f74a4d: Found 0 pods out of 5
  Jul 20 13:07:41.305: INFO: Pod name wrapped-volume-race-574e4bee-630d-4d04-b22b-1dabd7f74a4d: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 07/20/24 13:07:41.305
  STEP: deleting ReplicationController wrapped-volume-race-574e4bee-630d-4d04-b22b-1dabd7f74a4d in namespace emptydir-wrapper-6521, will wait for the garbage collector to delete the pods @ 07/20/24 13:07:41.318
  Jul 20 13:07:41.376: INFO: Deleting ReplicationController wrapped-volume-race-574e4bee-630d-4d04-b22b-1dabd7f74a4d took: 5.928313ms
  Jul 20 13:07:41.477: INFO: Terminating ReplicationController wrapped-volume-race-574e4bee-630d-4d04-b22b-1dabd7f74a4d pods took: 100.873698ms
  STEP: deleting ReplicationController wrapped-volume-race-ea68803c-f4f7-483d-a9e9-21d6502f55df in namespace emptydir-wrapper-6521, will wait for the garbage collector to delete the pods @ 07/20/24 13:07:42.777
  Jul 20 13:07:42.838: INFO: Deleting ReplicationController wrapped-volume-race-ea68803c-f4f7-483d-a9e9-21d6502f55df took: 6.668923ms
  Jul 20 13:07:42.939: INFO: Terminating ReplicationController wrapped-volume-race-ea68803c-f4f7-483d-a9e9-21d6502f55df pods took: 100.749174ms
  STEP: deleting ReplicationController wrapped-volume-race-c8a17c78-563e-426d-bd79-b9f1b5747ed3 in namespace emptydir-wrapper-6521, will wait for the garbage collector to delete the pods @ 07/20/24 13:07:44.44
  Jul 20 13:07:44.502: INFO: Deleting ReplicationController wrapped-volume-race-c8a17c78-563e-426d-bd79-b9f1b5747ed3 took: 6.932394ms
  Jul 20 13:07:44.603: INFO: Terminating ReplicationController wrapped-volume-race-c8a17c78-563e-426d-bd79-b9f1b5747ed3 pods took: 101.059862ms
  STEP: Cleaning up the configMaps @ 07/20/24 13:07:46.203
  Jul 20 13:07:46.441: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-6521" for this suite. @ 07/20/24 13:07:46.444
• [17.626 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 07/20/24 13:07:46.449
  Jul 20 13:07:46.449: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename hostport @ 07/20/24 13:07:46.45
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:07:46.465
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:07:46.467
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 07/20/24 13:07:46.477
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.31.79.190 on the node which pod1 resides and expect scheduled @ 07/20/24 13:07:48.492
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.31.79.190 but use UDP protocol on the node which pod2 resides @ 07/20/24 13:07:50.505
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 07/20/24 13:07:54.532
  Jul 20 13:07:54.532: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.31.79.190 http://127.0.0.1:54323/hostname] Namespace:hostport-1813 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 20 13:07:54.532: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  Jul 20 13:07:54.533: INFO: ExecWithOptions: Clientset creation
  Jul 20 13:07:54.533: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-1813/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.31.79.190+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.79.190, port: 54323 @ 07/20/24 13:07:54.586
  Jul 20 13:07:54.586: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.31.79.190:54323/hostname] Namespace:hostport-1813 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 20 13:07:54.586: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  Jul 20 13:07:54.586: INFO: ExecWithOptions: Clientset creation
  Jul 20 13:07:54.586: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-1813/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.31.79.190%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.79.190, port: 54323 UDP @ 07/20/24 13:07:54.633
  Jul 20 13:07:54.633: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.31.79.190 54323] Namespace:hostport-1813 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 20 13:07:54.633: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  Jul 20 13:07:54.633: INFO: ExecWithOptions: Clientset creation
  Jul 20 13:07:54.633: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-1813/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.31.79.190+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  Jul 20 13:07:59.683: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-1813" for this suite. @ 07/20/24 13:07:59.687
• [13.246 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1399
  STEP: Creating a kubernetes client @ 07/20/24 13:07:59.695
  Jul 20 13:07:59.695: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename kubectl @ 07/20/24 13:07:59.696
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:07:59.714
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:07:59.715
  Jul 20 13:07:59.717: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-4859 create -f -'
  Jul 20 13:07:59.800: INFO: stderr: ""
  Jul 20 13:07:59.800: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  Jul 20 13:07:59.800: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-4859 create -f -'
  Jul 20 13:07:59.888: INFO: stderr: ""
  Jul 20 13:07:59.888: INFO: stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 07/20/24 13:07:59.888
  Jul 20 13:08:00.894: INFO: Selector matched 1 pods for map[app:agnhost]
  Jul 20 13:08:00.894: INFO: Found 0 / 1
  Jul 20 13:08:01.893: INFO: Selector matched 1 pods for map[app:agnhost]
  Jul 20 13:08:01.893: INFO: Found 1 / 1
  Jul 20 13:08:01.893: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Jul 20 13:08:01.896: INFO: Selector matched 1 pods for map[app:agnhost]
  Jul 20 13:08:01.896: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Jul 20 13:08:01.896: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-4859 describe pod agnhost-primary-sgsg2'
  Jul 20 13:08:01.946: INFO: stderr: ""
  Jul 20 13:08:01.946: INFO: stdout: "Name:             agnhost-primary-sgsg2\nNamespace:        kubectl-4859\nPriority:         0\nService Account:  default\nNode:             ip-172-31-25-173/172.31.25.173\nStart Time:       Sat, 20 Jul 2024 13:07:59 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               192.168.245.240\nIPs:\n  IP:           192.168.245.240\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://4c759924d853966645aae78f652cd0e3046eb888bf4b6b8bd42c9196a25c3a1c\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.47\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Sat, 20 Jul 2024 13:08:00 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-59pt6 (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-59pt6:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  2s    default-scheduler  Successfully assigned kubectl-4859/agnhost-primary-sgsg2 to ip-172-31-25-173\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.47\" already present on machine\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  Jul 20 13:08:01.946: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-4859 describe rc agnhost-primary'
  Jul 20 13:08:02.004: INFO: stderr: ""
  Jul 20 13:08:02.004: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-4859\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.47\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  3s    replication-controller  Created pod: agnhost-primary-sgsg2\n"
  Jul 20 13:08:02.004: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-4859 describe service agnhost-primary'
  Jul 20 13:08:02.055: INFO: stderr: ""
  Jul 20 13:08:02.055: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-4859\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.152.183.35\nIPs:               10.152.183.35\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         192.168.245.240:6379\nSession Affinity:  None\nEvents:            <none>\n"
  Jul 20 13:08:02.058: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-4859 describe node ip-172-31-19-200'
  Jul 20 13:08:02.127: INFO: stderr: ""
  Jul 20 13:08:02.127: INFO: stdout: "Name:               ip-172-31-19-200\nRoles:              control-plane\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    juju-application=kubernetes-control-plane\n                    juju-charm=kubernetes-control-plane\n                    juju.io/cloud=ec2\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ip-172-31-19-200\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Sat, 20 Jul 2024 11:54:13 +0000\nTaints:             node-role.kubernetes.io/control-plane:NoSchedule\nUnschedulable:      false\nLease:\n  HolderIdentity:  ip-172-31-19-200\n  AcquireTime:     <unset>\n  RenewTime:       Sat, 20 Jul 2024 13:08:01 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Sat, 20 Jul 2024 12:09:17 +0000   Sat, 20 Jul 2024 12:09:17 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Sat, 20 Jul 2024 13:02:56 +0000   Sat, 20 Jul 2024 11:54:13 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Sat, 20 Jul 2024 13:02:56 +0000   Sat, 20 Jul 2024 11:54:13 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Sat, 20 Jul 2024 13:02:56 +0000   Sat, 20 Jul 2024 11:54:13 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Sat, 20 Jul 2024 13:02:56 +0000   Sat, 20 Jul 2024 11:55:14 +0000   KubeletReady                 kubelet is posting ready status. AppArmor enabled\nAddresses:\n  InternalIP:  172.31.19.200\n  Hostname:    ip-172-31-19-200\nCapacity:\n  cpu:                2\n  ephemeral-storage:  16069568Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7958132Ki\n  pods:               110\nAllocatable:\n  cpu:                2\n  ephemeral-storage:  14809713845\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7855732Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 ec213b09dc2c82f57aeace95fdd476eb\n  System UUID:                ec213b09-dc2c-82f5-7aea-ce95fdd476eb\n  Boot ID:                    0142a157-5de1-4d91-8f64-3b14b18ff3cf\n  Kernel Version:             6.5.0-1023-aws\n  OS Image:                   Ubuntu 22.04.4 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.6.8\n  Kubelet Version:            v1.29.7\n  Kube-Proxy Version:         v1.29.7\nNon-terminated Pods:          (2 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 calico-node-knz72                                          250m (12%)    0 (0%)      0 (0%)           0 (0%)         58m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-eaeef1be74044e0f-jqgpt    0 (0%)        0 (0%)      0 (0%)           0 (0%)         56m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                250m (12%)  0 (0%)\n  memory             0 (0%)      0 (0%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:\n  Type     Reason                   Age   From        Message\n  ----     ------                   ----  ----        -------\n  Normal   Starting                 60m   kube-proxy  \n  Normal   Starting                 58m   kube-proxy  \n  Normal   Starting                 57m   kube-proxy  \n  Normal   Starting                 57m   kube-proxy  \n  Normal   Starting                 59m   kube-proxy  \n  Normal   NodeHasSufficientPID     60m   kubelet     Node ip-172-31-19-200 status is now: NodeHasSufficientPID\n  Normal   Starting                 60m   kubelet     Starting kubelet.\n  Normal   NodeHasNoDiskPressure    60m   kubelet     Node ip-172-31-19-200 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientMemory  60m   kubelet     Node ip-172-31-19-200 status is now: NodeHasSufficientMemory\n  Normal   NodeAllocatableEnforced  60m   kubelet     Updated Node Allocatable limit across pods\n  Normal   Starting                 59m   kubelet     Starting kubelet.\n  Warning  InvalidDiskCapacity      59m   kubelet     invalid capacity 0 on image filesystem\n  Normal   NodeAllocatableEnforced  59m   kubelet     Updated Node Allocatable limit across pods\n  Normal   NodeHasSufficientMemory  59m   kubelet     Node ip-172-31-19-200 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    59m   kubelet     Node ip-172-31-19-200 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     59m   kubelet     Node ip-172-31-19-200 status is now: NodeHasSufficientPID\n  Normal   NodeHasNoDiskPressure    58m   kubelet     Node ip-172-31-19-200 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     58m   kubelet     Node ip-172-31-19-200 status is now: NodeHasSufficientPID\n  Normal   NodeHasSufficientMemory  58m   kubelet     Node ip-172-31-19-200 status is now: NodeHasSufficientMemory\n  Normal   Starting                 58m   kubelet     Starting kubelet.\n  Normal   NodeAllocatableEnforced  58m   kubelet     Updated Node Allocatable limit across pods\n  Normal   NodeHasSufficientMemory  57m   kubelet     Node ip-172-31-19-200 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    57m   kubelet     Node ip-172-31-19-200 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     57m   kubelet     Node ip-172-31-19-200 status is now: NodeHasSufficientPID\n  Normal   NodeAllocatableEnforced  57m   kubelet     Updated Node Allocatable limit across pods\n  Warning  InvalidDiskCapacity      57m   kubelet     invalid capacity 0 on image filesystem\n  Normal   Starting                 57m   kubelet     Starting kubelet.\n  Normal   Starting                 57m   kubelet     Starting kubelet.\n  Warning  InvalidDiskCapacity      57m   kubelet     invalid capacity 0 on image filesystem\n  Normal   NodeAllocatableEnforced  57m   kubelet     Updated Node Allocatable limit across pods\n  Normal   NodeHasSufficientMemory  57m   kubelet     Node ip-172-31-19-200 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    57m   kubelet     Node ip-172-31-19-200 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     57m   kubelet     Node ip-172-31-19-200 status is now: NodeHasSufficientPID\n"
  Jul 20 13:08:02.128: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-4859 describe namespace kubectl-4859'
  Jul 20 13:08:02.176: INFO: stderr: ""
  Jul 20 13:08:02.176: INFO: stdout: "Name:         kubectl-4859\nLabels:       e2e-framework=kubectl\n              e2e-run=11a686db-2bd0-4c4c-a113-cbef29075afc\n              kubernetes.io/metadata.name=kubectl-4859\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  Jul 20 13:08:02.176: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4859" for this suite. @ 07/20/24 13:08:02.18
• [2.492 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:572
  STEP: Creating a kubernetes client @ 07/20/24 13:08:02.187
  Jul 20 13:08:02.187: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename job @ 07/20/24 13:08:02.188
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:08:02.2
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:08:02.202
  STEP: Creating a job @ 07/20/24 13:08:02.204
  STEP: Ensuring job reaches completions @ 07/20/24 13:08:02.207
  Jul 20 13:08:12.212: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3681" for this suite. @ 07/20/24 13:08:12.214
• [10.034 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:641
  STEP: Creating a kubernetes client @ 07/20/24 13:08:12.221
  Jul 20 13:08:12.221: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename statefulset @ 07/20/24 13:08:12.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:08:12.238
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:08:12.24
  STEP: Creating service test in namespace statefulset-4967 @ 07/20/24 13:08:12.242
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 07/20/24 13:08:12.247
  STEP: Creating stateful set ss in namespace statefulset-4967 @ 07/20/24 13:08:12.249
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-4967 @ 07/20/24 13:08:12.256
  Jul 20 13:08:12.257: INFO: Found 0 stateful pods, waiting for 1
  Jul 20 13:08:22.259: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 07/20/24 13:08:22.259
  Jul 20 13:08:22.262: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=statefulset-4967 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jul 20 13:08:22.350: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jul 20 13:08:22.350: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jul 20 13:08:22.350: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jul 20 13:08:22.354: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  Jul 20 13:08:32.357: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Jul 20 13:08:32.357: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Jul 20 13:08:32.370: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.999999736s
  Jul 20 13:08:33.374: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.997498045s
  Jul 20 13:08:34.378: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.993551743s
  Jul 20 13:08:35.383: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.988946734s
  Jul 20 13:08:36.388: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.984674256s
  Jul 20 13:08:37.393: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.979434254s
  Jul 20 13:08:38.396: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.975322456s
  Jul 20 13:08:39.401: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.971557743s
  Jul 20 13:08:40.406: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.966151092s
  Jul 20 13:08:41.411: INFO: Verifying statefulset ss doesn't scale past 1 for another 962.064657ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-4967 @ 07/20/24 13:08:42.411
  Jul 20 13:08:42.415: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=statefulset-4967 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jul 20 13:08:42.504: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jul 20 13:08:42.504: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jul 20 13:08:42.504: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jul 20 13:08:42.507: INFO: Found 1 stateful pods, waiting for 3
  Jul 20 13:08:52.509: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Jul 20 13:08:52.509: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Jul 20 13:08:52.509: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 07/20/24 13:08:52.509
  STEP: Scale down will halt with unhealthy stateful pod @ 07/20/24 13:08:52.509
  Jul 20 13:08:52.514: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=statefulset-4967 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jul 20 13:08:52.601: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jul 20 13:08:52.601: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jul 20 13:08:52.601: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jul 20 13:08:52.601: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=statefulset-4967 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jul 20 13:08:52.704: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jul 20 13:08:52.704: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jul 20 13:08:52.704: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jul 20 13:08:52.704: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=statefulset-4967 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jul 20 13:08:52.788: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jul 20 13:08:52.788: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jul 20 13:08:52.788: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jul 20 13:08:52.788: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Jul 20 13:08:52.792: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  Jul 20 13:09:02.800: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Jul 20 13:09:02.801: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Jul 20 13:09:02.801: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Jul 20 13:09:02.810: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999999809s
  Jul 20 13:09:03.815: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.998144193s
  Jul 20 13:09:04.820: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.992884758s
  Jul 20 13:09:05.832: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.982783435s
  Jul 20 13:09:06.837: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.974740925s
  Jul 20 13:09:07.841: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.970731602s
  Jul 20 13:09:08.846: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.967282365s
  Jul 20 13:09:09.850: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.96244271s
  Jul 20 13:09:10.855: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.958233327s
  Jul 20 13:09:11.860: INFO: Verifying statefulset ss doesn't scale past 3 for another 952.516836ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-4967 @ 07/20/24 13:09:12.861
  Jul 20 13:09:12.864: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=statefulset-4967 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jul 20 13:09:12.948: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jul 20 13:09:12.948: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jul 20 13:09:12.948: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jul 20 13:09:12.948: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=statefulset-4967 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jul 20 13:09:13.033: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jul 20 13:09:13.033: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jul 20 13:09:13.033: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jul 20 13:09:13.033: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=statefulset-4967 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jul 20 13:09:13.126: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jul 20 13:09:13.126: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jul 20 13:09:13.126: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jul 20 13:09:13.126: INFO: Scaling statefulset ss to 0
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 07/20/24 13:09:23.135
  Jul 20 13:09:23.135: INFO: Deleting all statefulset in ns statefulset-4967
  Jul 20 13:09:23.138: INFO: Scaling statefulset ss to 0
  Jul 20 13:09:23.142: INFO: Waiting for statefulset status.replicas updated to 0
  Jul 20 13:09:23.145: INFO: Deleting statefulset ss
  Jul 20 13:09:23.154: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4967" for this suite. @ 07/20/24 13:09:23.156
• [70.940 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 07/20/24 13:09:23.161
  Jul 20 13:09:23.161: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename namespaces @ 07/20/24 13:09:23.162
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:09:23.18
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:09:23.182
  STEP: Creating a test namespace @ 07/20/24 13:09:23.183
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:09:23.199
  STEP: Creating a pod in the namespace @ 07/20/24 13:09:23.201
  STEP: Waiting for the pod to have running status @ 07/20/24 13:09:23.208
  STEP: Deleting the namespace @ 07/20/24 13:09:25.215
  STEP: Waiting for the namespace to be removed. @ 07/20/24 13:09:25.221
  STEP: Recreating the namespace @ 07/20/24 13:09:36.223
  STEP: Verifying there are no pods in the namespace @ 07/20/24 13:09:36.243
  Jul 20 13:09:36.248: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5595" for this suite. @ 07/20/24 13:09:36.252
  STEP: Destroying namespace "nsdeletetest-3908" for this suite. @ 07/20/24 13:09:36.257
  Jul 20 13:09:36.259: INFO: Namespace nsdeletetest-3908 was already deleted
  STEP: Destroying namespace "nsdeletetest-2151" for this suite. @ 07/20/24 13:09:36.259
• [13.104 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 07/20/24 13:09:36.265
  Jul 20 13:09:36.265: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename gc @ 07/20/24 13:09:36.266
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:09:36.281
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:09:36.284
  STEP: create the rc @ 07/20/24 13:09:36.287
  W0720 13:09:36.296130      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 07/20/24 13:09:41.3
  STEP: wait for all pods to be garbage collected @ 07/20/24 13:09:41.304
  STEP: Gathering metrics @ 07/20/24 13:09:46.312
  W0720 13:09:46.316517      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Jul 20 13:09:46.316: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jul 20 13:09:46.316: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6020" for this suite. @ 07/20/24 13:09:46.319
• [10.060 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 07/20/24 13:09:46.325
  Jul 20 13:09:46.325: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename secrets @ 07/20/24 13:09:46.325
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:09:46.344
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:09:46.346
  STEP: Creating secret with name secret-test-map-7c6d5c08-2a1a-45bb-9dd4-e0fbb81705ea @ 07/20/24 13:09:46.348
  STEP: Creating a pod to test consume secrets @ 07/20/24 13:09:46.351
  STEP: Saw pod success @ 07/20/24 13:09:50.367
  Jul 20 13:09:50.370: INFO: Trying to get logs from node ip-172-31-79-190 pod pod-secrets-4e4a41d3-709c-4679-ac48-a92e2da9e910 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/20/24 13:09:50.379
  Jul 20 13:09:50.391: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1390" for this suite. @ 07/20/24 13:09:50.394
• [4.075 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:69
  STEP: Creating a kubernetes client @ 07/20/24 13:09:50.4
  Jul 20 13:09:50.400: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/20/24 13:09:50.4
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:09:50.417
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:09:50.419
  Jul 20 13:09:50.421: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 07/20/24 13:09:51.681
  Jul 20 13:09:51.682: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=crd-publish-openapi-7373 --namespace=crd-publish-openapi-7373 create -f -'
  Jul 20 13:09:53.745: INFO: stderr: ""
  Jul 20 13:09:53.745: INFO: stdout: "e2e-test-crd-publish-openapi-2-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Jul 20 13:09:53.745: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=crd-publish-openapi-7373 --namespace=crd-publish-openapi-7373 delete e2e-test-crd-publish-openapi-2-crds test-foo'
  Jul 20 13:09:53.796: INFO: stderr: ""
  Jul 20 13:09:53.796: INFO: stdout: "e2e-test-crd-publish-openapi-2-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  Jul 20 13:09:53.796: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=crd-publish-openapi-7373 --namespace=crd-publish-openapi-7373 apply -f -'
  Jul 20 13:09:53.847: INFO: stderr: ""
  Jul 20 13:09:53.847: INFO: stdout: "e2e-test-crd-publish-openapi-2-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Jul 20 13:09:53.847: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=crd-publish-openapi-7373 --namespace=crd-publish-openapi-7373 delete e2e-test-crd-publish-openapi-2-crds test-foo'
  Jul 20 13:09:53.892: INFO: stderr: ""
  Jul 20 13:09:53.892: INFO: stdout: "e2e-test-crd-publish-openapi-2-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 07/20/24 13:09:53.892
  Jul 20 13:09:53.892: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=crd-publish-openapi-7373 --namespace=crd-publish-openapi-7373 create -f -'
  Jul 20 13:09:53.936: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 07/20/24 13:09:53.936
  Jul 20 13:09:53.936: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=crd-publish-openapi-7373 --namespace=crd-publish-openapi-7373 create -f -'
  Jul 20 13:09:53.977: INFO: rc: 1
  Jul 20 13:09:53.977: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=crd-publish-openapi-7373 --namespace=crd-publish-openapi-7373 apply -f -'
  Jul 20 13:09:54.027: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 07/20/24 13:09:54.027
  Jul 20 13:09:54.027: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=crd-publish-openapi-7373 --namespace=crd-publish-openapi-7373 create -f -'
  Jul 20 13:09:54.067: INFO: rc: 1
  Jul 20 13:09:54.067: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=crd-publish-openapi-7373 --namespace=crd-publish-openapi-7373 apply -f -'
  Jul 20 13:09:54.113: INFO: rc: 1
  STEP: kubectl explain works to explain CR properties @ 07/20/24 13:09:54.113
  Jul 20 13:09:54.113: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=crd-publish-openapi-7373 explain e2e-test-crd-publish-openapi-2-crds'
  Jul 20 13:09:54.151: INFO: stderr: ""
  Jul 20 13:09:54.151: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-2-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 07/20/24 13:09:54.151
  Jul 20 13:09:54.151: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=crd-publish-openapi-7373 explain e2e-test-crd-publish-openapi-2-crds.metadata'
  Jul 20 13:09:54.192: INFO: stderr: ""
  Jul 20 13:09:54.192: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-2-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  Jul 20 13:09:54.193: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=crd-publish-openapi-7373 explain e2e-test-crd-publish-openapi-2-crds.spec'
  Jul 20 13:09:54.234: INFO: stderr: ""
  Jul 20 13:09:54.234: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-2-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  Jul 20 13:09:54.234: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=crd-publish-openapi-7373 explain e2e-test-crd-publish-openapi-2-crds.spec.bars'
  Jul 20 13:09:54.275: INFO: stderr: ""
  Jul 20 13:09:54.275: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-2-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 07/20/24 13:09:54.275
  Jul 20 13:09:54.275: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=crd-publish-openapi-7373 explain e2e-test-crd-publish-openapi-2-crds.spec.bars2'
  Jul 20 13:09:54.316: INFO: rc: 1
  Jul 20 13:09:55.485: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7373" for this suite. @ 07/20/24 13:09:55.49
• [5.095 seconds]
------------------------------
S
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1493
  STEP: Creating a kubernetes client @ 07/20/24 13:09:55.495
  Jul 20 13:09:55.495: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename services @ 07/20/24 13:09:55.495
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:09:55.512
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:09:55.514
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-2412 @ 07/20/24 13:09:55.515
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 07/20/24 13:09:55.523
  STEP: creating service externalsvc in namespace services-2412 @ 07/20/24 13:09:55.524
  STEP: creating replication controller externalsvc in namespace services-2412 @ 07/20/24 13:09:55.534
  I0720 13:09:55.538477      19 runners.go:197] Created replication controller with name: externalsvc, namespace: services-2412, replica count: 2
  I0720 13:09:58.588875      19 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 07/20/24 13:09:58.593
  Jul 20 13:09:58.606: INFO: Creating new exec pod
  Jul 20 13:10:00.619: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=services-2412 exec execpodmw59k -- /bin/sh -x -c nslookup clusterip-service.services-2412.svc.cluster.local'
  Jul 20 13:10:00.731: INFO: stderr: "+ nslookup clusterip-service.services-2412.svc.cluster.local\n"
  Jul 20 13:10:00.731: INFO: stdout: "Server:\t\t10.152.183.58\nAddress:\t10.152.183.58#53\n\nclusterip-service.services-2412.svc.cluster.local\tcanonical name = externalsvc.services-2412.svc.cluster.local.\nName:\texternalsvc.services-2412.svc.cluster.local\nAddress: 10.152.183.50\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-2412, will wait for the garbage collector to delete the pods @ 07/20/24 13:10:00.731
  Jul 20 13:10:00.792: INFO: Deleting ReplicationController externalsvc took: 6.947523ms
  Jul 20 13:10:00.892: INFO: Terminating ReplicationController externalsvc pods took: 100.597633ms
  Jul 20 13:10:03.906: INFO: Cleaning up the ClusterIP to ExternalName test service
  Jul 20 13:10:03.914: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2412" for this suite. @ 07/20/24 13:10:03.917
• [8.428 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 07/20/24 13:10:03.924
  Jul 20 13:10:03.924: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 07/20/24 13:10:03.924
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:10:03.94
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:10:03.942
  STEP: Setting up the test @ 07/20/24 13:10:03.943
  STEP: Creating hostNetwork=false pod @ 07/20/24 13:10:03.943
  STEP: Creating hostNetwork=true pod @ 07/20/24 13:10:05.958
  STEP: Running the test @ 07/20/24 13:10:07.972
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 07/20/24 13:10:07.972
  Jul 20 13:10:07.972: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8088 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 20 13:10:07.972: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  Jul 20 13:10:07.972: INFO: ExecWithOptions: Clientset creation
  Jul 20 13:10:07.972: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8088/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Jul 20 13:10:08.019: INFO: Exec stderr: ""
  Jul 20 13:10:08.019: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8088 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 20 13:10:08.019: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  Jul 20 13:10:08.019: INFO: ExecWithOptions: Clientset creation
  Jul 20 13:10:08.019: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8088/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Jul 20 13:10:08.058: INFO: Exec stderr: ""
  Jul 20 13:10:08.058: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8088 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 20 13:10:08.058: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  Jul 20 13:10:08.059: INFO: ExecWithOptions: Clientset creation
  Jul 20 13:10:08.059: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8088/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Jul 20 13:10:08.098: INFO: Exec stderr: ""
  Jul 20 13:10:08.098: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8088 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 20 13:10:08.098: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  Jul 20 13:10:08.099: INFO: ExecWithOptions: Clientset creation
  Jul 20 13:10:08.099: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8088/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Jul 20 13:10:08.142: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 07/20/24 13:10:08.142
  Jul 20 13:10:08.142: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8088 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 20 13:10:08.142: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  Jul 20 13:10:08.143: INFO: ExecWithOptions: Clientset creation
  Jul 20 13:10:08.143: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8088/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Jul 20 13:10:08.183: INFO: Exec stderr: ""
  Jul 20 13:10:08.183: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8088 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 20 13:10:08.183: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  Jul 20 13:10:08.183: INFO: ExecWithOptions: Clientset creation
  Jul 20 13:10:08.183: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8088/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Jul 20 13:10:08.231: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 07/20/24 13:10:08.231
  Jul 20 13:10:08.231: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8088 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 20 13:10:08.231: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  Jul 20 13:10:08.232: INFO: ExecWithOptions: Clientset creation
  Jul 20 13:10:08.232: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8088/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Jul 20 13:10:08.280: INFO: Exec stderr: ""
  Jul 20 13:10:08.280: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8088 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 20 13:10:08.280: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  Jul 20 13:10:08.281: INFO: ExecWithOptions: Clientset creation
  Jul 20 13:10:08.281: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8088/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Jul 20 13:10:08.319: INFO: Exec stderr: ""
  Jul 20 13:10:08.319: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8088 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 20 13:10:08.319: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  Jul 20 13:10:08.320: INFO: ExecWithOptions: Clientset creation
  Jul 20 13:10:08.320: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8088/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Jul 20 13:10:08.359: INFO: Exec stderr: ""
  Jul 20 13:10:08.359: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8088 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 20 13:10:08.359: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  Jul 20 13:10:08.360: INFO: ExecWithOptions: Clientset creation
  Jul 20 13:10:08.360: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8088/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Jul 20 13:10:08.404: INFO: Exec stderr: ""
  Jul 20 13:10:08.404: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-8088" for this suite. @ 07/20/24 13:10:08.407
• [4.490 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 07/20/24 13:10:08.415
  Jul 20 13:10:08.415: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename cronjob @ 07/20/24 13:10:08.416
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:10:08.431
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:10:08.433
  STEP: Creating a ForbidConcurrent cronjob @ 07/20/24 13:10:08.434
  STEP: Ensuring a job is scheduled @ 07/20/24 13:10:08.44
  STEP: Ensuring exactly one is scheduled @ 07/20/24 13:11:00.443
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 07/20/24 13:11:00.446
  STEP: Ensuring no more jobs are scheduled @ 07/20/24 13:11:00.449
  STEP: Removing cronjob @ 07/20/24 13:16:00.455
  Jul 20 13:16:00.460: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-2824" for this suite. @ 07/20/24 13:16:00.463
• [352.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 07/20/24 13:16:00.469
  Jul 20 13:16:00.469: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename daemonsets @ 07/20/24 13:16:00.469
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:16:00.488
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:16:00.489
  STEP: Creating a simple DaemonSet "daemon-set" @ 07/20/24 13:16:00.505
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/20/24 13:16:00.509
  Jul 20 13:16:00.512: INFO: DaemonSet pods can't tolerate node ip-172-31-19-200 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 20 13:16:00.512: INFO: DaemonSet pods can't tolerate node ip-172-31-76-81 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 20 13:16:00.514: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul 20 13:16:00.514: INFO: Node ip-172-31-25-173 is running 0 daemon pod, expected 1
  Jul 20 13:16:01.514: INFO: DaemonSet pods can't tolerate node ip-172-31-19-200 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 20 13:16:01.514: INFO: DaemonSet pods can't tolerate node ip-172-31-76-81 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 20 13:16:01.517: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jul 20 13:16:01.517: INFO: Node ip-172-31-25-173 is running 0 daemon pod, expected 1
  Jul 20 13:16:02.514: INFO: DaemonSet pods can't tolerate node ip-172-31-19-200 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 20 13:16:02.514: INFO: DaemonSet pods can't tolerate node ip-172-31-76-81 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 20 13:16:02.517: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jul 20 13:16:02.517: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 07/20/24 13:16:02.519
  Jul 20 13:16:02.531: INFO: DaemonSet pods can't tolerate node ip-172-31-19-200 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 20 13:16:02.531: INFO: DaemonSet pods can't tolerate node ip-172-31-76-81 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 20 13:16:02.534: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jul 20 13:16:02.534: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 07/20/24 13:16:02.534
  STEP: Deleting DaemonSet "daemon-set" @ 07/20/24 13:16:03.542
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3968, will wait for the garbage collector to delete the pods @ 07/20/24 13:16:03.542
  Jul 20 13:16:03.601: INFO: Deleting DaemonSet.extensions daemon-set took: 5.458536ms
  Jul 20 13:16:03.701: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.303064ms
  Jul 20 13:16:05.105: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul 20 13:16:05.105: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jul 20 13:16:05.109: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"28212"},"items":null}

  Jul 20 13:16:05.111: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"28212"},"items":null}

  Jul 20 13:16:05.121: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3968" for this suite. @ 07/20/24 13:16:05.123
• [4.658 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 07/20/24 13:16:05.127
  Jul 20 13:16:05.127: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename container-runtime @ 07/20/24 13:16:05.128
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:16:05.142
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:16:05.144
  STEP: create the container @ 07/20/24 13:16:05.146
  W0720 13:16:05.154156      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 07/20/24 13:16:05.154
  STEP: get the container status @ 07/20/24 13:16:08.168
  STEP: the container should be terminated @ 07/20/24 13:16:08.171
  STEP: the termination message should be set @ 07/20/24 13:16:08.171
  Jul 20 13:16:08.171: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 07/20/24 13:16:08.171
  Jul 20 13:16:08.181: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3995" for this suite. @ 07/20/24 13:16:08.184
• [3.062 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 07/20/24 13:16:08.19
  Jul 20 13:16:08.190: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename container-probe @ 07/20/24 13:16:08.19
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:16:08.206
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:16:08.208
  Jul 20 13:17:08.219: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-551" for this suite. @ 07/20/24 13:17:08.222
• [60.038 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1373
  STEP: Creating a kubernetes client @ 07/20/24 13:17:08.228
  Jul 20 13:17:08.228: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename kubectl @ 07/20/24 13:17:08.229
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:17:08.246
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:17:08.248
  STEP: validating cluster-info @ 07/20/24 13:17:08.249
  Jul 20 13:17:08.249: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-2307 cluster-info'
  Jul 20 13:17:08.290: INFO: stderr: ""
  Jul 20 13:17:08.290: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.152.183.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  Jul 20 13:17:08.290: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2307" for this suite. @ 07/20/24 13:17:08.294
• [0.071 seconds]
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 07/20/24 13:17:08.299
  Jul 20 13:17:08.299: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename downward-api @ 07/20/24 13:17:08.3
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:17:08.314
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:17:08.315
  STEP: Creating a pod to test downward API volume plugin @ 07/20/24 13:17:08.317
  STEP: Saw pod success @ 07/20/24 13:17:12.336
  Jul 20 13:17:12.340: INFO: Trying to get logs from node ip-172-31-25-173 pod downwardapi-volume-6514135f-7343-4b61-ad69-7b13bb8462ef container client-container: <nil>
  STEP: delete the pod @ 07/20/24 13:17:12.354
  Jul 20 13:17:12.365: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9515" for this suite. @ 07/20/24 13:17:12.367
• [4.072 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 07/20/24 13:17:12.372
  Jul 20 13:17:12.372: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename pod-network-test @ 07/20/24 13:17:12.372
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:17:12.388
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:17:12.389
  STEP: Performing setup for networking test in namespace pod-network-test-3681 @ 07/20/24 13:17:12.391
  STEP: creating a selector @ 07/20/24 13:17:12.391
  STEP: Creating the service pods in kubernetes @ 07/20/24 13:17:12.391
  Jul 20 13:17:12.391: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 07/20/24 13:17:24.455
  Jul 20 13:17:26.478: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Jul 20 13:17:26.478: INFO: Going to poll 192.168.245.248 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Jul 20 13:17:26.480: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.245.248 8081 | grep -v '^\s*$'] Namespace:pod-network-test-3681 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 20 13:17:26.480: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  Jul 20 13:17:26.481: INFO: ExecWithOptions: Clientset creation
  Jul 20 13:17:26.481: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-3681/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.245.248+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jul 20 13:17:27.537: INFO: Found all 1 expected endpoints: [netserver-0]
  Jul 20 13:17:27.537: INFO: Going to poll 192.168.15.75 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Jul 20 13:17:27.541: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.15.75 8081 | grep -v '^\s*$'] Namespace:pod-network-test-3681 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 20 13:17:27.541: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  Jul 20 13:17:27.542: INFO: ExecWithOptions: Clientset creation
  Jul 20 13:17:27.542: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-3681/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.15.75+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jul 20 13:17:28.589: INFO: Found all 1 expected endpoints: [netserver-1]
  Jul 20 13:17:28.589: INFO: Going to poll 192.168.120.214 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Jul 20 13:17:28.592: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.120.214 8081 | grep -v '^\s*$'] Namespace:pod-network-test-3681 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 20 13:17:28.592: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  Jul 20 13:17:28.593: INFO: ExecWithOptions: Clientset creation
  Jul 20 13:17:28.593: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-3681/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.120.214+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jul 20 13:17:29.635: INFO: Found all 1 expected endpoints: [netserver-2]
  Jul 20 13:17:29.635: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-3681" for this suite. @ 07/20/24 13:17:29.64
• [17.273 seconds]
------------------------------
SSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:793
  STEP: Creating a kubernetes client @ 07/20/24 13:17:29.645
  Jul 20 13:17:29.645: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename statefulset @ 07/20/24 13:17:29.646
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:17:29.663
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:17:29.665
  STEP: Creating service test in namespace statefulset-58 @ 07/20/24 13:17:29.666
  STEP: Looking for a node to schedule stateful set and pod @ 07/20/24 13:17:29.67
  STEP: Creating pod with conflicting port in namespace statefulset-58 @ 07/20/24 13:17:29.673
  STEP: Waiting until pod test-pod will start running in namespace statefulset-58 @ 07/20/24 13:17:29.68
  STEP: Creating statefulset with conflicting port in namespace statefulset-58 @ 07/20/24 13:17:31.687
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-58 @ 07/20/24 13:17:31.692
  Jul 20 13:17:31.705: INFO: Observed stateful pod in namespace: statefulset-58, name: ss-0, uid: 0f8cdd58-7fac-4e65-8b58-683d210ac18d, status phase: Pending. Waiting for statefulset controller to delete.
  Jul 20 13:17:31.725: INFO: Observed stateful pod in namespace: statefulset-58, name: ss-0, uid: 0f8cdd58-7fac-4e65-8b58-683d210ac18d, status phase: Failed. Waiting for statefulset controller to delete.
  Jul 20 13:17:31.730: INFO: Observed stateful pod in namespace: statefulset-58, name: ss-0, uid: 0f8cdd58-7fac-4e65-8b58-683d210ac18d, status phase: Failed. Waiting for statefulset controller to delete.
  Jul 20 13:17:31.734: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-58
  STEP: Removing pod with conflicting port in namespace statefulset-58 @ 07/20/24 13:17:31.735
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-58 and will be in running state @ 07/20/24 13:17:31.747
  Jul 20 13:17:33.755: INFO: Deleting all statefulset in ns statefulset-58
  Jul 20 13:17:33.758: INFO: Scaling statefulset ss to 0
  Jul 20 13:17:43.771: INFO: Waiting for statefulset status.replicas updated to 0
  Jul 20 13:17:43.773: INFO: Deleting statefulset ss
  Jul 20 13:17:43.782: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-58" for this suite. @ 07/20/24 13:17:43.786
• [14.146 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 07/20/24 13:17:43.791
  Jul 20 13:17:43.792: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename secrets @ 07/20/24 13:17:43.792
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:17:43.807
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:17:43.809
  STEP: Creating secret with name secret-test-c7b9723f-800b-4930-ba5e-ee466438e5ae @ 07/20/24 13:17:43.81
  STEP: Creating a pod to test consume secrets @ 07/20/24 13:17:43.813
  STEP: Saw pod success @ 07/20/24 13:17:45.835
  Jul 20 13:17:45.841: INFO: Trying to get logs from node ip-172-31-79-190 pod pod-secrets-3a5a4b75-c888-4c41-b2c9-a08dd092b0e3 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/20/24 13:17:45.856
  Jul 20 13:17:45.870: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5626" for this suite. @ 07/20/24 13:17:45.873
• [2.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 07/20/24 13:17:45.878
  Jul 20 13:17:45.878: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename projected @ 07/20/24 13:17:45.878
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:17:45.893
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:17:45.894
  STEP: Creating projection with secret that has name projected-secret-test-map-abe29893-292a-4736-bee1-c660a0ffda2f @ 07/20/24 13:17:45.896
  STEP: Creating a pod to test consume secrets @ 07/20/24 13:17:45.902
  STEP: Saw pod success @ 07/20/24 13:17:49.92
  Jul 20 13:17:49.923: INFO: Trying to get logs from node ip-172-31-79-190 pod pod-projected-secrets-7a1c5154-6295-460f-af1a-a39ac2da22be container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 07/20/24 13:17:49.929
  Jul 20 13:17:49.940: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3587" for this suite. @ 07/20/24 13:17:49.942
• [4.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 07/20/24 13:17:49.947
  Jul 20 13:17:49.947: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename replication-controller @ 07/20/24 13:17:49.948
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:17:49.962
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:17:49.964
  STEP: Creating ReplicationController "e2e-rc-4sr8f" @ 07/20/24 13:17:49.966
  Jul 20 13:17:49.970: INFO: Get Replication Controller "e2e-rc-4sr8f" to confirm replicas
  Jul 20 13:17:50.971: INFO: Get Replication Controller "e2e-rc-4sr8f" to confirm replicas
  Jul 20 13:17:50.975: INFO: Found 1 replicas for "e2e-rc-4sr8f" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-4sr8f" @ 07/20/24 13:17:50.975
  STEP: Updating a scale subresource @ 07/20/24 13:17:50.977
  STEP: Verifying replicas where modified for replication controller "e2e-rc-4sr8f" @ 07/20/24 13:17:50.981
  Jul 20 13:17:50.981: INFO: Get Replication Controller "e2e-rc-4sr8f" to confirm replicas
  Jul 20 13:17:51.982: INFO: Get Replication Controller "e2e-rc-4sr8f" to confirm replicas
  Jul 20 13:17:51.985: INFO: Found 2 replicas for "e2e-rc-4sr8f" replication controller
  Jul 20 13:17:51.985: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-2783" for this suite. @ 07/20/24 13:17:51.988
• [2.047 seconds]
------------------------------
SSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:95
  STEP: Creating a kubernetes client @ 07/20/24 13:17:51.995
  Jul 20 13:17:51.995: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename var-expansion @ 07/20/24 13:17:51.995
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:17:52.01
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:17:52.012
  STEP: Creating a pod to test substitution in container's args @ 07/20/24 13:17:52.013
  STEP: Saw pod success @ 07/20/24 13:17:56.031
  Jul 20 13:17:56.033: INFO: Trying to get logs from node ip-172-31-79-190 pod var-expansion-60f23118-c886-4033-92ce-3d7bafe17754 container dapi-container: <nil>
  STEP: delete the pod @ 07/20/24 13:17:56.039
  Jul 20 13:17:56.054: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8327" for this suite. @ 07/20/24 13:17:56.057
• [4.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 07/20/24 13:17:56.062
  Jul 20 13:17:56.062: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename chunking @ 07/20/24 13:17:56.063
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:17:56.08
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:17:56.082
  STEP: creating a large number of resources @ 07/20/24 13:17:56.084
  STEP: retrieving the first page @ 07/20/24 13:18:13.769
  Jul 20 13:18:13.817: INFO: Retrieved 40/40 results with rv 29419 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MTksInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page until the token expires @ 07/20/24 13:18:13.817
  Jul 20 13:18:33.821: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MTksInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jul 20 13:18:53.824: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MTksInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jul 20 13:19:13.823: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MTksInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jul 20 13:19:33.824: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MTksInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jul 20 13:19:53.823: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MTksInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jul 20 13:20:13.821: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MTksInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jul 20 13:20:33.824: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MTksInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jul 20 13:20:53.824: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MTksInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jul 20 13:21:13.825: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MTksInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jul 20 13:21:33.824: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MTksInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jul 20 13:21:53.824: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MTksInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jul 20 13:22:13.823: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MTksInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jul 20 13:22:33.822: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MTksInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jul 20 13:22:53.823: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MTksInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jul 20 13:23:13.823: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MTksInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jul 20 13:23:33.824: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MTksInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jul 20 13:23:53.824: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MTksInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jul 20 13:24:13.824: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MTksInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jul 20 13:24:33.828: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MTksInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jul 20 13:24:53.823: INFO: got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  Jul 20 13:24:53.823: INFO: Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 07/20/24 13:24:53.823
  STEP: retrieving all remaining pages @ 07/20/24 13:24:53.827
  Jul 20 13:24:53.830: INFO: Retrieved 40/40 results with rv 30180 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzAxODAsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  Jul 20 13:24:53.833: INFO: Retrieved 40/40 results with rv 30180 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzAxODAsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  Jul 20 13:24:53.836: INFO: Retrieved 40/40 results with rv 30180 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzAxODAsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  Jul 20 13:24:53.838: INFO: Retrieved 40/40 results with rv 30180 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzAxODAsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  Jul 20 13:24:53.841: INFO: Retrieved 40/40 results with rv 30180 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzAxODAsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  Jul 20 13:24:53.844: INFO: Retrieved 40/40 results with rv 30180 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzAxODAsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  Jul 20 13:24:53.846: INFO: Retrieved 40/40 results with rv 30180 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzAxODAsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  Jul 20 13:24:53.849: INFO: Retrieved 40/40 results with rv 30180 and continue 
  Jul 20 13:24:53.849: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-8940" for this suite. @ 07/20/24 13:24:53.851
• [417.794 seconds]
------------------------------
SSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 07/20/24 13:24:53.856
  Jul 20 13:24:53.856: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename disruption @ 07/20/24 13:24:53.857
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:24:53.871
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:24:53.873
  STEP: creating the pdb @ 07/20/24 13:24:53.875
  STEP: Waiting for the pdb to be processed @ 07/20/24 13:24:53.878
  STEP: updating the pdb @ 07/20/24 13:24:55.882
  STEP: Waiting for the pdb to be processed @ 07/20/24 13:24:55.889
  STEP: patching the pdb @ 07/20/24 13:24:57.893
  STEP: Waiting for the pdb to be processed @ 07/20/24 13:24:57.901
  STEP: Waiting for the pdb to be deleted @ 07/20/24 13:24:59.912
  Jul 20 13:24:59.917: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-8818" for this suite. @ 07/20/24 13:24:59.921
• [6.069 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:349
  STEP: Creating a kubernetes client @ 07/20/24 13:24:59.926
  Jul 20 13:24:59.926: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename security-context-test @ 07/20/24 13:24:59.927
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:24:59.941
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:24:59.942
  Jul 20 13:25:03.963: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-8402" for this suite. @ 07/20/24 13:25:03.966
• [4.048 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:219
  STEP: Creating a kubernetes client @ 07/20/24 13:25:03.974
  Jul 20 13:25:03.974: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename downward-api @ 07/20/24 13:25:03.975
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:25:03.995
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:25:03.997
  STEP: Creating a pod to test downward api env vars @ 07/20/24 13:25:03.999
  STEP: Saw pod success @ 07/20/24 13:25:08.02
  Jul 20 13:25:08.022: INFO: Trying to get logs from node ip-172-31-79-190 pod downward-api-6c620dcd-b69c-4e0c-a7f4-ac33f21529c8 container dapi-container: <nil>
  STEP: delete the pod @ 07/20/24 13:25:08.04
  Jul 20 13:25:08.053: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4891" for this suite. @ 07/20/24 13:25:08.055
• [4.086 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 07/20/24 13:25:08.06
  Jul 20 13:25:08.060: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename downward-api @ 07/20/24 13:25:08.061
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:25:08.08
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:25:08.082
  STEP: Creating a pod to test downward API volume plugin @ 07/20/24 13:25:08.084
  STEP: Saw pod success @ 07/20/24 13:25:12.102
  Jul 20 13:25:12.107: INFO: Trying to get logs from node ip-172-31-79-190 pod downwardapi-volume-ab59b7da-5c8b-4a0d-bdc9-b996a6779371 container client-container: <nil>
  STEP: delete the pod @ 07/20/24 13:25:12.113
  Jul 20 13:25:12.123: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6351" for this suite. @ 07/20/24 13:25:12.126
• [4.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:78
  STEP: Creating a kubernetes client @ 07/20/24 13:25:12.131
  Jul 20 13:25:12.131: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename resourcequota @ 07/20/24 13:25:12.131
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:25:12.144
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:25:12.146
  STEP: Counting existing ResourceQuota @ 07/20/24 13:25:12.148
  STEP: Creating a ResourceQuota @ 07/20/24 13:25:17.151
  STEP: Ensuring resource quota status is calculated @ 07/20/24 13:25:17.155
  Jul 20 13:25:19.159: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5653" for this suite. @ 07/20/24 13:25:19.161
• [7.036 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:170
  STEP: Creating a kubernetes client @ 07/20/24 13:25:19.167
  Jul 20 13:25:19.167: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename security-context @ 07/20/24 13:25:19.167
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:25:19.19
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:25:19.191
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 07/20/24 13:25:19.193
  STEP: Saw pod success @ 07/20/24 13:25:23.212
  Jul 20 13:25:23.214: INFO: Trying to get logs from node ip-172-31-79-190 pod security-context-7a100f66-01e7-4e9e-ab61-0edc2abb0a6c container test-container: <nil>
  STEP: delete the pod @ 07/20/24 13:25:23.22
  Jul 20 13:25:23.234: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-772" for this suite. @ 07/20/24 13:25:23.237
• [4.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:397
  STEP: Creating a kubernetes client @ 07/20/24 13:25:23.241
  Jul 20 13:25:23.241: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename resourcequota @ 07/20/24 13:25:23.242
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:25:23.256
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:25:23.257
  STEP: Counting existing ResourceQuota @ 07/20/24 13:25:23.26
  STEP: Creating a ResourceQuota @ 07/20/24 13:25:28.264
  STEP: Ensuring resource quota status is calculated @ 07/20/24 13:25:28.27
  STEP: Creating a ReplicationController @ 07/20/24 13:25:30.273
  STEP: Ensuring resource quota status captures replication controller creation @ 07/20/24 13:25:30.288
  STEP: Deleting a ReplicationController @ 07/20/24 13:25:32.292
  STEP: Ensuring resource quota status released usage @ 07/20/24 13:25:32.297
  Jul 20 13:25:34.301: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8771" for this suite. @ 07/20/24 13:25:34.304
• [11.068 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:142
  STEP: Creating a kubernetes client @ 07/20/24 13:25:34.309
  Jul 20 13:25:34.309: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename crd-webhook @ 07/20/24 13:25:34.31
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:25:34.327
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:25:34.328
  STEP: Setting up server cert @ 07/20/24 13:25:34.33
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 07/20/24 13:25:34.512
  STEP: Deploying the custom resource conversion webhook pod @ 07/20/24 13:25:34.52
  STEP: Wait for the deployment to be ready @ 07/20/24 13:25:34.532
  Jul 20 13:25:34.539: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/20/24 13:25:36.549
  STEP: Verifying the service has paired with the endpoint @ 07/20/24 13:25:36.561
  Jul 20 13:25:37.561: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Jul 20 13:25:37.568: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Creating a v1 custom resource @ 07/20/24 13:25:40.118
  STEP: v2 custom resource should be converted @ 07/20/24 13:25:40.122
  Jul 20 13:25:40.670: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-2485" for this suite. @ 07/20/24 13:25:40.674
• [6.373 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 07/20/24 13:25:40.683
  Jul 20 13:25:40.683: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename runtimeclass @ 07/20/24 13:25:40.684
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:25:40.699
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:25:40.701
  STEP: getting /apis @ 07/20/24 13:25:40.702
  STEP: getting /apis/node.k8s.io @ 07/20/24 13:25:40.705
  STEP: getting /apis/node.k8s.io/v1 @ 07/20/24 13:25:40.706
  STEP: creating @ 07/20/24 13:25:40.706
  STEP: watching @ 07/20/24 13:25:40.739
  Jul 20 13:25:40.739: INFO: starting watch
  STEP: getting @ 07/20/24 13:25:40.755
  STEP: listing @ 07/20/24 13:25:40.758
  STEP: patching @ 07/20/24 13:25:40.761
  STEP: updating @ 07/20/24 13:25:40.765
  Jul 20 13:25:40.770: INFO: waiting for watch events with expected annotations
  STEP: deleting @ 07/20/24 13:25:40.77
  STEP: deleting a collection @ 07/20/24 13:25:40.778
  Jul 20 13:25:40.789: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5729" for this suite. @ 07/20/24 13:25:40.792
• [0.114 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 07/20/24 13:25:40.797
  Jul 20 13:25:40.797: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename projected @ 07/20/24 13:25:40.798
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:25:40.814
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:25:40.816
  STEP: Creating configMap with name projected-configmap-test-volume-map-eacd2bd0-efb6-4ac3-b49e-78c09063f58c @ 07/20/24 13:25:40.817
  STEP: Creating a pod to test consume configMaps @ 07/20/24 13:25:40.822
  STEP: Saw pod success @ 07/20/24 13:25:44.84
  Jul 20 13:25:44.843: INFO: Trying to get logs from node ip-172-31-79-190 pod pod-projected-configmaps-2f434533-e7e0-493c-813f-ae6353d3a640 container agnhost-container: <nil>
  STEP: delete the pod @ 07/20/24 13:25:44.848
  Jul 20 13:25:44.860: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4064" for this suite. @ 07/20/24 13:25:44.863
• [4.072 seconds]
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 07/20/24 13:25:44.869
  Jul 20 13:25:44.869: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename projected @ 07/20/24 13:25:44.87
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:25:44.886
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:25:44.888
  STEP: Creating configMap with name projected-configmap-test-volume-map-6c5568cc-eaf2-4d65-989d-0e7b860596c3 @ 07/20/24 13:25:44.889
  STEP: Creating a pod to test consume configMaps @ 07/20/24 13:25:44.892
  STEP: Saw pod success @ 07/20/24 13:25:48.91
  Jul 20 13:25:48.912: INFO: Trying to get logs from node ip-172-31-79-190 pod pod-projected-configmaps-0fafb80f-7943-4029-a7fd-a0f0962d8680 container agnhost-container: <nil>
  STEP: delete the pod @ 07/20/24 13:25:48.918
  Jul 20 13:25:48.932: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8261" for this suite. @ 07/20/24 13:25:48.935
• [4.071 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 07/20/24 13:25:48.941
  Jul 20 13:25:48.941: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename runtimeclass @ 07/20/24 13:25:48.941
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:25:48.957
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:25:48.958
  Jul 20 13:25:48.964: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5325" for this suite. @ 07/20/24 13:25:48.967
• [0.030 seconds]
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 07/20/24 13:25:48.971
  Jul 20 13:25:48.971: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename downward-api @ 07/20/24 13:25:48.972
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:25:48.986
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:25:48.988
  STEP: Creating a pod to test downward API volume plugin @ 07/20/24 13:25:48.99
  STEP: Saw pod success @ 07/20/24 13:25:53.008
  Jul 20 13:25:53.010: INFO: Trying to get logs from node ip-172-31-79-190 pod downwardapi-volume-73a05202-f2b1-484b-9e6d-2eebb5839414 container client-container: <nil>
  STEP: delete the pod @ 07/20/24 13:25:53.018
  Jul 20 13:25:53.032: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5934" for this suite. @ 07/20/24 13:25:53.034
• [4.068 seconds]
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 07/20/24 13:25:53.039
  Jul 20 13:25:53.039: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename dns @ 07/20/24 13:25:53.04
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:25:53.054
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:25:53.056
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-8060.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-8060.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 07/20/24 13:25:53.057
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-8060.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-8060.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 07/20/24 13:25:53.057
  STEP: creating a pod to probe /etc/hosts @ 07/20/24 13:25:53.057
  STEP: submitting the pod to kubernetes @ 07/20/24 13:25:53.057
  STEP: retrieving the pod @ 07/20/24 13:25:55.071
  STEP: looking for the results for each expected name from probers @ 07/20/24 13:25:55.074
  Jul 20 13:25:55.087: INFO: DNS probes using dns-8060/dns-test-dac37930-54de-42ec-aad8-9f1ad8843756 succeeded

  STEP: deleting the pod @ 07/20/24 13:25:55.087
  Jul 20 13:25:55.099: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8060" for this suite. @ 07/20/24 13:25:55.102
• [2.067 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 07/20/24 13:25:55.107
  Jul 20 13:25:55.107: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename pods @ 07/20/24 13:25:55.108
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:25:55.124
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:25:55.126
  STEP: creating the pod @ 07/20/24 13:25:55.128
  STEP: submitting the pod to kubernetes @ 07/20/24 13:25:55.128
  W0720 13:25:55.135243      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: verifying the pod is in kubernetes @ 07/20/24 13:25:57.144
  STEP: updating the pod @ 07/20/24 13:25:57.147
  Jul 20 13:25:57.659: INFO: Successfully updated pod "pod-update-activedeadlineseconds-41e8c3e5-a185-48f0-93c3-3d2d8a50b7a6"
  Jul 20 13:26:01.670: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8503" for this suite. @ 07/20/24 13:26:01.674
• [6.573 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 07/20/24 13:26:01.681
  Jul 20 13:26:01.681: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename svcaccounts @ 07/20/24 13:26:01.681
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:26:01.697
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:26:01.699
  STEP: reading a file in the container @ 07/20/24 13:26:03.721
  Jul 20 13:26:03.721: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-1319 pod-service-account-a3cfc929-9607-4769-aca0-f2b7d65c2cb4 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 07/20/24 13:26:03.816
  Jul 20 13:26:03.816: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-1319 pod-service-account-a3cfc929-9607-4769-aca0-f2b7d65c2cb4 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 07/20/24 13:26:03.904
  Jul 20 13:26:03.904: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-1319 pod-service-account-a3cfc929-9607-4769-aca0-f2b7d65c2cb4 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  Jul 20 13:26:03.996: INFO: Got root ca configmap in namespace "svcaccounts-1319"
  Jul 20 13:26:03.997: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1319" for this suite. @ 07/20/24 13:26:04.001
• [2.328 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 07/20/24 13:26:04.009
  Jul 20 13:26:04.009: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename gc @ 07/20/24 13:26:04.01
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:26:04.028
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:26:04.03
  STEP: create the rc @ 07/20/24 13:26:04.035
  W0720 13:26:04.038645      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 07/20/24 13:26:10.046
  STEP: wait for the rc to be deleted @ 07/20/24 13:26:10.052
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 07/20/24 13:26:15.056
  STEP: Gathering metrics @ 07/20/24 13:26:45.065
  W0720 13:26:45.070185      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Jul 20 13:26:45.070: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jul 20 13:26:45.070: INFO: Deleting pod "simpletest.rc-2sn8x" in namespace "gc-1629"
  Jul 20 13:26:45.079: INFO: Deleting pod "simpletest.rc-4ht2x" in namespace "gc-1629"
  Jul 20 13:26:45.086: INFO: Deleting pod "simpletest.rc-59tc7" in namespace "gc-1629"
  Jul 20 13:26:45.100: INFO: Deleting pod "simpletest.rc-5vzt9" in namespace "gc-1629"
  Jul 20 13:26:45.113: INFO: Deleting pod "simpletest.rc-66kfz" in namespace "gc-1629"
  Jul 20 13:26:45.123: INFO: Deleting pod "simpletest.rc-6jlwf" in namespace "gc-1629"
  Jul 20 13:26:45.134: INFO: Deleting pod "simpletest.rc-6qp9q" in namespace "gc-1629"
  Jul 20 13:26:45.149: INFO: Deleting pod "simpletest.rc-6rtlv" in namespace "gc-1629"
  Jul 20 13:26:45.162: INFO: Deleting pod "simpletest.rc-7cspj" in namespace "gc-1629"
  Jul 20 13:26:45.173: INFO: Deleting pod "simpletest.rc-7jjtr" in namespace "gc-1629"
  Jul 20 13:26:45.184: INFO: Deleting pod "simpletest.rc-7qpcz" in namespace "gc-1629"
  Jul 20 13:26:45.196: INFO: Deleting pod "simpletest.rc-7wtxw" in namespace "gc-1629"
  Jul 20 13:26:45.208: INFO: Deleting pod "simpletest.rc-825h2" in namespace "gc-1629"
  Jul 20 13:26:45.217: INFO: Deleting pod "simpletest.rc-849qh" in namespace "gc-1629"
  Jul 20 13:26:45.230: INFO: Deleting pod "simpletest.rc-85c2w" in namespace "gc-1629"
  Jul 20 13:26:45.239: INFO: Deleting pod "simpletest.rc-8627d" in namespace "gc-1629"
  Jul 20 13:26:45.247: INFO: Deleting pod "simpletest.rc-8g4nm" in namespace "gc-1629"
  Jul 20 13:26:45.258: INFO: Deleting pod "simpletest.rc-8plbw" in namespace "gc-1629"
  Jul 20 13:26:45.269: INFO: Deleting pod "simpletest.rc-92blt" in namespace "gc-1629"
  Jul 20 13:26:45.277: INFO: Deleting pod "simpletest.rc-9hwpj" in namespace "gc-1629"
  Jul 20 13:26:45.290: INFO: Deleting pod "simpletest.rc-9v62t" in namespace "gc-1629"
  Jul 20 13:26:45.299: INFO: Deleting pod "simpletest.rc-b5grj" in namespace "gc-1629"
  Jul 20 13:26:45.310: INFO: Deleting pod "simpletest.rc-bkl6h" in namespace "gc-1629"
  Jul 20 13:26:45.321: INFO: Deleting pod "simpletest.rc-bw2cj" in namespace "gc-1629"
  Jul 20 13:26:45.330: INFO: Deleting pod "simpletest.rc-bwqrd" in namespace "gc-1629"
  Jul 20 13:26:45.339: INFO: Deleting pod "simpletest.rc-c5smw" in namespace "gc-1629"
  Jul 20 13:26:45.350: INFO: Deleting pod "simpletest.rc-c8tbn" in namespace "gc-1629"
  Jul 20 13:26:45.359: INFO: Deleting pod "simpletest.rc-d5t2k" in namespace "gc-1629"
  Jul 20 13:26:45.368: INFO: Deleting pod "simpletest.rc-dbb5z" in namespace "gc-1629"
  Jul 20 13:26:45.381: INFO: Deleting pod "simpletest.rc-dbx2c" in namespace "gc-1629"
  Jul 20 13:26:45.390: INFO: Deleting pod "simpletest.rc-dqb5v" in namespace "gc-1629"
  Jul 20 13:26:45.405: INFO: Deleting pod "simpletest.rc-fqfv9" in namespace "gc-1629"
  Jul 20 13:26:45.416: INFO: Deleting pod "simpletest.rc-fr9jd" in namespace "gc-1629"
  Jul 20 13:26:45.426: INFO: Deleting pod "simpletest.rc-frtkj" in namespace "gc-1629"
  Jul 20 13:26:45.433: INFO: Deleting pod "simpletest.rc-fxnk2" in namespace "gc-1629"
  Jul 20 13:26:45.449: INFO: Deleting pod "simpletest.rc-hf6rf" in namespace "gc-1629"
  Jul 20 13:26:45.473: INFO: Deleting pod "simpletest.rc-hmf7g" in namespace "gc-1629"
  Jul 20 13:26:45.492: INFO: Deleting pod "simpletest.rc-j242z" in namespace "gc-1629"
  Jul 20 13:26:45.502: INFO: Deleting pod "simpletest.rc-j64lr" in namespace "gc-1629"
  Jul 20 13:26:45.514: INFO: Deleting pod "simpletest.rc-j85sl" in namespace "gc-1629"
  Jul 20 13:26:45.522: INFO: Deleting pod "simpletest.rc-k6m5c" in namespace "gc-1629"
  Jul 20 13:26:45.533: INFO: Deleting pod "simpletest.rc-k98fv" in namespace "gc-1629"
  Jul 20 13:26:45.546: INFO: Deleting pod "simpletest.rc-kdpkk" in namespace "gc-1629"
  Jul 20 13:26:45.556: INFO: Deleting pod "simpletest.rc-krk4s" in namespace "gc-1629"
  Jul 20 13:26:45.565: INFO: Deleting pod "simpletest.rc-ks7w2" in namespace "gc-1629"
  Jul 20 13:26:45.575: INFO: Deleting pod "simpletest.rc-l46qf" in namespace "gc-1629"
  Jul 20 13:26:45.585: INFO: Deleting pod "simpletest.rc-l46rw" in namespace "gc-1629"
  Jul 20 13:26:45.597: INFO: Deleting pod "simpletest.rc-l4gll" in namespace "gc-1629"
  Jul 20 13:26:45.606: INFO: Deleting pod "simpletest.rc-lgfms" in namespace "gc-1629"
  Jul 20 13:26:45.615: INFO: Deleting pod "simpletest.rc-ljlkz" in namespace "gc-1629"
  Jul 20 13:26:45.624: INFO: Deleting pod "simpletest.rc-lmpgz" in namespace "gc-1629"
  Jul 20 13:26:45.640: INFO: Deleting pod "simpletest.rc-lvbr7" in namespace "gc-1629"
  Jul 20 13:26:45.650: INFO: Deleting pod "simpletest.rc-mg94x" in namespace "gc-1629"
  Jul 20 13:26:45.661: INFO: Deleting pod "simpletest.rc-mkn5q" in namespace "gc-1629"
  Jul 20 13:26:45.670: INFO: Deleting pod "simpletest.rc-mrd7h" in namespace "gc-1629"
  Jul 20 13:26:45.679: INFO: Deleting pod "simpletest.rc-n65fm" in namespace "gc-1629"
  Jul 20 13:26:45.690: INFO: Deleting pod "simpletest.rc-nbvsv" in namespace "gc-1629"
  Jul 20 13:26:45.697: INFO: Deleting pod "simpletest.rc-nfm9m" in namespace "gc-1629"
  Jul 20 13:26:45.707: INFO: Deleting pod "simpletest.rc-nhrkc" in namespace "gc-1629"
  Jul 20 13:26:45.716: INFO: Deleting pod "simpletest.rc-p2ggx" in namespace "gc-1629"
  Jul 20 13:26:45.724: INFO: Deleting pod "simpletest.rc-p577f" in namespace "gc-1629"
  Jul 20 13:26:45.735: INFO: Deleting pod "simpletest.rc-pbgkq" in namespace "gc-1629"
  Jul 20 13:26:45.766: INFO: Deleting pod "simpletest.rc-q4fmp" in namespace "gc-1629"
  Jul 20 13:26:45.832: INFO: Deleting pod "simpletest.rc-q9x6w" in namespace "gc-1629"
  Jul 20 13:26:45.878: INFO: Deleting pod "simpletest.rc-qfrz8" in namespace "gc-1629"
  Jul 20 13:26:45.915: INFO: Deleting pod "simpletest.rc-qgssk" in namespace "gc-1629"
  Jul 20 13:26:45.969: INFO: Deleting pod "simpletest.rc-qmdvm" in namespace "gc-1629"
  Jul 20 13:26:46.021: INFO: Deleting pod "simpletest.rc-qq2x6" in namespace "gc-1629"
  Jul 20 13:26:46.067: INFO: Deleting pod "simpletest.rc-r2vcz" in namespace "gc-1629"
  Jul 20 13:26:46.119: INFO: Deleting pod "simpletest.rc-r4hcc" in namespace "gc-1629"
  Jul 20 13:26:46.170: INFO: Deleting pod "simpletest.rc-r7r52" in namespace "gc-1629"
  Jul 20 13:26:46.217: INFO: Deleting pod "simpletest.rc-rc7jw" in namespace "gc-1629"
  Jul 20 13:26:46.268: INFO: Deleting pod "simpletest.rc-rd29k" in namespace "gc-1629"
  Jul 20 13:26:46.323: INFO: Deleting pod "simpletest.rc-rkpht" in namespace "gc-1629"
  Jul 20 13:26:46.399: INFO: Deleting pod "simpletest.rc-rvxjv" in namespace "gc-1629"
  Jul 20 13:26:46.433: INFO: Deleting pod "simpletest.rc-s54tf" in namespace "gc-1629"
  Jul 20 13:26:46.479: INFO: Deleting pod "simpletest.rc-sknbs" in namespace "gc-1629"
  Jul 20 13:26:46.518: INFO: Deleting pod "simpletest.rc-tfftf" in namespace "gc-1629"
  Jul 20 13:26:46.574: INFO: Deleting pod "simpletest.rc-tjgwt" in namespace "gc-1629"
  Jul 20 13:26:46.628: INFO: Deleting pod "simpletest.rc-tvsfx" in namespace "gc-1629"
  Jul 20 13:26:46.667: INFO: Deleting pod "simpletest.rc-v5wc8" in namespace "gc-1629"
  Jul 20 13:26:46.722: INFO: Deleting pod "simpletest.rc-vnl48" in namespace "gc-1629"
  Jul 20 13:26:46.767: INFO: Deleting pod "simpletest.rc-vnpdp" in namespace "gc-1629"
  Jul 20 13:26:46.834: INFO: Deleting pod "simpletest.rc-vsw42" in namespace "gc-1629"
  Jul 20 13:26:46.868: INFO: Deleting pod "simpletest.rc-vt26j" in namespace "gc-1629"
  Jul 20 13:26:46.915: INFO: Deleting pod "simpletest.rc-wfzxm" in namespace "gc-1629"
  Jul 20 13:26:47.088: INFO: Deleting pod "simpletest.rc-wjtxs" in namespace "gc-1629"
  Jul 20 13:26:47.122: INFO: Deleting pod "simpletest.rc-wlm7g" in namespace "gc-1629"
  Jul 20 13:26:47.132: INFO: Deleting pod "simpletest.rc-wvhzl" in namespace "gc-1629"
  Jul 20 13:26:47.163: INFO: Deleting pod "simpletest.rc-x54nd" in namespace "gc-1629"
  Jul 20 13:26:47.180: INFO: Deleting pod "simpletest.rc-x7lgw" in namespace "gc-1629"
  Jul 20 13:26:47.232: INFO: Deleting pod "simpletest.rc-xbl8h" in namespace "gc-1629"
  Jul 20 13:26:47.269: INFO: Deleting pod "simpletest.rc-xswrv" in namespace "gc-1629"
  Jul 20 13:26:47.316: INFO: Deleting pod "simpletest.rc-xwpdx" in namespace "gc-1629"
  Jul 20 13:26:47.364: INFO: Deleting pod "simpletest.rc-z5l96" in namespace "gc-1629"
  Jul 20 13:26:47.427: INFO: Deleting pod "simpletest.rc-z7f2w" in namespace "gc-1629"
  Jul 20 13:26:47.465: INFO: Deleting pod "simpletest.rc-zbq67" in namespace "gc-1629"
  Jul 20 13:26:47.538: INFO: Deleting pod "simpletest.rc-zr92v" in namespace "gc-1629"
  Jul 20 13:26:47.568: INFO: Deleting pod "simpletest.rc-zs6f4" in namespace "gc-1629"
  Jul 20 13:26:47.636: INFO: Deleting pod "simpletest.rc-ztr47" in namespace "gc-1629"
  Jul 20 13:26:47.670: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1629" for this suite. @ 07/20/24 13:26:47.722
• [43.756 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 07/20/24 13:26:47.766
  Jul 20 13:26:47.766: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename container-probe @ 07/20/24 13:26:47.766
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:26:47.793
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:26:47.795
  STEP: Creating pod busybox-08ecd107-60f5-4285-895c-ace9a71d5aab in namespace container-probe-1532 @ 07/20/24 13:26:47.797
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/20/24 13:26:51.812
  Jul 20 13:26:51.814: INFO: Initial restart count of pod busybox-08ecd107-60f5-4285-895c-ace9a71d5aab is 0
  Jul 20 13:26:51.817: INFO: Get pod busybox-08ecd107-60f5-4285-895c-ace9a71d5aab in namespace container-probe-1532
  Jul 20 13:26:53.821: INFO: Get pod busybox-08ecd107-60f5-4285-895c-ace9a71d5aab in namespace container-probe-1532
  Jul 20 13:26:55.825: INFO: Get pod busybox-08ecd107-60f5-4285-895c-ace9a71d5aab in namespace container-probe-1532
  Jul 20 13:26:57.831: INFO: Get pod busybox-08ecd107-60f5-4285-895c-ace9a71d5aab in namespace container-probe-1532
  Jul 20 13:26:59.835: INFO: Get pod busybox-08ecd107-60f5-4285-895c-ace9a71d5aab in namespace container-probe-1532
  Jul 20 13:27:01.839: INFO: Get pod busybox-08ecd107-60f5-4285-895c-ace9a71d5aab in namespace container-probe-1532
  Jul 20 13:27:03.844: INFO: Get pod busybox-08ecd107-60f5-4285-895c-ace9a71d5aab in namespace container-probe-1532
  Jul 20 13:27:05.852: INFO: Get pod busybox-08ecd107-60f5-4285-895c-ace9a71d5aab in namespace container-probe-1532
  Jul 20 13:27:07.860: INFO: Get pod busybox-08ecd107-60f5-4285-895c-ace9a71d5aab in namespace container-probe-1532
  Jul 20 13:27:09.865: INFO: Get pod busybox-08ecd107-60f5-4285-895c-ace9a71d5aab in namespace container-probe-1532
  Jul 20 13:27:11.869: INFO: Get pod busybox-08ecd107-60f5-4285-895c-ace9a71d5aab in namespace container-probe-1532
  Jul 20 13:27:13.874: INFO: Get pod busybox-08ecd107-60f5-4285-895c-ace9a71d5aab in namespace container-probe-1532
  Jul 20 13:27:15.878: INFO: Get pod busybox-08ecd107-60f5-4285-895c-ace9a71d5aab in namespace container-probe-1532
  Jul 20 13:27:17.883: INFO: Get pod busybox-08ecd107-60f5-4285-895c-ace9a71d5aab in namespace container-probe-1532
  Jul 20 13:27:19.887: INFO: Get pod busybox-08ecd107-60f5-4285-895c-ace9a71d5aab in namespace container-probe-1532
  Jul 20 13:27:21.890: INFO: Get pod busybox-08ecd107-60f5-4285-895c-ace9a71d5aab in namespace container-probe-1532
  Jul 20 13:27:23.895: INFO: Get pod busybox-08ecd107-60f5-4285-895c-ace9a71d5aab in namespace container-probe-1532
  Jul 20 13:27:25.906: INFO: Get pod busybox-08ecd107-60f5-4285-895c-ace9a71d5aab in namespace container-probe-1532
  Jul 20 13:27:27.911: INFO: Get pod busybox-08ecd107-60f5-4285-895c-ace9a71d5aab in namespace container-probe-1532
  Jul 20 13:27:29.915: INFO: Get pod busybox-08ecd107-60f5-4285-895c-ace9a71d5aab in namespace container-probe-1532
  Jul 20 13:27:31.920: INFO: Get pod busybox-08ecd107-60f5-4285-895c-ace9a71d5aab in namespace container-probe-1532
  Jul 20 13:27:33.924: INFO: Get pod busybox-08ecd107-60f5-4285-895c-ace9a71d5aab in namespace container-probe-1532
  Jul 20 13:27:35.929: INFO: Get pod busybox-08ecd107-60f5-4285-895c-ace9a71d5aab in namespace container-probe-1532
  Jul 20 13:27:37.933: INFO: Get pod busybox-08ecd107-60f5-4285-895c-ace9a71d5aab in namespace container-probe-1532
  Jul 20 13:27:39.938: INFO: Get pod busybox-08ecd107-60f5-4285-895c-ace9a71d5aab in namespace container-probe-1532
  Jul 20 13:27:39.938: INFO: Restart count of pod container-probe-1532/busybox-08ecd107-60f5-4285-895c-ace9a71d5aab is now 1 (48.123802022s elapsed)
  STEP: deleting the pod @ 07/20/24 13:27:39.938
  Jul 20 13:27:39.952: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1532" for this suite. @ 07/20/24 13:27:39.955
• [52.194 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 07/20/24 13:27:39.96
  Jul 20 13:27:39.960: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename webhook @ 07/20/24 13:27:39.96
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:27:39.977
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:27:39.979
  STEP: Setting up server cert @ 07/20/24 13:27:40.005
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/20/24 13:27:40.343
  STEP: Deploying the webhook pod @ 07/20/24 13:27:40.351
  STEP: Wait for the deployment to be ready @ 07/20/24 13:27:40.363
  Jul 20 13:27:40.367: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/20/24 13:27:42.377
  STEP: Verifying the service has paired with the endpoint @ 07/20/24 13:27:42.387
  Jul 20 13:27:43.387: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 07/20/24 13:27:43.393
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 07/20/24 13:27:43.405
  STEP: Creating a dummy validating-webhook-configuration object @ 07/20/24 13:27:43.416
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 07/20/24 13:27:43.423
  STEP: Creating a dummy mutating-webhook-configuration object @ 07/20/24 13:27:43.428
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 07/20/24 13:27:43.434
  Jul 20 13:27:43.481: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9936" for this suite. @ 07/20/24 13:27:43.483
  STEP: Destroying namespace "webhook-markers-6869" for this suite. @ 07/20/24 13:27:43.489
• [3.535 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 07/20/24 13:27:43.495
  Jul 20 13:27:43.495: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename configmap @ 07/20/24 13:27:43.496
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:27:43.51
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:27:43.511
  STEP: Creating configMap with name configmap-test-volume-map-1f1d2f0c-9cc7-46ef-a42d-354c0c752a6c @ 07/20/24 13:27:43.513
  STEP: Creating a pod to test consume configMaps @ 07/20/24 13:27:43.516
  STEP: Saw pod success @ 07/20/24 13:27:47.533
  Jul 20 13:27:47.536: INFO: Trying to get logs from node ip-172-31-79-190 pod pod-configmaps-95d0c529-e2bc-40f9-a6a3-f1b19a3d49c6 container agnhost-container: <nil>
  STEP: delete the pod @ 07/20/24 13:27:47.546
  Jul 20 13:27:47.557: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8246" for this suite. @ 07/20/24 13:27:47.561
• [4.083 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 07/20/24 13:27:47.579
  Jul 20 13:27:47.579: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename configmap @ 07/20/24 13:27:47.579
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:27:47.594
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:27:47.596
  STEP: Creating configMap with name configmap-test-upd-283516c7-ef2c-4970-946b-f8a9c1bbbb06 @ 07/20/24 13:27:47.599
  STEP: Creating the pod @ 07/20/24 13:27:47.603
  STEP: Updating configmap configmap-test-upd-283516c7-ef2c-4970-946b-f8a9c1bbbb06 @ 07/20/24 13:27:49.625
  STEP: waiting to observe update in volume @ 07/20/24 13:27:49.629
  Jul 20 13:29:17.973: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7574" for this suite. @ 07/20/24 13:29:17.976
• [90.404 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:163
  STEP: Creating a kubernetes client @ 07/20/24 13:29:17.983
  Jul 20 13:29:17.983: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename resourcequota @ 07/20/24 13:29:17.983
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:29:18
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:29:18.001
  STEP: Discovering how many secrets are in namespace by default @ 07/20/24 13:29:18.003
  STEP: Counting existing ResourceQuota @ 07/20/24 13:29:23.006
  STEP: Creating a ResourceQuota @ 07/20/24 13:29:28.011
  STEP: Ensuring resource quota status is calculated @ 07/20/24 13:29:28.015
  STEP: Creating a Secret @ 07/20/24 13:29:30.02
  STEP: Ensuring resource quota status captures secret creation @ 07/20/24 13:29:30.032
  STEP: Deleting a secret @ 07/20/24 13:29:32.037
  STEP: Ensuring resource quota status released usage @ 07/20/24 13:29:32.043
  Jul 20 13:29:34.048: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5545" for this suite. @ 07/20/24 13:29:34.05
• [16.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 07/20/24 13:29:34.057
  Jul 20 13:29:34.057: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename disruption @ 07/20/24 13:29:34.057
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:29:34.075
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:29:34.077
  STEP: Waiting for the pdb to be processed @ 07/20/24 13:29:34.082
  STEP: Updating PodDisruptionBudget status @ 07/20/24 13:29:36.086
  STEP: Waiting for all pods to be running @ 07/20/24 13:29:36.095
  Jul 20 13:29:36.097: INFO: running pods: 0 < 1
  STEP: locating a running pod @ 07/20/24 13:29:38.098
  STEP: Waiting for the pdb to be processed @ 07/20/24 13:29:38.106
  STEP: Patching PodDisruptionBudget status @ 07/20/24 13:29:38.112
  STEP: Waiting for the pdb to be processed @ 07/20/24 13:29:38.119
  Jul 20 13:29:38.122: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4311" for this suite. @ 07/20/24 13:29:38.125
• [4.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 07/20/24 13:29:38.132
  Jul 20 13:29:38.132: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename deployment @ 07/20/24 13:29:38.133
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:29:38.148
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:29:38.15
  Jul 20 13:29:38.151: INFO: Creating deployment "webserver-deployment"
  Jul 20 13:29:38.157: INFO: Waiting for observed generation 1
  Jul 20 13:29:40.163: INFO: Waiting for all required pods to come up
  Jul 20 13:29:40.166: INFO: Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 07/20/24 13:29:40.166
  Jul 20 13:29:40.166: INFO: Waiting for deployment "webserver-deployment" to complete
  Jul 20 13:29:40.172: INFO: Updating deployment "webserver-deployment" with a non-existent image
  Jul 20 13:29:40.179: INFO: Updating deployment webserver-deployment
  Jul 20 13:29:40.179: INFO: Waiting for observed generation 2
  Jul 20 13:29:42.186: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  Jul 20 13:29:42.189: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
  Jul 20 13:29:42.194: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Jul 20 13:29:42.202: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  Jul 20 13:29:42.202: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
  Jul 20 13:29:42.204: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Jul 20 13:29:42.208: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  Jul 20 13:29:42.208: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
  Jul 20 13:29:42.219: INFO: Updating deployment webserver-deployment
  Jul 20 13:29:42.219: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  Jul 20 13:29:42.224: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
  Jul 20 13:29:42.226: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
  Jul 20 13:29:44.232: INFO: Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3fd3e5cd-fb02-4bb1-9f6f-d09c208055f2",
      ResourceVersion: (string) (len=5) "34854",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857078978,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078984,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 33,
      UpdatedReplicas: (int32) 13,
      ReadyReplicas: (int32) 13,
      AvailableReplicas: (int32) 13,
      UnavailableReplicas: (int32) 20,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078984,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=59) "ReplicaSet \"webserver-deployment-9b4f5bf69\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jul 20 13:29:44.235: INFO: New ReplicaSet "webserver-deployment-9b4f5bf69" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5b96fc14-f1b3-4ba7-bd1b-0bdecf4f3729",
      ResourceVersion: (string) (len=5) "34661",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857078980,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "3fd3e5cd-fb02-4bb1-9f6f-d09c208055f2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 33 66 64 33 65 35  63 64 2d 66 62 30 32 2d  |\"3fd3e5cd-fb02-|
              00000120  34 62 62 31 2d 39 66 36  66 2d 64 30 39 63 32 30  |4bb1-9f6f-d09c20|
              00000130  38 30 35 35 66 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |8055f2\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 13,
      FullyLabeledReplicas: (int32) 13,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jul 20 13:29:44.236: INFO: All old ReplicaSets of Deployment "webserver-deployment":
  Jul 20 13:29:44.236: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f887e9ff-f729-401a-a95f-6d014f8d4129",
      ResourceVersion: (string) (len=5) "34853",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857078978,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "3fd3e5cd-fb02-4bb1-9f6f-d09c208055f2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 33 66 64 33 65 35  63 64 2d 66 62 30 32 2d  |\"3fd3e5cd-fb02-|
              00000120  34 62 62 31 2d 39 66 36  66 2d 64 30 39 63 32 30  |4bb1-9f6f-d09c20|
              00000130  38 30 35 35 66 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |8055f2\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078984,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 20,
      FullyLabeledReplicas: (int32) 20,
      ReadyReplicas: (int32) 13,
      AvailableReplicas: (int32) 13,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jul 20 13:29:44.244: INFO: Pod "webserver-deployment-557759b7c7-2kjxk" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-2kjxk",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "93fb2dc6-2ea9-46f4-a01d-4ad02cddfb9c",
      ResourceVersion: (string) (len=5) "34465",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857078978,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f887e9ff-f729-401a-a95f-6d014f8d4129",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  38 37 65 39 66 66 2d 66  |d\":\"f887e9ff-f|
              00000090  37 32 39 2d 34 30 31 61  2d 61 39 35 66 2d 36 64  |729-401a-a95f-6d|
              000000a0  30 31 34 66 38 64 34 31  32 39 5c 22 7d 22 3a 7b  |014f8d4129\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078980,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 34  35 2e 32 32 35 5c 22 7d  |2.168.245.225\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tc2vc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tc2vc",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-25-173",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078979,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078979,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078979,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.25.173",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.25.173"
        }
      },
      PodIP: (string) (len=15) "192.168.245.225",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.245.225"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857078978,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63857078978,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://7a70630cd42845b0f61ee410e68c1b0d92a7e2e3310652aec590027707aa8bb2",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 20 13:29:44.245: INFO: Pod "webserver-deployment-557759b7c7-4dpxb" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-4dpxb",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e39272a8-a6a4-4e11-9f0c-80f03fc9138c",
      ResourceVersion: (string) (len=5) "34851",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857078982,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f887e9ff-f729-401a-a95f-6d014f8d4129",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  38 37 65 39 66 66 2d 66  |d\":\"f887e9ff-f|
              00000090  37 32 39 2d 34 30 31 61  2d 61 39 35 66 2d 36 64  |729-401a-a95f-6d|
              000000a0  30 31 34 66 38 64 34 31  32 39 5c 22 7d 22 3a 7b  |014f8d4129\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078984,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 35  2e 31 30 32 5c 22 7d 22  |2.168.15.102\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-klxnh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-klxnh",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-3-74",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078984,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078984,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078984,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.3.74",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.3.74"
        }
      },
      PodIP: (string) (len=14) "192.168.15.102",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.15.102"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857078982,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63857078983,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://a95a15dac2cdb7a76f89d03fdc253f1e4f35ec8184c15773352ea2ceff5a14b5",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 20 13:29:44.246: INFO: Pod "webserver-deployment-557759b7c7-4mj89" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-4mj89",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c4bdbe2a-6861-478e-a038-5555eba288df",
      ResourceVersion: (string) (len=5) "34659",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857078982,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f887e9ff-f729-401a-a95f-6d014f8d4129",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  38 37 65 39 66 66 2d 66  |d\":\"f887e9ff-f|
              00000090  37 32 39 2d 34 30 31 61  2d 61 39 35 66 2d 36 64  |729-401a-a95f-6d|
              000000a0  30 31 34 66 38 64 34 31  32 39 5c 22 7d 22 3a 7b  |014f8d4129\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mwg4q",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mwg4q",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-3-74",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.3.74",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.3.74"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857078982,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 20 13:29:44.248: INFO: Pod "webserver-deployment-557759b7c7-5nngw" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-5nngw",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2a6a7c74-abe6-4781-8a37-5d1c05a85cd3",
      ResourceVersion: (string) (len=5) "34448",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857078978,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f887e9ff-f729-401a-a95f-6d014f8d4129",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  38 37 65 39 66 66 2d 66  |d\":\"f887e9ff-f|
              00000090  37 32 39 2d 34 30 31 61  2d 61 39 35 66 2d 36 64  |729-401a-a95f-6d|
              000000a0  30 31 34 66 38 64 34 31  32 39 5c 22 7d 22 3a 7b  |014f8d4129\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078979,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  30 2e 31 39 37 5c 22 7d  |2.168.120.197\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4spxn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4spxn",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-79-190",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078979,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078979,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078979,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.79.190",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.79.190"
        }
      },
      PodIP: (string) (len=15) "192.168.120.197",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.120.197"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857078978,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63857078979,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://6fe103bb0434e8f51ca78f08f640a742caa7886195c6175059259444a81ddbad",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 20 13:29:44.249: INFO: Pod "webserver-deployment-557759b7c7-6nlmj" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-6nlmj",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2a5101f9-047b-4e8c-b1ad-81daa2cd8447",
      ResourceVersion: (string) (len=5) "34462",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857078978,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f887e9ff-f729-401a-a95f-6d014f8d4129",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  38 37 65 39 66 66 2d 66  |d\":\"f887e9ff-f|
              00000090  37 32 39 2d 34 30 31 61  2d 61 39 35 66 2d 36 64  |729-401a-a95f-6d|
              000000a0  30 31 34 66 38 64 34 31  32 39 5c 22 7d 22 3a 7b  |014f8d4129\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078979,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 34  35 2e 32 32 34 5c 22 7d  |2.168.245.224\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-k64s7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-k64s7",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-25-173",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078979,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078979,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078979,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.25.173",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.25.173"
        }
      },
      PodIP: (string) (len=15) "192.168.245.224",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.245.224"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857078978,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63857078978,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://13dfd47d9234acd89e52d5a7b6ee730b814e65b419b7fc906c7ceb20c407ced4",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 20 13:29:44.250: INFO: Pod "webserver-deployment-557759b7c7-7fb27" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-7fb27",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d8c0dbcf-8c67-44b5-900a-2031f5ad1236",
      ResourceVersion: (string) (len=5) "34441",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857078978,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f887e9ff-f729-401a-a95f-6d014f8d4129",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  38 37 65 39 66 66 2d 66  |d\":\"f887e9ff-f|
              00000090  37 32 39 2d 34 30 31 61  2d 61 39 35 66 2d 36 64  |729-401a-a95f-6d|
              000000a0  30 31 34 66 38 64 34 31  32 39 5c 22 7d 22 3a 7b  |014f8d4129\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078979,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 35  2e 31 30 35 5c 22 7d 22  |2.168.15.105\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ml49z",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ml49z",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-3-74",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078979,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078979,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078979,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.3.74",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.3.74"
        }
      },
      PodIP: (string) (len=14) "192.168.15.105",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.15.105"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857078978,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63857078978,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://f4df73a29694484cc6be9ad84a8ca3de4a8e230a740348404aa1c8dbeed75fd2",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 20 13:29:44.252: INFO: Pod "webserver-deployment-557759b7c7-frmg5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-frmg5",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "51dd1180-67d0-4c0d-86da-9ae6cb3f6e7a",
      ResourceVersion: (string) (len=5) "34660",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857078982,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f887e9ff-f729-401a-a95f-6d014f8d4129",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  38 37 65 39 66 66 2d 66  |d\":\"f887e9ff-f|
              00000090  37 32 39 2d 34 30 31 61  2d 61 39 35 66 2d 36 64  |729-401a-a95f-6d|
              000000a0  30 31 34 66 38 64 34 31  32 39 5c 22 7d 22 3a 7b  |014f8d4129\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kb9bh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kb9bh",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-79-190",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.79.190",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.79.190"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857078982,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 20 13:29:44.253: INFO: Pod "webserver-deployment-557759b7c7-fsfft" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-fsfft",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c569f5b7-1ed7-4cf1-b72b-35dc49fd24f1",
      ResourceVersion: (string) (len=5) "34438",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857078978,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f887e9ff-f729-401a-a95f-6d014f8d4129",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  38 37 65 39 66 66 2d 66  |d\":\"f887e9ff-f|
              00000090  37 32 39 2d 34 30 31 61  2d 61 39 35 66 2d 36 64  |729-401a-a95f-6d|
              000000a0  30 31 34 66 38 64 34 31  32 39 5c 22 7d 22 3a 7b  |014f8d4129\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078979,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 35  2e 31 30 39 5c 22 7d 22  |2.168.15.109\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gz2jp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gz2jp",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-3-74",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078979,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078979,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078979,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.3.74",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.3.74"
        }
      },
      PodIP: (string) (len=14) "192.168.15.109",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.15.109"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857078978,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63857078978,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://540715e1ee05fab234cabc600a627ebdaf859dbde36723f56f8fd83d0c5f8b67",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 20 13:29:44.254: INFO: Pod "webserver-deployment-557759b7c7-j5t9s" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-j5t9s",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f6cdc641-c973-4bd4-a45c-877411ed929b",
      ResourceVersion: (string) (len=5) "34435",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857078978,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f887e9ff-f729-401a-a95f-6d014f8d4129",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  38 37 65 39 66 66 2d 66  |d\":\"f887e9ff-f|
              00000090  37 32 39 2d 34 30 31 61  2d 61 39 35 66 2d 36 64  |729-401a-a95f-6d|
              000000a0  30 31 34 66 38 64 34 31  32 39 5c 22 7d 22 3a 7b  |014f8d4129\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078979,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 35  2e 31 30 30 5c 22 7d 22  |2.168.15.100\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vcbtq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vcbtq",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-3-74",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078979,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078979,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078979,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.3.74",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.3.74"
        }
      },
      PodIP: (string) (len=14) "192.168.15.100",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.15.100"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857078978,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63857078978,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://cf52dfbd903d4c573741e3785b8ea904fa0df20a4810317288fa15b96a652ccb",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 20 13:29:44.256: INFO: Pod "webserver-deployment-557759b7c7-k4px8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-k4px8",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "49419565-f117-4bb6-9bc8-136c57ffac1a",
      ResourceVersion: (string) (len=5) "34667",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857078982,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f887e9ff-f729-401a-a95f-6d014f8d4129",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  38 37 65 39 66 66 2d 66  |d\":\"f887e9ff-f|
              00000090  37 32 39 2d 34 30 31 61  2d 61 39 35 66 2d 36 64  |729-401a-a95f-6d|
              000000a0  30 31 34 66 38 64 34 31  32 39 5c 22 7d 22 3a 7b  |014f8d4129\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xdf24",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xdf24",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-79-190",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.79.190",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.79.190"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857078982,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 20 13:29:44.257: INFO: Pod "webserver-deployment-557759b7c7-k98lr" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-k98lr",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "84d72f37-31b4-4751-a4fb-ce8886df1501",
      ResourceVersion: (string) (len=5) "34840",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857078982,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f887e9ff-f729-401a-a95f-6d014f8d4129",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  38 37 65 39 66 66 2d 66  |d\":\"f887e9ff-f|
              00000090  37 32 39 2d 34 30 31 61  2d 61 39 35 66 2d 36 64  |729-401a-a95f-6d|
              000000a0  30 31 34 66 38 64 34 31  32 39 5c 22 7d 22 3a 7b  |014f8d4129\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078984,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 34  35 2e 32 33 32 5c 22 7d  |2.168.245.232\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-t9mf8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-t9mf8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-25-173",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078984,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078984,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078984,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.25.173",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.25.173"
        }
      },
      PodIP: (string) (len=15) "192.168.245.232",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.245.232"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857078982,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63857078983,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://ac279e1c18a201917499366a8cfa2607e08704c46cd2936bc36ee4245d0357d3",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 20 13:29:44.258: INFO: Pod "webserver-deployment-557759b7c7-khjxx" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-khjxx",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b631d180-987f-4b07-ac7f-8a2c31055b23",
      ResourceVersion: (string) (len=5) "34859",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857078982,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f887e9ff-f729-401a-a95f-6d014f8d4129",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  38 37 65 39 66 66 2d 66  |d\":\"f887e9ff-f|
              00000090  37 32 39 2d 34 30 31 61  2d 61 39 35 66 2d 36 64  |729-401a-a95f-6d|
              000000a0  30 31 34 66 38 64 34 31  32 39 5c 22 7d 22 3a 7b  |014f8d4129\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078984,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 35  2e 31 31 38 5c 22 7d 22  |2.168.15.118\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-brcdx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-brcdx",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-3-74",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078984,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078984,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078984,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.3.74",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.3.74"
        }
      },
      PodIP: (string) (len=14) "192.168.15.118",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.15.118"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857078982,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63857078983,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://a4c43ac14cfd9b377795405c39cb6ec3d2697ae00c903dd93e97d8d4f2cc7f6d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 20 13:29:44.260: INFO: Pod "webserver-deployment-557759b7c7-lzd66" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-lzd66",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7169f740-4a00-4225-9a3a-dbe7d724199c",
      ResourceVersion: (string) (len=5) "34837",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857078982,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f887e9ff-f729-401a-a95f-6d014f8d4129",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  38 37 65 39 66 66 2d 66  |d\":\"f887e9ff-f|
              00000090  37 32 39 2d 34 30 31 61  2d 61 39 35 66 2d 36 64  |729-401a-a95f-6d|
              000000a0  30 31 34 66 38 64 34 31  32 39 5c 22 7d 22 3a 7b  |014f8d4129\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078984,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 34  35 2e 32 32 38 5c 22 7d  |2.168.245.228\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dt7vl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dt7vl",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-25-173",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078983,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078983,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078983,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.25.173",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.25.173"
        }
      },
      PodIP: (string) (len=15) "192.168.245.228",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.245.228"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857078982,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63857078983,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://78dbb7497d85ae56663a546460e062bb27c8e024a1408bc43c9fbf170739cae3",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 20 13:29:44.265: INFO: Pod "webserver-deployment-557759b7c7-m56jh" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-m56jh",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "84b2e40a-0284-45db-bc5a-6171aa1e6389",
      ResourceVersion: (string) (len=5) "34827",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857078982,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f887e9ff-f729-401a-a95f-6d014f8d4129",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  38 37 65 39 66 66 2d 66  |d\":\"f887e9ff-f|
              00000090  37 32 39 2d 34 30 31 61  2d 61 39 35 66 2d 36 64  |729-401a-a95f-6d|
              000000a0  30 31 34 66 38 64 34 31  32 39 5c 22 7d 22 3a 7b  |014f8d4129\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078984,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 34  35 2e 32 33 33 5c 22 7d  |2.168.245.233\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-k5kn2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-k5kn2",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-25-173",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078983,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078983,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078983,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.25.173",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.25.173"
        }
      },
      PodIP: (string) (len=15) "192.168.245.233",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.245.233"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857078982,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63857078983,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://4c6933bbd0c9103c3ddf73a884ced558e25f00a3fd216b601cc24a87071dabe8",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 20 13:29:44.266: INFO: Pod "webserver-deployment-557759b7c7-m59sd" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-m59sd",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e62c3024-1db2-498b-b6fa-b84401a8b4f0",
      ResourceVersion: (string) (len=5) "34843",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857078982,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f887e9ff-f729-401a-a95f-6d014f8d4129",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  38 37 65 39 66 66 2d 66  |d\":\"f887e9ff-f|
              00000090  37 32 39 2d 34 30 31 61  2d 61 39 35 66 2d 36 64  |729-401a-a95f-6d|
              000000a0  30 31 34 66 38 64 34 31  32 39 5c 22 7d 22 3a 7b  |014f8d4129\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078984,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 34  35 2e 32 33 31 5c 22 7d  |2.168.245.231\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bbhmr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bbhmr",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-25-173",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078984,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078984,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078984,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.25.173",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.25.173"
        }
      },
      PodIP: (string) (len=15) "192.168.245.231",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.245.231"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857078982,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63857078983,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://8368646737898ff5b407ec61ed2e9ddbe400bab7ba8bbad6d7bcceeef6fb8bcc",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 20 13:29:44.268: INFO: Pod "webserver-deployment-557759b7c7-m74hl" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-m74hl",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0d7035cc-b053-48d4-b932-18bf8e72f454",
      ResourceVersion: (string) (len=5) "34644",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857078982,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f887e9ff-f729-401a-a95f-6d014f8d4129",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  38 37 65 39 66 66 2d 66  |d\":\"f887e9ff-f|
              00000090  37 32 39 2d 34 30 31 61  2d 61 39 35 66 2d 36 64  |729-401a-a95f-6d|
              000000a0  30 31 34 66 38 64 34 31  32 39 5c 22 7d 22 3a 7b  |014f8d4129\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hvw9l",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hvw9l",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-79-190",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.79.190",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.79.190"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857078982,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 20 13:29:44.269: INFO: Pod "webserver-deployment-557759b7c7-mql7c" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-mql7c",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "95623f90-bcf6-4664-82cb-ecc98a77c565",
      ResourceVersion: (string) (len=5) "34607",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857078982,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f887e9ff-f729-401a-a95f-6d014f8d4129",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  38 37 65 39 66 66 2d 66  |d\":\"f887e9ff-f|
              00000090  37 32 39 2d 34 30 31 61  2d 61 39 35 66 2d 36 64  |729-401a-a95f-6d|
              000000a0  30 31 34 66 38 64 34 31  32 39 5c 22 7d 22 3a 7b  |014f8d4129\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6lngw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6lngw",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-79-190",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.79.190",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.79.190"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857078982,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 20 13:29:44.270: INFO: Pod "webserver-deployment-557759b7c7-pbmnm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-pbmnm",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f0ada76a-be3a-4094-8298-5169d07705e9",
      ResourceVersion: (string) (len=5) "34665",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857078982,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f887e9ff-f729-401a-a95f-6d014f8d4129",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  38 37 65 39 66 66 2d 66  |d\":\"f887e9ff-f|
              00000090  37 32 39 2d 34 30 31 61  2d 61 39 35 66 2d 36 64  |729-401a-a95f-6d|
              000000a0  30 31 34 66 38 64 34 31  32 39 5c 22 7d 22 3a 7b  |014f8d4129\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zkwht",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zkwht",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-79-190",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.79.190",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.79.190"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857078982,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 20 13:29:44.272: INFO: Pod "webserver-deployment-557759b7c7-vswqq" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-vswqq",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a9b820a2-c3e1-4f2c-b652-e9fa10effb2b",
      ResourceVersion: (string) (len=5) "34417",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857078978,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f887e9ff-f729-401a-a95f-6d014f8d4129",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  38 37 65 39 66 66 2d 66  |d\":\"f887e9ff-f|
              00000090  37 32 39 2d 34 30 31 61  2d 61 39 35 66 2d 36 64  |729-401a-a95f-6d|
              000000a0  30 31 34 66 38 64 34 31  32 39 5c 22 7d 22 3a 7b  |014f8d4129\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 34  35 2e 32 32 33 5c 22 7d  |2.168.245.223\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-b68zw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-b68zw",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-25-173",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.25.173",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.25.173"
        }
      },
      PodIP: (string) (len=15) "192.168.245.223",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.245.223"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857078978,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63857078978,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://ef7851cf2e5bf7924c11a6f3086380fa95cd5d82de1d31ccffb5af07937f9aad",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 20 13:29:44.276: INFO: Pod "webserver-deployment-557759b7c7-vx6dd" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-vx6dd",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b843b267-3d47-405d-bfb0-9e7659548ee5",
      ResourceVersion: (string) (len=5) "34452",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857078978,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f887e9ff-f729-401a-a95f-6d014f8d4129",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  38 37 65 39 66 66 2d 66  |d\":\"f887e9ff-f|
              00000090  37 32 39 2d 34 30 31 61  2d 61 39 35 66 2d 36 64  |729-401a-a95f-6d|
              000000a0  30 31 34 66 38 64 34 31  32 39 5c 22 7d 22 3a 7b  |014f8d4129\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078979,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  30 2e 32 31 38 5c 22 7d  |2.168.120.218\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-z6mmb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-z6mmb",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-79-190",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078979,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078979,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078979,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.79.190",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.79.190"
        }
      },
      PodIP: (string) (len=15) "192.168.120.218",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.120.218"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857078978,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63857078979,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://fa6b9b87734400fa69dafe0a3ae4e3d686e1fba7e173490d150cf5b2b52cb142",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 20 13:29:44.277: INFO: Pod "webserver-deployment-9b4f5bf69-6qrhs" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-6qrhs",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=14) "deployment-485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "56881b4e-ff28-4a90-bf57-4808411541ce",
      ResourceVersion: (string) (len=5) "34655",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857078982,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "5b96fc14-f1b3-4ba7-bd1b-0bdecf4f3729",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 62  39 36 66 63 31 34 2d 66  |d\":\"5b96fc14-f|
              00000090  31 62 33 2d 34 62 61 37  2d 62 64 31 62 2d 30 62  |1b3-4ba7-bd1b-0b|
              000000a0  64 65 63 66 34 66 33 37  32 39 5c 22 7d 22 3a 7b  |decf4f3729\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vdmsw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vdmsw",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-79-190",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.79.190",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.79.190"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857078982,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 20 13:29:44.278: INFO: Pod "webserver-deployment-9b4f5bf69-9l8c2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-9l8c2",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=14) "deployment-485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f7402b1a-3079-48e8-ab59-96f8dc8a83ec",
      ResourceVersion: (string) (len=5) "34567",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857078980,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "5b96fc14-f1b3-4ba7-bd1b-0bdecf4f3729",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078980,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 62  39 36 66 63 31 34 2d 66  |d\":\"5b96fc14-f|
              00000090  31 62 33 2d 34 62 61 37  2d 62 64 31 62 2d 30 62  |1b3-4ba7-bd1b-0b|
              000000a0  64 65 63 66 34 66 33 37  32 39 5c 22 7d 22 3a 7b  |decf4f3729\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078981,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 32 30 2e 32  30 39 5c 22 7d 22 3a 7b  |68.120.209\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-r4knz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-r4knz",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-79-190",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078981,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078980,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078980,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078980,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078980,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.79.190",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.79.190"
        }
      },
      PodIP: (string) (len=15) "192.168.120.209",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.120.209"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857078980,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 20 13:29:44.280: INFO: Pod "webserver-deployment-9b4f5bf69-b7s4v" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-b7s4v",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=14) "deployment-485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e710fd80-2316-46ea-9c5c-e3c2ee2f0777",
      ResourceVersion: (string) (len=5) "34564",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857078980,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "5b96fc14-f1b3-4ba7-bd1b-0bdecf4f3729",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078980,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 62  39 36 66 63 31 34 2d 66  |d\":\"5b96fc14-f|
              00000090  31 62 33 2d 34 62 61 37  2d 62 64 31 62 2d 30 62  |1b3-4ba7-bd1b-0b|
              000000a0  64 65 63 66 34 66 33 37  32 39 5c 22 7d 22 3a 7b  |decf4f3729\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078981,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 35 2e 31 31  36 5c 22 7d 22 3a 7b 22  |68.15.116\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rkvmj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rkvmj",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-3-74",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078981,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078980,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078980,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078980,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078980,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.3.74",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.3.74"
        }
      },
      PodIP: (string) (len=14) "192.168.15.116",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.15.116"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857078980,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 20 13:29:44.281: INFO: Pod "webserver-deployment-9b4f5bf69-bl6km" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-bl6km",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=14) "deployment-485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fd905558-0df0-48eb-924d-d8c573eb7975",
      ResourceVersion: (string) (len=5) "34833",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857078982,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "5b96fc14-f1b3-4ba7-bd1b-0bdecf4f3729",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 62  39 36 66 63 31 34 2d 66  |d\":\"5b96fc14-f|
              00000090  31 62 33 2d 34 62 61 37  2d 62 64 31 62 2d 30 62  |1b3-4ba7-bd1b-0b|
              000000a0  64 65 63 66 34 66 33 37  32 39 5c 22 7d 22 3a 7b  |decf4f3729\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078984,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 32 34 35 2e 32  32 39 5c 22 7d 22 3a 7b  |68.245.229\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4sn8j",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4sn8j",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-25-173",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078983,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.25.173",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.25.173"
        }
      },
      PodIP: (string) (len=15) "192.168.245.229",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.245.229"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857078982,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 20 13:29:44.282: INFO: Pod "webserver-deployment-9b4f5bf69-bsrbr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-bsrbr",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=14) "deployment-485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "85fb0b08-74ab-4136-ab98-7da3d3854ee4",
      ResourceVersion: (string) (len=5) "34556",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857078980,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "5b96fc14-f1b3-4ba7-bd1b-0bdecf4f3729",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078980,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 62  39 36 66 63 31 34 2d 66  |d\":\"5b96fc14-f|
              00000090  31 62 33 2d 34 62 61 37  2d 62 64 31 62 2d 30 62  |1b3-4ba7-bd1b-0b|
              000000a0  64 65 63 66 34 66 33 37  32 39 5c 22 7d 22 3a 7b  |decf4f3729\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078980,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 32 34 35 2e 32  32 36 5c 22 7d 22 3a 7b  |68.245.226\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-v6rr4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-v6rr4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-25-173",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078980,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078980,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078980,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078980,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078980,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.25.173",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.25.173"
        }
      },
      PodIP: (string) (len=15) "192.168.245.226",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.245.226"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857078980,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 20 13:29:44.285: INFO: Pod "webserver-deployment-9b4f5bf69-fbhtk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-fbhtk",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=14) "deployment-485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5a55c021-e19d-45aa-a9b2-c9e5b9722cac",
      ResourceVersion: (string) (len=5) "34858",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857078982,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "5b96fc14-f1b3-4ba7-bd1b-0bdecf4f3729",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 62  39 36 66 63 31 34 2d 66  |d\":\"5b96fc14-f|
              00000090  31 62 33 2d 34 62 61 37  2d 62 64 31 62 2d 30 62  |1b3-4ba7-bd1b-0b|
              000000a0  64 65 63 66 34 66 33 37  32 39 5c 22 7d 22 3a 7b  |decf4f3729\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078984,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=707) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 35 2e 39 35  5c 22 7d 22 3a 7b 22 2e  |68.15.95\"}":{".|
              000002a0  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              000002b0  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              000002c0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dgd75",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dgd75",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-3-74",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078984,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.3.74",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.3.74"
        }
      },
      PodIP: (string) (len=13) "192.168.15.95",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.15.95"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857078982,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 20 13:29:44.288: INFO: Pod "webserver-deployment-9b4f5bf69-fzgzd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-fzgzd",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=14) "deployment-485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8cdea379-feb5-4781-8890-3665b175972f",
      ResourceVersion: (string) (len=5) "34848",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857078982,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "5b96fc14-f1b3-4ba7-bd1b-0bdecf4f3729",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 62  39 36 66 63 31 34 2d 66  |d\":\"5b96fc14-f|
              00000090  31 62 33 2d 34 62 61 37  2d 62 64 31 62 2d 30 62  |1b3-4ba7-bd1b-0b|
              000000a0  64 65 63 66 34 66 33 37  32 39 5c 22 7d 22 3a 7b  |decf4f3729\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078984,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 35 2e 31 32  31 5c 22 7d 22 3a 7b 22  |68.15.121\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9t4wx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9t4wx",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-3-74",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078984,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.3.74",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.3.74"
        }
      },
      PodIP: (string) (len=14) "192.168.15.121",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.15.121"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857078982,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 20 13:29:44.289: INFO: Pod "webserver-deployment-9b4f5bf69-g68w9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-g68w9",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=14) "deployment-485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b0ce65ed-238c-4c5d-af6f-1243f4b3c131",
      ResourceVersion: (string) (len=5) "34856",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857078982,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "5b96fc14-f1b3-4ba7-bd1b-0bdecf4f3729",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 62  39 36 66 63 31 34 2d 66  |d\":\"5b96fc14-f|
              00000090  31 62 33 2d 34 62 61 37  2d 62 64 31 62 2d 30 62  |1b3-4ba7-bd1b-0b|
              000000a0  64 65 63 66 34 66 33 37  32 39 5c 22 7d 22 3a 7b  |decf4f3729\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078984,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 35 2e 31 31  35 5c 22 7d 22 3a 7b 22  |68.15.115\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-k78g5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-k78g5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-3-74",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078984,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.3.74",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.3.74"
        }
      },
      PodIP: (string) (len=14) "192.168.15.115",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.15.115"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857078982,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 20 13:29:44.290: INFO: Pod "webserver-deployment-9b4f5bf69-kpp4w" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-kpp4w",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=14) "deployment-485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d75a0b82-837d-4584-9a09-05633b8e280f",
      ResourceVersion: (string) (len=5) "34559",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857078980,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "5b96fc14-f1b3-4ba7-bd1b-0bdecf4f3729",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078980,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 62  39 36 66 63 31 34 2d 66  |d\":\"5b96fc14-f|
              00000090  31 62 33 2d 34 62 61 37  2d 62 64 31 62 2d 30 62  |1b3-4ba7-bd1b-0b|
              000000a0  64 65 63 66 34 66 33 37  32 39 5c 22 7d 22 3a 7b  |decf4f3729\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078981,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 32 34 35 2e 32  32 37 5c 22 7d 22 3a 7b  |68.245.227\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jghkk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jghkk",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-25-173",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078980,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078980,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078980,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078980,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078980,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.25.173",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.25.173"
        }
      },
      PodIP: (string) (len=15) "192.168.245.227",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.245.227"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857078980,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 20 13:29:44.292: INFO: Pod "webserver-deployment-9b4f5bf69-nw22z" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-nw22z",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=14) "deployment-485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "38fe0805-fb0f-4ee8-a6dd-c15ba4bbc5a3",
      ResourceVersion: (string) (len=5) "34672",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857078982,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "5b96fc14-f1b3-4ba7-bd1b-0bdecf4f3729",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 62  39 36 66 63 31 34 2d 66  |d\":\"5b96fc14-f|
              00000090  31 62 33 2d 34 62 61 37  2d 62 64 31 62 2d 30 62  |1b3-4ba7-bd1b-0b|
              000000a0  64 65 63 66 34 66 33 37  32 39 5c 22 7d 22 3a 7b  |decf4f3729\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wllxt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wllxt",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-79-190",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.79.190",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.79.190"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857078982,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 20 13:29:44.293: INFO: Pod "webserver-deployment-9b4f5bf69-trptq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-trptq",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=14) "deployment-485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4f9797e9-c4e7-4aeb-8c24-8b9db00bb04f",
      ResourceVersion: (string) (len=5) "34846",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857078982,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "5b96fc14-f1b3-4ba7-bd1b-0bdecf4f3729",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 62  39 36 66 63 31 34 2d 66  |d\":\"5b96fc14-f|
              00000090  31 62 33 2d 34 62 61 37  2d 62 64 31 62 2d 30 62  |1b3-4ba7-bd1b-0b|
              000000a0  64 65 63 66 34 66 33 37  32 39 5c 22 7d 22 3a 7b  |decf4f3729\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078984,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 32 34 35 2e 32  33 30 5c 22 7d 22 3a 7b  |68.245.230\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rqv7m",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rqv7m",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-25-173",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078983,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.25.173",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.25.173"
        }
      },
      PodIP: (string) (len=15) "192.168.245.230",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.245.230"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857078982,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 20 13:29:44.294: INFO: Pod "webserver-deployment-9b4f5bf69-v9dls" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-v9dls",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=14) "deployment-485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9d54e142-1a16-43ac-bca4-4ffa136812c4",
      ResourceVersion: (string) (len=5) "34572",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857078980,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "5b96fc14-f1b3-4ba7-bd1b-0bdecf4f3729",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078980,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 62  39 36 66 63 31 34 2d 66  |d\":\"5b96fc14-f|
              00000090  31 62 33 2d 34 62 61 37  2d 62 64 31 62 2d 30 62  |1b3-4ba7-bd1b-0b|
              000000a0  64 65 63 66 34 66 33 37  32 39 5c 22 7d 22 3a 7b  |decf4f3729\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078981,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 32 30 2e 32  30 31 5c 22 7d 22 3a 7b  |68.120.201\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lrrk5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lrrk5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-79-190",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078981,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078980,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078980,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078980,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078980,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.79.190",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.79.190"
        }
      },
      PodIP: (string) (len=15) "192.168.120.201",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.120.201"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857078980,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 20 13:29:44.296: INFO: Pod "webserver-deployment-9b4f5bf69-wkm8k" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-wkm8k",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=14) "deployment-485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8c863ffa-49ed-42a3-8697-578dd764e55a",
      ResourceVersion: (string) (len=5) "34836",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857078982,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "5b96fc14-f1b3-4ba7-bd1b-0bdecf4f3729",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 62  39 36 66 63 31 34 2d 66  |d\":\"5b96fc14-f|
              00000090  31 62 33 2d 34 62 61 37  2d 62 64 31 62 2d 30 62  |1b3-4ba7-bd1b-0b|
              000000a0  64 65 63 66 34 66 33 37  32 39 5c 22 7d 22 3a 7b  |decf4f3729\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078984,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 32 34 35 2e 32  33 34 5c 22 7d 22 3a 7b  |68.245.234\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bc54q",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bc54q",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-25-173",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078983,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857078982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.25.173",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.25.173"
        }
      },
      PodIP: (string) (len=15) "192.168.245.234",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.245.234"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857078982,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 20 13:29:44.297: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-485" for this suite. @ 07/20/24 13:29:44.303
• [6.176 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:391
  STEP: Creating a kubernetes client @ 07/20/24 13:29:44.309
  Jul 20 13:29:44.309: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/20/24 13:29:44.309
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:29:44.335
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:29:44.337
  STEP: set up a multi version CRD @ 07/20/24 13:29:44.34
  Jul 20 13:29:44.340: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: rename a version @ 07/20/24 13:29:47.443
  STEP: check the new version name is served @ 07/20/24 13:29:47.454
  STEP: check the old version name is removed @ 07/20/24 13:29:48.173
  STEP: check the other version is not changed @ 07/20/24 13:29:48.781
  Jul 20 13:29:51.713: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3801" for this suite. @ 07/20/24 13:29:51.718
• [7.415 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:408
  STEP: Creating a kubernetes client @ 07/20/24 13:29:51.724
  Jul 20 13:29:51.724: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename job @ 07/20/24 13:29:51.725
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:29:51.774
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:29:51.778
  STEP: Creating Indexed job @ 07/20/24 13:29:51.78
  STEP: Ensuring job reaches completions @ 07/20/24 13:29:51.789
  STEP: Ensuring pods with index for job exist @ 07/20/24 13:29:59.792
  Jul 20 13:29:59.795: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2466" for this suite. @ 07/20/24 13:29:59.799
• [8.080 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 07/20/24 13:29:59.804
  Jul 20 13:29:59.804: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename namespaces @ 07/20/24 13:29:59.805
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:29:59.823
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:29:59.824
  STEP: Creating a test namespace @ 07/20/24 13:29:59.826
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:29:59.84
  STEP: Creating a service in the namespace @ 07/20/24 13:29:59.842
  STEP: Deleting the namespace @ 07/20/24 13:29:59.852
  STEP: Waiting for the namespace to be removed. @ 07/20/24 13:29:59.858
  STEP: Recreating the namespace @ 07/20/24 13:30:05.863
  STEP: Verifying there is no service in the namespace @ 07/20/24 13:30:05.882
  Jul 20 13:30:05.885: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-425" for this suite. @ 07/20/24 13:30:05.887
  STEP: Destroying namespace "nsdeletetest-3438" for this suite. @ 07/20/24 13:30:05.894
  Jul 20 13:30:05.896: INFO: Namespace nsdeletetest-3438 was already deleted
  STEP: Destroying namespace "nsdeletetest-3129" for this suite. @ 07/20/24 13:30:05.896
• [6.097 seconds]
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 07/20/24 13:30:05.901
  Jul 20 13:30:05.901: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename pods @ 07/20/24 13:30:05.902
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:30:05.926
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:30:05.927
  STEP: creating the pod @ 07/20/24 13:30:05.929
  STEP: setting up watch @ 07/20/24 13:30:05.929
  STEP: submitting the pod to kubernetes @ 07/20/24 13:30:06.032
  STEP: verifying the pod is in kubernetes @ 07/20/24 13:30:06.04
  STEP: verifying pod creation was observed @ 07/20/24 13:30:06.042
  STEP: deleting the pod gracefully @ 07/20/24 13:30:08.052
  STEP: verifying pod deletion was observed @ 07/20/24 13:30:08.059
  Jul 20 13:30:09.511: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3592" for this suite. @ 07/20/24 13:30:09.513
• [3.617 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:276
  STEP: Creating a kubernetes client @ 07/20/24 13:30:09.519
  Jul 20 13:30:09.519: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/20/24 13:30:09.519
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:30:09.534
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:30:09.535
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 07/20/24 13:30:09.537
  Jul 20 13:30:09.537: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  Jul 20 13:30:10.733: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  Jul 20 13:30:15.733: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8999" for this suite. @ 07/20/24 13:30:15.739
• [6.227 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 07/20/24 13:30:15.746
  Jul 20 13:30:15.746: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename secrets @ 07/20/24 13:30:15.746
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:30:15.76
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:30:15.762
  STEP: Creating secret with name secret-test-c64cf143-b36e-460b-9852-9667e41143b0 @ 07/20/24 13:30:15.784
  STEP: Creating a pod to test consume secrets @ 07/20/24 13:30:15.789
  STEP: Saw pod success @ 07/20/24 13:30:17.804
  Jul 20 13:30:17.807: INFO: Trying to get logs from node ip-172-31-79-190 pod pod-secrets-a56768ce-4c2b-4d82-b2c9-ce92d2f2d4c3 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/20/24 13:30:17.825
  Jul 20 13:30:17.839: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6775" for this suite. @ 07/20/24 13:30:17.842
  STEP: Destroying namespace "secret-namespace-8462" for this suite. @ 07/20/24 13:30:17.849
• [2.111 seconds]
------------------------------
S
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:183
  STEP: Creating a kubernetes client @ 07/20/24 13:30:17.856
  Jul 20 13:30:17.856: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename kubelet-test @ 07/20/24 13:30:17.857
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:30:17.873
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:30:17.875
  Jul 20 13:30:19.898: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-697" for this suite. @ 07/20/24 13:30:19.901
• [2.049 seconds]
------------------------------
SS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 07/20/24 13:30:19.905
  Jul 20 13:30:19.905: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename csiinlinevolumes @ 07/20/24 13:30:19.906
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:30:19.923
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:30:19.925
  STEP: Creating two CSIDrivers @ 07/20/24 13:30:19.927
  STEP: Getting "inline-driver-73a69c08-b2f5-454b-bad7-beb71f85b4a0" & "inline-driver-c9f3bf5a-718d-404a-acb3-c0012c217b40" @ 07/20/24 13:30:19.941
  STEP: Patching the CSIDriver "inline-driver-c9f3bf5a-718d-404a-acb3-c0012c217b40" @ 07/20/24 13:30:19.945
  STEP: Updating the CSIDriver "inline-driver-c9f3bf5a-718d-404a-acb3-c0012c217b40" @ 07/20/24 13:30:19.949
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-9568" @ 07/20/24 13:30:19.957
  STEP: Deleting CSIDriver "inline-driver-73a69c08-b2f5-454b-bad7-beb71f85b4a0" @ 07/20/24 13:30:19.959
  STEP: Confirm deletion of CSIDriver "inline-driver-73a69c08-b2f5-454b-bad7-beb71f85b4a0" @ 07/20/24 13:30:19.963
  STEP: Deleting CSIDriver "inline-driver-c9f3bf5a-718d-404a-acb3-c0012c217b40" via DeleteCollection @ 07/20/24 13:30:19.965
  STEP: Confirm deletion of CSIDriver "inline-driver-c9f3bf5a-718d-404a-acb3-c0012c217b40" @ 07/20/24 13:30:19.971
  Jul 20 13:30:19.973: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-9568" for this suite. @ 07/20/24 13:30:19.976
• [0.075 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 07/20/24 13:30:19.98
  Jul 20 13:30:19.980: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename pods @ 07/20/24 13:30:19.981
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:30:19.996
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:30:19.998
  Jul 20 13:30:20.000: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: creating the pod @ 07/20/24 13:30:20
  STEP: submitting the pod to kubernetes @ 07/20/24 13:30:20
  Jul 20 13:30:22.080: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3257" for this suite. @ 07/20/24 13:30:22.083
• [2.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 07/20/24 13:30:22.09
  Jul 20 13:30:22.090: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename downward-api @ 07/20/24 13:30:22.091
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:30:22.106
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:30:22.109
  STEP: Creating a pod to test downward API volume plugin @ 07/20/24 13:30:22.111
  STEP: Saw pod success @ 07/20/24 13:30:26.131
  Jul 20 13:30:26.134: INFO: Trying to get logs from node ip-172-31-79-190 pod downwardapi-volume-7092091e-bc06-4699-a1a9-82197b2f57e6 container client-container: <nil>
  STEP: delete the pod @ 07/20/24 13:30:26.139
  Jul 20 13:30:26.151: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8282" for this suite. @ 07/20/24 13:30:26.154
• [4.069 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 07/20/24 13:30:26.159
  Jul 20 13:30:26.159: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename webhook @ 07/20/24 13:30:26.16
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:30:26.18
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:30:26.182
  STEP: Setting up server cert @ 07/20/24 13:30:26.208
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/20/24 13:30:26.357
  STEP: Deploying the webhook pod @ 07/20/24 13:30:26.364
  STEP: Wait for the deployment to be ready @ 07/20/24 13:30:26.375
  Jul 20 13:30:26.380: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/20/24 13:30:28.397
  STEP: Verifying the service has paired with the endpoint @ 07/20/24 13:30:28.412
  Jul 20 13:30:29.413: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 07/20/24 13:30:29.419
  STEP: create a pod that should be updated by the webhook @ 07/20/24 13:30:29.431
  Jul 20 13:30:29.482: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2848" for this suite. @ 07/20/24 13:30:29.487
  STEP: Destroying namespace "webhook-markers-6585" for this suite. @ 07/20/24 13:30:29.495
• [3.341 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 07/20/24 13:30:29.501
  Jul 20 13:30:29.501: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename crd-watch @ 07/20/24 13:30:29.502
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:30:29.521
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:30:29.523
  Jul 20 13:30:29.525: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Creating first CR  @ 07/20/24 13:30:32.058
  Jul 20 13:30:32.062: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-07-20T13:30:32Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-07-20T13:30:32Z]] name:name1 resourceVersion:35865 uid:0d7e756f-4035-459a-97dd-c58c3628f86a] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 07/20/24 13:30:42.062
  Jul 20 13:30:42.071: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-07-20T13:30:42Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-07-20T13:30:42Z]] name:name2 resourceVersion:35909 uid:619046fd-5ae5-408e-a079-1dc3b9bca414] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 07/20/24 13:30:52.073
  Jul 20 13:30:52.078: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-07-20T13:30:32Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-07-20T13:30:52Z]] name:name1 resourceVersion:35929 uid:0d7e756f-4035-459a-97dd-c58c3628f86a] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 07/20/24 13:31:02.078
  Jul 20 13:31:02.084: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-07-20T13:30:42Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-07-20T13:31:02Z]] name:name2 resourceVersion:35963 uid:619046fd-5ae5-408e-a079-1dc3b9bca414] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 07/20/24 13:31:12.086
  Jul 20 13:31:12.092: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-07-20T13:30:32Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-07-20T13:30:52Z]] name:name1 resourceVersion:35989 uid:0d7e756f-4035-459a-97dd-c58c3628f86a] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 07/20/24 13:31:22.093
  Jul 20 13:31:22.101: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-07-20T13:30:42Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-07-20T13:31:02Z]] name:name2 resourceVersion:36009 uid:619046fd-5ae5-408e-a079-1dc3b9bca414] num:map[num1:9223372036854775807 num2:1000000]]}
  Jul 20 13:31:32.618: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-8822" for this suite. @ 07/20/24 13:31:32.622
• [63.128 seconds]
------------------------------
S
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 07/20/24 13:31:32.629
  Jul 20 13:31:32.629: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename containers @ 07/20/24 13:31:32.629
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:31:32.645
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:31:32.647
  STEP: Creating a pod to test override command @ 07/20/24 13:31:32.649
  STEP: Saw pod success @ 07/20/24 13:31:36.667
  Jul 20 13:31:36.670: INFO: Trying to get logs from node ip-172-31-79-190 pod client-containers-b76d9b41-4b93-453d-a823-dc996b36c7b6 container agnhost-container: <nil>
  STEP: delete the pod @ 07/20/24 13:31:36.676
  Jul 20 13:31:36.689: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-1141" for this suite. @ 07/20/24 13:31:36.691
• [4.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 07/20/24 13:31:36.696
  Jul 20 13:31:36.696: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename emptydir @ 07/20/24 13:31:36.697
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:31:36.713
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:31:36.715
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 07/20/24 13:31:36.716
  STEP: Saw pod success @ 07/20/24 13:31:40.736
  Jul 20 13:31:40.739: INFO: Trying to get logs from node ip-172-31-79-190 pod pod-300b9b94-b3c7-4893-92dc-5af451bfee8a container test-container: <nil>
  STEP: delete the pod @ 07/20/24 13:31:40.745
  Jul 20 13:31:40.755: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3689" for this suite. @ 07/20/24 13:31:40.758
• [4.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 07/20/24 13:31:40.764
  Jul 20 13:31:40.764: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename taint-single-pod @ 07/20/24 13:31:40.765
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:31:40.793
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:31:40.795
  Jul 20 13:31:40.797: INFO: Waiting up to 1m0s for all nodes to be ready
  Jul 20 13:32:40.798: INFO: Waiting for terminating namespaces to be deleted...
  Jul 20 13:32:40.802: INFO: Starting informer...
  STEP: Starting pod... @ 07/20/24 13:32:40.802
  Jul 20 13:32:41.014: INFO: Pod is running on ip-172-31-79-190. Tainting Node
  STEP: Trying to apply a taint on the Node @ 07/20/24 13:32:41.014
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 07/20/24 13:32:41.027
  STEP: Waiting short time to make sure Pod is queued for deletion @ 07/20/24 13:32:41.03
  Jul 20 13:32:41.030: INFO: Pod wasn't evicted. Proceeding
  Jul 20 13:32:41.030: INFO: Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 07/20/24 13:32:41.042
  STEP: Waiting some time to make sure that toleration time passed. @ 07/20/24 13:32:41.062
  Jul 20 13:33:56.063: INFO: Pod wasn't evicted. Test successful
  Jul 20 13:33:56.064: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-7615" for this suite. @ 07/20/24 13:33:56.067
• [135.309 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:155
  STEP: Creating a kubernetes client @ 07/20/24 13:33:56.073
  Jul 20 13:33:56.073: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename secrets @ 07/20/24 13:33:56.074
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:33:56.091
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:33:56.093
  STEP: creating a secret @ 07/20/24 13:33:56.094
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 07/20/24 13:33:56.098
  STEP: patching the secret @ 07/20/24 13:33:56.1
  STEP: deleting the secret using a LabelSelector @ 07/20/24 13:33:56.106
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 07/20/24 13:33:56.112
  Jul 20 13:33:56.114: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5862" for this suite. @ 07/20/24 13:33:56.117
• [0.049 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:855
  STEP: Creating a kubernetes client @ 07/20/24 13:33:56.122
  Jul 20 13:33:56.122: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename job @ 07/20/24 13:33:56.123
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:33:56.138
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:33:56.139
  STEP: Creating a suspended job @ 07/20/24 13:33:56.144
  STEP: Patching the Job @ 07/20/24 13:33:56.149
  STEP: Watching for Job to be patched @ 07/20/24 13:33:56.162
  Jul 20 13:33:56.163: INFO: Event ADDED observed for Job e2e-wpzsx in namespace job-2377 with labels: map[e2e-job-label:e2e-wpzsx] and annotations: map[]
  Jul 20 13:33:56.163: INFO: Event MODIFIED observed for Job e2e-wpzsx in namespace job-2377 with labels: map[e2e-job-label:e2e-wpzsx] and annotations: map[]
  Jul 20 13:33:56.163: INFO: Event MODIFIED found for Job e2e-wpzsx in namespace job-2377 with labels: map[e2e-job-label:e2e-wpzsx e2e-wpzsx:patched] and annotations: map[]
  STEP: Updating the job @ 07/20/24 13:33:56.163
  STEP: Watching for Job to be updated @ 07/20/24 13:33:56.173
  Jul 20 13:33:56.173: INFO: Event MODIFIED found for Job e2e-wpzsx in namespace job-2377 with labels: map[e2e-job-label:e2e-wpzsx e2e-wpzsx:patched] and annotations: map[updated:true]
  Jul 20 13:33:56.173: INFO: Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 07/20/24 13:33:56.174
  Jul 20 13:33:56.176: INFO: Job: e2e-wpzsx as labels: map[e2e-job-label:e2e-wpzsx e2e-wpzsx:patched]
  STEP: Waiting for job to complete @ 07/20/24 13:33:56.176
  STEP: Delete a job collection with a labelselector @ 07/20/24 13:34:02.181
  STEP: Watching for Job to be deleted @ 07/20/24 13:34:02.188
  Jul 20 13:34:02.189: INFO: Event MODIFIED observed for Job e2e-wpzsx in namespace job-2377 with labels: map[e2e-job-label:e2e-wpzsx e2e-wpzsx:patched] and annotations: map[updated:true]
  Jul 20 13:34:02.189: INFO: Event MODIFIED observed for Job e2e-wpzsx in namespace job-2377 with labels: map[e2e-job-label:e2e-wpzsx e2e-wpzsx:patched] and annotations: map[updated:true]
  Jul 20 13:34:02.189: INFO: Event MODIFIED observed for Job e2e-wpzsx in namespace job-2377 with labels: map[e2e-job-label:e2e-wpzsx e2e-wpzsx:patched] and annotations: map[updated:true]
  Jul 20 13:34:02.189: INFO: Event MODIFIED observed for Job e2e-wpzsx in namespace job-2377 with labels: map[e2e-job-label:e2e-wpzsx e2e-wpzsx:patched] and annotations: map[updated:true]
  Jul 20 13:34:02.189: INFO: Event MODIFIED observed for Job e2e-wpzsx in namespace job-2377 with labels: map[e2e-job-label:e2e-wpzsx e2e-wpzsx:patched] and annotations: map[updated:true]
  Jul 20 13:34:02.189: INFO: Event MODIFIED observed for Job e2e-wpzsx in namespace job-2377 with labels: map[e2e-job-label:e2e-wpzsx e2e-wpzsx:patched] and annotations: map[updated:true]
  Jul 20 13:34:02.189: INFO: Event MODIFIED observed for Job e2e-wpzsx in namespace job-2377 with labels: map[e2e-job-label:e2e-wpzsx e2e-wpzsx:patched] and annotations: map[updated:true]
  Jul 20 13:34:02.189: INFO: Event DELETED found for Job e2e-wpzsx in namespace job-2377 with labels: map[e2e-job-label:e2e-wpzsx e2e-wpzsx:patched] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 07/20/24 13:34:02.189
  Jul 20 13:34:02.192: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2377" for this suite. @ 07/20/24 13:34:02.195
• [6.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:357
  STEP: Creating a kubernetes client @ 07/20/24 13:34:02.204
  Jul 20 13:34:02.204: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename kubectl @ 07/20/24 13:34:02.204
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:34:02.226
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:34:02.228
  STEP: creating a replication controller @ 07/20/24 13:34:02.229
  Jul 20 13:34:02.229: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-6350 create -f -'
  Jul 20 13:34:02.309: INFO: stderr: ""
  Jul 20 13:34:02.309: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 07/20/24 13:34:02.31
  Jul 20 13:34:02.310: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-6350 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jul 20 13:34:02.354: INFO: stderr: ""
  Jul 20 13:34:02.354: INFO: stdout: "update-demo-nautilus-lnhlh update-demo-nautilus-s9s6p "
  Jul 20 13:34:02.354: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-6350 get pods update-demo-nautilus-lnhlh -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jul 20 13:34:02.404: INFO: stderr: ""
  Jul 20 13:34:02.404: INFO: stdout: ""
  Jul 20 13:34:02.404: INFO: update-demo-nautilus-lnhlh is created but not running
  Jul 20 13:34:07.406: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-6350 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jul 20 13:34:07.450: INFO: stderr: ""
  Jul 20 13:34:07.450: INFO: stdout: "update-demo-nautilus-lnhlh update-demo-nautilus-s9s6p "
  Jul 20 13:34:07.450: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-6350 get pods update-demo-nautilus-lnhlh -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jul 20 13:34:07.492: INFO: stderr: ""
  Jul 20 13:34:07.493: INFO: stdout: "true"
  Jul 20 13:34:07.493: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-6350 get pods update-demo-nautilus-lnhlh -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jul 20 13:34:07.536: INFO: stderr: ""
  Jul 20 13:34:07.536: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jul 20 13:34:07.536: INFO: validating pod update-demo-nautilus-lnhlh
  Jul 20 13:34:07.541: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jul 20 13:34:07.541: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jul 20 13:34:07.541: INFO: update-demo-nautilus-lnhlh is verified up and running
  Jul 20 13:34:07.541: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-6350 get pods update-demo-nautilus-s9s6p -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jul 20 13:34:07.582: INFO: stderr: ""
  Jul 20 13:34:07.582: INFO: stdout: "true"
  Jul 20 13:34:07.582: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-6350 get pods update-demo-nautilus-s9s6p -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jul 20 13:34:07.624: INFO: stderr: ""
  Jul 20 13:34:07.624: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jul 20 13:34:07.624: INFO: validating pod update-demo-nautilus-s9s6p
  Jul 20 13:34:07.629: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jul 20 13:34:07.629: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jul 20 13:34:07.629: INFO: update-demo-nautilus-s9s6p is verified up and running
  STEP: scaling down the replication controller @ 07/20/24 13:34:07.629
  Jul 20 13:34:07.630: INFO: scanned /root for discovery docs: <nil>
  Jul 20 13:34:07.630: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-6350 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  Jul 20 13:34:08.688: INFO: stderr: ""
  Jul 20 13:34:08.688: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 07/20/24 13:34:08.688
  Jul 20 13:34:08.689: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-6350 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jul 20 13:34:08.733: INFO: stderr: ""
  Jul 20 13:34:08.733: INFO: stdout: "update-demo-nautilus-lnhlh update-demo-nautilus-s9s6p "
  STEP: Replicas for name=update-demo: expected=1 actual=2 @ 07/20/24 13:34:08.733
  Jul 20 13:34:13.736: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-6350 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jul 20 13:34:13.777: INFO: stderr: ""
  Jul 20 13:34:13.777: INFO: stdout: "update-demo-nautilus-s9s6p "
  Jul 20 13:34:13.777: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-6350 get pods update-demo-nautilus-s9s6p -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jul 20 13:34:13.818: INFO: stderr: ""
  Jul 20 13:34:13.818: INFO: stdout: "true"
  Jul 20 13:34:13.818: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-6350 get pods update-demo-nautilus-s9s6p -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jul 20 13:34:13.860: INFO: stderr: ""
  Jul 20 13:34:13.860: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jul 20 13:34:13.860: INFO: validating pod update-demo-nautilus-s9s6p
  Jul 20 13:34:13.863: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jul 20 13:34:13.863: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jul 20 13:34:13.863: INFO: update-demo-nautilus-s9s6p is verified up and running
  STEP: scaling up the replication controller @ 07/20/24 13:34:13.863
  Jul 20 13:34:13.864: INFO: scanned /root for discovery docs: <nil>
  Jul 20 13:34:13.864: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-6350 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  Jul 20 13:34:14.921: INFO: stderr: ""
  Jul 20 13:34:14.921: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 07/20/24 13:34:14.921
  Jul 20 13:34:14.921: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-6350 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jul 20 13:34:14.966: INFO: stderr: ""
  Jul 20 13:34:14.966: INFO: stdout: "update-demo-nautilus-8pwpr update-demo-nautilus-s9s6p "
  Jul 20 13:34:14.966: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-6350 get pods update-demo-nautilus-8pwpr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jul 20 13:34:15.007: INFO: stderr: ""
  Jul 20 13:34:15.007: INFO: stdout: "true"
  Jul 20 13:34:15.007: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-6350 get pods update-demo-nautilus-8pwpr -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jul 20 13:34:15.053: INFO: stderr: ""
  Jul 20 13:34:15.053: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jul 20 13:34:15.053: INFO: validating pod update-demo-nautilus-8pwpr
  Jul 20 13:34:15.059: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jul 20 13:34:15.059: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jul 20 13:34:15.059: INFO: update-demo-nautilus-8pwpr is verified up and running
  Jul 20 13:34:15.059: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-6350 get pods update-demo-nautilus-s9s6p -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jul 20 13:34:15.100: INFO: stderr: ""
  Jul 20 13:34:15.100: INFO: stdout: "true"
  Jul 20 13:34:15.100: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-6350 get pods update-demo-nautilus-s9s6p -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jul 20 13:34:15.142: INFO: stderr: ""
  Jul 20 13:34:15.142: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jul 20 13:34:15.142: INFO: validating pod update-demo-nautilus-s9s6p
  Jul 20 13:34:15.146: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jul 20 13:34:15.146: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jul 20 13:34:15.146: INFO: update-demo-nautilus-s9s6p is verified up and running
  STEP: using delete to clean up resources @ 07/20/24 13:34:15.146
  Jul 20 13:34:15.146: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-6350 delete --grace-period=0 --force -f -'
  Jul 20 13:34:15.192: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jul 20 13:34:15.192: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Jul 20 13:34:15.192: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-6350 get rc,svc -l name=update-demo --no-headers'
  Jul 20 13:34:15.254: INFO: stderr: "No resources found in kubectl-6350 namespace.\n"
  Jul 20 13:34:15.254: INFO: stdout: ""
  Jul 20 13:34:15.254: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-6350 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Jul 20 13:34:15.314: INFO: stderr: ""
  Jul 20 13:34:15.314: INFO: stdout: ""
  Jul 20 13:34:15.314: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6350" for this suite. @ 07/20/24 13:34:15.317
• [13.121 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:46
  STEP: Creating a kubernetes client @ 07/20/24 13:34:15.324
  Jul 20 13:34:15.324: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename configmap @ 07/20/24 13:34:15.325
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:34:15.34
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:34:15.342
  STEP: Creating configMap configmap-7503/configmap-test-81cbddd1-1147-46f9-bbbf-d5cc050bf1af @ 07/20/24 13:34:15.344
  STEP: Creating a pod to test consume configMaps @ 07/20/24 13:34:15.355
  STEP: Saw pod success @ 07/20/24 13:34:19.375
  Jul 20 13:34:19.377: INFO: Trying to get logs from node ip-172-31-79-190 pod pod-configmaps-34d27b24-8773-4c4a-b98d-8b8671d633fe container env-test: <nil>
  STEP: delete the pod @ 07/20/24 13:34:19.388
  Jul 20 13:34:19.401: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7503" for this suite. @ 07/20/24 13:34:19.404
• [4.086 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:168
  STEP: Creating a kubernetes client @ 07/20/24 13:34:19.41
  Jul 20 13:34:19.410: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename downward-api @ 07/20/24 13:34:19.411
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:34:19.427
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:34:19.428
  STEP: Creating a pod to test downward api env vars @ 07/20/24 13:34:19.43
  STEP: Saw pod success @ 07/20/24 13:34:23.451
  Jul 20 13:34:23.453: INFO: Trying to get logs from node ip-172-31-79-190 pod downward-api-db23cd83-a92b-48f3-8f9b-946530116997 container dapi-container: <nil>
  STEP: delete the pod @ 07/20/24 13:34:23.46
  Jul 20 13:34:23.474: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9514" for this suite. @ 07/20/24 13:34:23.477
• [4.072 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 07/20/24 13:34:23.483
  Jul 20 13:34:23.483: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename emptydir @ 07/20/24 13:34:23.483
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:34:23.498
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:34:23.502
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 07/20/24 13:34:23.519
  STEP: Saw pod success @ 07/20/24 13:34:27.547
  Jul 20 13:34:27.550: INFO: Trying to get logs from node ip-172-31-79-190 pod pod-c69f615b-d1ce-4630-beb5-237908d399fd container test-container: <nil>
  STEP: delete the pod @ 07/20/24 13:34:27.555
  Jul 20 13:34:27.567: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5281" for this suite. @ 07/20/24 13:34:27.569
• [4.092 seconds]
------------------------------
SSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:649
  STEP: Creating a kubernetes client @ 07/20/24 13:34:27.575
  Jul 20 13:34:27.575: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename svcaccounts @ 07/20/24 13:34:27.575
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:34:27.591
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:34:27.593
  STEP: creating a ServiceAccount @ 07/20/24 13:34:27.594
  STEP: watching for the ServiceAccount to be added @ 07/20/24 13:34:27.6
  STEP: patching the ServiceAccount @ 07/20/24 13:34:27.6
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 07/20/24 13:34:27.605
  STEP: deleting the ServiceAccount @ 07/20/24 13:34:27.607
  Jul 20 13:34:27.618: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6884" for this suite. @ 07/20/24 13:34:27.622
• [0.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:335
  STEP: Creating a kubernetes client @ 07/20/24 13:34:27.626
  Jul 20 13:34:27.626: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename sched-pred @ 07/20/24 13:34:27.627
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:34:27.642
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:34:27.644
  Jul 20 13:34:27.646: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Jul 20 13:34:27.650: INFO: Waiting for terminating namespaces to be deleted...
  Jul 20 13:34:27.652: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-25-173 before test
  Jul 20 13:34:27.656: INFO: nginx-ingress-controller-kubernetes-worker-rj7j7 from ingress-nginx-kubernetes-worker started at 2024-07-20 12:06:00 +0000 UTC (1 container statuses recorded)
  Jul 20 13:34:27.656: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jul 20 13:34:27.657: INFO: calico-node-zlt4r from kube-system started at 2024-07-20 12:09:35 +0000 UTC (1 container statuses recorded)
  Jul 20 13:34:27.657: INFO: 	Container calico-node ready: true, restart count 0
  Jul 20 13:34:27.657: INFO: sonobuoy-e2e-job-b5db9657854845c0 from sonobuoy started at 2024-07-20 12:11:23 +0000 UTC (2 container statuses recorded)
  Jul 20 13:34:27.657: INFO: 	Container e2e ready: true, restart count 0
  Jul 20 13:34:27.657: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jul 20 13:34:27.657: INFO: sonobuoy-systemd-logs-daemon-set-eaeef1be74044e0f-stlh6 from sonobuoy started at 2024-07-20 12:11:23 +0000 UTC (2 container statuses recorded)
  Jul 20 13:34:27.657: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jul 20 13:34:27.657: INFO: 	Container systemd-logs ready: true, restart count 0
  Jul 20 13:34:27.657: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-3-74 before test
  Jul 20 13:34:27.660: INFO: nginx-ingress-controller-kubernetes-worker-pl5dm from ingress-nginx-kubernetes-worker started at 2024-07-20 12:05:02 +0000 UTC (1 container statuses recorded)
  Jul 20 13:34:27.660: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jul 20 13:34:27.660: INFO: calico-node-jj9gt from kube-system started at 2024-07-20 12:09:25 +0000 UTC (1 container statuses recorded)
  Jul 20 13:34:27.660: INFO: 	Container calico-node ready: true, restart count 0
  Jul 20 13:34:27.660: INFO: coredns-bddfd76d7-tsxnn from kube-system started at 2024-07-20 12:05:01 +0000 UTC (1 container statuses recorded)
  Jul 20 13:34:27.660: INFO: 	Container coredns ready: true, restart count 0
  Jul 20 13:34:27.660: INFO: kube-state-metrics-6f48cdd76-rvxkr from kube-system started at 2024-07-20 12:05:01 +0000 UTC (1 container statuses recorded)
  Jul 20 13:34:27.660: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Jul 20 13:34:27.660: INFO: metrics-server-v0.6.3-69d7fbfdf8-pmcp9 from kube-system started at 2024-07-20 12:05:01 +0000 UTC (2 container statuses recorded)
  Jul 20 13:34:27.660: INFO: 	Container metrics-server ready: true, restart count 0
  Jul 20 13:34:27.660: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Jul 20 13:34:27.660: INFO: dashboard-metrics-scraper-5dd7cb5fc-zdfwg from kubernetes-dashboard started at 2024-07-20 12:05:01 +0000 UTC (1 container statuses recorded)
  Jul 20 13:34:27.660: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Jul 20 13:34:27.660: INFO: kubernetes-dashboard-7b899cb9d9-v2smr from kubernetes-dashboard started at 2024-07-20 12:05:01 +0000 UTC (1 container statuses recorded)
  Jul 20 13:34:27.660: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Jul 20 13:34:27.660: INFO: sonobuoy-systemd-logs-daemon-set-eaeef1be74044e0f-wnr5n from sonobuoy started at 2024-07-20 12:11:23 +0000 UTC (2 container statuses recorded)
  Jul 20 13:34:27.660: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jul 20 13:34:27.660: INFO: 	Container systemd-logs ready: true, restart count 0
  Jul 20 13:34:27.660: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-79-190 before test
  Jul 20 13:34:27.663: INFO: nginx-ingress-controller-kubernetes-worker-f8hsn from ingress-nginx-kubernetes-worker started at 2024-07-20 13:32:52 +0000 UTC (1 container statuses recorded)
  Jul 20 13:34:27.663: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jul 20 13:34:27.663: INFO: calico-node-fxs4g from kube-system started at 2024-07-20 12:09:45 +0000 UTC (1 container statuses recorded)
  Jul 20 13:34:27.663: INFO: 	Container calico-node ready: true, restart count 0
  Jul 20 13:34:27.663: INFO: sonobuoy from sonobuoy started at 2024-07-20 12:11:21 +0000 UTC (1 container statuses recorded)
  Jul 20 13:34:27.663: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Jul 20 13:34:27.663: INFO: sonobuoy-systemd-logs-daemon-set-eaeef1be74044e0f-qfbvq from sonobuoy started at 2024-07-20 12:11:23 +0000 UTC (2 container statuses recorded)
  Jul 20 13:34:27.663: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jul 20 13:34:27.663: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node ip-172-31-25-173 @ 07/20/24 13:34:27.677
  STEP: verifying the node has the label node ip-172-31-3-74 @ 07/20/24 13:34:27.687
  STEP: verifying the node has the label node ip-172-31-79-190 @ 07/20/24 13:34:27.697
  Jul 20 13:34:27.706: INFO: Pod nginx-ingress-controller-kubernetes-worker-f8hsn requesting resource cpu=0m on Node ip-172-31-79-190
  Jul 20 13:34:27.706: INFO: Pod nginx-ingress-controller-kubernetes-worker-pl5dm requesting resource cpu=0m on Node ip-172-31-3-74
  Jul 20 13:34:27.706: INFO: Pod nginx-ingress-controller-kubernetes-worker-rj7j7 requesting resource cpu=0m on Node ip-172-31-25-173
  Jul 20 13:34:27.706: INFO: Pod calico-node-fxs4g requesting resource cpu=250m on Node ip-172-31-79-190
  Jul 20 13:34:27.706: INFO: Pod calico-node-jj9gt requesting resource cpu=250m on Node ip-172-31-3-74
  Jul 20 13:34:27.706: INFO: Pod calico-node-zlt4r requesting resource cpu=250m on Node ip-172-31-25-173
  Jul 20 13:34:27.706: INFO: Pod coredns-bddfd76d7-tsxnn requesting resource cpu=100m on Node ip-172-31-3-74
  Jul 20 13:34:27.706: INFO: Pod kube-state-metrics-6f48cdd76-rvxkr requesting resource cpu=0m on Node ip-172-31-3-74
  Jul 20 13:34:27.706: INFO: Pod metrics-server-v0.6.3-69d7fbfdf8-pmcp9 requesting resource cpu=5m on Node ip-172-31-3-74
  Jul 20 13:34:27.707: INFO: Pod dashboard-metrics-scraper-5dd7cb5fc-zdfwg requesting resource cpu=0m on Node ip-172-31-3-74
  Jul 20 13:34:27.707: INFO: Pod kubernetes-dashboard-7b899cb9d9-v2smr requesting resource cpu=0m on Node ip-172-31-3-74
  Jul 20 13:34:27.707: INFO: Pod sonobuoy requesting resource cpu=0m on Node ip-172-31-79-190
  Jul 20 13:34:27.707: INFO: Pod sonobuoy-e2e-job-b5db9657854845c0 requesting resource cpu=0m on Node ip-172-31-25-173
  Jul 20 13:34:27.707: INFO: Pod sonobuoy-systemd-logs-daemon-set-eaeef1be74044e0f-qfbvq requesting resource cpu=0m on Node ip-172-31-79-190
  Jul 20 13:34:27.707: INFO: Pod sonobuoy-systemd-logs-daemon-set-eaeef1be74044e0f-stlh6 requesting resource cpu=0m on Node ip-172-31-25-173
  Jul 20 13:34:27.707: INFO: Pod sonobuoy-systemd-logs-daemon-set-eaeef1be74044e0f-wnr5n requesting resource cpu=0m on Node ip-172-31-3-74
  STEP: Starting Pods to consume most of the cluster CPU. @ 07/20/24 13:34:27.707
  Jul 20 13:34:27.707: INFO: Creating a pod which consumes cpu=1225m on Node ip-172-31-25-173
  Jul 20 13:34:27.713: INFO: Creating a pod which consumes cpu=1151m on Node ip-172-31-3-74
  Jul 20 13:34:27.718: INFO: Creating a pod which consumes cpu=1225m on Node ip-172-31-79-190
  STEP: Creating another pod that requires unavailable amount of CPU. @ 07/20/24 13:34:29.735
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-6ce4307f-2fca-4719-b890-2dc18dad07df.17e3ef2f003e67ab], Reason = [Scheduled], Message = [Successfully assigned sched-pred-7451/filler-pod-6ce4307f-2fca-4719-b890-2dc18dad07df to ip-172-31-79-190] @ 07/20/24 13:34:29.739
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-6ce4307f-2fca-4719-b890-2dc18dad07df.17e3ef2f1dc4fd68], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 07/20/24 13:34:29.739
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-6ce4307f-2fca-4719-b890-2dc18dad07df.17e3ef2f1ed28d54], Reason = [Created], Message = [Created container filler-pod-6ce4307f-2fca-4719-b890-2dc18dad07df] @ 07/20/24 13:34:29.739
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-6ce4307f-2fca-4719-b890-2dc18dad07df.17e3ef2f221422fa], Reason = [Started], Message = [Started container filler-pod-6ce4307f-2fca-4719-b890-2dc18dad07df] @ 07/20/24 13:34:29.739
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-6f93f1f8-cc56-4e69-a856-136599d07f4c.17e3ef2effa41899], Reason = [Scheduled], Message = [Successfully assigned sched-pred-7451/filler-pod-6f93f1f8-cc56-4e69-a856-136599d07f4c to ip-172-31-25-173] @ 07/20/24 13:34:29.739
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-6f93f1f8-cc56-4e69-a856-136599d07f4c.17e3ef2f1d8ddd20], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 07/20/24 13:34:29.739
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-6f93f1f8-cc56-4e69-a856-136599d07f4c.17e3ef2f1e7bb7b0], Reason = [Created], Message = [Created container filler-pod-6f93f1f8-cc56-4e69-a856-136599d07f4c] @ 07/20/24 13:34:29.739
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-6f93f1f8-cc56-4e69-a856-136599d07f4c.17e3ef2f21860841], Reason = [Started], Message = [Started container filler-pod-6f93f1f8-cc56-4e69-a856-136599d07f4c] @ 07/20/24 13:34:29.739
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-91c8c0b2-33e1-432b-8073-e5423b87a05a.17e3ef2effbce0fd], Reason = [Scheduled], Message = [Successfully assigned sched-pred-7451/filler-pod-91c8c0b2-33e1-432b-8073-e5423b87a05a to ip-172-31-3-74] @ 07/20/24 13:34:29.739
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-91c8c0b2-33e1-432b-8073-e5423b87a05a.17e3ef2f1ebb7af6], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 07/20/24 13:34:29.739
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-91c8c0b2-33e1-432b-8073-e5423b87a05a.17e3ef2f1fb1092a], Reason = [Created], Message = [Created container filler-pod-91c8c0b2-33e1-432b-8073-e5423b87a05a] @ 07/20/24 13:34:29.739
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-91c8c0b2-33e1-432b-8073-e5423b87a05a.17e3ef2f22b5b17b], Reason = [Started], Message = [Started container filler-pod-91c8c0b2-33e1-432b-8073-e5423b87a05a] @ 07/20/24 13:34:29.739
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.17e3ef2f785527ba], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 Insufficient cpu. preemption: 0/5 nodes are available: 2 Preemption is not helpful for scheduling, 3 No preemption victims found for incoming pod.] @ 07/20/24 13:34:29.754
  STEP: removing the label node off the node ip-172-31-25-173 @ 07/20/24 13:34:30.749
  STEP: verifying the node doesn't have the label node @ 07/20/24 13:34:30.76
  STEP: removing the label node off the node ip-172-31-3-74 @ 07/20/24 13:34:30.768
  STEP: verifying the node doesn't have the label node @ 07/20/24 13:34:30.778
  STEP: removing the label node off the node ip-172-31-79-190 @ 07/20/24 13:34:30.78
  STEP: verifying the node doesn't have the label node @ 07/20/24 13:34:30.795
  Jul 20 13:34:30.797: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-7451" for this suite. @ 07/20/24 13:34:30.807
• [3.186 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 07/20/24 13:34:30.813
  Jul 20 13:34:30.813: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename webhook @ 07/20/24 13:34:30.814
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:34:30.829
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:34:30.831
  STEP: Setting up server cert @ 07/20/24 13:34:30.852
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/20/24 13:34:31.022
  STEP: Deploying the webhook pod @ 07/20/24 13:34:31.032
  STEP: Wait for the deployment to be ready @ 07/20/24 13:34:31.042
  Jul 20 13:34:31.049: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/20/24 13:34:33.059
  STEP: Verifying the service has paired with the endpoint @ 07/20/24 13:34:33.068
  Jul 20 13:34:34.069: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 07/20/24 13:34:34.076
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 07/20/24 13:34:34.09
  STEP: Creating a configMap that should not be mutated @ 07/20/24 13:34:34.096
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 07/20/24 13:34:34.105
  STEP: Creating a configMap that should be mutated @ 07/20/24 13:34:34.112
  Jul 20 13:34:34.160: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3309" for this suite. @ 07/20/24 13:34:34.162
  STEP: Destroying namespace "webhook-markers-3241" for this suite. @ 07/20/24 13:34:34.17
• [3.362 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 07/20/24 13:34:34.175
  Jul 20 13:34:34.175: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename configmap @ 07/20/24 13:34:34.176
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:34:34.189
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:34:34.19
  STEP: Creating configMap with name configmap-test-volume-0b3761b0-242f-4722-9472-5b936f84a507 @ 07/20/24 13:34:34.192
  STEP: Creating a pod to test consume configMaps @ 07/20/24 13:34:34.199
  STEP: Saw pod success @ 07/20/24 13:34:36.21
  Jul 20 13:34:36.212: INFO: Trying to get logs from node ip-172-31-79-190 pod pod-configmaps-e30bec8b-a8dc-4079-82a4-3f1a43bd9dc4 container agnhost-container: <nil>
  STEP: delete the pod @ 07/20/24 13:34:36.217
  Jul 20 13:34:36.228: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2895" for this suite. @ 07/20/24 13:34:36.231
• [2.060 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:321
  STEP: Creating a kubernetes client @ 07/20/24 13:34:36.235
  Jul 20 13:34:36.235: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename statefulset @ 07/20/24 13:34:36.236
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:34:36.251
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:34:36.253
  STEP: Creating service test in namespace statefulset-9636 @ 07/20/24 13:34:36.254
  STEP: Creating a new StatefulSet @ 07/20/24 13:34:36.259
  Jul 20 13:34:36.267: INFO: Found 0 stateful pods, waiting for 3
  Jul 20 13:34:46.269: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Jul 20 13:34:46.269: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Jul 20 13:34:46.269: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  Jul 20 13:34:46.275: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=statefulset-9636 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jul 20 13:34:46.376: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jul 20 13:34:46.376: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jul 20 13:34:46.376: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 07/20/24 13:34:56.384
  Jul 20 13:34:56.403: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 07/20/24 13:34:56.403
  STEP: Updating Pods in reverse ordinal order @ 07/20/24 13:35:06.41
  Jul 20 13:35:06.413: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=statefulset-9636 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jul 20 13:35:06.506: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jul 20 13:35:06.506: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jul 20 13:35:06.506: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  STEP: Rolling back to a previous revision @ 07/20/24 13:35:16.517
  Jul 20 13:35:16.517: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=statefulset-9636 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jul 20 13:35:16.605: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jul 20 13:35:16.605: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jul 20 13:35:16.605: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jul 20 13:35:26.631: INFO: Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 07/20/24 13:35:36.638
  Jul 20 13:35:36.641: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=statefulset-9636 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jul 20 13:35:36.738: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jul 20 13:35:36.738: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jul 20 13:35:36.738: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jul 20 13:35:46.750: INFO: Deleting all statefulset in ns statefulset-9636
  Jul 20 13:35:46.753: INFO: Scaling statefulset ss2 to 0
  Jul 20 13:35:56.763: INFO: Waiting for statefulset status.replicas updated to 0
  Jul 20 13:35:56.766: INFO: Deleting statefulset ss2
  Jul 20 13:35:56.776: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9636" for this suite. @ 07/20/24 13:35:56.78
• [80.553 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 07/20/24 13:35:56.789
  Jul 20 13:35:56.789: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename endpointslice @ 07/20/24 13:35:56.789
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:35:56.803
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:35:56.805
  STEP: referencing a single matching pod @ 07/20/24 13:36:01.871
  STEP: referencing matching pods with named port @ 07/20/24 13:36:06.88
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 07/20/24 13:36:11.888
  STEP: recreating EndpointSlices after they've been deleted @ 07/20/24 13:36:16.896
  Jul 20 13:36:16.913: INFO: EndpointSlice for Service endpointslice-299/example-named-port not found
  Jul 20 13:36:26.921: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-299" for this suite. @ 07/20/24 13:36:26.924
• [30.141 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 07/20/24 13:36:26.93
  Jul 20 13:36:26.930: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename webhook @ 07/20/24 13:36:26.931
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:36:26.95
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:36:26.951
  STEP: Setting up server cert @ 07/20/24 13:36:26.977
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/20/24 13:36:27.198
  STEP: Deploying the webhook pod @ 07/20/24 13:36:27.205
  STEP: Wait for the deployment to be ready @ 07/20/24 13:36:27.22
  Jul 20 13:36:27.225: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/20/24 13:36:29.235
  STEP: Verifying the service has paired with the endpoint @ 07/20/24 13:36:29.242
  Jul 20 13:36:30.243: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jul 20 13:36:30.248: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-6296-crds.webhook.example.com via the AdmissionRegistration API @ 07/20/24 13:36:30.758
  STEP: Creating a custom resource that should be mutated by the webhook @ 07/20/24 13:36:30.771
  Jul 20 13:36:33.352: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6250" for this suite. @ 07/20/24 13:36:33.355
  STEP: Destroying namespace "webhook-markers-1388" for this suite. @ 07/20/24 13:36:33.362
• [6.438 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1798
  STEP: Creating a kubernetes client @ 07/20/24 13:36:33.369
  Jul 20 13:36:33.369: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename kubectl @ 07/20/24 13:36:33.369
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:36:33.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:36:33.388
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 07/20/24 13:36:33.391
  Jul 20 13:36:33.391: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-1210 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Jul 20 13:36:33.437: INFO: stderr: ""
  Jul 20 13:36:33.437: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 07/20/24 13:36:33.437
  STEP: verifying the pod e2e-test-httpd-pod was created @ 07/20/24 13:36:38.488
  Jul 20 13:36:38.488: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-1210 get pod e2e-test-httpd-pod -o json'
  Jul 20 13:36:38.530: INFO: stderr: ""
  Jul 20 13:36:38.530: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2024-07-20T13:36:33Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-1210\",\n        \"resourceVersion\": \"37985\",\n        \"uid\": \"cd37170b-7a64-4e1e-ad5e-b0c8f57dc101\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-tzpb4\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ip-172-31-79-190\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-tzpb4\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-07-20T13:36:34Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-07-20T13:36:33Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-07-20T13:36:34Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-07-20T13:36:34Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-07-20T13:36:33Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://791d441e41c56deb86bb3447ef9877b73e62ee6fc718d04074bf3fa0e22a8980\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2024-07-20T13:36:34Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"172.31.79.190\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"172.31.79.190\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"192.168.120.254\",\n        \"podIPs\": [\n            {\n                \"ip\": \"192.168.120.254\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2024-07-20T13:36:33Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 07/20/24 13:36:38.53
  Jul 20 13:36:38.530: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-1210 replace -f -'
  Jul 20 13:36:38.610: INFO: stderr: ""
  Jul 20 13:36:38.610: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 07/20/24 13:36:38.61
  Jul 20 13:36:38.614: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-1210 delete pods e2e-test-httpd-pod'
  Jul 20 13:36:40.206: INFO: stderr: ""
  Jul 20 13:36:40.206: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Jul 20 13:36:40.206: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1210" for this suite. @ 07/20/24 13:36:40.21
• [6.847 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 07/20/24 13:36:40.216
  Jul 20 13:36:40.216: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename aggregator @ 07/20/24 13:36:40.217
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:36:40.233
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:36:40.235
  Jul 20 13:36:40.236: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Registering the sample API server. @ 07/20/24 13:36:40.237
  Jul 20 13:36:40.475: INFO: Found ClusterRoles; assuming RBAC is enabled.
  Jul 20 13:36:40.498: INFO: new replicaset for deployment "sample-apiserver-deployment" is yet to be created
  Jul 20 13:36:42.533: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 20, 13, 36, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 20, 13, 36, 40, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 20, 13, 36, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 20, 13, 36, 40, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jul 20 13:36:44.537: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 20, 13, 36, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 20, 13, 36, 40, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 20, 13, 36, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 20, 13, 36, 40, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jul 20 13:36:46.537: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 20, 13, 36, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 20, 13, 36, 40, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 20, 13, 36, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 20, 13, 36, 40, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jul 20 13:36:48.540: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 20, 13, 36, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 20, 13, 36, 40, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 20, 13, 36, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 20, 13, 36, 40, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jul 20 13:36:50.537: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 20, 13, 36, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 20, 13, 36, 40, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 20, 13, 36, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 20, 13, 36, 40, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jul 20 13:36:52.538: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 20, 13, 36, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 20, 13, 36, 40, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 20, 13, 36, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 20, 13, 36, 40, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jul 20 13:36:54.538: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 20, 13, 36, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 20, 13, 36, 40, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 20, 13, 36, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 20, 13, 36, 40, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jul 20 13:36:56.537: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 20, 13, 36, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 20, 13, 36, 40, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 20, 13, 36, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 20, 13, 36, 40, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jul 20 13:36:58.539: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 20, 13, 36, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 20, 13, 36, 40, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 20, 13, 36, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 20, 13, 36, 40, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jul 20 13:37:00.538: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 20, 13, 36, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 20, 13, 36, 40, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 20, 13, 36, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 20, 13, 36, 40, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jul 20 13:37:02.537: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 20, 13, 36, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 20, 13, 36, 40, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 20, 13, 36, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 20, 13, 36, 40, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jul 20 13:37:04.654: INFO: Waited 111.248601ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 07/20/24 13:37:04.68
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 07/20/24 13:37:04.682
  STEP: List APIServices @ 07/20/24 13:37:04.688
  Jul 20 13:37:04.692: INFO: Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 07/20/24 13:37:04.692
  Jul 20 13:37:04.702: INFO: APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 07/20/24 13:37:04.702
  Jul 20 13:37:04.710: INFO: updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2024, time.July, 20, 13, 37, 4, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 07/20/24 13:37:04.71
  Jul 20 13:37:04.713: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2024-07-20 13:37:04 +0000 UTC Passed all checks passed}
  Jul 20 13:37:04.713: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jul 20 13:37:04.713: INFO: Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 07/20/24 13:37:04.713
  Jul 20 13:37:04.720: INFO: Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-1368066816" @ 07/20/24 13:37:04.72
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 07/20/24 13:37:04.729
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 07/20/24 13:37:04.733
  STEP: Patch APIService Status @ 07/20/24 13:37:04.736
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 07/20/24 13:37:04.742
  Jul 20 13:37:04.744: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2024-07-20 13:37:04 +0000 UTC Passed all checks passed}
  Jul 20 13:37:04.744: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jul 20 13:37:04.744: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  Jul 20 13:37:04.744: INFO: Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 07/20/24 13:37:04.744
  STEP: Confirm that the generated APIService has been deleted @ 07/20/24 13:37:04.751
  Jul 20 13:37:04.751: INFO: Requesting list of APIServices to confirm quantity
  Jul 20 13:37:04.754: INFO: Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  Jul 20 13:37:04.754: INFO: APIService v1alpha1.wardle.example.com has been deleted.
  Jul 20 13:37:04.826: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-3606" for this suite. @ 07/20/24 13:37:04.829
• [24.618 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 07/20/24 13:37:04.834
  Jul 20 13:37:04.834: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename deployment @ 07/20/24 13:37:04.835
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:37:04.85
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:37:04.851
  Jul 20 13:37:04.853: INFO: Creating simple deployment test-new-deployment
  Jul 20 13:37:04.863: INFO: deployment "test-new-deployment" doesn't have the required revision set
  STEP: getting scale subresource @ 07/20/24 13:37:06.875
  STEP: updating a scale subresource @ 07/20/24 13:37:06.877
  STEP: verifying the deployment Spec.Replicas was modified @ 07/20/24 13:37:06.881
  STEP: Patch a scale subresource @ 07/20/24 13:37:06.883
  Jul 20 13:37:06.896: INFO: Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7575",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bb807bce-37ec-41b5-b4dd-1c408f6f71bb",
      ResourceVersion: (string) (len=5) "38202",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857079424,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857079424,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857079426,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857079426,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857079426,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857079426,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857079424,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-557759b7c7\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jul 20 13:37:06.901: INFO: New ReplicaSet "test-new-deployment-557759b7c7" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7575",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5a969b09-3fdf-41b9-8f2c-99b5b5238ac1",
      ResourceVersion: (string) (len=5) "38201",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857079424,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "bb807bce-37ec-41b5-b4dd-1c408f6f71bb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857079426,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 62 62 38 30 37 62  63 65 2d 33 37 65 63 2d  |\"bb807bce-37ec-|
              00000120  34 31 62 35 2d 62 34 64  64 2d 31 63 34 30 38 66  |41b5-b4dd-1c408f|
              00000130  36 66 37 31 62 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |6f71bb\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857079426,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jul 20 13:37:06.904: INFO: Pod "test-new-deployment-557759b7c7-7bw2b" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-7bw2b",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7575",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f8b014e8-a78b-4729-a130-156c407400ca",
      ResourceVersion: (string) (len=5) "38205",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857079426,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "5a969b09-3fdf-41b9-8f2c-99b5b5238ac1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857079426,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 61  39 36 39 62 30 39 2d 33  |d\":\"5a969b09-3|
              00000090  66 64 66 2d 34 31 62 39  2d 38 66 32 63 2d 39 39  |fdf-41b9-8f2c-99|
              000000a0  62 35 62 35 32 33 38 61  63 31 5c 22 7d 22 3a 7b  |b5b5238ac1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9n2z5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9n2z5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-25-173",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857079426,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 20 13:37:06.905: INFO: Pod "test-new-deployment-557759b7c7-j79hn" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-j79hn",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7575",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "94a5ff7e-0971-42b8-ad2b-1cd9aa19dfee",
      ResourceVersion: (string) (len=5) "38197",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857079424,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "5a969b09-3fdf-41b9-8f2c-99b5b5238ac1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857079424,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 61  39 36 39 62 30 39 2d 33  |d\":\"5a969b09-3|
              00000090  66 64 66 2d 34 31 62 39  2d 38 66 32 63 2d 39 39  |fdf-41b9-8f2c-99|
              000000a0  62 35 62 35 32 33 38 61  63 31 5c 22 7d 22 3a 7b  |b5b5238ac1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857079426,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  30 2e 32 31 32 5c 22 7d  |2.168.120.212\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gzzp2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gzzp2",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-79-190",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857079426,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857079424,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857079426,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857079426,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857079424,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.79.190",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.79.190"
        }
      },
      PodIP: (string) (len=15) "192.168.120.212",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.120.212"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857079424,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63857079425,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://bb08e54030c5ac61dffad09de2b9fdc0dda6d7196a2b63a6451e1e84579815cd",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 20 13:37:06.907: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7575" for this suite. @ 07/20/24 13:37:06.909
• [2.080 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 07/20/24 13:37:06.914
  Jul 20 13:37:06.914: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename projected @ 07/20/24 13:37:06.915
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:37:06.948
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:37:06.95
  STEP: Creating configMap with name cm-test-opt-del-9486099d-af8e-4e16-84df-07c3f0060578 @ 07/20/24 13:37:06.955
  STEP: Creating configMap with name cm-test-opt-upd-fd582919-d83b-454c-bf18-aebc7f046061 @ 07/20/24 13:37:06.96
  STEP: Creating the pod @ 07/20/24 13:37:06.963
  STEP: Deleting configmap cm-test-opt-del-9486099d-af8e-4e16-84df-07c3f0060578 @ 07/20/24 13:37:09.008
  STEP: Updating configmap cm-test-opt-upd-fd582919-d83b-454c-bf18-aebc7f046061 @ 07/20/24 13:37:09.014
  STEP: Creating configMap with name cm-test-opt-create-59c08c0b-63e6-4904-afde-819185156440 @ 07/20/24 13:37:09.017
  STEP: waiting to observe update in volume @ 07/20/24 13:37:09.021
  Jul 20 13:38:29.330: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8095" for this suite. @ 07/20/24 13:38:29.333
• [82.424 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 07/20/24 13:38:29.338
  Jul 20 13:38:29.338: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/20/24 13:38:29.339
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:38:29.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:38:29.356
  STEP: fetching the /apis discovery document @ 07/20/24 13:38:29.357
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 07/20/24 13:38:29.358
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 07/20/24 13:38:29.358
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 07/20/24 13:38:29.358
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 07/20/24 13:38:29.358
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 07/20/24 13:38:29.358
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 07/20/24 13:38:29.359
  Jul 20 13:38:29.359: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2299" for this suite. @ 07/20/24 13:38:29.362
• [0.028 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 07/20/24 13:38:29.366
  Jul 20 13:38:29.366: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename containers @ 07/20/24 13:38:29.367
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:38:29.382
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:38:29.384
  STEP: Creating a pod to test override all @ 07/20/24 13:38:29.385
  STEP: Saw pod success @ 07/20/24 13:38:33.402
  Jul 20 13:38:33.405: INFO: Trying to get logs from node ip-172-31-25-173 pod client-containers-f0625d11-673e-4910-a9eb-9f2abb2e0638 container agnhost-container: <nil>
  STEP: delete the pod @ 07/20/24 13:38:33.418
  Jul 20 13:38:33.430: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-5331" for this suite. @ 07/20/24 13:38:33.433
• [4.072 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 07/20/24 13:38:33.438
  Jul 20 13:38:33.438: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename daemonsets @ 07/20/24 13:38:33.439
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:38:33.455
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:38:33.457
  Jul 20 13:38:33.470: INFO: Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/20/24 13:38:33.476
  Jul 20 13:38:33.478: INFO: DaemonSet pods can't tolerate node ip-172-31-19-200 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 20 13:38:33.478: INFO: DaemonSet pods can't tolerate node ip-172-31-76-81 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 20 13:38:33.481: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul 20 13:38:33.481: INFO: Node ip-172-31-25-173 is running 0 daemon pod, expected 1
  Jul 20 13:38:34.480: INFO: DaemonSet pods can't tolerate node ip-172-31-19-200 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 20 13:38:34.480: INFO: DaemonSet pods can't tolerate node ip-172-31-76-81 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 20 13:38:34.482: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jul 20 13:38:34.482: INFO: Node ip-172-31-25-173 is running 0 daemon pod, expected 1
  Jul 20 13:38:35.480: INFO: DaemonSet pods can't tolerate node ip-172-31-19-200 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 20 13:38:35.480: INFO: DaemonSet pods can't tolerate node ip-172-31-76-81 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 20 13:38:35.483: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jul 20 13:38:35.483: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 07/20/24 13:38:35.491
  STEP: Check that daemon pods images are updated. @ 07/20/24 13:38:35.501
  Jul 20 13:38:35.504: INFO: Wrong image for pod: daemon-set-4cx6z. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jul 20 13:38:35.504: INFO: Wrong image for pod: daemon-set-kscdh. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jul 20 13:38:35.504: INFO: Wrong image for pod: daemon-set-mw9d4. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jul 20 13:38:35.507: INFO: DaemonSet pods can't tolerate node ip-172-31-19-200 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 20 13:38:35.507: INFO: DaemonSet pods can't tolerate node ip-172-31-76-81 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 20 13:38:36.506: INFO: Wrong image for pod: daemon-set-kscdh. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jul 20 13:38:36.506: INFO: Wrong image for pod: daemon-set-mw9d4. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jul 20 13:38:36.506: INFO: Pod daemon-set-nkfxd is not available
  Jul 20 13:38:36.509: INFO: DaemonSet pods can't tolerate node ip-172-31-19-200 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 20 13:38:36.509: INFO: DaemonSet pods can't tolerate node ip-172-31-76-81 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 20 13:38:37.505: INFO: Wrong image for pod: daemon-set-mw9d4. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jul 20 13:38:37.508: INFO: DaemonSet pods can't tolerate node ip-172-31-19-200 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 20 13:38:37.508: INFO: DaemonSet pods can't tolerate node ip-172-31-76-81 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 20 13:38:38.505: INFO: Pod daemon-set-2gkrr is not available
  Jul 20 13:38:38.505: INFO: Wrong image for pod: daemon-set-mw9d4. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jul 20 13:38:38.508: INFO: DaemonSet pods can't tolerate node ip-172-31-19-200 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 20 13:38:38.508: INFO: DaemonSet pods can't tolerate node ip-172-31-76-81 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 20 13:38:39.505: INFO: Pod daemon-set-w657f is not available
  Jul 20 13:38:39.509: INFO: DaemonSet pods can't tolerate node ip-172-31-19-200 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 20 13:38:39.509: INFO: DaemonSet pods can't tolerate node ip-172-31-76-81 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Check that daemon pods are still running on every node of the cluster. @ 07/20/24 13:38:39.509
  Jul 20 13:38:39.511: INFO: DaemonSet pods can't tolerate node ip-172-31-19-200 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 20 13:38:39.511: INFO: DaemonSet pods can't tolerate node ip-172-31-76-81 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 20 13:38:39.513: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jul 20 13:38:39.513: INFO: Node ip-172-31-25-173 is running 0 daemon pod, expected 1
  Jul 20 13:38:40.512: INFO: DaemonSet pods can't tolerate node ip-172-31-19-200 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 20 13:38:40.512: INFO: DaemonSet pods can't tolerate node ip-172-31-76-81 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 20 13:38:40.516: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jul 20 13:38:40.516: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 07/20/24 13:38:40.527
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3975, will wait for the garbage collector to delete the pods @ 07/20/24 13:38:40.527
  Jul 20 13:38:40.585: INFO: Deleting DaemonSet.extensions daemon-set took: 4.828778ms
  Jul 20 13:38:40.686: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.049025ms
  Jul 20 13:38:42.090: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul 20 13:38:42.090: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jul 20 13:38:42.094: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"38698"},"items":null}

  Jul 20 13:38:42.099: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"38698"},"items":null}

  Jul 20 13:38:42.112: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3975" for this suite. @ 07/20/24 13:38:42.114
• [8.681 seconds]
------------------------------
SS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 07/20/24 13:38:42.119
  Jul 20 13:38:42.119: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename container-runtime @ 07/20/24 13:38:42.12
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:38:42.135
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:38:42.137
  STEP: create the container @ 07/20/24 13:38:42.139
  W0720 13:38:42.146553      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 07/20/24 13:38:42.146
  STEP: get the container status @ 07/20/24 13:38:45.162
  STEP: the container should be terminated @ 07/20/24 13:38:45.165
  STEP: the termination message should be set @ 07/20/24 13:38:45.165
  Jul 20 13:38:45.165: INFO: Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 07/20/24 13:38:45.165
  Jul 20 13:38:45.174: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1403" for this suite. @ 07/20/24 13:38:45.177
• [3.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 07/20/24 13:38:45.183
  Jul 20 13:38:45.183: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename projected @ 07/20/24 13:38:45.184
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:38:45.196
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:38:45.2
  STEP: Creating configMap with name projected-configmap-test-volume-db591395-e596-4923-af30-f04919d1dab0 @ 07/20/24 13:38:45.202
  STEP: Creating a pod to test consume configMaps @ 07/20/24 13:38:45.204
  STEP: Saw pod success @ 07/20/24 13:38:49.221
  Jul 20 13:38:49.224: INFO: Trying to get logs from node ip-172-31-79-190 pod pod-projected-configmaps-b96f4e04-589b-4b05-8618-37e5dc51e495 container agnhost-container: <nil>
  STEP: delete the pod @ 07/20/24 13:38:49.228
  Jul 20 13:38:49.240: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1217" for this suite. @ 07/20/24 13:38:49.243
• [4.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 07/20/24 13:38:49.248
  Jul 20 13:38:49.248: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename events @ 07/20/24 13:38:49.249
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:38:49.264
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:38:49.266
  STEP: Create set of events @ 07/20/24 13:38:49.267
  STEP: get a list of Events with a label in the current namespace @ 07/20/24 13:38:49.284
  STEP: delete a list of events @ 07/20/24 13:38:49.286
  Jul 20 13:38:49.286: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 07/20/24 13:38:49.302
  Jul 20 13:38:49.305: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-645" for this suite. @ 07/20/24 13:38:49.308
• [0.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 07/20/24 13:38:49.317
  Jul 20 13:38:49.317: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename sysctl @ 07/20/24 13:38:49.317
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:38:49.333
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:38:49.335
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 07/20/24 13:38:49.336
  STEP: Watching for error events or started pod @ 07/20/24 13:38:49.344
  STEP: Waiting for pod completion @ 07/20/24 13:38:51.348
  STEP: Checking that the pod succeeded @ 07/20/24 13:38:53.359
  STEP: Getting logs from the pod @ 07/20/24 13:38:53.359
  STEP: Checking that the sysctl is actually updated @ 07/20/24 13:38:53.363
  Jul 20 13:38:53.363: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-7818" for this suite. @ 07/20/24 13:38:53.367
• [4.055 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 07/20/24 13:38:53.373
  Jul 20 13:38:53.373: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename container-probe @ 07/20/24 13:38:53.373
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:38:53.389
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:38:53.39
  STEP: Creating pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035 @ 07/20/24 13:38:53.392
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/20/24 13:38:55.419
  Jul 20 13:38:55.422: INFO: Initial restart count of pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 is 0
  Jul 20 13:38:55.424: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:38:57.428: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:38:59.433: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:39:01.438: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:39:03.442: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:39:05.446: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:39:07.450: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:39:09.455: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:39:11.459: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:39:13.464: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:39:15.468: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:39:17.473: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:39:19.476: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:39:21.481: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:39:23.486: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:39:25.490: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:39:27.495: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:39:29.500: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:39:31.503: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:39:33.508: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:39:35.512: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:39:37.517: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:39:39.520: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:39:41.524: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:39:43.529: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:39:45.533: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:39:47.538: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:39:49.543: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:39:51.547: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:39:53.551: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:39:55.556: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:39:57.560: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:39:59.564: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:40:01.568: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:40:03.572: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:40:05.575: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:40:07.579: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:40:09.583: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:40:11.587: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:40:13.591: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:40:15.595: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:40:17.599: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:40:19.604: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:40:21.611: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:40:23.615: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:40:25.619: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:40:27.623: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:40:29.628: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:40:31.632: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:40:33.636: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:40:35.640: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:40:37.643: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:40:39.649: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:40:41.654: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:40:43.658: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:40:45.662: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:40:47.667: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:40:49.671: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:40:51.675: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:40:53.679: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:40:55.683: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:40:57.687: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:40:59.692: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:41:01.697: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:41:03.702: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:41:05.707: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:41:07.711: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:41:09.714: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:41:11.720: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:41:13.723: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:41:15.727: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:41:17.731: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:41:19.736: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:41:21.741: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:41:23.745: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:41:25.750: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:41:27.754: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:41:29.757: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:41:31.761: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:41:33.766: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:41:35.769: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:41:37.773: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:41:39.778: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:41:41.782: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:41:43.787: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:41:45.791: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:41:47.795: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:41:49.798: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:41:51.803: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:41:53.807: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:41:55.836: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:41:57.841: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:41:59.845: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:42:01.849: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:42:03.853: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:42:05.857: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:42:07.861: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:42:09.866: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:42:11.870: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:42:13.874: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:42:15.878: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:42:17.883: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:42:19.887: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:42:21.893: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:42:23.897: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:42:25.902: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:42:27.906: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:42:29.912: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:42:31.916: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:42:33.921: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:42:35.925: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:42:37.929: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:42:39.933: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:42:41.937: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:42:43.941: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:42:45.944: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:42:47.949: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:42:49.954: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:42:51.959: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  Jul 20 13:42:53.964: INFO: Get pod test-webserver-aee5faaa-e516-4afc-a7b6-c48f2e319180 in namespace container-probe-9035
  STEP: deleting the pod @ 07/20/24 13:42:55.964
  Jul 20 13:42:55.977: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9035" for this suite. @ 07/20/24 13:42:55.98
• [242.613 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 07/20/24 13:42:55.986
  Jul 20 13:42:55.986: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename projected @ 07/20/24 13:42:55.986
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:42:56.003
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:42:56.004
  STEP: Creating configMap with name projected-configmap-test-volume-caa35091-63db-4324-9d51-95fd56d88a2a @ 07/20/24 13:42:56.006
  STEP: Creating a pod to test consume configMaps @ 07/20/24 13:42:56.01
  STEP: Saw pod success @ 07/20/24 13:42:58.024
  Jul 20 13:42:58.027: INFO: Trying to get logs from node ip-172-31-79-190 pod pod-projected-configmaps-0b8b9989-587a-410d-9d0a-3ea35cdd9ba2 container agnhost-container: <nil>
  STEP: delete the pod @ 07/20/24 13:42:58.043
  Jul 20 13:42:58.055: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6224" for this suite. @ 07/20/24 13:42:58.057
• [2.078 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 07/20/24 13:42:58.064
  Jul 20 13:42:58.064: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename subpath @ 07/20/24 13:42:58.065
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:42:58.078
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:42:58.08
  STEP: Setting up data @ 07/20/24 13:42:58.081
  STEP: Creating pod pod-subpath-test-secret-mwss @ 07/20/24 13:42:58.09
  STEP: Creating a pod to test atomic-volume-subpath @ 07/20/24 13:42:58.09
  STEP: Saw pod success @ 07/20/24 13:43:20.15
  Jul 20 13:43:20.152: INFO: Trying to get logs from node ip-172-31-79-190 pod pod-subpath-test-secret-mwss container test-container-subpath-secret-mwss: <nil>
  STEP: delete the pod @ 07/20/24 13:43:20.158
  STEP: Deleting pod pod-subpath-test-secret-mwss @ 07/20/24 13:43:20.172
  Jul 20 13:43:20.172: INFO: Deleting pod "pod-subpath-test-secret-mwss" in namespace "subpath-8508"
  Jul 20 13:43:20.175: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-8508" for this suite. @ 07/20/24 13:43:20.178
• [22.121 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 07/20/24 13:43:20.185
  Jul 20 13:43:20.185: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename namespaces @ 07/20/24 13:43:20.186
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:43:20.203
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:43:20.205
  STEP: Updating Namespace "namespaces-6949" @ 07/20/24 13:43:20.206
  Jul 20 13:43:20.212: INFO: Namespace "namespaces-6949" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"11a686db-2bd0-4c4c-a113-cbef29075afc", "kubernetes.io/metadata.name":"namespaces-6949", "namespaces-6949":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  Jul 20 13:43:20.213: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6949" for this suite. @ 07/20/24 13:43:20.215
• [0.035 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 07/20/24 13:43:20.22
  Jul 20 13:43:20.220: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename gc @ 07/20/24 13:43:20.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:43:20.236
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:43:20.237
  Jul 20 13:43:20.262: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"c229dc63-0fcf-41cb-80a0-091436dad36f", Controller:(*bool)(0xc0041abad6), BlockOwnerDeletion:(*bool)(0xc0041abad7)}}
  Jul 20 13:43:20.268: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"f8515622-d318-4429-b0bc-549eb6006cb2", Controller:(*bool)(0xc0041abd06), BlockOwnerDeletion:(*bool)(0xc0041abd07)}}
  Jul 20 13:43:20.274: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"f3329c2d-3666-42ca-906a-5c2b77df509e", Controller:(*bool)(0xc0041abf36), BlockOwnerDeletion:(*bool)(0xc0041abf37)}}
  Jul 20 13:43:25.292: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2462" for this suite. @ 07/20/24 13:43:25.295
• [5.082 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 07/20/24 13:43:25.303
  Jul 20 13:43:25.303: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename webhook @ 07/20/24 13:43:25.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:43:25.322
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:43:25.323
  STEP: Setting up server cert @ 07/20/24 13:43:25.349
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/20/24 13:43:25.588
  STEP: Deploying the webhook pod @ 07/20/24 13:43:25.594
  STEP: Wait for the deployment to be ready @ 07/20/24 13:43:25.604
  Jul 20 13:43:25.612: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/20/24 13:43:27.621
  STEP: Verifying the service has paired with the endpoint @ 07/20/24 13:43:27.629
  Jul 20 13:43:28.629: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 07/20/24 13:43:28.636
  STEP: create a pod that should be denied by the webhook @ 07/20/24 13:43:28.649
  STEP: create a pod that causes the webhook to hang @ 07/20/24 13:43:28.659
  STEP: create a configmap that should be denied by the webhook @ 07/20/24 13:43:38.665
  STEP: create a configmap that should be admitted by the webhook @ 07/20/24 13:43:38.696
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 07/20/24 13:43:38.704
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 07/20/24 13:43:38.711
  STEP: create a namespace that bypass the webhook @ 07/20/24 13:43:38.714
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 07/20/24 13:43:38.73
  Jul 20 13:43:38.772: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9646" for this suite. @ 07/20/24 13:43:38.776
  STEP: Destroying namespace "webhook-markers-5878" for this suite. @ 07/20/24 13:43:38.783
  STEP: Destroying namespace "exempted-namespace-8087" for this suite. @ 07/20/24 13:43:38.787
• [13.490 seconds]
------------------------------
SSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 07/20/24 13:43:38.793
  Jul 20 13:43:38.793: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename container-probe @ 07/20/24 13:43:38.793
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:43:38.808
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:43:38.81
  STEP: Creating pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661 @ 07/20/24 13:43:38.812
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/20/24 13:43:40.834
  Jul 20 13:43:40.838: INFO: Initial restart count of pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 is 0
  Jul 20 13:43:40.841: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:43:42.846: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:43:44.851: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:43:46.856: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:43:48.860: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:43:50.865: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:43:52.869: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:43:54.873: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:43:56.877: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:43:58.881: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:44:00.884: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:44:00.884: INFO: Restart count of pod container-probe-2661/liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 is now 1 (20.046540577s elapsed)
  Jul 20 13:44:02.889: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:44:04.894: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:44:06.898: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:44:08.903: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:44:10.907: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:44:12.913: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:44:14.917: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:44:16.922: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:44:18.926: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:44:20.930: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:44:20.930: INFO: Restart count of pod container-probe-2661/liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 is now 2 (40.092491847s elapsed)
  Jul 20 13:44:22.937: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:44:24.942: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:44:26.948: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:44:28.953: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:44:30.956: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:44:32.960: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:44:34.966: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:44:36.971: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:44:38.976: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:44:40.980: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:44:40.980: INFO: Restart count of pod container-probe-2661/liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 is now 3 (1m0.141918223s elapsed)
  Jul 20 13:44:42.983: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:44:44.987: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:44:46.991: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:44:48.995: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:44:50.999: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:44:53.003: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:44:55.008: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:44:57.012: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:44:59.016: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:45:01.021: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:45:01.021: INFO: Restart count of pod container-probe-2661/liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 is now 4 (1m20.183191508s elapsed)
  Jul 20 13:45:03.026: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:45:05.031: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:45:07.035: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:45:09.040: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:45:11.044: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:45:13.048: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:45:15.053: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:45:17.057: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:45:19.061: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:45:21.065: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:45:23.070: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:45:25.074: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:45:27.079: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:45:29.083: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:45:31.088: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:45:33.093: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:45:35.097: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:45:37.100: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:45:39.105: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:45:41.109: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:45:43.114: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:45:45.118: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:45:47.122: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:45:49.127: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:45:51.131: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:45:53.135: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:45:55.140: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:45:57.145: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:45:59.150: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:46:01.153: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:46:03.158: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:46:05.161: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:46:07.166: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:46:09.171: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:46:11.175: INFO: Get pod liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 in namespace container-probe-2661
  Jul 20 13:46:11.175: INFO: Restart count of pod container-probe-2661/liveness-587d05a3-5952-479d-a76e-8d2b7a45ff52 is now 5 (2m30.336797208s elapsed)
  STEP: deleting the pod @ 07/20/24 13:46:11.175
  Jul 20 13:46:11.185: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2661" for this suite. @ 07/20/24 13:46:11.188
• [152.402 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 07/20/24 13:46:11.196
  Jul 20 13:46:11.196: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename pod-network-test @ 07/20/24 13:46:11.197
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:46:11.212
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:46:11.213
  STEP: Performing setup for networking test in namespace pod-network-test-3481 @ 07/20/24 13:46:11.215
  STEP: creating a selector @ 07/20/24 13:46:11.215
  STEP: Creating the service pods in kubernetes @ 07/20/24 13:46:11.215
  Jul 20 13:46:11.215: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 07/20/24 13:46:23.289
  Jul 20 13:46:25.313: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Jul 20 13:46:25.313: INFO: Going to poll 192.168.245.247 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Jul 20 13:46:25.315: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.245.247:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-3481 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 20 13:46:25.315: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  Jul 20 13:46:25.315: INFO: ExecWithOptions: Clientset creation
  Jul 20 13:46:25.315: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-3481/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.245.247%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jul 20 13:46:25.371: INFO: Found all 1 expected endpoints: [netserver-0]
  Jul 20 13:46:25.371: INFO: Going to poll 192.168.15.70 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Jul 20 13:46:25.374: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.15.70:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-3481 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 20 13:46:25.374: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  Jul 20 13:46:25.374: INFO: ExecWithOptions: Clientset creation
  Jul 20 13:46:25.374: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-3481/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.15.70%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jul 20 13:46:25.423: INFO: Found all 1 expected endpoints: [netserver-1]
  Jul 20 13:46:25.423: INFO: Going to poll 192.168.120.239 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Jul 20 13:46:25.426: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.120.239:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-3481 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 20 13:46:25.427: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  Jul 20 13:46:25.427: INFO: ExecWithOptions: Clientset creation
  Jul 20 13:46:25.427: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-3481/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.120.239%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jul 20 13:46:25.469: INFO: Found all 1 expected endpoints: [netserver-2]
  Jul 20 13:46:25.469: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-3481" for this suite. @ 07/20/24 13:46:25.473
• [14.283 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:962
  STEP: Creating a kubernetes client @ 07/20/24 13:46:25.479
  Jul 20 13:46:25.479: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename statefulset @ 07/20/24 13:46:25.48
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:46:25.496
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:46:25.498
  STEP: Creating service test in namespace statefulset-6629 @ 07/20/24 13:46:25.5
  Jul 20 13:46:25.513: INFO: Found 0 stateful pods, waiting for 1
  Jul 20 13:46:35.517: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 07/20/24 13:46:35.522
  W0720 13:46:35.531566      19 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  Jul 20 13:46:35.535: INFO: Found 1 stateful pods, waiting for 2
  Jul 20 13:46:45.538: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Jul 20 13:46:45.538: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 07/20/24 13:46:45.542
  STEP: Delete all of the StatefulSets @ 07/20/24 13:46:45.544
  STEP: Verify that StatefulSets have been deleted @ 07/20/24 13:46:45.552
  Jul 20 13:46:45.554: INFO: Deleting all statefulset in ns statefulset-6629
  Jul 20 13:46:45.561: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6629" for this suite. @ 07/20/24 13:46:45.568
• [20.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 07/20/24 13:46:45.579
  Jul 20 13:46:45.579: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename gc @ 07/20/24 13:46:45.58
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:46:45.595
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:46:45.597
  STEP: create the deployment @ 07/20/24 13:46:45.598
  W0720 13:46:45.602765      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 07/20/24 13:46:45.602
  STEP: delete the deployment @ 07/20/24 13:46:46.106
  STEP: wait for all rs to be garbage collected @ 07/20/24 13:46:46.112
  STEP: expected 0 rs, got 1 rs @ 07/20/24 13:46:46.115
  STEP: expected 0 pods, got 2 pods @ 07/20/24 13:46:46.118
  STEP: Gathering metrics @ 07/20/24 13:46:46.621
  W0720 13:46:46.625441      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Jul 20 13:46:46.625: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jul 20 13:46:46.625: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3885" for this suite. @ 07/20/24 13:46:46.628
• [1.057 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 07/20/24 13:46:46.635
  Jul 20 13:46:46.635: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename downward-api @ 07/20/24 13:46:46.636
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:46:46.652
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:46:46.653
  STEP: Creating the pod @ 07/20/24 13:46:46.655
  Jul 20 13:46:49.191: INFO: Successfully updated pod "labelsupdate3f94d429-db17-48ad-baa7-9d18654f6211"
  Jul 20 13:46:53.213: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8221" for this suite. @ 07/20/24 13:46:53.217
• [6.588 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:324
  STEP: Creating a kubernetes client @ 07/20/24 13:46:53.226
  Jul 20 13:46:53.226: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename cronjob @ 07/20/24 13:46:53.227
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:46:53.244
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:46:53.246
  STEP: Creating a cronjob @ 07/20/24 13:46:53.247
  STEP: creating @ 07/20/24 13:46:53.247
  STEP: getting @ 07/20/24 13:46:53.251
  STEP: listing @ 07/20/24 13:46:53.253
  STEP: watching @ 07/20/24 13:46:53.255
  Jul 20 13:46:53.255: INFO: starting watch
  STEP: cluster-wide listing @ 07/20/24 13:46:53.256
  STEP: cluster-wide watching @ 07/20/24 13:46:53.258
  Jul 20 13:46:53.258: INFO: starting watch
  STEP: patching @ 07/20/24 13:46:53.259
  STEP: updating @ 07/20/24 13:46:53.262
  Jul 20 13:46:53.270: INFO: waiting for watch events with expected annotations
  Jul 20 13:46:53.270: INFO: saw patched and updated annotations
  STEP: patching /status @ 07/20/24 13:46:53.27
  STEP: updating /status @ 07/20/24 13:46:53.274
  STEP: get /status @ 07/20/24 13:46:53.279
  STEP: deleting @ 07/20/24 13:46:53.281
  STEP: deleting a collection @ 07/20/24 13:46:53.294
  Jul 20 13:46:53.301: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-9112" for this suite. @ 07/20/24 13:46:53.304
• [0.082 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 07/20/24 13:46:53.309
  Jul 20 13:46:53.309: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename webhook @ 07/20/24 13:46:53.309
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:46:53.324
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:46:53.325
  STEP: Setting up server cert @ 07/20/24 13:46:53.348
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/20/24 13:46:53.482
  STEP: Deploying the webhook pod @ 07/20/24 13:46:53.49
  STEP: Wait for the deployment to be ready @ 07/20/24 13:46:53.5
  Jul 20 13:46:53.506: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/20/24 13:46:55.516
  STEP: Verifying the service has paired with the endpoint @ 07/20/24 13:46:55.525
  Jul 20 13:46:56.526: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 07/20/24 13:46:56.533
  STEP: Creating a custom resource definition that should be denied by the webhook @ 07/20/24 13:46:56.544
  Jul 20 13:46:56.544: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  Jul 20 13:46:56.591: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9466" for this suite. @ 07/20/24 13:46:56.594
  STEP: Destroying namespace "webhook-markers-305" for this suite. @ 07/20/24 13:46:56.601
• [3.297 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 07/20/24 13:46:56.606
  Jul 20 13:46:56.606: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename chunking @ 07/20/24 13:46:56.606
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:46:56.621
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:46:56.622
  STEP: creating a large number of resources @ 07/20/24 13:46:56.624
  STEP: retrieving those results in paged fashion several times @ 07/20/24 13:47:14.314
  Jul 20 13:47:14.360: INFO: Retrieved 17/17 results with rv 41008 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEwMDgsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  Jul 20 13:47:14.410: INFO: Retrieved 17/17 results with rv 41008 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEwMDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  Jul 20 13:47:14.462: INFO: Retrieved 17/17 results with rv 41008 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEwMDgsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  Jul 20 13:47:14.512: INFO: Retrieved 17/17 results with rv 41008 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEwMDgsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  Jul 20 13:47:14.560: INFO: Retrieved 17/17 results with rv 41008 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEwMDgsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  Jul 20 13:47:14.611: INFO: Retrieved 17/17 results with rv 41008 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEwMDgsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  Jul 20 13:47:14.660: INFO: Retrieved 17/17 results with rv 41008 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEwMDgsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  Jul 20 13:47:14.710: INFO: Retrieved 17/17 results with rv 41008 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEwMDgsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  Jul 20 13:47:14.761: INFO: Retrieved 17/17 results with rv 41008 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEwMDgsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  Jul 20 13:47:14.811: INFO: Retrieved 17/17 results with rv 41008 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEwMDgsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  Jul 20 13:47:14.860: INFO: Retrieved 17/17 results with rv 41008 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEwMDgsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  Jul 20 13:47:14.911: INFO: Retrieved 17/17 results with rv 41008 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEwMDgsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  Jul 20 13:47:14.961: INFO: Retrieved 17/17 results with rv 41008 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEwMDgsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  Jul 20 13:47:15.011: INFO: Retrieved 17/17 results with rv 41008 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEwMDgsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  Jul 20 13:47:15.061: INFO: Retrieved 17/17 results with rv 41008 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEwMDgsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  Jul 20 13:47:15.110: INFO: Retrieved 17/17 results with rv 41008 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEwMDgsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  Jul 20 13:47:15.160: INFO: Retrieved 17/17 results with rv 41008 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEwMDgsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  Jul 20 13:47:15.211: INFO: Retrieved 17/17 results with rv 41008 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEwMDgsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  Jul 20 13:47:15.260: INFO: Retrieved 17/17 results with rv 41008 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEwMDgsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  Jul 20 13:47:15.310: INFO: Retrieved 17/17 results with rv 41008 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEwMDgsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  Jul 20 13:47:15.361: INFO: Retrieved 17/17 results with rv 41008 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEwMDgsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  Jul 20 13:47:15.411: INFO: Retrieved 17/17 results with rv 41008 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEwMDgsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  Jul 20 13:47:15.460: INFO: Retrieved 17/17 results with rv 41008 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEwMDgsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  Jul 20 13:47:15.511: INFO: Retrieved 9/17 results with rv 41008 and continue 
  Jul 20 13:47:15.561: INFO: Retrieved 17/17 results with rv 41009 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEwMDksInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  Jul 20 13:47:15.611: INFO: Retrieved 17/17 results with rv 41009 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEwMDksInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  Jul 20 13:47:15.662: INFO: Retrieved 17/17 results with rv 41009 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEwMDksInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  Jul 20 13:47:15.710: INFO: Retrieved 17/17 results with rv 41009 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEwMDksInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  Jul 20 13:47:15.760: INFO: Retrieved 17/17 results with rv 41009 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEwMDksInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  Jul 20 13:47:15.813: INFO: Retrieved 17/17 results with rv 41009 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEwMDksInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  Jul 20 13:47:15.860: INFO: Retrieved 17/17 results with rv 41009 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEwMDksInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  Jul 20 13:47:15.910: INFO: Retrieved 17/17 results with rv 41009 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEwMDksInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  Jul 20 13:47:15.961: INFO: Retrieved 17/17 results with rv 41009 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEwMDksInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  Jul 20 13:47:16.011: INFO: Retrieved 17/17 results with rv 41009 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEwMDksInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  Jul 20 13:47:16.060: INFO: Retrieved 17/17 results with rv 41009 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEwMDksInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  Jul 20 13:47:16.111: INFO: Retrieved 17/17 results with rv 41009 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEwMDksInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  Jul 20 13:47:16.160: INFO: Retrieved 17/17 results with rv 41009 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEwMDksInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  Jul 20 13:47:16.211: INFO: Retrieved 17/17 results with rv 41009 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEwMDksInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  Jul 20 13:47:16.261: INFO: Retrieved 17/17 results with rv 41009 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEwMDksInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  Jul 20 13:47:16.311: INFO: Retrieved 17/17 results with rv 41009 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEwMDksInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  Jul 20 13:47:16.360: INFO: Retrieved 17/17 results with rv 41009 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEwMDksInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  Jul 20 13:47:16.411: INFO: Retrieved 17/17 results with rv 41009 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEwMDksInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  Jul 20 13:47:16.460: INFO: Retrieved 17/17 results with rv 41009 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEwMDksInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  Jul 20 13:47:16.510: INFO: Retrieved 17/17 results with rv 41009 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEwMDksInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  Jul 20 13:47:16.561: INFO: Retrieved 17/17 results with rv 41009 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEwMDksInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  Jul 20 13:47:16.611: INFO: Retrieved 17/17 results with rv 41009 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEwMDksInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  Jul 20 13:47:16.660: INFO: Retrieved 17/17 results with rv 41009 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEwMDksInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  Jul 20 13:47:16.711: INFO: Retrieved 9/17 results with rv 41009 and continue 
  Jul 20 13:47:16.761: INFO: Retrieved 17/17 results with rv 41012 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEwMTIsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  Jul 20 13:47:16.810: INFO: Retrieved 17/17 results with rv 41012 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEwMTIsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  Jul 20 13:47:16.861: INFO: Retrieved 17/17 results with rv 41012 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEwMTIsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  Jul 20 13:47:16.911: INFO: Retrieved 17/17 results with rv 41012 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEwMTIsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  Jul 20 13:47:16.959: INFO: Retrieved 17/17 results with rv 41012 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEwMTIsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  Jul 20 13:47:17.011: INFO: Retrieved 17/17 results with rv 41012 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEwMTIsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  Jul 20 13:47:17.060: INFO: Retrieved 17/17 results with rv 41012 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEwMTIsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  Jul 20 13:47:17.110: INFO: Retrieved 17/17 results with rv 41012 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEwMTIsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  Jul 20 13:47:17.161: INFO: Retrieved 17/17 results with rv 41012 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEwMTIsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  Jul 20 13:47:17.210: INFO: Retrieved 17/17 results with rv 41012 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEwMTIsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  Jul 20 13:47:17.260: INFO: Retrieved 17/17 results with rv 41012 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEwMTIsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  Jul 20 13:47:17.312: INFO: Retrieved 17/17 results with rv 41012 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEwMTIsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  Jul 20 13:47:17.360: INFO: Retrieved 17/17 results with rv 41012 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEwMTIsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  Jul 20 13:47:17.410: INFO: Retrieved 17/17 results with rv 41012 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEwMTIsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  Jul 20 13:47:17.461: INFO: Retrieved 17/17 results with rv 41012 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEwMTIsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  Jul 20 13:47:17.510: INFO: Retrieved 17/17 results with rv 41012 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEwMTIsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  Jul 20 13:47:17.559: INFO: Retrieved 17/17 results with rv 41012 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEwMTIsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  Jul 20 13:47:17.611: INFO: Retrieved 17/17 results with rv 41012 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEwMTIsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  Jul 20 13:47:17.660: INFO: Retrieved 17/17 results with rv 41012 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEwMTIsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  Jul 20 13:47:17.710: INFO: Retrieved 17/17 results with rv 41012 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEwMTIsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  Jul 20 13:47:17.761: INFO: Retrieved 17/17 results with rv 41012 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEwMTIsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  Jul 20 13:47:17.811: INFO: Retrieved 17/17 results with rv 41012 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEwMTIsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  Jul 20 13:47:17.860: INFO: Retrieved 17/17 results with rv 41012 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEwMTIsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  Jul 20 13:47:17.911: INFO: Retrieved 9/17 results with rv 41012 and continue 
  STEP: retrieving those results all at once @ 07/20/24 13:47:17.911
  Jul 20 13:47:17.966: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-9705" for this suite. @ 07/20/24 13:47:18.011
• [21.457 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 07/20/24 13:47:18.063
  Jul 20 13:47:18.063: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename replication-controller @ 07/20/24 13:47:18.064
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:47:18.08
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:47:18.082
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 07/20/24 13:47:18.084
  STEP: When a replication controller with a matching selector is created @ 07/20/24 13:47:20.1
  STEP: Then the orphan pod is adopted @ 07/20/24 13:47:20.105
  Jul 20 13:47:21.112: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-4169" for this suite. @ 07/20/24 13:47:21.115
• [3.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:442
  STEP: Creating a kubernetes client @ 07/20/24 13:47:21.122
  Jul 20 13:47:21.122: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/20/24 13:47:21.122
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:47:21.138
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:47:21.14
  STEP: set up a multi version CRD @ 07/20/24 13:47:21.142
  Jul 20 13:47:21.142: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: mark a version not serverd @ 07/20/24 13:47:24.304
  STEP: check the unserved version gets removed @ 07/20/24 13:47:24.325
  STEP: check the other version is not changed @ 07/20/24 13:47:25.007
  Jul 20 13:47:27.506: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2959" for this suite. @ 07/20/24 13:47:27.512
• [6.398 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 07/20/24 13:47:27.52
  Jul 20 13:47:27.520: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename pods @ 07/20/24 13:47:27.521
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:47:27.536
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:47:27.539
  Jul 20 13:47:27.541: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: creating the pod @ 07/20/24 13:47:27.541
  STEP: submitting the pod to kubernetes @ 07/20/24 13:47:27.541
  Jul 20 13:47:29.570: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-680" for this suite. @ 07/20/24 13:47:29.573
• [2.061 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 07/20/24 13:47:29.582
  Jul 20 13:47:29.582: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename replication-controller @ 07/20/24 13:47:29.582
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:47:29.596
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:47:29.599
  STEP: Given a ReplicationController is created @ 07/20/24 13:47:29.601
  STEP: When the matched label of one of its pods change @ 07/20/24 13:47:29.606
  Jul 20 13:47:29.608: INFO: Pod name pod-release: Found 0 pods out of 1
  Jul 20 13:47:34.612: INFO: Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 07/20/24 13:47:34.624
  Jul 20 13:47:35.637: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-9423" for this suite. @ 07/20/24 13:47:35.64
• [6.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 07/20/24 13:47:35.647
  Jul 20 13:47:35.647: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename csi-storageclass @ 07/20/24 13:47:35.648
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:47:35.66
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:47:35.664
  STEP: Creating a StorageClass @ 07/20/24 13:47:35.667
  STEP: Get StorageClass "e2e-c4xsq" @ 07/20/24 13:47:35.671
  STEP: Patching the StorageClass "e2e-c4xsq" @ 07/20/24 13:47:35.673
  STEP: Delete StorageClass "e2e-c4xsq" @ 07/20/24 13:47:35.678
  STEP: Confirm deletion of StorageClass "e2e-c4xsq" @ 07/20/24 13:47:35.683
  STEP: Create a replacement StorageClass @ 07/20/24 13:47:35.685
  STEP: Updating StorageClass "e2e-v2-dsdwp" @ 07/20/24 13:47:35.691
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-dsdwp=updated" @ 07/20/24 13:47:35.697
  STEP: Deleting StorageClass "e2e-v2-dsdwp" via DeleteCollection @ 07/20/24 13:47:35.7
  STEP: Confirm deletion of StorageClass "e2e-v2-dsdwp" @ 07/20/24 13:47:35.706
  Jul 20 13:47:35.709: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-1922" for this suite. @ 07/20/24 13:47:35.711
• [0.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 07/20/24 13:47:35.717
  Jul 20 13:47:35.717: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename watch @ 07/20/24 13:47:35.717
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:47:35.73
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:47:35.733
  STEP: creating a new configmap @ 07/20/24 13:47:35.737
  STEP: modifying the configmap once @ 07/20/24 13:47:35.741
  STEP: modifying the configmap a second time @ 07/20/24 13:47:35.747
  STEP: deleting the configmap @ 07/20/24 13:47:35.755
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 07/20/24 13:47:35.76
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 07/20/24 13:47:35.762
  Jul 20 13:47:35.762: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-7107  35a851ba-c9a3-44d1-be32-d75727b502a7 41603 0 2024-07-20 13:47:35 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-07-20 13:47:35 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jul 20 13:47:35.762: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-7107  35a851ba-c9a3-44d1-be32-d75727b502a7 41604 0 2024-07-20 13:47:35 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-07-20 13:47:35 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jul 20 13:47:35.762: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-7107" for this suite. @ 07/20/24 13:47:35.765
• [0.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 07/20/24 13:47:35.77
  Jul 20 13:47:35.770: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename webhook @ 07/20/24 13:47:35.771
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:47:35.785
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:47:35.787
  STEP: Setting up server cert @ 07/20/24 13:47:35.817
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/20/24 13:47:36.141
  STEP: Deploying the webhook pod @ 07/20/24 13:47:36.149
  STEP: Wait for the deployment to be ready @ 07/20/24 13:47:36.16
  Jul 20 13:47:36.171: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/20/24 13:47:38.181
  STEP: Verifying the service has paired with the endpoint @ 07/20/24 13:47:38.188
  Jul 20 13:47:39.189: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 07/20/24 13:47:39.257
  STEP: Creating a configMap that should be mutated @ 07/20/24 13:47:39.266
  STEP: Deleting the collection of validation webhooks @ 07/20/24 13:47:39.287
  STEP: Creating a configMap that should not be mutated @ 07/20/24 13:47:39.328
  Jul 20 13:47:39.370: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9291" for this suite. @ 07/20/24 13:47:39.374
  STEP: Destroying namespace "webhook-markers-8184" for this suite. @ 07/20/24 13:47:39.38
• [3.617 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 07/20/24 13:47:39.388
  Jul 20 13:47:39.388: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename pods @ 07/20/24 13:47:39.388
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:47:39.401
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:47:39.404
  STEP: creating the pod @ 07/20/24 13:47:39.407
  STEP: submitting the pod to kubernetes @ 07/20/24 13:47:39.407
  STEP: verifying QOS class is set on the pod @ 07/20/24 13:47:39.415
  Jul 20 13:47:39.419: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6781" for this suite. @ 07/20/24 13:47:39.423
• [0.043 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 07/20/24 13:47:39.431
  Jul 20 13:47:39.431: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename dns @ 07/20/24 13:47:39.432
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:47:39.448
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:47:39.45
  STEP: Creating a test headless service @ 07/20/24 13:47:39.454
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-5128.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-5128.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 07/20/24 13:47:39.457
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-5128.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-5128.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 07/20/24 13:47:39.458
  STEP: creating a pod to probe DNS @ 07/20/24 13:47:39.458
  STEP: submitting the pod to kubernetes @ 07/20/24 13:47:39.458
  STEP: retrieving the pod @ 07/20/24 13:47:41.478
  STEP: looking for the results for each expected name from probers @ 07/20/24 13:47:41.481
  Jul 20 13:47:41.495: INFO: DNS probes using dns-5128/dns-test-a8de89a4-4e45-4d3a-9fea-1071dfca8993 succeeded

  STEP: deleting the pod @ 07/20/24 13:47:41.495
  STEP: deleting the test headless service @ 07/20/24 13:47:41.509
  Jul 20 13:47:41.523: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5128" for this suite. @ 07/20/24 13:47:41.527
• [2.104 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:742
  STEP: Creating a kubernetes client @ 07/20/24 13:47:41.535
  Jul 20 13:47:41.535: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename svcaccounts @ 07/20/24 13:47:41.536
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:47:41.549
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:47:41.554
  Jul 20 13:47:41.568: INFO: Got root ca configmap in namespace "svcaccounts-2634"
  Jul 20 13:47:41.575: INFO: Deleted root ca configmap in namespace "svcaccounts-2634"
  STEP: waiting for a new root ca configmap created @ 07/20/24 13:47:42.076
  Jul 20 13:47:42.079: INFO: Recreated root ca configmap in namespace "svcaccounts-2634"
  Jul 20 13:47:42.083: INFO: Updated root ca configmap in namespace "svcaccounts-2634"
  STEP: waiting for the root ca configmap reconciled @ 07/20/24 13:47:42.584
  Jul 20 13:47:42.588: INFO: Reconciled root ca configmap in namespace "svcaccounts-2634"
  Jul 20 13:47:42.588: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2634" for this suite. @ 07/20/24 13:47:42.591
• [1.063 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:234
  STEP: Creating a kubernetes client @ 07/20/24 13:47:42.598
  Jul 20 13:47:42.598: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename resourcequota @ 07/20/24 13:47:42.599
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:47:42.616
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:47:42.619
  STEP: Counting existing ResourceQuota @ 07/20/24 13:47:42.621
  STEP: Creating a ResourceQuota @ 07/20/24 13:47:47.624
  STEP: Ensuring resource quota status is calculated @ 07/20/24 13:47:47.629
  STEP: Creating a Pod that fits quota @ 07/20/24 13:47:49.633
  STEP: Ensuring ResourceQuota status captures the pod usage @ 07/20/24 13:47:49.647
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 07/20/24 13:47:51.652
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 07/20/24 13:47:51.654
  STEP: Ensuring a pod cannot update its resource requirements @ 07/20/24 13:47:51.656
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 07/20/24 13:47:51.66
  STEP: Deleting the pod @ 07/20/24 13:47:53.665
  STEP: Ensuring resource quota status released the pod usage @ 07/20/24 13:47:53.678
  Jul 20 13:47:55.682: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2219" for this suite. @ 07/20/24 13:47:55.686
• [13.093 seconds]
------------------------------
S
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:846
  STEP: Creating a kubernetes client @ 07/20/24 13:47:55.691
  Jul 20 13:47:55.691: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename services @ 07/20/24 13:47:55.692
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:47:55.704
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:47:55.708
  STEP: creating service multi-endpoint-test in namespace services-9477 @ 07/20/24 13:47:55.713
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9477 to expose endpoints map[] @ 07/20/24 13:47:55.721
  Jul 20 13:47:55.727: INFO: Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  Jul 20 13:47:56.752: INFO: successfully validated that service multi-endpoint-test in namespace services-9477 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-9477 @ 07/20/24 13:47:56.752
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9477 to expose endpoints map[pod1:[100]] @ 07/20/24 13:47:58.797
  Jul 20 13:47:58.805: INFO: successfully validated that service multi-endpoint-test in namespace services-9477 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-9477 @ 07/20/24 13:47:58.805
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9477 to expose endpoints map[pod1:[100] pod2:[101]] @ 07/20/24 13:48:00.824
  Jul 20 13:48:00.835: INFO: successfully validated that service multi-endpoint-test in namespace services-9477 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 07/20/24 13:48:00.835
  Jul 20 13:48:00.835: INFO: Creating new exec pod
  Jul 20 13:48:03.848: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=services-9477 exec execpodr2mpk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  Jul 20 13:48:03.937: INFO: stderr: "+ nc -v -t -w 2 multi-endpoint-test 80\n+ echo hostName\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  Jul 20 13:48:03.937: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul 20 13:48:03.937: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=services-9477 exec execpodr2mpk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.222 80'
  Jul 20 13:48:04.024: INFO: stderr: "+ nc -v -t -w 2 10.152.183.222 80\nConnection to 10.152.183.222 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Jul 20 13:48:04.024: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul 20 13:48:04.024: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=services-9477 exec execpodr2mpk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  Jul 20 13:48:04.110: INFO: stderr: "+ nc -v -t -w 2 multi-endpoint-test 81\n+ echo hostName\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  Jul 20 13:48:04.110: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul 20 13:48:04.110: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=services-9477 exec execpodr2mpk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.222 81'
  Jul 20 13:48:04.197: INFO: stderr: "+ nc -v -t -w 2 10.152.183.222 81\n+ echo hostName\nConnection to 10.152.183.222 81 port [tcp/*] succeeded!\n"
  Jul 20 13:48:04.197: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-9477 @ 07/20/24 13:48:04.197
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9477 to expose endpoints map[pod2:[101]] @ 07/20/24 13:48:04.219
  Jul 20 13:48:04.229: INFO: successfully validated that service multi-endpoint-test in namespace services-9477 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-9477 @ 07/20/24 13:48:04.229
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9477 to expose endpoints map[] @ 07/20/24 13:48:04.247
  Jul 20 13:48:04.253: INFO: successfully validated that service multi-endpoint-test in namespace services-9477 exposes endpoints map[]
  Jul 20 13:48:04.269: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9477" for this suite. @ 07/20/24 13:48:04.274
• [8.589 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 07/20/24 13:48:04.28
  Jul 20 13:48:04.280: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename daemonsets @ 07/20/24 13:48:04.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:48:04.296
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:48:04.299
  Jul 20 13:48:04.316: INFO: Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 07/20/24 13:48:04.321
  Jul 20 13:48:04.323: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul 20 13:48:04.323: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 07/20/24 13:48:04.323
  Jul 20 13:48:04.349: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul 20 13:48:04.349: INFO: Node ip-172-31-3-74 is running 0 daemon pod, expected 1
  Jul 20 13:48:05.349: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jul 20 13:48:05.349: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 07/20/24 13:48:05.353
  Jul 20 13:48:05.373: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jul 20 13:48:05.373: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  Jul 20 13:48:06.373: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul 20 13:48:06.373: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 07/20/24 13:48:06.373
  Jul 20 13:48:06.384: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul 20 13:48:06.384: INFO: Node ip-172-31-3-74 is running 0 daemon pod, expected 1
  Jul 20 13:48:07.384: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jul 20 13:48:07.384: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 07/20/24 13:48:07.389
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5828, will wait for the garbage collector to delete the pods @ 07/20/24 13:48:07.389
  Jul 20 13:48:07.450: INFO: Deleting DaemonSet.extensions daemon-set took: 7.152078ms
  Jul 20 13:48:07.551: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.559643ms
  Jul 20 13:48:09.054: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul 20 13:48:09.054: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jul 20 13:48:09.057: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"42071"},"items":null}

  Jul 20 13:48:09.059: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"42071"},"items":null}

  Jul 20 13:48:09.079: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5828" for this suite. @ 07/20/24 13:48:09.084
• [4.809 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 07/20/24 13:48:09.09
  Jul 20 13:48:09.090: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename runtimeclass @ 07/20/24 13:48:09.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:48:09.103
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:48:09.106
  Jul 20 13:48:11.135: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5082" for this suite. @ 07/20/24 13:48:11.138
• [2.055 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 07/20/24 13:48:11.145
  Jul 20 13:48:11.145: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename namespaces @ 07/20/24 13:48:11.145
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:48:11.16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:48:11.163
  STEP: creating a Namespace @ 07/20/24 13:48:11.166
  STEP: patching the Namespace @ 07/20/24 13:48:11.179
  STEP: get the Namespace and ensuring it has the label @ 07/20/24 13:48:11.186
  Jul 20 13:48:11.190: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9275" for this suite. @ 07/20/24 13:48:11.194
  STEP: Destroying namespace "nspatchtest-f385da0f-e956-4ade-a7c8-35ae94b72a1b-93" for this suite. @ 07/20/24 13:48:11.199
• [0.062 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 07/20/24 13:48:11.206
  Jul 20 13:48:11.206: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename webhook @ 07/20/24 13:48:11.207
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:48:11.221
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:48:11.223
  STEP: Setting up server cert @ 07/20/24 13:48:11.247
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/20/24 13:48:11.373
  STEP: Deploying the webhook pod @ 07/20/24 13:48:11.383
  STEP: Wait for the deployment to be ready @ 07/20/24 13:48:11.394
  Jul 20 13:48:11.401: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/20/24 13:48:13.413
  STEP: Verifying the service has paired with the endpoint @ 07/20/24 13:48:13.424
  Jul 20 13:48:14.424: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 07/20/24 13:48:14.431
  STEP: create a pod @ 07/20/24 13:48:14.443
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 07/20/24 13:48:16.457
  Jul 20 13:48:16.458: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=webhook-7678 attach --namespace=webhook-7678 to-be-attached-pod -i -c=container1'
  Jul 20 13:48:16.508: INFO: rc: 1
  Jul 20 13:48:16.550: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7678" for this suite. @ 07/20/24 13:48:16.555
  STEP: Destroying namespace "webhook-markers-3444" for this suite. @ 07/20/24 13:48:16.562
• [5.366 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:309
  STEP: Creating a kubernetes client @ 07/20/24 13:48:16.572
  Jul 20 13:48:16.572: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/20/24 13:48:16.572
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:48:16.586
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:48:16.589
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 07/20/24 13:48:16.591
  Jul 20 13:48:16.592: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 07/20/24 13:48:21.486
  Jul 20 13:48:21.486: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  Jul 20 13:48:22.895: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  Jul 20 13:48:27.811: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3745" for this suite. @ 07/20/24 13:48:27.818
• [11.252 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 07/20/24 13:48:27.824
  Jul 20 13:48:27.824: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename emptydir @ 07/20/24 13:48:27.825
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:48:27.841
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:48:27.844
  STEP: Creating a pod to test emptydir volume type on node default medium @ 07/20/24 13:48:27.847
  STEP: Saw pod success @ 07/20/24 13:48:31.867
  Jul 20 13:48:31.870: INFO: Trying to get logs from node ip-172-31-79-190 pod pod-512695c3-768c-4e5b-bded-6849087c7c38 container test-container: <nil>
  STEP: delete the pod @ 07/20/24 13:48:31.888
  Jul 20 13:48:31.903: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-56" for this suite. @ 07/20/24 13:48:31.906
• [4.088 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 07/20/24 13:48:31.913
  Jul 20 13:48:31.913: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename discovery @ 07/20/24 13:48:31.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:48:31.926
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:48:31.929
  STEP: Setting up server cert @ 07/20/24 13:48:31.933
  Jul 20 13:48:32.180: INFO: Checking APIGroup: apiregistration.k8s.io
  Jul 20 13:48:32.182: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  Jul 20 13:48:32.182: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
  Jul 20 13:48:32.182: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  Jul 20 13:48:32.182: INFO: Checking APIGroup: apps
  Jul 20 13:48:32.183: INFO: PreferredVersion.GroupVersion: apps/v1
  Jul 20 13:48:32.183: INFO: Versions found [{apps/v1 v1}]
  Jul 20 13:48:32.183: INFO: apps/v1 matches apps/v1
  Jul 20 13:48:32.183: INFO: Checking APIGroup: events.k8s.io
  Jul 20 13:48:32.184: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
  Jul 20 13:48:32.184: INFO: Versions found [{events.k8s.io/v1 v1}]
  Jul 20 13:48:32.184: INFO: events.k8s.io/v1 matches events.k8s.io/v1
  Jul 20 13:48:32.184: INFO: Checking APIGroup: authentication.k8s.io
  Jul 20 13:48:32.185: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
  Jul 20 13:48:32.185: INFO: Versions found [{authentication.k8s.io/v1 v1}]
  Jul 20 13:48:32.185: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
  Jul 20 13:48:32.185: INFO: Checking APIGroup: authorization.k8s.io
  Jul 20 13:48:32.186: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
  Jul 20 13:48:32.186: INFO: Versions found [{authorization.k8s.io/v1 v1}]
  Jul 20 13:48:32.186: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
  Jul 20 13:48:32.186: INFO: Checking APIGroup: autoscaling
  Jul 20 13:48:32.187: INFO: PreferredVersion.GroupVersion: autoscaling/v2
  Jul 20 13:48:32.187: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  Jul 20 13:48:32.187: INFO: autoscaling/v2 matches autoscaling/v2
  Jul 20 13:48:32.187: INFO: Checking APIGroup: batch
  Jul 20 13:48:32.188: INFO: PreferredVersion.GroupVersion: batch/v1
  Jul 20 13:48:32.188: INFO: Versions found [{batch/v1 v1}]
  Jul 20 13:48:32.188: INFO: batch/v1 matches batch/v1
  Jul 20 13:48:32.188: INFO: Checking APIGroup: certificates.k8s.io
  Jul 20 13:48:32.189: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
  Jul 20 13:48:32.189: INFO: Versions found [{certificates.k8s.io/v1 v1}]
  Jul 20 13:48:32.189: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
  Jul 20 13:48:32.189: INFO: Checking APIGroup: networking.k8s.io
  Jul 20 13:48:32.190: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
  Jul 20 13:48:32.190: INFO: Versions found [{networking.k8s.io/v1 v1}]
  Jul 20 13:48:32.190: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
  Jul 20 13:48:32.190: INFO: Checking APIGroup: policy
  Jul 20 13:48:32.191: INFO: PreferredVersion.GroupVersion: policy/v1
  Jul 20 13:48:32.191: INFO: Versions found [{policy/v1 v1}]
  Jul 20 13:48:32.191: INFO: policy/v1 matches policy/v1
  Jul 20 13:48:32.191: INFO: Checking APIGroup: rbac.authorization.k8s.io
  Jul 20 13:48:32.192: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  Jul 20 13:48:32.192: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
  Jul 20 13:48:32.192: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  Jul 20 13:48:32.192: INFO: Checking APIGroup: storage.k8s.io
  Jul 20 13:48:32.193: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
  Jul 20 13:48:32.193: INFO: Versions found [{storage.k8s.io/v1 v1}]
  Jul 20 13:48:32.193: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
  Jul 20 13:48:32.193: INFO: Checking APIGroup: admissionregistration.k8s.io
  Jul 20 13:48:32.194: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  Jul 20 13:48:32.194: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
  Jul 20 13:48:32.194: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  Jul 20 13:48:32.194: INFO: Checking APIGroup: apiextensions.k8s.io
  Jul 20 13:48:32.195: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  Jul 20 13:48:32.195: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
  Jul 20 13:48:32.195: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  Jul 20 13:48:32.195: INFO: Checking APIGroup: scheduling.k8s.io
  Jul 20 13:48:32.196: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  Jul 20 13:48:32.196: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
  Jul 20 13:48:32.196: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  Jul 20 13:48:32.196: INFO: Checking APIGroup: coordination.k8s.io
  Jul 20 13:48:32.197: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
  Jul 20 13:48:32.197: INFO: Versions found [{coordination.k8s.io/v1 v1}]
  Jul 20 13:48:32.197: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
  Jul 20 13:48:32.197: INFO: Checking APIGroup: node.k8s.io
  Jul 20 13:48:32.198: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
  Jul 20 13:48:32.198: INFO: Versions found [{node.k8s.io/v1 v1}]
  Jul 20 13:48:32.198: INFO: node.k8s.io/v1 matches node.k8s.io/v1
  Jul 20 13:48:32.198: INFO: Checking APIGroup: discovery.k8s.io
  Jul 20 13:48:32.199: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
  Jul 20 13:48:32.199: INFO: Versions found [{discovery.k8s.io/v1 v1}]
  Jul 20 13:48:32.199: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
  Jul 20 13:48:32.199: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
  Jul 20 13:48:32.200: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  Jul 20 13:48:32.200: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1 v1} {flowcontrol.apiserver.k8s.io/v1beta3 v1beta3}]
  Jul 20 13:48:32.200: INFO: flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  Jul 20 13:48:32.200: INFO: Checking APIGroup: metrics.k8s.io
  Jul 20 13:48:32.201: INFO: PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  Jul 20 13:48:32.201: INFO: Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  Jul 20 13:48:32.201: INFO: metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  Jul 20 13:48:32.201: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-3664" for this suite. @ 07/20/24 13:48:32.205
• [0.298 seconds]
------------------------------
SSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:277
  STEP: Creating a kubernetes client @ 07/20/24 13:48:32.211
  Jul 20 13:48:32.211: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename svcaccounts @ 07/20/24 13:48:32.212
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:48:32.229
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:48:32.232
  STEP: Creating a pod to test service account token:  @ 07/20/24 13:48:32.235
  STEP: Saw pod success @ 07/20/24 13:48:36.258
  Jul 20 13:48:36.262: INFO: Trying to get logs from node ip-172-31-79-190 pod test-pod-bbee5461-f613-4f60-9100-1916972693ac container agnhost-container: <nil>
  STEP: delete the pod @ 07/20/24 13:48:36.267
  Jul 20 13:48:36.283: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1327" for this suite. @ 07/20/24 13:48:36.286
• [4.083 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 07/20/24 13:48:36.294
  Jul 20 13:48:36.294: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename endpointslice @ 07/20/24 13:48:36.295
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:48:36.306
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:48:36.308
  Jul 20 13:48:36.320: INFO: Endpoints addresses: [172.31.19.200 172.31.76.81] , ports: [6443]
  Jul 20 13:48:36.320: INFO: EndpointSlices addresses: [172.31.19.200 172.31.76.81] , ports: [6443]
  Jul 20 13:48:36.320: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-8025" for this suite. @ 07/20/24 13:48:36.323
• [0.034 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 07/20/24 13:48:36.329
  Jul 20 13:48:36.329: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename dns @ 07/20/24 13:48:36.329
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:48:36.342
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:48:36.345
  STEP: Creating a test headless service @ 07/20/24 13:48:36.347
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6382.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-6382.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6382.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-6382.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-6382.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-6382.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-6382.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-6382.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-6382.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-6382.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-6382.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-6382.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 49.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.49_udp@PTR;check="$$(dig +tcp +noall +answer +search 49.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.49_tcp@PTR;sleep 1; done
   @ 07/20/24 13:48:36.364
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6382.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-6382.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6382.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-6382.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-6382.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-6382.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-6382.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-6382.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-6382.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-6382.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-6382.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-6382.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 49.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.49_udp@PTR;check="$$(dig +tcp +noall +answer +search 49.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.49_tcp@PTR;sleep 1; done
   @ 07/20/24 13:48:36.364
  STEP: creating a pod to probe DNS @ 07/20/24 13:48:36.364
  STEP: submitting the pod to kubernetes @ 07/20/24 13:48:36.364
  STEP: retrieving the pod @ 07/20/24 13:48:38.473
  STEP: looking for the results for each expected name from probers @ 07/20/24 13:48:38.476
  Jul 20 13:48:38.480: INFO: Unable to read wheezy_udp@dns-test-service.dns-6382.svc.cluster.local from pod dns-6382/dns-test-fbeaa8f1-74a5-4fe9-bcfb-642f8c23a744: the server could not find the requested resource (get pods dns-test-fbeaa8f1-74a5-4fe9-bcfb-642f8c23a744)
  Jul 20 13:48:38.484: INFO: Unable to read wheezy_tcp@dns-test-service.dns-6382.svc.cluster.local from pod dns-6382/dns-test-fbeaa8f1-74a5-4fe9-bcfb-642f8c23a744: the server could not find the requested resource (get pods dns-test-fbeaa8f1-74a5-4fe9-bcfb-642f8c23a744)
  Jul 20 13:48:38.487: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6382.svc.cluster.local from pod dns-6382/dns-test-fbeaa8f1-74a5-4fe9-bcfb-642f8c23a744: the server could not find the requested resource (get pods dns-test-fbeaa8f1-74a5-4fe9-bcfb-642f8c23a744)
  Jul 20 13:48:38.490: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6382.svc.cluster.local from pod dns-6382/dns-test-fbeaa8f1-74a5-4fe9-bcfb-642f8c23a744: the server could not find the requested resource (get pods dns-test-fbeaa8f1-74a5-4fe9-bcfb-642f8c23a744)
  Jul 20 13:48:38.504: INFO: Unable to read jessie_udp@dns-test-service.dns-6382.svc.cluster.local from pod dns-6382/dns-test-fbeaa8f1-74a5-4fe9-bcfb-642f8c23a744: the server could not find the requested resource (get pods dns-test-fbeaa8f1-74a5-4fe9-bcfb-642f8c23a744)
  Jul 20 13:48:38.506: INFO: Unable to read jessie_tcp@dns-test-service.dns-6382.svc.cluster.local from pod dns-6382/dns-test-fbeaa8f1-74a5-4fe9-bcfb-642f8c23a744: the server could not find the requested resource (get pods dns-test-fbeaa8f1-74a5-4fe9-bcfb-642f8c23a744)
  Jul 20 13:48:38.509: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6382.svc.cluster.local from pod dns-6382/dns-test-fbeaa8f1-74a5-4fe9-bcfb-642f8c23a744: the server could not find the requested resource (get pods dns-test-fbeaa8f1-74a5-4fe9-bcfb-642f8c23a744)
  Jul 20 13:48:38.512: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6382.svc.cluster.local from pod dns-6382/dns-test-fbeaa8f1-74a5-4fe9-bcfb-642f8c23a744: the server could not find the requested resource (get pods dns-test-fbeaa8f1-74a5-4fe9-bcfb-642f8c23a744)
  Jul 20 13:48:38.522: INFO: Lookups using dns-6382/dns-test-fbeaa8f1-74a5-4fe9-bcfb-642f8c23a744 failed for: [wheezy_udp@dns-test-service.dns-6382.svc.cluster.local wheezy_tcp@dns-test-service.dns-6382.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-6382.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-6382.svc.cluster.local jessie_udp@dns-test-service.dns-6382.svc.cluster.local jessie_tcp@dns-test-service.dns-6382.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-6382.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-6382.svc.cluster.local]

  Jul 20 13:48:38.528: INFO: Pod client logs for webserver: 
  Jul 20 13:48:38.532: INFO: Pod client logs for querier: 
  Jul 20 13:48:38.537: INFO: Pod client logs for jessie-querier: 
  Jul 20 13:48:43.525: INFO: DNS probes using dns-6382/dns-test-fbeaa8f1-74a5-4fe9-bcfb-642f8c23a744 succeeded

  STEP: deleting the pod @ 07/20/24 13:48:43.525
  STEP: deleting the test service @ 07/20/24 13:48:43.54
  STEP: deleting the test headless service @ 07/20/24 13:48:43.571
  Jul 20 13:48:43.583: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6382" for this suite. @ 07/20/24 13:48:43.586
• [7.263 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 07/20/24 13:48:43.592
  Jul 20 13:48:43.592: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename emptydir @ 07/20/24 13:48:43.592
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:48:43.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:48:43.609
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 07/20/24 13:48:43.611
  STEP: Saw pod success @ 07/20/24 13:48:45.63
  Jul 20 13:48:45.633: INFO: Trying to get logs from node ip-172-31-79-190 pod pod-b41e6a54-4b46-4cf1-8af9-f0d1ed4d7c69 container test-container: <nil>
  STEP: delete the pod @ 07/20/24 13:48:45.639
  Jul 20 13:48:45.654: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4617" for this suite. @ 07/20/24 13:48:45.658
• [2.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 07/20/24 13:48:45.672
  Jul 20 13:48:45.673: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename webhook @ 07/20/24 13:48:45.674
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:48:45.686
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:48:45.688
  STEP: Setting up server cert @ 07/20/24 13:48:45.712
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/20/24 13:48:46.022
  STEP: Deploying the webhook pod @ 07/20/24 13:48:46.033
  STEP: Wait for the deployment to be ready @ 07/20/24 13:48:46.044
  Jul 20 13:48:46.051: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/20/24 13:48:48.061
  STEP: Verifying the service has paired with the endpoint @ 07/20/24 13:48:48.069
  Jul 20 13:48:49.070: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 07/20/24 13:48:49.077
  STEP: create a configmap that should be updated by the webhook @ 07/20/24 13:48:49.089
  Jul 20 13:48:49.140: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2379" for this suite. @ 07/20/24 13:48:49.152
  STEP: Destroying namespace "webhook-markers-1364" for this suite. @ 07/20/24 13:48:49.157
• [3.491 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 07/20/24 13:48:49.162
  Jul 20 13:48:49.162: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename projected @ 07/20/24 13:48:49.163
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:48:49.177
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:48:49.18
  STEP: Creating configMap with name projected-configmap-test-volume-216db0b4-56dd-43f6-bd89-e93dc5127513 @ 07/20/24 13:48:49.182
  STEP: Creating a pod to test consume configMaps @ 07/20/24 13:48:49.186
  STEP: Saw pod success @ 07/20/24 13:48:53.208
  Jul 20 13:48:53.211: INFO: Trying to get logs from node ip-172-31-79-190 pod pod-projected-configmaps-3a20e862-7839-4439-aff6-2db4aeae7fc5 container agnhost-container: <nil>
  STEP: delete the pod @ 07/20/24 13:48:53.217
  Jul 20 13:48:53.233: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2632" for this suite. @ 07/20/24 13:48:53.236
• [4.079 seconds]
------------------------------
SS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 07/20/24 13:48:53.242
  Jul 20 13:48:53.242: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename proxy @ 07/20/24 13:48:53.243
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:48:53.256
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:48:53.259
  Jul 20 13:48:53.261: INFO: Creating pod...
  Jul 20 13:48:55.276: INFO: Creating service...
  Jul 20 13:48:55.284: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2076/pods/agnhost/proxy/some/path/with/DELETE
  Jul 20 13:48:55.295: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Jul 20 13:48:55.295: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2076/pods/agnhost/proxy/some/path/with/GET
  Jul 20 13:48:55.297: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Jul 20 13:48:55.297: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2076/pods/agnhost/proxy/some/path/with/HEAD
  Jul 20 13:48:55.300: INFO: http.Client request:HEAD | StatusCode:200
  Jul 20 13:48:55.300: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2076/pods/agnhost/proxy/some/path/with/OPTIONS
  Jul 20 13:48:55.302: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Jul 20 13:48:55.302: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2076/pods/agnhost/proxy/some/path/with/PATCH
  Jul 20 13:48:55.305: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Jul 20 13:48:55.305: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2076/pods/agnhost/proxy/some/path/with/POST
  Jul 20 13:48:55.307: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Jul 20 13:48:55.307: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2076/pods/agnhost/proxy/some/path/with/PUT
  Jul 20 13:48:55.310: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Jul 20 13:48:55.310: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2076/services/test-service/proxy/some/path/with/DELETE
  Jul 20 13:48:55.314: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Jul 20 13:48:55.314: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2076/services/test-service/proxy/some/path/with/GET
  Jul 20 13:48:55.318: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Jul 20 13:48:55.318: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2076/services/test-service/proxy/some/path/with/HEAD
  Jul 20 13:48:55.322: INFO: http.Client request:HEAD | StatusCode:200
  Jul 20 13:48:55.322: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2076/services/test-service/proxy/some/path/with/OPTIONS
  Jul 20 13:48:55.326: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Jul 20 13:48:55.326: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2076/services/test-service/proxy/some/path/with/PATCH
  Jul 20 13:48:55.330: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Jul 20 13:48:55.330: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2076/services/test-service/proxy/some/path/with/POST
  Jul 20 13:48:55.334: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Jul 20 13:48:55.334: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2076/services/test-service/proxy/some/path/with/PUT
  Jul 20 13:48:55.338: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Jul 20 13:48:55.338: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-2076" for this suite. @ 07/20/24 13:48:55.341
• [2.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 07/20/24 13:48:55.349
  Jul 20 13:48:55.349: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename projected @ 07/20/24 13:48:55.349
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:48:55.361
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:48:55.364
  STEP: Creating a pod to test downward API volume plugin @ 07/20/24 13:48:55.367
  STEP: Saw pod success @ 07/20/24 13:48:59.391
  Jul 20 13:48:59.394: INFO: Trying to get logs from node ip-172-31-79-190 pod downwardapi-volume-95afdfe5-a35b-466e-9774-4582f1df611b container client-container: <nil>
  STEP: delete the pod @ 07/20/24 13:48:59.399
  Jul 20 13:48:59.414: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1041" for this suite. @ 07/20/24 13:48:59.417
• [4.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 07/20/24 13:48:59.423
  Jul 20 13:48:59.423: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename projected @ 07/20/24 13:48:59.423
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:48:59.437
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:48:59.439
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-7a121f6d-8f24-4401-ac0a-27370ec72f7a @ 07/20/24 13:48:59.445
  STEP: Creating the pod @ 07/20/24 13:48:59.45
  STEP: Updating configmap projected-configmap-test-upd-7a121f6d-8f24-4401-ac0a-27370ec72f7a @ 07/20/24 13:49:01.483
  STEP: waiting to observe update in volume @ 07/20/24 13:49:01.486
  Jul 20 13:49:05.506: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4374" for this suite. @ 07/20/24 13:49:05.51
• [6.093 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 07/20/24 13:49:05.516
  Jul 20 13:49:05.516: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 07/20/24 13:49:05.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:49:05.531
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:49:05.533
  STEP: creating a target pod @ 07/20/24 13:49:05.536
  STEP: adding an ephemeral container @ 07/20/24 13:49:07.557
  STEP: checking pod container endpoints @ 07/20/24 13:49:09.574
  Jul 20 13:49:09.574: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-7059 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 20 13:49:09.574: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  Jul 20 13:49:09.574: INFO: ExecWithOptions: Clientset creation
  Jul 20 13:49:09.574: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-7059/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Jul 20 13:49:09.621: INFO: Exec stderr: ""
  Jul 20 13:49:09.626: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-7059" for this suite. @ 07/20/24 13:49:09.629
• [4.120 seconds]
------------------------------
S
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 07/20/24 13:49:09.635
  Jul 20 13:49:09.635: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename proxy @ 07/20/24 13:49:09.636
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:49:09.655
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:49:09.657
  Jul 20 13:49:09.660: INFO: Creating pod...
  Jul 20 13:49:11.679: INFO: Creating service...
  Jul 20 13:49:11.691: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5393/pods/agnhost/proxy?method=DELETE
  Jul 20 13:49:11.700: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Jul 20 13:49:11.700: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5393/pods/agnhost/proxy?method=OPTIONS
  Jul 20 13:49:11.703: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Jul 20 13:49:11.703: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5393/pods/agnhost/proxy?method=PATCH
  Jul 20 13:49:11.705: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Jul 20 13:49:11.706: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5393/pods/agnhost/proxy?method=POST
  Jul 20 13:49:11.708: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Jul 20 13:49:11.708: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5393/pods/agnhost/proxy?method=PUT
  Jul 20 13:49:11.711: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Jul 20 13:49:11.711: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5393/services/e2e-proxy-test-service/proxy?method=DELETE
  Jul 20 13:49:11.716: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Jul 20 13:49:11.716: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5393/services/e2e-proxy-test-service/proxy?method=OPTIONS
  Jul 20 13:49:11.720: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Jul 20 13:49:11.720: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5393/services/e2e-proxy-test-service/proxy?method=PATCH
  Jul 20 13:49:11.724: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Jul 20 13:49:11.724: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5393/services/e2e-proxy-test-service/proxy?method=POST
  Jul 20 13:49:11.728: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Jul 20 13:49:11.728: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5393/services/e2e-proxy-test-service/proxy?method=PUT
  Jul 20 13:49:11.732: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Jul 20 13:49:11.732: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5393/pods/agnhost/proxy?method=GET
  Jul 20 13:49:11.734: INFO: http.Client request:GET StatusCode:301
  Jul 20 13:49:11.734: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5393/services/e2e-proxy-test-service/proxy?method=GET
  Jul 20 13:49:11.738: INFO: http.Client request:GET StatusCode:301
  Jul 20 13:49:11.738: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5393/pods/agnhost/proxy?method=HEAD
  Jul 20 13:49:11.740: INFO: http.Client request:HEAD StatusCode:301
  Jul 20 13:49:11.740: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5393/services/e2e-proxy-test-service/proxy?method=HEAD
  Jul 20 13:49:11.745: INFO: http.Client request:HEAD StatusCode:301
  Jul 20 13:49:11.745: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-5393" for this suite. @ 07/20/24 13:49:11.748
• [2.118 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 07/20/24 13:49:11.754
  Jul 20 13:49:11.754: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename podtemplate @ 07/20/24 13:49:11.754
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:49:11.768
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:49:11.771
  Jul 20 13:49:11.800: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-8313" for this suite. @ 07/20/24 13:49:11.802
• [0.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 07/20/24 13:49:11.808
  Jul 20 13:49:11.808: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename containers @ 07/20/24 13:49:11.809
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:49:11.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:49:11.826
  STEP: Creating a pod to test override arguments @ 07/20/24 13:49:11.829
  STEP: Saw pod success @ 07/20/24 13:49:15.853
  Jul 20 13:49:15.857: INFO: Trying to get logs from node ip-172-31-25-173 pod client-containers-634bdabf-fbab-4002-a8e5-8dd2d78e9da5 container agnhost-container: <nil>
  STEP: delete the pod @ 07/20/24 13:49:15.863
  Jul 20 13:49:15.878: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-7075" for this suite. @ 07/20/24 13:49:15.881
• [4.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 07/20/24 13:49:15.887
  Jul 20 13:49:15.887: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename projected @ 07/20/24 13:49:15.888
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:49:15.901
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:49:15.904
  STEP: Creating the pod @ 07/20/24 13:49:15.909
  Jul 20 13:49:18.448: INFO: Successfully updated pod "labelsupdated5eabc41-51ab-442f-a6bc-48aa3ea1daca"
  Jul 20 13:49:22.469: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4242" for this suite. @ 07/20/24 13:49:22.472
• [6.593 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 07/20/24 13:49:22.481
  Jul 20 13:49:22.481: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename replicaset @ 07/20/24 13:49:22.481
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:49:22.496
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:49:22.499
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 07/20/24 13:49:22.502
  STEP: When a replicaset with a matching selector is created @ 07/20/24 13:49:24.518
  STEP: Then the orphan pod is adopted @ 07/20/24 13:49:24.523
  STEP: When the matched label of one of its pods change @ 07/20/24 13:49:25.531
  Jul 20 13:49:25.534: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 07/20/24 13:49:25.543
  Jul 20 13:49:26.552: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4218" for this suite. @ 07/20/24 13:49:26.555
• [4.080 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:76
  STEP: Creating a kubernetes client @ 07/20/24 13:49:26.561
  Jul 20 13:49:26.561: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename var-expansion @ 07/20/24 13:49:26.562
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:49:26.575
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:49:26.578
  STEP: Creating a pod to test substitution in container's command @ 07/20/24 13:49:26.581
  STEP: Saw pod success @ 07/20/24 13:49:30.601
  Jul 20 13:49:30.604: INFO: Trying to get logs from node ip-172-31-25-173 pod var-expansion-c39a9831-6a5c-4fbb-bcfc-666e01f62f48 container dapi-container: <nil>
  STEP: delete the pod @ 07/20/24 13:49:30.609
  Jul 20 13:49:30.624: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9045" for this suite. @ 07/20/24 13:49:30.628
• [4.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 07/20/24 13:49:30.634
  Jul 20 13:49:30.634: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename podtemplate @ 07/20/24 13:49:30.634
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:49:30.646
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:49:30.648
  STEP: Create set of pod templates @ 07/20/24 13:49:30.651
  Jul 20 13:49:30.655: INFO: created test-podtemplate-1
  Jul 20 13:49:30.661: INFO: created test-podtemplate-2
  Jul 20 13:49:30.664: INFO: created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 07/20/24 13:49:30.664
  STEP: delete collection of pod templates @ 07/20/24 13:49:30.667
  Jul 20 13:49:30.667: INFO: requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 07/20/24 13:49:30.681
  Jul 20 13:49:30.681: INFO: requesting list of pod templates to confirm quantity
  Jul 20 13:49:30.683: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-6822" for this suite. @ 07/20/24 13:49:30.686
• [0.057 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 07/20/24 13:49:30.691
  Jul 20 13:49:30.691: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename webhook @ 07/20/24 13:49:30.692
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:49:30.757
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:49:30.76
  STEP: Setting up server cert @ 07/20/24 13:49:30.779
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/20/24 13:49:31.233
  STEP: Deploying the webhook pod @ 07/20/24 13:49:31.24
  STEP: Wait for the deployment to be ready @ 07/20/24 13:49:31.252
  Jul 20 13:49:31.257: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/20/24 13:49:33.268
  STEP: Verifying the service has paired with the endpoint @ 07/20/24 13:49:33.275
  Jul 20 13:49:34.276: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 07/20/24 13:49:34.342
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/20/24 13:49:34.367
  STEP: Deleting the collection of validation webhooks @ 07/20/24 13:49:34.388
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/20/24 13:49:34.427
  Jul 20 13:49:34.473: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9984" for this suite. @ 07/20/24 13:49:34.476
  STEP: Destroying namespace "webhook-markers-6116" for this suite. @ 07/20/24 13:49:34.485
• [3.801 seconds]
------------------------------
S
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:784
  STEP: Creating a kubernetes client @ 07/20/24 13:49:34.493
  Jul 20 13:49:34.493: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename job @ 07/20/24 13:49:34.493
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:49:34.507
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:49:34.509
  STEP: Creating a job @ 07/20/24 13:49:34.512
  STEP: Ensure pods equal to parallelism count is attached to the job @ 07/20/24 13:49:34.516
  STEP: patching /status @ 07/20/24 13:49:36.522
  STEP: updating /status @ 07/20/24 13:49:36.531
  STEP: get /status @ 07/20/24 13:49:36.537
  Jul 20 13:49:36.540: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5536" for this suite. @ 07/20/24 13:49:36.543
• [2.057 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 07/20/24 13:49:36.549
  Jul 20 13:49:36.549: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename gc @ 07/20/24 13:49:36.55
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:49:36.562
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:49:36.566
  STEP: create the rc1 @ 07/20/24 13:49:36.571
  STEP: create the rc2 @ 07/20/24 13:49:36.577
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 07/20/24 13:49:42.588
  STEP: delete the rc simpletest-rc-to-be-deleted @ 07/20/24 13:49:43.08
  STEP: wait for the rc to be deleted @ 07/20/24 13:49:43.093
  Jul 20 13:49:48.101: INFO: 59 pods remaining
  Jul 20 13:49:48.101: INFO: 59 pods has nil DeletionTimestamp
  Jul 20 13:49:48.101: INFO: 
  STEP: Gathering metrics @ 07/20/24 13:49:53.105
  W0720 13:49:53.114017      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Jul 20 13:49:53.114: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jul 20 13:49:53.114: INFO: Deleting pod "simpletest-rc-to-be-deleted-2zk7v" in namespace "gc-5525"
  Jul 20 13:49:53.129: INFO: Deleting pod "simpletest-rc-to-be-deleted-46v26" in namespace "gc-5525"
  Jul 20 13:49:53.143: INFO: Deleting pod "simpletest-rc-to-be-deleted-48zb5" in namespace "gc-5525"
  Jul 20 13:49:53.155: INFO: Deleting pod "simpletest-rc-to-be-deleted-4wpqr" in namespace "gc-5525"
  Jul 20 13:49:53.168: INFO: Deleting pod "simpletest-rc-to-be-deleted-5c77v" in namespace "gc-5525"
  Jul 20 13:49:53.182: INFO: Deleting pod "simpletest-rc-to-be-deleted-5hqgt" in namespace "gc-5525"
  Jul 20 13:49:53.195: INFO: Deleting pod "simpletest-rc-to-be-deleted-6jvg5" in namespace "gc-5525"
  Jul 20 13:49:53.208: INFO: Deleting pod "simpletest-rc-to-be-deleted-6lcnk" in namespace "gc-5525"
  Jul 20 13:49:53.221: INFO: Deleting pod "simpletest-rc-to-be-deleted-6sqq9" in namespace "gc-5525"
  Jul 20 13:49:53.233: INFO: Deleting pod "simpletest-rc-to-be-deleted-7bhnd" in namespace "gc-5525"
  Jul 20 13:49:53.246: INFO: Deleting pod "simpletest-rc-to-be-deleted-7jqnk" in namespace "gc-5525"
  Jul 20 13:49:53.258: INFO: Deleting pod "simpletest-rc-to-be-deleted-8h7wf" in namespace "gc-5525"
  Jul 20 13:49:53.270: INFO: Deleting pod "simpletest-rc-to-be-deleted-8jrkq" in namespace "gc-5525"
  Jul 20 13:49:53.282: INFO: Deleting pod "simpletest-rc-to-be-deleted-8n4gg" in namespace "gc-5525"
  Jul 20 13:49:53.299: INFO: Deleting pod "simpletest-rc-to-be-deleted-8t9s4" in namespace "gc-5525"
  Jul 20 13:49:53.310: INFO: Deleting pod "simpletest-rc-to-be-deleted-8tdpv" in namespace "gc-5525"
  Jul 20 13:49:53.323: INFO: Deleting pod "simpletest-rc-to-be-deleted-8tstv" in namespace "gc-5525"
  Jul 20 13:49:53.335: INFO: Deleting pod "simpletest-rc-to-be-deleted-9bnzj" in namespace "gc-5525"
  Jul 20 13:49:53.347: INFO: Deleting pod "simpletest-rc-to-be-deleted-9j8ch" in namespace "gc-5525"
  Jul 20 13:49:53.359: INFO: Deleting pod "simpletest-rc-to-be-deleted-9s7gs" in namespace "gc-5525"
  Jul 20 13:49:53.371: INFO: Deleting pod "simpletest-rc-to-be-deleted-9wd46" in namespace "gc-5525"
  Jul 20 13:49:53.383: INFO: Deleting pod "simpletest-rc-to-be-deleted-b8src" in namespace "gc-5525"
  Jul 20 13:49:53.394: INFO: Deleting pod "simpletest-rc-to-be-deleted-bgtdj" in namespace "gc-5525"
  Jul 20 13:49:53.406: INFO: Deleting pod "simpletest-rc-to-be-deleted-bh759" in namespace "gc-5525"
  Jul 20 13:49:53.418: INFO: Deleting pod "simpletest-rc-to-be-deleted-br252" in namespace "gc-5525"
  Jul 20 13:49:53.431: INFO: Deleting pod "simpletest-rc-to-be-deleted-cq5rc" in namespace "gc-5525"
  Jul 20 13:49:53.448: INFO: Deleting pod "simpletest-rc-to-be-deleted-ctkjs" in namespace "gc-5525"
  Jul 20 13:49:53.460: INFO: Deleting pod "simpletest-rc-to-be-deleted-ctssv" in namespace "gc-5525"
  Jul 20 13:49:53.487: INFO: Deleting pod "simpletest-rc-to-be-deleted-dc7sx" in namespace "gc-5525"
  Jul 20 13:49:53.502: INFO: Deleting pod "simpletest-rc-to-be-deleted-dkhpx" in namespace "gc-5525"
  Jul 20 13:49:53.516: INFO: Deleting pod "simpletest-rc-to-be-deleted-dv9sz" in namespace "gc-5525"
  Jul 20 13:49:53.528: INFO: Deleting pod "simpletest-rc-to-be-deleted-fcqkk" in namespace "gc-5525"
  Jul 20 13:49:53.540: INFO: Deleting pod "simpletest-rc-to-be-deleted-fjmrd" in namespace "gc-5525"
  Jul 20 13:49:53.553: INFO: Deleting pod "simpletest-rc-to-be-deleted-frr94" in namespace "gc-5525"
  Jul 20 13:49:53.563: INFO: Deleting pod "simpletest-rc-to-be-deleted-fxrkw" in namespace "gc-5525"
  Jul 20 13:49:53.579: INFO: Deleting pod "simpletest-rc-to-be-deleted-fzjqn" in namespace "gc-5525"
  Jul 20 13:49:53.591: INFO: Deleting pod "simpletest-rc-to-be-deleted-g5xgv" in namespace "gc-5525"
  Jul 20 13:49:53.603: INFO: Deleting pod "simpletest-rc-to-be-deleted-gbkvb" in namespace "gc-5525"
  Jul 20 13:49:53.617: INFO: Deleting pod "simpletest-rc-to-be-deleted-gdl4g" in namespace "gc-5525"
  Jul 20 13:49:53.629: INFO: Deleting pod "simpletest-rc-to-be-deleted-gfltc" in namespace "gc-5525"
  Jul 20 13:49:53.647: INFO: Deleting pod "simpletest-rc-to-be-deleted-gqvj7" in namespace "gc-5525"
  Jul 20 13:49:53.661: INFO: Deleting pod "simpletest-rc-to-be-deleted-gvx7c" in namespace "gc-5525"
  Jul 20 13:49:53.689: INFO: Deleting pod "simpletest-rc-to-be-deleted-h7hmf" in namespace "gc-5525"
  Jul 20 13:49:53.703: INFO: Deleting pod "simpletest-rc-to-be-deleted-hqjxv" in namespace "gc-5525"
  Jul 20 13:49:53.722: INFO: Deleting pod "simpletest-rc-to-be-deleted-hqk7n" in namespace "gc-5525"
  Jul 20 13:49:53.735: INFO: Deleting pod "simpletest-rc-to-be-deleted-j2gl6" in namespace "gc-5525"
  Jul 20 13:49:53.747: INFO: Deleting pod "simpletest-rc-to-be-deleted-j6dkp" in namespace "gc-5525"
  Jul 20 13:49:53.759: INFO: Deleting pod "simpletest-rc-to-be-deleted-j8cdq" in namespace "gc-5525"
  Jul 20 13:49:53.774: INFO: Deleting pod "simpletest-rc-to-be-deleted-jgbqg" in namespace "gc-5525"
  Jul 20 13:49:53.789: INFO: Deleting pod "simpletest-rc-to-be-deleted-k6p9f" in namespace "gc-5525"
  Jul 20 13:49:53.802: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5525" for this suite. @ 07/20/24 13:49:53.807
• [17.264 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 07/20/24 13:49:53.815
  Jul 20 13:49:53.815: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename configmap @ 07/20/24 13:49:53.816
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:49:53.833
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:49:53.837
  Jul 20 13:49:53.879: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5646" for this suite. @ 07/20/24 13:49:53.883
• [0.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:447
  STEP: Creating a kubernetes client @ 07/20/24 13:49:53.889
  Jul 20 13:49:53.889: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename sched-pred @ 07/20/24 13:49:53.89
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:49:53.908
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:49:53.911
  Jul 20 13:49:53.914: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Jul 20 13:49:53.919: INFO: Waiting for terminating namespaces to be deleted...
  Jul 20 13:49:53.922: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-25-173 before test
  Jul 20 13:49:53.926: INFO: nginx-ingress-controller-kubernetes-worker-rj7j7 from ingress-nginx-kubernetes-worker started at 2024-07-20 12:06:00 +0000 UTC (1 container statuses recorded)
  Jul 20 13:49:53.926: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jul 20 13:49:53.926: INFO: calico-node-zlt4r from kube-system started at 2024-07-20 12:09:35 +0000 UTC (1 container statuses recorded)
  Jul 20 13:49:53.926: INFO: 	Container calico-node ready: true, restart count 0
  Jul 20 13:49:53.926: INFO: sonobuoy-e2e-job-b5db9657854845c0 from sonobuoy started at 2024-07-20 12:11:23 +0000 UTC (2 container statuses recorded)
  Jul 20 13:49:53.926: INFO: 	Container e2e ready: true, restart count 0
  Jul 20 13:49:53.926: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jul 20 13:49:53.926: INFO: sonobuoy-systemd-logs-daemon-set-eaeef1be74044e0f-stlh6 from sonobuoy started at 2024-07-20 12:11:23 +0000 UTC (2 container statuses recorded)
  Jul 20 13:49:53.926: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jul 20 13:49:53.926: INFO: 	Container systemd-logs ready: true, restart count 0
  Jul 20 13:49:53.926: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-3-74 before test
  Jul 20 13:49:53.940: INFO: nginx-ingress-controller-kubernetes-worker-pl5dm from ingress-nginx-kubernetes-worker started at 2024-07-20 12:05:02 +0000 UTC (1 container statuses recorded)
  Jul 20 13:49:53.940: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jul 20 13:49:53.940: INFO: calico-node-jj9gt from kube-system started at 2024-07-20 12:09:25 +0000 UTC (1 container statuses recorded)
  Jul 20 13:49:53.940: INFO: 	Container calico-node ready: true, restart count 0
  Jul 20 13:49:53.940: INFO: coredns-bddfd76d7-tsxnn from kube-system started at 2024-07-20 12:05:01 +0000 UTC (1 container statuses recorded)
  Jul 20 13:49:53.940: INFO: 	Container coredns ready: true, restart count 0
  Jul 20 13:49:53.940: INFO: kube-state-metrics-6f48cdd76-rvxkr from kube-system started at 2024-07-20 12:05:01 +0000 UTC (1 container statuses recorded)
  Jul 20 13:49:53.940: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Jul 20 13:49:53.940: INFO: metrics-server-v0.6.3-69d7fbfdf8-pmcp9 from kube-system started at 2024-07-20 12:05:01 +0000 UTC (2 container statuses recorded)
  Jul 20 13:49:53.940: INFO: 	Container metrics-server ready: true, restart count 0
  Jul 20 13:49:53.940: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Jul 20 13:49:53.940: INFO: dashboard-metrics-scraper-5dd7cb5fc-zdfwg from kubernetes-dashboard started at 2024-07-20 12:05:01 +0000 UTC (1 container statuses recorded)
  Jul 20 13:49:53.940: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Jul 20 13:49:53.941: INFO: kubernetes-dashboard-7b899cb9d9-v2smr from kubernetes-dashboard started at 2024-07-20 12:05:01 +0000 UTC (1 container statuses recorded)
  Jul 20 13:49:53.941: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Jul 20 13:49:53.941: INFO: sonobuoy-systemd-logs-daemon-set-eaeef1be74044e0f-wnr5n from sonobuoy started at 2024-07-20 12:11:23 +0000 UTC (2 container statuses recorded)
  Jul 20 13:49:53.941: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jul 20 13:49:53.941: INFO: 	Container systemd-logs ready: true, restart count 0
  Jul 20 13:49:53.941: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-79-190 before test
  Jul 20 13:49:53.945: INFO: nginx-ingress-controller-kubernetes-worker-f8hsn from ingress-nginx-kubernetes-worker started at 2024-07-20 13:32:52 +0000 UTC (1 container statuses recorded)
  Jul 20 13:49:53.945: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jul 20 13:49:53.945: INFO: calico-node-fxs4g from kube-system started at 2024-07-20 12:09:45 +0000 UTC (1 container statuses recorded)
  Jul 20 13:49:53.945: INFO: 	Container calico-node ready: true, restart count 0
  Jul 20 13:49:53.945: INFO: sonobuoy from sonobuoy started at 2024-07-20 12:11:21 +0000 UTC (1 container statuses recorded)
  Jul 20 13:49:53.945: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Jul 20 13:49:53.945: INFO: sonobuoy-systemd-logs-daemon-set-eaeef1be74044e0f-qfbvq from sonobuoy started at 2024-07-20 12:11:23 +0000 UTC (2 container statuses recorded)
  Jul 20 13:49:53.945: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jul 20 13:49:53.945: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 07/20/24 13:49:53.945
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.17e3f006a84e62a1], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/5 nodes are available: 5 Preemption is not helpful for scheduling.] @ 07/20/24 13:49:53.981
  Jul 20 13:49:55.040: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-3334" for this suite. @ 07/20/24 13:49:55.045
• [1.162 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 07/20/24 13:49:55.052
  Jul 20 13:49:55.052: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename projected @ 07/20/24 13:49:55.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:49:55.071
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:49:55.074
  STEP: Creating a pod to test downward API volume plugin @ 07/20/24 13:49:55.081
  STEP: Saw pod success @ 07/20/24 13:49:59.105
  Jul 20 13:49:59.109: INFO: Trying to get logs from node ip-172-31-79-190 pod downwardapi-volume-73085c9e-4f7d-403a-a2aa-546a624c63c4 container client-container: <nil>
  STEP: delete the pod @ 07/20/24 13:49:59.114
  Jul 20 13:49:59.128: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1717" for this suite. @ 07/20/24 13:49:59.13
• [4.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 07/20/24 13:49:59.138
  Jul 20 13:49:59.138: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename discovery @ 07/20/24 13:49:59.138
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:49:59.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:49:59.157
  STEP: Setting up server cert @ 07/20/24 13:49:59.161
  STEP: Requesting APIResourceList from "/api/v1" @ 07/20/24 13:49:59.351
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 07/20/24 13:49:59.352
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 07/20/24 13:49:59.354
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 07/20/24 13:49:59.355
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 07/20/24 13:49:59.356
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 07/20/24 13:49:59.357
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 07/20/24 13:49:59.358
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 07/20/24 13:49:59.359
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 07/20/24 13:49:59.36
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 07/20/24 13:49:59.361
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 07/20/24 13:49:59.362
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 07/20/24 13:49:59.363
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 07/20/24 13:49:59.364
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 07/20/24 13:49:59.365
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 07/20/24 13:49:59.366
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 07/20/24 13:49:59.367
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 07/20/24 13:49:59.367
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 07/20/24 13:49:59.369
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 07/20/24 13:49:59.37
  Jul 20 13:49:59.371: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-1702" for this suite. @ 07/20/24 13:49:59.374
• [0.244 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 07/20/24 13:49:59.382
  Jul 20 13:49:59.382: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename downward-api @ 07/20/24 13:49:59.383
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:49:59.395
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:49:59.398
  STEP: Creating the pod @ 07/20/24 13:49:59.401
  Jul 20 13:50:01.939: INFO: Successfully updated pod "annotationupdate81f6920a-974d-456c-a348-de2751bc91d9"
  Jul 20 13:50:05.959: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-496" for this suite. @ 07/20/24 13:50:05.963
• [6.587 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 07/20/24 13:50:05.969
  Jul 20 13:50:05.969: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename daemonsets @ 07/20/24 13:50:05.97
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:50:05.985
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:50:05.988
  STEP: Creating simple DaemonSet "daemon-set" @ 07/20/24 13:50:06.006
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/20/24 13:50:06.011
  Jul 20 13:50:06.014: INFO: DaemonSet pods can't tolerate node ip-172-31-19-200 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 20 13:50:06.014: INFO: DaemonSet pods can't tolerate node ip-172-31-76-81 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 20 13:50:06.017: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul 20 13:50:06.017: INFO: Node ip-172-31-25-173 is running 0 daemon pod, expected 1
  Jul 20 13:50:07.015: INFO: DaemonSet pods can't tolerate node ip-172-31-19-200 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 20 13:50:07.015: INFO: DaemonSet pods can't tolerate node ip-172-31-76-81 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 20 13:50:07.019: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jul 20 13:50:07.019: INFO: Node ip-172-31-25-173 is running 0 daemon pod, expected 1
  Jul 20 13:50:08.016: INFO: DaemonSet pods can't tolerate node ip-172-31-19-200 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 20 13:50:08.016: INFO: DaemonSet pods can't tolerate node ip-172-31-76-81 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 20 13:50:08.019: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jul 20 13:50:08.019: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 07/20/24 13:50:08.022
  STEP: DeleteCollection of the DaemonSets @ 07/20/24 13:50:08.025
  STEP: Verify that ReplicaSets have been deleted @ 07/20/24 13:50:08.031
  Jul 20 13:50:08.041: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"46050"},"items":null}

  Jul 20 13:50:08.049: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"46051"},"items":[{"metadata":{"name":"daemon-set-8f5s6","generateName":"daemon-set-","namespace":"daemonsets-2337","uid":"dd35f7d1-003c-45f9-bdde-97b0522e114d","resourceVersion":"46042","creationTimestamp":"2024-07-20T13:50:06Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"3d18dd4a-cb63-4176-8ed9-8dd4dbacba35","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-07-20T13:50:06Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"3d18dd4a-cb63-4176-8ed9-8dd4dbacba35\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-07-20T13:50:06Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.120.239\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-lzmgn","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-lzmgn","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-79-190","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-79-190"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-20T13:50:06Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-20T13:50:06Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-20T13:50:06Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-20T13:50:06Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-20T13:50:06Z"}],"hostIP":"172.31.79.190","hostIPs":[{"ip":"172.31.79.190"}],"podIP":"192.168.120.239","podIPs":[{"ip":"192.168.120.239"}],"startTime":"2024-07-20T13:50:06Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-07-20T13:50:06Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://8756f1f7bebfbe5577d781e4b1fbf932ed1c1e652487f38d284d22274873763e","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-g69gh","generateName":"daemon-set-","namespace":"daemonsets-2337","uid":"b65b405f-8ad1-42bc-a0ad-247bc2cfd0fd","resourceVersion":"46046","creationTimestamp":"2024-07-20T13:50:06Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"3d18dd4a-cb63-4176-8ed9-8dd4dbacba35","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-07-20T13:50:06Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"3d18dd4a-cb63-4176-8ed9-8dd4dbacba35\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-07-20T13:50:07Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.15.90\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-64kvk","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-64kvk","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-3-74","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-3-74"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-20T13:50:07Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-20T13:50:06Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-20T13:50:07Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-20T13:50:07Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-20T13:50:06Z"}],"hostIP":"172.31.3.74","hostIPs":[{"ip":"172.31.3.74"}],"podIP":"192.168.15.90","podIPs":[{"ip":"192.168.15.90"}],"startTime":"2024-07-20T13:50:06Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-07-20T13:50:06Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://d7cd0912b47f9a9c5fe7615711c9b089876d16ee2610b9e069aa71f1d5828fcd","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-shzts","generateName":"daemon-set-","namespace":"daemonsets-2337","uid":"204e8fb3-63a1-4b70-9007-778690204b44","resourceVersion":"46051","creationTimestamp":"2024-07-20T13:50:06Z","deletionTimestamp":"2024-07-20T13:50:38Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"3d18dd4a-cb63-4176-8ed9-8dd4dbacba35","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-07-20T13:50:06Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"3d18dd4a-cb63-4176-8ed9-8dd4dbacba35\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-07-20T13:50:07Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.245.227\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-4d4pt","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-4d4pt","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-25-173","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-25-173"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-20T13:50:07Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-20T13:50:06Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-20T13:50:07Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-20T13:50:07Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-20T13:50:06Z"}],"hostIP":"172.31.25.173","hostIPs":[{"ip":"172.31.25.173"}],"podIP":"192.168.245.227","podIPs":[{"ip":"192.168.245.227"}],"startTime":"2024-07-20T13:50:06Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-07-20T13:50:06Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://0b126a4345d24c06ca702d7bcae80815c44df0a665e59fee83f5b2e4550edca9","started":true}],"qosClass":"BestEffort"}}]}

  Jul 20 13:50:08.061: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2337" for this suite. @ 07/20/24 13:50:08.066
• [2.102 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 07/20/24 13:50:08.071
  Jul 20 13:50:08.071: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename deployment @ 07/20/24 13:50:08.072
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:50:08.086
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:50:08.088
  Jul 20 13:50:08.097: INFO: Pod name rollover-pod: Found 0 pods out of 1
  Jul 20 13:50:13.102: INFO: Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/20/24 13:50:13.102
  Jul 20 13:50:13.103: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
  Jul 20 13:50:15.106: INFO: Creating deployment "test-rollover-deployment"
  Jul 20 13:50:15.114: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
  Jul 20 13:50:17.122: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
  Jul 20 13:50:17.128: INFO: Ensure that both replica sets have 1 created replica
  Jul 20 13:50:17.134: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  Jul 20 13:50:17.141: INFO: Updating deployment test-rollover-deployment
  Jul 20 13:50:17.141: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  Jul 20 13:50:19.152: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
  Jul 20 13:50:19.158: INFO: Make sure deployment "test-rollover-deployment" is complete
  Jul 20 13:50:19.163: INFO: all replica sets need to contain the pod-template-hash label
  Jul 20 13:50:19.163: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.July, 20, 13, 50, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 20, 13, 50, 15, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 20, 13, 50, 18, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 20, 13, 50, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jul 20 13:50:21.172: INFO: all replica sets need to contain the pod-template-hash label
  Jul 20 13:50:21.172: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.July, 20, 13, 50, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 20, 13, 50, 15, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 20, 13, 50, 18, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 20, 13, 50, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jul 20 13:50:23.170: INFO: all replica sets need to contain the pod-template-hash label
  Jul 20 13:50:23.170: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.July, 20, 13, 50, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 20, 13, 50, 15, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 20, 13, 50, 18, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 20, 13, 50, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jul 20 13:50:25.171: INFO: all replica sets need to contain the pod-template-hash label
  Jul 20 13:50:25.171: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.July, 20, 13, 50, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 20, 13, 50, 15, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 20, 13, 50, 18, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 20, 13, 50, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jul 20 13:50:27.171: INFO: all replica sets need to contain the pod-template-hash label
  Jul 20 13:50:27.171: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.July, 20, 13, 50, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 20, 13, 50, 15, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 20, 13, 50, 18, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 20, 13, 50, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jul 20 13:50:29.170: INFO: 
  Jul 20 13:50:29.170: INFO: Ensure that both old replica sets have no replicas
  Jul 20 13:50:29.178: INFO: Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9638",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dac7618b-8bd6-45d2-9161-853c04b2acb0",
      ResourceVersion: (string) (len=5) "46248",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857080215,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857080217,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857080228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857080215,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857080215,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857080228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857080215,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-68774655d5\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jul 20 13:50:29.181: INFO: New ReplicaSet "test-rollover-deployment-68774655d5" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-68774655d5",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9638",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a5f5ddd2-6c94-4475-ae29-2fa8c4031bbc",
      ResourceVersion: (string) (len=5) "46238",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857080217,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "dac7618b-8bd6-45d2-9161-853c04b2acb0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857080217,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 61 63 37 36 31  38 62 2d 38 62 64 36 2d  |\"dac7618b-8bd6-|
              00000120  34 35 64 32 2d 39 31 36  31 2d 38 35 33 63 30 34  |45d2-9161-853c04|
              00000130  62 32 61 63 62 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |b2acb0\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857080228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jul 20 13:50:29.182: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
  Jul 20 13:50:29.183: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9638",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a45f03a9-7704-497b-afd3-1edeb5b2fe48",
      ResourceVersion: (string) (len=5) "46247",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857080208,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "dac7618b-8bd6-45d2-9161-853c04b2acb0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857080208,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857080228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  64 61 63 37 36 31 38 62  2d 38 62 64 36 2d 34 35  |dac7618b-8bd6-45|
              000000c0  64 32 2d 39 31 36 31 2d  38 35 33 63 30 34 62 32  |d2-9161-853c04b2|
              000000d0  61 63 62 30 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |acb0\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857080228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jul 20 13:50:29.183: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-664fc6c874",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9638",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "85d73763-763a-464d-a3c9-42645d57070c",
      ResourceVersion: (string) (len=5) "46196",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857080215,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "dac7618b-8bd6-45d2-9161-853c04b2acb0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857080217,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 61 63 37 36 31  38 62 2d 38 62 64 36 2d  |\"dac7618b-8bd6-|
              00000120  34 35 64 32 2d 39 31 36  31 2d 38 35 33 63 30 34  |45d2-9161-853c04|
              00000130  62 32 61 63 62 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |b2acb0\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857080217,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jul 20 13:50:29.187: INFO: Pod "test-rollover-deployment-68774655d5-5fl5d" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-68774655d5-5fl5d",
      GenerateName: (string) (len=36) "test-rollover-deployment-68774655d5-",
      Namespace: (string) (len=15) "deployment-9638",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "aec74866-6b3e-4262-b137-f9a6eace5823",
      ResourceVersion: (string) (len=5) "46217",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857080217,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-68774655d5",
          UID: (types.UID) (len=36) "a5f5ddd2-6c94-4475-ae29-2fa8c4031bbc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857080217,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 35  66 35 64 64 64 32 2d 36  |d\":\"a5f5ddd2-6|
              00000090  63 39 34 2d 34 34 37 35  2d 61 65 32 39 2d 32 66  |c94-4475-ae29-2f|
              000000a0  61 38 63 34 30 33 31 62  62 63 5c 22 7d 22 3a 7b  |a8c4031bbc\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857080218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  30 2e 32 35 33 5c 22 7d  |2.168.120.253\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hlj7v",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hlj7v",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-79-190",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857080218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857080217,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857080218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857080218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857080217,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.79.190",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.79.190"
        }
      },
      PodIP: (string) (len=15) "192.168.120.253",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.120.253"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857080217,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63857080217,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253",
          ContainerID: (string) (len=77) "containerd://0ca55d6a710f77041636951af64a44a05e95a5c2fc0c49b42ae9d959cd03e778",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 20 13:50:29.189: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9638" for this suite. @ 07/20/24 13:50:29.193
• [21.127 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 07/20/24 13:50:29.199
  Jul 20 13:50:29.199: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename deployment @ 07/20/24 13:50:29.199
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:50:29.213
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:50:29.215
  Jul 20 13:50:29.231: INFO: Pod name cleanup-pod: Found 0 pods out of 1
  Jul 20 13:50:34.235: INFO: Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/20/24 13:50:34.235
  Jul 20 13:50:34.235: INFO: Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 07/20/24 13:50:34.243
  Jul 20 13:50:34.253: INFO: Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2131",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "262ff553-7098-4485-9f37-fd0e2cde1fd3",
      ResourceVersion: (string) (len=5) "46292",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857080234,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857080234,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jul 20 13:50:34.259: INFO: New ReplicaSet "test-cleanup-deployment-7bc75bbdf6" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-7bc75bbdf6",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2131",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8ce9e144-3331-4d2a-98c5-de9889551559",
      ResourceVersion: (string) (len=5) "46294",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857080234,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "262ff553-7098-4485-9f37-fd0e2cde1fd3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857080234,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 36 32 66 66 35  35 33 2d 37 30 39 38 2d  |\"262ff553-7098-|
              00000120  34 34 38 35 2d 39 66 33  37 2d 66 64 30 65 32 63  |4485-9f37-fd0e2c|
              00000130  64 65 31 66 64 33 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |de1fd3\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 0,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jul 20 13:50:34.266: INFO: All old ReplicaSets of Deployment "test-cleanup-deployment":
  Jul 20 13:50:34.266: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2131",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6d30349f-dee6-494d-a4e4-39af9f742ddc",
      ResourceVersion: (string) (len=5) "46293",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857080229,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "262ff553-7098-4485-9f37-fd0e2cde1fd3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857080229,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857080230,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857080234,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 32 36 32 66 66 35 35  |"uid\":\"262ff55|
              00000040  33 2d 37 30 39 38 2d 34  34 38 35 2d 39 66 33 37  |3-7098-4485-9f37|
              00000050  2d 66 64 30 65 32 63 64  65 31 66 64 33 5c 22 7d  |-fd0e2cde1fd3\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jul 20 13:50:34.280: INFO: Pod "test-cleanup-controller-d88xk" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-d88xk",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-2131",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "80b8bfa6-aa41-415c-8bb0-9a4dd5869ac5",
      ResourceVersion: (string) (len=5) "46276",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857080229,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "6d30349f-dee6-494d-a4e4-39af9f742ddc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857080229,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  36 64 33 30 33 34 39 66  |uid\":\"6d30349f|
              00000080  2d 64 65 65 36 2d 34 39  34 64 2d 61 34 65 34 2d  |-dee6-494d-a4e4-|
              00000090  33 39 61 66 39 66 37 34  32 64 64 63 5c 22 7d 22  |39af9f742ddc\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857080230,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 34  35 2e 32 33 33 5c 22 7d  |2.168.245.233\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zc5ht",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zc5ht",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-25-173",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857080230,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857080229,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857080230,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857080230,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857080229,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.25.173",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.25.173"
        }
      },
      PodIP: (string) (len=15) "192.168.245.233",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.245.233"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857080229,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63857080229,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://ddaf65711f4e242d2da5c4ef4d3688eb6bd00f33d0f355e256b7c3df4ca1fe19",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 20 13:50:34.281: INFO: Pod "test-cleanup-deployment-7bc75bbdf6-s9h9c" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-cleanup-deployment-7bc75bbdf6-s9h9c",
      GenerateName: (string) (len=35) "test-cleanup-deployment-7bc75bbdf6-",
      Namespace: (string) (len=15) "deployment-2131",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fecba7d5-5698-4282-bcdb-9a730d89c9b0",
      ResourceVersion: (string) (len=5) "46298",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857080234,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-cleanup-deployment-7bc75bbdf6",
          UID: (types.UID) (len=36) "8ce9e144-3331-4d2a-98c5-de9889551559",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857080234,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 63  65 39 65 31 34 34 2d 33  |d\":\"8ce9e144-3|
              00000090  33 33 31 2d 34 64 32 61  2d 39 38 63 35 2d 64 65  |331-4d2a-98c5-de|
              000000a0  39 38 38 39 35 35 31 35  35 39 5c 22 7d 22 3a 7b  |9889551559\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ssghb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ssghb",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-79-190",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857080234,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 20 13:50:34.281: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2131" for this suite. @ 07/20/24 13:50:34.29
• [5.100 seconds]
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 07/20/24 13:50:34.299
  Jul 20 13:50:34.299: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename deployment @ 07/20/24 13:50:34.299
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:50:34.316
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:50:34.32
  STEP: creating a Deployment @ 07/20/24 13:50:34.325
  STEP: waiting for Deployment to be created @ 07/20/24 13:50:34.331
  STEP: waiting for all Replicas to be Ready @ 07/20/24 13:50:34.332
  Jul 20 13:50:34.333: INFO: observed Deployment test-deployment in namespace deployment-2620 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jul 20 13:50:34.333: INFO: observed Deployment test-deployment in namespace deployment-2620 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jul 20 13:50:34.344: INFO: observed Deployment test-deployment in namespace deployment-2620 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jul 20 13:50:34.344: INFO: observed Deployment test-deployment in namespace deployment-2620 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jul 20 13:50:34.355: INFO: observed Deployment test-deployment in namespace deployment-2620 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jul 20 13:50:34.355: INFO: observed Deployment test-deployment in namespace deployment-2620 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jul 20 13:50:34.386: INFO: observed Deployment test-deployment in namespace deployment-2620 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jul 20 13:50:34.386: INFO: observed Deployment test-deployment in namespace deployment-2620 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jul 20 13:50:35.567: INFO: observed Deployment test-deployment in namespace deployment-2620 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Jul 20 13:50:35.567: INFO: observed Deployment test-deployment in namespace deployment-2620 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Jul 20 13:50:35.717: INFO: observed Deployment test-deployment in namespace deployment-2620 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 07/20/24 13:50:35.718
  Jul 20 13:50:35.726: INFO: observed event type ADDED
  STEP: waiting for Replicas to scale @ 07/20/24 13:50:35.726
  Jul 20 13:50:35.727: INFO: observed Deployment test-deployment in namespace deployment-2620 with ReadyReplicas 0
  Jul 20 13:50:35.727: INFO: observed Deployment test-deployment in namespace deployment-2620 with ReadyReplicas 0
  Jul 20 13:50:35.727: INFO: observed Deployment test-deployment in namespace deployment-2620 with ReadyReplicas 0
  Jul 20 13:50:35.727: INFO: observed Deployment test-deployment in namespace deployment-2620 with ReadyReplicas 0
  Jul 20 13:50:35.727: INFO: observed Deployment test-deployment in namespace deployment-2620 with ReadyReplicas 0
  Jul 20 13:50:35.727: INFO: observed Deployment test-deployment in namespace deployment-2620 with ReadyReplicas 0
  Jul 20 13:50:35.727: INFO: observed Deployment test-deployment in namespace deployment-2620 with ReadyReplicas 0
  Jul 20 13:50:35.728: INFO: observed Deployment test-deployment in namespace deployment-2620 with ReadyReplicas 0
  Jul 20 13:50:35.728: INFO: observed Deployment test-deployment in namespace deployment-2620 with ReadyReplicas 1
  Jul 20 13:50:35.728: INFO: observed Deployment test-deployment in namespace deployment-2620 with ReadyReplicas 1
  Jul 20 13:50:35.728: INFO: observed Deployment test-deployment in namespace deployment-2620 with ReadyReplicas 2
  Jul 20 13:50:35.728: INFO: observed Deployment test-deployment in namespace deployment-2620 with ReadyReplicas 2
  Jul 20 13:50:35.728: INFO: observed Deployment test-deployment in namespace deployment-2620 with ReadyReplicas 2
  Jul 20 13:50:35.728: INFO: observed Deployment test-deployment in namespace deployment-2620 with ReadyReplicas 2
  Jul 20 13:50:35.738: INFO: observed Deployment test-deployment in namespace deployment-2620 with ReadyReplicas 2
  Jul 20 13:50:35.738: INFO: observed Deployment test-deployment in namespace deployment-2620 with ReadyReplicas 2
  Jul 20 13:50:35.757: INFO: observed Deployment test-deployment in namespace deployment-2620 with ReadyReplicas 2
  Jul 20 13:50:35.757: INFO: observed Deployment test-deployment in namespace deployment-2620 with ReadyReplicas 2
  Jul 20 13:50:35.770: INFO: observed Deployment test-deployment in namespace deployment-2620 with ReadyReplicas 1
  Jul 20 13:50:35.770: INFO: observed Deployment test-deployment in namespace deployment-2620 with ReadyReplicas 1
  Jul 20 13:50:35.780: INFO: observed Deployment test-deployment in namespace deployment-2620 with ReadyReplicas 1
  Jul 20 13:50:35.781: INFO: observed Deployment test-deployment in namespace deployment-2620 with ReadyReplicas 1
  Jul 20 13:50:36.740: INFO: observed Deployment test-deployment in namespace deployment-2620 with ReadyReplicas 2
  Jul 20 13:50:36.740: INFO: observed Deployment test-deployment in namespace deployment-2620 with ReadyReplicas 2
  Jul 20 13:50:36.768: INFO: observed Deployment test-deployment in namespace deployment-2620 with ReadyReplicas 1
  STEP: listing Deployments @ 07/20/24 13:50:36.768
  Jul 20 13:50:36.773: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 07/20/24 13:50:36.773
  Jul 20 13:50:36.787: INFO: observed Deployment test-deployment in namespace deployment-2620 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 07/20/24 13:50:36.787
  Jul 20 13:50:36.795: INFO: observed Deployment test-deployment in namespace deployment-2620 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jul 20 13:50:36.799: INFO: observed Deployment test-deployment in namespace deployment-2620 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jul 20 13:50:36.825: INFO: observed Deployment test-deployment in namespace deployment-2620 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jul 20 13:50:36.843: INFO: observed Deployment test-deployment in namespace deployment-2620 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jul 20 13:50:36.851: INFO: observed Deployment test-deployment in namespace deployment-2620 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jul 20 13:50:37.577: INFO: observed Deployment test-deployment in namespace deployment-2620 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Jul 20 13:50:37.778: INFO: observed Deployment test-deployment in namespace deployment-2620 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  Jul 20 13:50:37.811: INFO: observed Deployment test-deployment in namespace deployment-2620 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Jul 20 13:50:37.822: INFO: observed Deployment test-deployment in namespace deployment-2620 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Jul 20 13:50:38.586: INFO: observed Deployment test-deployment in namespace deployment-2620 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 07/20/24 13:50:38.601
  STEP: fetching the DeploymentStatus @ 07/20/24 13:50:38.61
  Jul 20 13:50:38.614: INFO: observed Deployment test-deployment in namespace deployment-2620 with ReadyReplicas 1
  Jul 20 13:50:38.614: INFO: observed Deployment test-deployment in namespace deployment-2620 with ReadyReplicas 1
  Jul 20 13:50:38.614: INFO: observed Deployment test-deployment in namespace deployment-2620 with ReadyReplicas 1
  Jul 20 13:50:38.614: INFO: observed Deployment test-deployment in namespace deployment-2620 with ReadyReplicas 1
  Jul 20 13:50:38.614: INFO: observed Deployment test-deployment in namespace deployment-2620 with ReadyReplicas 1
  Jul 20 13:50:38.614: INFO: observed Deployment test-deployment in namespace deployment-2620 with ReadyReplicas 2
  Jul 20 13:50:38.615: INFO: observed Deployment test-deployment in namespace deployment-2620 with ReadyReplicas 3
  Jul 20 13:50:38.615: INFO: observed Deployment test-deployment in namespace deployment-2620 with ReadyReplicas 2
  Jul 20 13:50:38.615: INFO: observed Deployment test-deployment in namespace deployment-2620 with ReadyReplicas 2
  Jul 20 13:50:38.615: INFO: observed Deployment test-deployment in namespace deployment-2620 with ReadyReplicas 3
  STEP: deleting the Deployment @ 07/20/24 13:50:38.615
  Jul 20 13:50:38.624: INFO: observed event type MODIFIED
  Jul 20 13:50:38.624: INFO: observed event type MODIFIED
  Jul 20 13:50:38.624: INFO: observed event type MODIFIED
  Jul 20 13:50:38.624: INFO: observed event type MODIFIED
  Jul 20 13:50:38.624: INFO: observed event type MODIFIED
  Jul 20 13:50:38.624: INFO: observed event type MODIFIED
  Jul 20 13:50:38.624: INFO: observed event type MODIFIED
  Jul 20 13:50:38.624: INFO: observed event type MODIFIED
  Jul 20 13:50:38.625: INFO: observed event type MODIFIED
  Jul 20 13:50:38.625: INFO: observed event type MODIFIED
  Jul 20 13:50:38.625: INFO: observed event type MODIFIED
  Jul 20 13:50:38.625: INFO: observed event type MODIFIED
  Jul 20 13:50:38.625: INFO: observed event type MODIFIED
  Jul 20 13:50:38.628: INFO: Log out all the ReplicaSets if there is no deployment created
  Jul 20 13:50:38.633: INFO: ReplicaSet "test-deployment-64fd565c98":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-64fd565c98",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2620",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "97aa2339-5308-4c2e-a2a8-805273980f6c",
      ResourceVersion: (string) (len=5) "46517",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857080235,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "0af5571f-447a-4cc8-a02b-6dcb6d28e04b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857080238,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 30 61 66 35  35 37 31 66 2d 34 34 37  |":\"0af5571f-447|
              00000130  61 2d 34 63 63 38 2d 61  30 32 62 2d 36 64 63 62  |a-4cc8-a02b-6dcb|
              00000140  36 64 32 38 65 30 34 62  5c 22 7d 22 3a 7b 7d 7d  |6d28e04b\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857080238,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=22) "test-deployment-static": (string) (len=4) "true",
          (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=25) "registry.k8s.io/pause:3.9",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Jul 20 13:50:38.642: INFO: pod: "test-deployment-64fd565c98-km9k2":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-64fd565c98-km9k2",
      GenerateName: (string) (len=27) "test-deployment-64fd565c98-",
      Namespace: (string) (len=15) "deployment-2620",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c30dc00d-722f-4ea4-b9c9-b1040eb42caa",
      ResourceVersion: (string) (len=5) "46513",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857080236,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857080240,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-64fd565c98",
          UID: (types.UID) (len=36) "97aa2339-5308-4c2e-a2a8-805273980f6c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857080236,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  39 37 61 61 32 33 33 39  |uid\":\"97aa2339|
              000000a0  2d 35 33 30 38 2d 34 63  32 65 2d 61 32 61 38 2d  |-5308-4c2e-a2a8-|
              000000b0  38 30 35 32 37 33 39 38  30 66 36 63 5c 22 7d 22  |805273980f6c\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857080237,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 34  35 2e 32 33 37 5c 22 7d  |2.168.245.237\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-59624",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-59624",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-25-173",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857080237,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857080236,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857080237,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857080237,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857080236,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.25.173",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.25.173"
        }
      },
      PodIP: (string) (len=15) "192.168.245.237",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.245.237"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857080236,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63857080237,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=77) "containerd://ad40f1f338ac4a2ecc707637ddfe40fc1eb483b45cf806e59bcdd9a0621a772f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Jul 20 13:50:38.644: INFO: pod: "test-deployment-64fd565c98-n4jzz":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-64fd565c98-n4jzz",
      GenerateName: (string) (len=27) "test-deployment-64fd565c98-",
      Namespace: (string) (len=15) "deployment-2620",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "002f080d-990d-4b90-987d-9451f94b45bd",
      ResourceVersion: (string) (len=5) "46501",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857080235,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857080239,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-64fd565c98",
          UID: (types.UID) (len=36) "97aa2339-5308-4c2e-a2a8-805273980f6c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857080235,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  39 37 61 61 32 33 33 39  |uid\":\"97aa2339|
              000000a0  2d 35 33 30 38 2d 34 63  32 65 2d 61 32 61 38 2d  |-5308-4c2e-a2a8-|
              000000b0  38 30 35 32 37 33 39 38  30 66 36 63 5c 22 7d 22  |805273980f6c\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857080237,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=621) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 72 65 61 73 6f 6e  |me":{},"f:reason|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000090  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000000a0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 49  |"k:{\"type\":\"I|
              000000b0  6e 69 74 69 61 6c 69 7a  65 64 5c 22 7d 22 3a 7b  |nitialized\"}":{|
              000000c0  22 2e 22 3a 7b 7d 2c 22  66 3a 6c 61 73 74 50 72  |".":{},"f:lastPr|
              000000d0  6f 62 65 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |obeTime":{},"f:l|
              000000e0  61 73 74 54 72 61 6e 73  69 74 69 6f 6e 54 69 6d  |astTransitionTim|
              000000f0  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000100  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000110  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              00000120  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 50 6f  |k:{\"type\":\"Po|
              00000130  64 52 65 61 64 79 54 6f  53 74 61 72 74 43 6f 6e  |dReadyToStartCon|
              00000140  74 61 69 6e 65 72 73 5c  22 7d 22 3a 7b 22 2e 22  |tainers\"}":{"."|
              00000150  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000160  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000170  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000180  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000190  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 2c 22 6b  |,"f:type":{}},"k|
              000001a0  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 52 65 61  |:{\"type\":\"Rea|
              000001b0  64 79 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |dy\"}":{".":{},"|
              000001c0  66 3a 6c 61 73 74 50 72  6f 62 65 54 69 6d 65 22  |f:lastProbeTime"|
              000001d0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 54 72 61 6e 73  |:{},"f:lastTrans|
              000001e0  69 74 69 6f 6e 54 69 6d  65 22 3a 7b 7d 2c 22 66  |itionTime":{},"f|
              000001f0  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000200  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000210  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000220  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000230  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000240  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000250  3a 70 68 61 73 65 22 3a  7b 7d 2c 22 66 3a 73 74  |:phase":{},"f:st|
              00000260  61 72 74 54 69 6d 65 22  3a 7b 7d 7d 7d           |artTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9sx7h",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9sx7h",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-79-190",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=9) "Succeeded",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857080237,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857080235,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857080237,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857080237,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857080235,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.79.190",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.79.190"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857080235,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)({
              ExitCode: (int32) 0,
              Signal: (int32) 0,
              Reason: (string) (len=9) "Completed",
              Message: (string) "",
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63857080236,
                  loc: (*time.Location)(<already shown>)
                }
              },
              FinishedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63857080237,
                  loc: (*time.Location)(<already shown>)
                }
              },
              ContainerID: (string) (len=77) "containerd://46c1d86f961b0a7400e28f1fbf98dec95aff98ca01794101d142cfa8465f5c9c"
            })
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=77) "containerd://46c1d86f961b0a7400e28f1fbf98dec95aff98ca01794101d142cfa8465f5c9c",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Jul 20 13:50:38.646: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2620" for this suite. @ 07/20/24 13:50:38.655
• [4.362 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 07/20/24 13:50:38.661
  Jul 20 13:50:38.661: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/20/24 13:50:38.662
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:50:38.676
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:50:38.68
  Jul 20 13:50:38.682: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  Jul 20 13:50:39.708: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8414" for this suite. @ 07/20/24 13:50:39.712
• [1.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1863
  STEP: Creating a kubernetes client @ 07/20/24 13:50:39.72
  Jul 20 13:50:39.720: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename kubectl @ 07/20/24 13:50:39.721
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:50:39.739
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:50:39.75
  STEP: Starting the proxy @ 07/20/24 13:50:39.77
  Jul 20 13:50:39.770: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-1627 proxy --unix-socket=/tmp/kubectl-proxy-unix146773261/test'
  STEP: retrieving proxy /api/ output @ 07/20/24 13:50:39.824
  Jul 20 13:50:39.825: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1627" for this suite. @ 07/20/24 13:50:39.829
• [0.115 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:136
  STEP: Creating a kubernetes client @ 07/20/24 13:50:39.836
  Jul 20 13:50:39.836: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 07/20/24 13:50:39.836
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:50:39.846
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:50:39.849
  STEP: create the container to handle the HTTPGet hook request. @ 07/20/24 13:50:39.855
  STEP: create the pod with lifecycle hook @ 07/20/24 13:50:41.876
  STEP: check poststart hook @ 07/20/24 13:50:43.898
  STEP: delete the pod with lifecycle hook @ 07/20/24 13:50:43.915
  Jul 20 13:50:45.930: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-6473" for this suite. @ 07/20/24 13:50:45.933
• [6.105 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 07/20/24 13:50:45.941
  Jul 20 13:50:45.941: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename container-probe @ 07/20/24 13:50:45.941
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:50:45.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:50:45.961
  Jul 20 13:51:08.030: INFO: Container started at 2024-07-20 13:50:46 +0000 UTC, pod became ready at 2024-07-20 13:51:06 +0000 UTC
  Jul 20 13:51:08.030: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4035" for this suite. @ 07/20/24 13:51:08.033
• [22.098 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1731
  STEP: Creating a kubernetes client @ 07/20/24 13:51:08.039
  Jul 20 13:51:08.039: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename kubectl @ 07/20/24 13:51:08.04
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:51:08.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:51:08.058
  Jul 20 13:51:08.061: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=kubectl-373 version'
  Jul 20 13:51:08.098: INFO: stderr: ""
  Jul 20 13:51:08.098: INFO: stdout: "Client Version: v1.29.7\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.29.7\n"
  Jul 20 13:51:08.098: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-373" for this suite. @ 07/20/24 13:51:08.101
• [0.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 07/20/24 13:51:08.108
  Jul 20 13:51:08.108: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename cronjob @ 07/20/24 13:51:08.108
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:51:08.119
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:51:08.122
  STEP: Creating a suspended cronjob @ 07/20/24 13:51:08.125
  STEP: Ensuring no jobs are scheduled @ 07/20/24 13:51:08.129
  STEP: Ensuring no job exists by listing jobs explicitly @ 07/20/24 13:56:08.137
  STEP: Removing cronjob @ 07/20/24 13:56:08.139
  Jul 20 13:56:08.146: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7173" for this suite. @ 07/20/24 13:56:08.149
• [300.048 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2177
  STEP: Creating a kubernetes client @ 07/20/24 13:56:08.155
  Jul 20 13:56:08.155: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename services @ 07/20/24 13:56:08.156
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:56:08.17
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:56:08.173
  STEP: creating service in namespace services-9479 @ 07/20/24 13:56:08.175
  STEP: creating service affinity-clusterip in namespace services-9479 @ 07/20/24 13:56:08.175
  STEP: creating replication controller affinity-clusterip in namespace services-9479 @ 07/20/24 13:56:08.183
  I0720 13:56:08.194910      19 runners.go:197] Created replication controller with name: affinity-clusterip, namespace: services-9479, replica count: 3
  I0720 13:56:11.246217      19 runners.go:197] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jul 20 13:56:11.253: INFO: Creating new exec pod
  Jul 20 13:56:14.270: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=services-9479 exec execpod-affinity96rvt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  Jul 20 13:56:14.366: INFO: stderr: "+ nc -v -t -w 2 affinity-clusterip 80\n+ echo hostName\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  Jul 20 13:56:14.366: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul 20 13:56:14.366: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=services-9479 exec execpod-affinity96rvt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.65 80'
  Jul 20 13:56:14.453: INFO: stderr: "+ nc -v -t -w 2 10.152.183.65 80\n+ echo hostName\nConnection to 10.152.183.65 80 port [tcp/http] succeeded!\n"
  Jul 20 13:56:14.453: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul 20 13:56:14.453: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2938922521 --namespace=services-9479 exec execpod-affinity96rvt -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.65:80/ ; done'
  Jul 20 13:56:14.614: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.65:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.65:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.65:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.65:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.65:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.65:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.65:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.65:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.65:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.65:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.65:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.65:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.65:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.65:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.65:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.65:80/\n"
  Jul 20 13:56:14.614: INFO: stdout: "\naffinity-clusterip-52g44\naffinity-clusterip-52g44\naffinity-clusterip-52g44\naffinity-clusterip-52g44\naffinity-clusterip-52g44\naffinity-clusterip-52g44\naffinity-clusterip-52g44\naffinity-clusterip-52g44\naffinity-clusterip-52g44\naffinity-clusterip-52g44\naffinity-clusterip-52g44\naffinity-clusterip-52g44\naffinity-clusterip-52g44\naffinity-clusterip-52g44\naffinity-clusterip-52g44\naffinity-clusterip-52g44"
  Jul 20 13:56:14.614: INFO: Received response from host: affinity-clusterip-52g44
  Jul 20 13:56:14.614: INFO: Received response from host: affinity-clusterip-52g44
  Jul 20 13:56:14.614: INFO: Received response from host: affinity-clusterip-52g44
  Jul 20 13:56:14.614: INFO: Received response from host: affinity-clusterip-52g44
  Jul 20 13:56:14.614: INFO: Received response from host: affinity-clusterip-52g44
  Jul 20 13:56:14.614: INFO: Received response from host: affinity-clusterip-52g44
  Jul 20 13:56:14.614: INFO: Received response from host: affinity-clusterip-52g44
  Jul 20 13:56:14.614: INFO: Received response from host: affinity-clusterip-52g44
  Jul 20 13:56:14.614: INFO: Received response from host: affinity-clusterip-52g44
  Jul 20 13:56:14.614: INFO: Received response from host: affinity-clusterip-52g44
  Jul 20 13:56:14.614: INFO: Received response from host: affinity-clusterip-52g44
  Jul 20 13:56:14.614: INFO: Received response from host: affinity-clusterip-52g44
  Jul 20 13:56:14.614: INFO: Received response from host: affinity-clusterip-52g44
  Jul 20 13:56:14.614: INFO: Received response from host: affinity-clusterip-52g44
  Jul 20 13:56:14.614: INFO: Received response from host: affinity-clusterip-52g44
  Jul 20 13:56:14.614: INFO: Received response from host: affinity-clusterip-52g44
  Jul 20 13:56:14.614: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-9479, will wait for the garbage collector to delete the pods @ 07/20/24 13:56:14.629
  Jul 20 13:56:14.689: INFO: Deleting ReplicationController affinity-clusterip took: 6.583437ms
  Jul 20 13:56:14.789: INFO: Terminating ReplicationController affinity-clusterip pods took: 100.358908ms
  Jul 20 13:56:18.010: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9479" for this suite. @ 07/20/24 13:56:18.013
• [9.863 seconds]
------------------------------
SSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:531
  STEP: Creating a kubernetes client @ 07/20/24 13:56:18.019
  Jul 20 13:56:18.019: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename svcaccounts @ 07/20/24 13:56:18.019
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:56:18.033
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:56:18.036
  Jul 20 13:56:18.051: INFO: created pod
  STEP: Saw pod success @ 07/20/24 13:56:22.063
  Jul 20 13:56:52.063: INFO: polling logs
  Jul 20 13:56:52.080: INFO: Pod logs: 
  I0720 13:56:18.629267       1 log.go:245] OK: Got token
  I0720 13:56:18.629346       1 log.go:245] validating with in-cluster discovery
  I0720 13:56:18.629549       1 log.go:245] OK: got issuer https://kubernetes.default.svc
  I0720 13:56:18.629569       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-4151:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000012e20), NotBefore:(*jwt.NumericDate)(0xc000012f08), IssuedAt:(*jwt.NumericDate)(0xc000012e30), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-4151", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"117ac387-6e5e-47ae-95b1-27cb84481559"}}}
  I0720 13:56:18.635512       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
  I0720 13:56:18.638347       1 log.go:245] OK: Validated signature on JWT
  I0720 13:56:18.638442       1 log.go:245] OK: Got valid claims from token!
  I0720 13:56:18.638477       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-4151:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000455270), NotBefore:(*jwt.NumericDate)(0xc000455298), IssuedAt:(*jwt.NumericDate)(0xc000455278), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-4151", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"117ac387-6e5e-47ae-95b1-27cb84481559"}}}

  Jul 20 13:56:52.080: INFO: completed pod
  Jul 20 13:56:52.087: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4151" for this suite. @ 07/20/24 13:56:52.09
• [34.077 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 07/20/24 13:56:52.096
  Jul 20 13:56:52.096: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename downward-api @ 07/20/24 13:56:52.096
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:56:52.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:56:52.113
  STEP: Creating a pod to test downward API volume plugin @ 07/20/24 13:56:52.116
  STEP: Saw pod success @ 07/20/24 13:56:56.138
  Jul 20 13:56:56.141: INFO: Trying to get logs from node ip-172-31-79-190 pod downwardapi-volume-a3ff52ce-be7a-4db0-aa35-093790ac89d3 container client-container: <nil>
  STEP: delete the pod @ 07/20/24 13:56:56.147
  Jul 20 13:56:56.161: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8591" for this suite. @ 07/20/24 13:56:56.165
• [4.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 07/20/24 13:56:56.17
  Jul 20 13:56:56.170: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename replicaset @ 07/20/24 13:56:56.17
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:56:56.183
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:56:56.186
  Jul 20 13:56:56.202: INFO: Pod name sample-pod: Found 0 pods out of 1
  Jul 20 13:57:01.206: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/20/24 13:57:01.206
  STEP: Scaling up "test-rs" replicaset @ 07/20/24 13:57:01.206
  Jul 20 13:57:01.215: INFO: Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 07/20/24 13:57:01.215
  Jul 20 13:57:01.224: INFO: observed ReplicaSet test-rs in namespace replicaset-1042 with ReadyReplicas 1, AvailableReplicas 1
  Jul 20 13:57:01.238: INFO: observed ReplicaSet test-rs in namespace replicaset-1042 with ReadyReplicas 1, AvailableReplicas 1
  Jul 20 13:57:01.256: INFO: observed ReplicaSet test-rs in namespace replicaset-1042 with ReadyReplicas 1, AvailableReplicas 1
  Jul 20 13:57:01.264: INFO: observed ReplicaSet test-rs in namespace replicaset-1042 with ReadyReplicas 1, AvailableReplicas 1
  Jul 20 13:57:02.017: INFO: observed ReplicaSet test-rs in namespace replicaset-1042 with ReadyReplicas 2, AvailableReplicas 2
  Jul 20 13:57:02.207: INFO: observed Replicaset test-rs in namespace replicaset-1042 with ReadyReplicas 3 found true
  Jul 20 13:57:02.207: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1042" for this suite. @ 07/20/24 13:57:02.211
• [6.046 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:96
  STEP: Creating a kubernetes client @ 07/20/24 13:57:02.217
  Jul 20 13:57:02.217: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename secrets @ 07/20/24 13:57:02.217
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:57:02.23
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:57:02.233
  STEP: creating secret secrets-882/secret-test-c287eac4-8c54-4f3b-8b58-69d057f868e1 @ 07/20/24 13:57:02.238
  STEP: Creating a pod to test consume secrets @ 07/20/24 13:57:02.243
  STEP: Saw pod success @ 07/20/24 13:57:06.26
  Jul 20 13:57:06.263: INFO: Trying to get logs from node ip-172-31-79-190 pod pod-configmaps-305951d7-16dc-4e41-aa82-52877fa27185 container env-test: <nil>
  STEP: delete the pod @ 07/20/24 13:57:06.269
  Jul 20 13:57:06.285: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-882" for this suite. @ 07/20/24 13:57:06.288
• [4.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:214
  STEP: Creating a kubernetes client @ 07/20/24 13:57:06.295
  Jul 20 13:57:06.295: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 07/20/24 13:57:06.295
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:57:06.308
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:57:06.311
  STEP: create the container to handle the HTTPGet hook request. @ 07/20/24 13:57:06.316
  STEP: create the pod with lifecycle hook @ 07/20/24 13:57:08.337
  STEP: delete the pod with lifecycle hook @ 07/20/24 13:57:10.355
  STEP: check prestop hook @ 07/20/24 13:57:12.37
  Jul 20 13:57:12.375: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-8790" for this suite. @ 07/20/24 13:57:12.379
• [6.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:115
  STEP: Creating a kubernetes client @ 07/20/24 13:57:12.393
  Jul 20 13:57:12.393: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename var-expansion @ 07/20/24 13:57:12.393
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:57:12.412
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:57:12.417
  STEP: Creating a pod to test substitution in volume subpath @ 07/20/24 13:57:12.42
  STEP: Saw pod success @ 07/20/24 13:57:14.437
  Jul 20 13:57:14.440: INFO: Trying to get logs from node ip-172-31-25-173 pod var-expansion-2d190c54-46d8-4832-9c62-2cffe3e1a191 container dapi-container: <nil>
  STEP: delete the pod @ 07/20/24 13:57:14.457
  Jul 20 13:57:14.473: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9190" for this suite. @ 07/20/24 13:57:14.477
• [2.091 seconds]
------------------------------
S
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 07/20/24 13:57:14.483
  Jul 20 13:57:14.483: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename downward-api @ 07/20/24 13:57:14.484
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:57:14.499
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:57:14.501
  STEP: Creating a pod to test downward api env vars @ 07/20/24 13:57:14.503
  STEP: Saw pod success @ 07/20/24 13:57:18.522
  Jul 20 13:57:18.526: INFO: Trying to get logs from node ip-172-31-25-173 pod downward-api-6e590ccc-8d65-4564-bda5-ca4b3cdf8438 container dapi-container: <nil>
  STEP: delete the pod @ 07/20/24 13:57:18.531
  Jul 20 13:57:18.547: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7637" for this suite. @ 07/20/24 13:57:18.55
• [4.071 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 07/20/24 13:57:18.555
  Jul 20 13:57:18.555: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename pods @ 07/20/24 13:57:18.555
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:57:18.566
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:57:18.569
  STEP: creating pod @ 07/20/24 13:57:18.572
  Jul 20 13:57:20.596: INFO: Pod pod-hostip-4f0a6137-95f9-437b-985e-418062e7d9dc has hostIP: 172.31.79.190
  Jul 20 13:57:20.596: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2414" for this suite. @ 07/20/24 13:57:20.601
• [2.054 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:47
  STEP: Creating a kubernetes client @ 07/20/24 13:57:20.609
  Jul 20 13:57:20.609: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename secrets @ 07/20/24 13:57:20.609
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:57:20.623
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:57:20.625
  STEP: Creating secret with name secret-test-e2c0d12c-f22a-463e-9ba0-48a24276562d @ 07/20/24 13:57:20.628
  STEP: Creating a pod to test consume secrets @ 07/20/24 13:57:20.632
  STEP: Saw pod success @ 07/20/24 13:57:22.649
  Jul 20 13:57:22.652: INFO: Trying to get logs from node ip-172-31-79-190 pod pod-secrets-1ae2e0d6-837e-4d98-b352-9f976055ddc4 container secret-env-test: <nil>
  STEP: delete the pod @ 07/20/24 13:57:22.657
  Jul 20 13:57:22.672: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5876" for this suite. @ 07/20/24 13:57:22.675
• [2.072 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 07/20/24 13:57:22.681
  Jul 20 13:57:22.681: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename secrets @ 07/20/24 13:57:22.681
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:57:22.696
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:57:22.699
  STEP: Creating secret with name secret-test-d69d4545-d136-4e51-bf02-db70ed819752 @ 07/20/24 13:57:22.702
  STEP: Creating a pod to test consume secrets @ 07/20/24 13:57:22.708
  STEP: Saw pod success @ 07/20/24 13:57:26.73
  Jul 20 13:57:26.733: INFO: Trying to get logs from node ip-172-31-79-190 pod pod-secrets-122b65f0-c4e5-4494-9ee6-e9291c7e3784 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/20/24 13:57:26.74
  Jul 20 13:57:26.754: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7467" for this suite. @ 07/20/24 13:57:26.757
• [4.081 seconds]
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 07/20/24 13:57:26.762
  Jul 20 13:57:26.762: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename replication-controller @ 07/20/24 13:57:26.762
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:57:26.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:57:26.78
  STEP: creating a ReplicationController @ 07/20/24 13:57:26.784
  STEP: waiting for RC to be added @ 07/20/24 13:57:26.791
  STEP: waiting for available Replicas @ 07/20/24 13:57:26.791
  STEP: patching ReplicationController @ 07/20/24 13:57:27.393
  STEP: waiting for RC to be modified @ 07/20/24 13:57:27.4
  STEP: patching ReplicationController status @ 07/20/24 13:57:27.4
  STEP: waiting for RC to be modified @ 07/20/24 13:57:27.405
  STEP: waiting for available Replicas @ 07/20/24 13:57:27.405
  STEP: fetching ReplicationController status @ 07/20/24 13:57:27.41
  STEP: patching ReplicationController scale @ 07/20/24 13:57:27.413
  STEP: waiting for RC to be modified @ 07/20/24 13:57:27.417
  STEP: waiting for ReplicationController's scale to be the max amount @ 07/20/24 13:57:27.417
  STEP: fetching ReplicationController; ensuring that it's patched @ 07/20/24 13:57:28.255
  STEP: updating ReplicationController status @ 07/20/24 13:57:28.258
  STEP: waiting for RC to be modified @ 07/20/24 13:57:28.264
  STEP: listing all ReplicationControllers @ 07/20/24 13:57:28.264
  STEP: checking that ReplicationController has expected values @ 07/20/24 13:57:28.268
  STEP: deleting ReplicationControllers by collection @ 07/20/24 13:57:28.268
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 07/20/24 13:57:28.276
  Jul 20 13:57:28.304: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0720 13:57:28.304870      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-165" for this suite. @ 07/20/24 13:57:28.308
• [1.553 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 07/20/24 13:57:28.315
  Jul 20 13:57:28.315: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename pods @ 07/20/24 13:57:28.316
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:57:28.329
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:57:28.331
  STEP: creating a Pod with a static label @ 07/20/24 13:57:28.337
  STEP: watching for Pod to be ready @ 07/20/24 13:57:28.343
  Jul 20 13:57:28.345: INFO: observed Pod pod-test in namespace pods-8192 in phase Pending with labels: map[test-pod-static:true] & conditions []
  Jul 20 13:57:28.350: INFO: observed Pod pod-test in namespace pods-8192 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-07-20 13:57:28 +0000 UTC  }]
  Jul 20 13:57:28.371: INFO: observed Pod pod-test in namespace pods-8192 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-07-20 13:57:28 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-07-20 13:57:28 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-07-20 13:57:28 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-07-20 13:57:28 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-07-20 13:57:28 +0000 UTC  }]
  E0720 13:57:29.305630      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 20 13:57:29.389: INFO: Found Pod pod-test in namespace pods-8192 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-07-20 13:57:29 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-07-20 13:57:28 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2024-07-20 13:57:29 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2024-07-20 13:57:29 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-07-20 13:57:28 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 07/20/24 13:57:29.393
  STEP: getting the Pod and ensuring that it's patched @ 07/20/24 13:57:29.402
  STEP: replacing the Pod's status Ready condition to False @ 07/20/24 13:57:29.406
  STEP: check the Pod again to ensure its Ready conditions are False @ 07/20/24 13:57:29.416
  STEP: deleting the Pod via a Collection with a LabelSelector @ 07/20/24 13:57:29.416
  STEP: watching for the Pod to be deleted @ 07/20/24 13:57:29.425
  Jul 20 13:57:29.426: INFO: observed event type MODIFIED
  E0720 13:57:30.306536      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0720 13:57:31.307615      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 20 13:57:31.396: INFO: observed event type MODIFIED
  Jul 20 13:57:31.574: INFO: observed event type MODIFIED
  E0720 13:57:32.307972      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 20 13:57:32.397: INFO: observed event type MODIFIED
  Jul 20 13:57:32.409: INFO: observed event type MODIFIED
  Jul 20 13:57:32.413: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8192" for this suite. @ 07/20/24 13:57:32.416
• [4.108 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 07/20/24 13:57:32.423
  Jul 20 13:57:32.423: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename init-container @ 07/20/24 13:57:32.423
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:57:32.436
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:57:32.44
  STEP: creating the pod @ 07/20/24 13:57:32.442
  Jul 20 13:57:32.442: INFO: PodSpec: initContainers in spec.initContainers
  E0720 13:57:33.308085      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0720 13:57:34.308607      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0720 13:57:35.309356      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0720 13:57:36.309461      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 20 13:57:36.565: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-1334" for this suite. @ 07/20/24 13:57:36.569
• [4.152 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 07/20/24 13:57:36.575
  Jul 20 13:57:36.575: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename daemonsets @ 07/20/24 13:57:36.576
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:57:36.589
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:57:36.591
  Jul 20 13:57:36.615: INFO: Create a RollingUpdate DaemonSet
  Jul 20 13:57:36.620: INFO: Check that daemon pods launch on every node of the cluster
  Jul 20 13:57:36.623: INFO: DaemonSet pods can't tolerate node ip-172-31-19-200 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 20 13:57:36.623: INFO: DaemonSet pods can't tolerate node ip-172-31-76-81 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 20 13:57:36.626: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul 20 13:57:36.626: INFO: Node ip-172-31-25-173 is running 0 daemon pod, expected 1
  E0720 13:57:37.309677      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 20 13:57:37.623: INFO: DaemonSet pods can't tolerate node ip-172-31-19-200 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 20 13:57:37.623: INFO: DaemonSet pods can't tolerate node ip-172-31-76-81 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 20 13:57:37.626: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jul 20 13:57:37.626: INFO: Node ip-172-31-3-74 is running 0 daemon pod, expected 1
  E0720 13:57:38.310705      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 20 13:57:38.623: INFO: DaemonSet pods can't tolerate node ip-172-31-19-200 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 20 13:57:38.624: INFO: DaemonSet pods can't tolerate node ip-172-31-76-81 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 20 13:57:38.627: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jul 20 13:57:38.627: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  Jul 20 13:57:38.627: INFO: Update the DaemonSet to trigger a rollout
  Jul 20 13:57:38.635: INFO: Updating DaemonSet daemon-set
  E0720 13:57:39.311608      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 20 13:57:39.645: INFO: Roll back the DaemonSet before rollout is complete
  Jul 20 13:57:39.655: INFO: Updating DaemonSet daemon-set
  Jul 20 13:57:39.655: INFO: Make sure DaemonSet rollback is complete
  Jul 20 13:57:39.658: INFO: Wrong image for pod: daemon-set-cfxnl. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  Jul 20 13:57:39.658: INFO: Pod daemon-set-cfxnl is not available
  Jul 20 13:57:39.661: INFO: DaemonSet pods can't tolerate node ip-172-31-19-200 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 20 13:57:39.661: INFO: DaemonSet pods can't tolerate node ip-172-31-76-81 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0720 13:57:40.312039      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 20 13:57:40.662: INFO: DaemonSet pods can't tolerate node ip-172-31-19-200 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 20 13:57:40.662: INFO: DaemonSet pods can't tolerate node ip-172-31-76-81 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0720 13:57:41.312133      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 20 13:57:41.659: INFO: Pod daemon-set-g4trz is not available
  Jul 20 13:57:41.662: INFO: DaemonSet pods can't tolerate node ip-172-31-19-200 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 20 13:57:41.662: INFO: DaemonSet pods can't tolerate node ip-172-31-76-81 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Deleting DaemonSet "daemon-set" @ 07/20/24 13:57:41.667
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6757, will wait for the garbage collector to delete the pods @ 07/20/24 13:57:41.667
  Jul 20 13:57:41.731: INFO: Deleting DaemonSet.extensions daemon-set took: 9.171783ms
  Jul 20 13:57:41.831: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.817115ms
  E0720 13:57:42.312170      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 20 13:57:43.135: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul 20 13:57:43.135: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jul 20 13:57:43.138: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"48489"},"items":null}

  Jul 20 13:57:43.141: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"48489"},"items":null}

  Jul 20 13:57:43.151: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6757" for this suite. @ 07/20/24 13:57:43.154
• [6.585 seconds]
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 07/20/24 13:57:43.16
  Jul 20 13:57:43.160: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename conformance-tests @ 07/20/24 13:57:43.161
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:57:43.174
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:57:43.18
  STEP: Getting node addresses @ 07/20/24 13:57:43.183
  Jul 20 13:57:43.183: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  Jul 20 13:57:43.187: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-3653" for this suite. @ 07/20/24 13:57:43.19
• [0.038 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:189
  STEP: Creating a kubernetes client @ 07/20/24 13:57:43.198
  Jul 20 13:57:43.198: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename var-expansion @ 07/20/24 13:57:43.199
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:57:43.209
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:57:43.211
  E0720 13:57:43.312938      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0720 13:57:44.313287      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 20 13:57:45.231: INFO: Deleting pod "var-expansion-3bc1bbf2-6fb7-406c-a8a6-34c60a3714c1" in namespace "var-expansion-9818"
  Jul 20 13:57:45.239: INFO: Wait up to 5m0s for pod "var-expansion-3bc1bbf2-6fb7-406c-a8a6-34c60a3714c1" to be fully deleted
  E0720 13:57:45.313713      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0720 13:57:46.313815      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 20 13:57:47.247: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9818" for this suite. @ 07/20/24 13:57:47.25
• [4.059 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 07/20/24 13:57:47.257
  Jul 20 13:57:47.257: INFO: >>> kubeConfig: /tmp/kubeconfig-2938922521
  STEP: Building a namespace api object, basename podtemplate @ 07/20/24 13:57:47.258
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/20/24 13:57:47.274
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/20/24 13:57:47.277
  STEP: Create a pod template @ 07/20/24 13:57:47.28
  STEP: Replace a pod template @ 07/20/24 13:57:47.284
  Jul 20 13:57:47.292: INFO: Found updated podtemplate annotation: "true"

  Jul 20 13:57:47.292: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-6060" for this suite. @ 07/20/24 13:57:47.294
• [0.044 seconds]
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:88
  Jul 20 13:57:47.301: INFO: Running AfterSuite actions on node 1
  Jul 20 13:57:47.301: INFO: Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:161
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:621
  E0720 13:57:47.333301      19 retrywatcher.go:129] "Watch failed" err="context canceled"
[ReportAfterSuite] PASSED [0.049 seconds]
------------------------------

Ran 388 of 7408 Specs in 6372.292 seconds
SUCCESS! -- 388 Passed | 0 Failed | 0 Pending | 7020 Skipped
PASS

Ginkgo ran 1 suite in 1h46m13.214634998s
Test Suite Passed
