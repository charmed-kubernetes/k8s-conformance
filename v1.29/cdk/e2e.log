  I0706 12:13:35.605908      21 e2e.go:117] Starting e2e run "51a40ce1-432d-4eda-8cf7-3e2d518ce5c2" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1720268015 - will randomize all specs

Will run 388 of 7408 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:157
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:77
  Jul  6 12:13:35.753: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  Jul  6 12:13:35.754: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
  Jul  6 12:13:35.785: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  Jul  6 12:13:35.790: INFO: 5 / 5 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
  Jul  6 12:13:35.790: INFO: e2e test version: v1.29.6
  Jul  6 12:13:35.791: INFO: kube-apiserver version: v1.29.6
  Jul  6 12:13:35.791: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  Jul  6 12:13:35.795: INFO: Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.042 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 07/06/24 12:13:36.046
  Jul  6 12:13:36.046: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename lease-test @ 07/06/24 12:13:36.046
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:13:36.062
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:13:36.066
  Jul  6 12:13:36.116: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-3473" for this suite. @ 07/06/24 12:13:36.119
• [0.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 07/06/24 12:13:36.125
  Jul  6 12:13:36.125: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename subpath @ 07/06/24 12:13:36.126
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:13:36.14
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:13:36.144
  STEP: Setting up data @ 07/06/24 12:13:36.146
  STEP: Creating pod pod-subpath-test-secret-6s4p @ 07/06/24 12:13:36.156
  STEP: Creating a pod to test atomic-volume-subpath @ 07/06/24 12:13:36.156
  STEP: Saw pod success @ 07/06/24 12:14:02.225
  Jul  6 12:14:02.228: INFO: Trying to get logs from node ip-172-31-24-251 pod pod-subpath-test-secret-6s4p container test-container-subpath-secret-6s4p: <nil>
  STEP: delete the pod @ 07/06/24 12:14:02.242
  STEP: Deleting pod pod-subpath-test-secret-6s4p @ 07/06/24 12:14:02.259
  Jul  6 12:14:02.259: INFO: Deleting pod "pod-subpath-test-secret-6s4p" in namespace "subpath-5108"
  Jul  6 12:14:02.261: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-5108" for this suite. @ 07/06/24 12:14:02.265
• [26.146 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:219
  STEP: Creating a kubernetes client @ 07/06/24 12:14:02.271
  Jul  6 12:14:02.271: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename downward-api @ 07/06/24 12:14:02.272
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:14:02.286
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:14:02.289
  STEP: Creating a pod to test downward api env vars @ 07/06/24 12:14:02.291
  STEP: Saw pod success @ 07/06/24 12:14:06.313
  Jul  6 12:14:06.316: INFO: Trying to get logs from node ip-172-31-24-251 pod downward-api-caef5e16-cf4c-4372-9642-aa829af011ef container dapi-container: <nil>
  STEP: delete the pod @ 07/06/24 12:14:06.322
  Jul  6 12:14:06.337: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8177" for this suite. @ 07/06/24 12:14:06.341
• [4.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 07/06/24 12:14:06.349
  Jul  6 12:14:06.349: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/06/24 12:14:06.349
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:14:06.362
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:14:06.365
  Jul  6 12:14:06.367: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  Jul  6 12:14:07.388: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-444" for this suite. @ 07/06/24 12:14:07.391
• [1.048 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 07/06/24 12:14:07.397
  Jul  6 12:14:07.397: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename conformance-tests @ 07/06/24 12:14:07.397
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:14:07.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:14:07.414
  STEP: Getting node addresses @ 07/06/24 12:14:07.419
  Jul  6 12:14:07.419: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  Jul  6 12:14:07.423: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-6951" for this suite. @ 07/06/24 12:14:07.427
• [0.036 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:695
  STEP: Creating a kubernetes client @ 07/06/24 12:14:07.433
  Jul  6 12:14:07.433: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename resourcequota @ 07/06/24 12:14:07.433
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:14:07.447
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:14:07.451
  STEP: Creating a ResourceQuota with terminating scope @ 07/06/24 12:14:07.453
  STEP: Ensuring ResourceQuota status is calculated @ 07/06/24 12:14:07.46
  STEP: Creating a ResourceQuota with not terminating scope @ 07/06/24 12:14:09.463
  STEP: Ensuring ResourceQuota status is calculated @ 07/06/24 12:14:09.469
  STEP: Creating a long running pod @ 07/06/24 12:14:11.472
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 07/06/24 12:14:11.486
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 07/06/24 12:14:13.489
  STEP: Deleting the pod @ 07/06/24 12:14:15.493
  STEP: Ensuring resource quota status released the pod usage @ 07/06/24 12:14:15.505
  STEP: Creating a terminating pod @ 07/06/24 12:14:17.508
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 07/06/24 12:14:17.52
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 07/06/24 12:14:19.525
  STEP: Deleting the pod @ 07/06/24 12:14:21.529
  STEP: Ensuring resource quota status released the pod usage @ 07/06/24 12:14:21.544
  Jul  6 12:14:23.548: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-15" for this suite. @ 07/06/24 12:14:23.551
• [16.126 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 07/06/24 12:14:23.559
  Jul  6 12:14:23.559: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename pods @ 07/06/24 12:14:23.56
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:14:23.571
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:14:23.574
  STEP: Create set of pods @ 07/06/24 12:14:23.577
  Jul  6 12:14:23.584: INFO: created test-pod-1
  Jul  6 12:14:23.592: INFO: created test-pod-2
  Jul  6 12:14:23.600: INFO: created test-pod-3
  STEP: waiting for all 3 pods to be running @ 07/06/24 12:14:23.6
  STEP: waiting for all pods to be deleted @ 07/06/24 12:14:27.659
  Jul  6 12:14:27.666: INFO: Pod quantity 3 is different from expected quantity 0
  Jul  6 12:14:28.663: INFO: Pod quantity 1 is different from expected quantity 0
  Jul  6 12:14:29.663: INFO: Pod quantity 1 is different from expected quantity 0
  Jul  6 12:14:30.662: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4235" for this suite. @ 07/06/24 12:14:30.665
• [7.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:855
  STEP: Creating a kubernetes client @ 07/06/24 12:14:30.671
  Jul  6 12:14:30.671: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename job @ 07/06/24 12:14:30.671
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:14:30.685
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:14:30.687
  STEP: Creating a suspended job @ 07/06/24 12:14:30.692
  STEP: Patching the Job @ 07/06/24 12:14:30.698
  STEP: Watching for Job to be patched @ 07/06/24 12:14:30.707
  Jul  6 12:14:30.709: INFO: Event ADDED observed for Job e2e-9snkt in namespace job-9081 with labels: map[e2e-job-label:e2e-9snkt] and annotations: map[]
  Jul  6 12:14:30.709: INFO: Event MODIFIED found for Job e2e-9snkt in namespace job-9081 with labels: map[e2e-9snkt:patched e2e-job-label:e2e-9snkt] and annotations: map[]
  STEP: Updating the job @ 07/06/24 12:14:30.709
  STEP: Watching for Job to be updated @ 07/06/24 12:14:30.718
  Jul  6 12:14:30.719: INFO: Event MODIFIED found for Job e2e-9snkt in namespace job-9081 with labels: map[e2e-9snkt:patched e2e-job-label:e2e-9snkt] and annotations: map[updated:true]
  Jul  6 12:14:30.719: INFO: Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 07/06/24 12:14:30.719
  Jul  6 12:14:30.722: INFO: Job: e2e-9snkt as labels: map[e2e-9snkt:patched e2e-job-label:e2e-9snkt]
  STEP: Waiting for job to complete @ 07/06/24 12:14:30.722
  STEP: Delete a job collection with a labelselector @ 07/06/24 12:14:38.726
  STEP: Watching for Job to be deleted @ 07/06/24 12:14:38.734
  Jul  6 12:14:38.736: INFO: Event MODIFIED observed for Job e2e-9snkt in namespace job-9081 with labels: map[e2e-9snkt:patched e2e-job-label:e2e-9snkt] and annotations: map[updated:true]
  Jul  6 12:14:38.736: INFO: Event MODIFIED observed for Job e2e-9snkt in namespace job-9081 with labels: map[e2e-9snkt:patched e2e-job-label:e2e-9snkt] and annotations: map[updated:true]
  Jul  6 12:14:38.736: INFO: Event MODIFIED observed for Job e2e-9snkt in namespace job-9081 with labels: map[e2e-9snkt:patched e2e-job-label:e2e-9snkt] and annotations: map[updated:true]
  Jul  6 12:14:38.736: INFO: Event MODIFIED observed for Job e2e-9snkt in namespace job-9081 with labels: map[e2e-9snkt:patched e2e-job-label:e2e-9snkt] and annotations: map[updated:true]
  Jul  6 12:14:38.736: INFO: Event MODIFIED observed for Job e2e-9snkt in namespace job-9081 with labels: map[e2e-9snkt:patched e2e-job-label:e2e-9snkt] and annotations: map[updated:true]
  Jul  6 12:14:38.736: INFO: Event MODIFIED observed for Job e2e-9snkt in namespace job-9081 with labels: map[e2e-9snkt:patched e2e-job-label:e2e-9snkt] and annotations: map[updated:true]
  Jul  6 12:14:38.736: INFO: Event MODIFIED observed for Job e2e-9snkt in namespace job-9081 with labels: map[e2e-9snkt:patched e2e-job-label:e2e-9snkt] and annotations: map[updated:true]
  Jul  6 12:14:38.736: INFO: Event MODIFIED observed for Job e2e-9snkt in namespace job-9081 with labels: map[e2e-9snkt:patched e2e-job-label:e2e-9snkt] and annotations: map[updated:true]
  Jul  6 12:14:38.736: INFO: Event MODIFIED observed for Job e2e-9snkt in namespace job-9081 with labels: map[e2e-9snkt:patched e2e-job-label:e2e-9snkt] and annotations: map[updated:true]
  Jul  6 12:14:38.736: INFO: Event DELETED found for Job e2e-9snkt in namespace job-9081 with labels: map[e2e-9snkt:patched e2e-job-label:e2e-9snkt] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 07/06/24 12:14:38.736
  Jul  6 12:14:38.739: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9081" for this suite. @ 07/06/24 12:14:38.744
• [8.081 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:775
  STEP: Creating a kubernetes client @ 07/06/24 12:14:38.751
  Jul  6 12:14:38.752: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename services @ 07/06/24 12:14:38.752
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:14:38.77
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:14:38.772
  Jul  6 12:14:38.777: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3423" for this suite. @ 07/06/24 12:14:38.779
• [0.033 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 07/06/24 12:14:38.785
  Jul  6 12:14:38.785: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename dns @ 07/06/24 12:14:38.785
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:14:38.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:14:38.798
  STEP: Creating a test headless service @ 07/06/24 12:14:38.8
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5309 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-5309;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5309 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-5309;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5309.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-5309.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5309.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-5309.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-5309.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-5309.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-5309.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-5309.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-5309.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-5309.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-5309.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-5309.svc;check="$$(dig +notcp +noall +answer +search 55.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.55_udp@PTR;check="$$(dig +tcp +noall +answer +search 55.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.55_tcp@PTR;sleep 1; done
   @ 07/06/24 12:14:38.822
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5309 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-5309;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5309 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-5309;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5309.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-5309.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5309.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-5309.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-5309.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-5309.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-5309.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-5309.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-5309.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-5309.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-5309.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-5309.svc;check="$$(dig +notcp +noall +answer +search 55.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.55_udp@PTR;check="$$(dig +tcp +noall +answer +search 55.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.55_tcp@PTR;sleep 1; done
   @ 07/06/24 12:14:38.823
  STEP: creating a pod to probe DNS @ 07/06/24 12:14:38.823
  STEP: submitting the pod to kubernetes @ 07/06/24 12:14:38.823
  STEP: retrieving the pod @ 07/06/24 12:14:44.849
  STEP: looking for the results for each expected name from probers @ 07/06/24 12:14:44.852
  Jul  6 12:14:44.856: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-5309/dns-test-ca402985-f400-4ccd-802b-360301a74aac: the server could not find the requested resource (get pods dns-test-ca402985-f400-4ccd-802b-360301a74aac)
  Jul  6 12:14:44.860: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-5309/dns-test-ca402985-f400-4ccd-802b-360301a74aac: the server could not find the requested resource (get pods dns-test-ca402985-f400-4ccd-802b-360301a74aac)
  Jul  6 12:14:44.876: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-5309.svc from pod dns-5309/dns-test-ca402985-f400-4ccd-802b-360301a74aac: the server could not find the requested resource (get pods dns-test-ca402985-f400-4ccd-802b-360301a74aac)
  Jul  6 12:14:44.879: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-5309.svc from pod dns-5309/dns-test-ca402985-f400-4ccd-802b-360301a74aac: the server could not find the requested resource (get pods dns-test-ca402985-f400-4ccd-802b-360301a74aac)
  Jul  6 12:14:44.895: INFO: Unable to read jessie_udp@dns-test-service from pod dns-5309/dns-test-ca402985-f400-4ccd-802b-360301a74aac: the server could not find the requested resource (get pods dns-test-ca402985-f400-4ccd-802b-360301a74aac)
  Jul  6 12:14:44.898: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-5309/dns-test-ca402985-f400-4ccd-802b-360301a74aac: the server could not find the requested resource (get pods dns-test-ca402985-f400-4ccd-802b-360301a74aac)
  Jul  6 12:14:44.901: INFO: Unable to read jessie_udp@dns-test-service.dns-5309 from pod dns-5309/dns-test-ca402985-f400-4ccd-802b-360301a74aac: the server could not find the requested resource (get pods dns-test-ca402985-f400-4ccd-802b-360301a74aac)
  Jul  6 12:14:44.904: INFO: Unable to read jessie_tcp@dns-test-service.dns-5309 from pod dns-5309/dns-test-ca402985-f400-4ccd-802b-360301a74aac: the server could not find the requested resource (get pods dns-test-ca402985-f400-4ccd-802b-360301a74aac)
  Jul  6 12:14:44.908: INFO: Unable to read jessie_udp@dns-test-service.dns-5309.svc from pod dns-5309/dns-test-ca402985-f400-4ccd-802b-360301a74aac: the server could not find the requested resource (get pods dns-test-ca402985-f400-4ccd-802b-360301a74aac)
  Jul  6 12:14:44.911: INFO: Unable to read jessie_tcp@dns-test-service.dns-5309.svc from pod dns-5309/dns-test-ca402985-f400-4ccd-802b-360301a74aac: the server could not find the requested resource (get pods dns-test-ca402985-f400-4ccd-802b-360301a74aac)
  Jul  6 12:14:44.913: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-5309.svc from pod dns-5309/dns-test-ca402985-f400-4ccd-802b-360301a74aac: the server could not find the requested resource (get pods dns-test-ca402985-f400-4ccd-802b-360301a74aac)
  Jul  6 12:14:44.917: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-5309.svc from pod dns-5309/dns-test-ca402985-f400-4ccd-802b-360301a74aac: the server could not find the requested resource (get pods dns-test-ca402985-f400-4ccd-802b-360301a74aac)
  Jul  6 12:14:44.929: INFO: Lookups using dns-5309/dns-test-ca402985-f400-4ccd-802b-360301a74aac failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@_http._tcp.dns-test-service.dns-5309.svc wheezy_tcp@_http._tcp.dns-test-service.dns-5309.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-5309 jessie_tcp@dns-test-service.dns-5309 jessie_udp@dns-test-service.dns-5309.svc jessie_tcp@dns-test-service.dns-5309.svc jessie_udp@_http._tcp.dns-test-service.dns-5309.svc jessie_tcp@_http._tcp.dns-test-service.dns-5309.svc]

  Jul  6 12:14:44.934: INFO: Pod client logs for webserver: 
  Jul  6 12:14:44.940: INFO: Pod client logs for querier: 
  Jul  6 12:14:44.945: INFO: Pod client logs for jessie-querier: 
  Jul  6 12:14:49.937: INFO: DNS probes using dns-5309/dns-test-ca402985-f400-4ccd-802b-360301a74aac succeeded

  STEP: deleting the pod @ 07/06/24 12:14:49.937
  STEP: deleting the test service @ 07/06/24 12:14:49.952
  STEP: deleting the test headless service @ 07/06/24 12:14:49.979
  Jul  6 12:14:49.993: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5309" for this suite. @ 07/06/24 12:14:49.996
• [11.218 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 07/06/24 12:14:50.003
  Jul  6 12:14:50.003: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename deployment @ 07/06/24 12:14:50.003
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:14:50.019
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:14:50.022
  Jul  6 12:14:50.024: INFO: Creating deployment "webserver-deployment"
  Jul  6 12:14:50.030: INFO: Waiting for observed generation 1
  Jul  6 12:14:52.037: INFO: Waiting for all required pods to come up
  Jul  6 12:14:52.041: INFO: Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 07/06/24 12:14:52.041
  Jul  6 12:14:54.052: INFO: Waiting for deployment "webserver-deployment" to complete
  Jul  6 12:14:54.056: INFO: Updating deployment "webserver-deployment" with a non-existent image
  Jul  6 12:14:54.067: INFO: Updating deployment webserver-deployment
  Jul  6 12:14:54.067: INFO: Waiting for observed generation 2
  Jul  6 12:14:56.075: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  Jul  6 12:14:56.077: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
  Jul  6 12:14:56.080: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Jul  6 12:14:56.088: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  Jul  6 12:14:56.088: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
  Jul  6 12:14:56.091: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Jul  6 12:14:56.096: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  Jul  6 12:14:56.096: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
  Jul  6 12:14:56.103: INFO: Updating deployment webserver-deployment
  Jul  6 12:14:56.103: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  Jul  6 12:14:56.116: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
  Jul  6 12:14:56.125: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
  Jul  6 12:14:56.150: INFO: Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3628",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "92912b50-3c24-43c0-aa62-569d0aa66c91",
      ResourceVersion: (string) (len=4) "5132",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855864890,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 5,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864890,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=59) "ReplicaSet \"webserver-deployment-9b4f5bf69\" is progressing."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jul  6 12:14:56.175: INFO: New ReplicaSet "webserver-deployment-9b4f5bf69" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3628",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "eb7f68ec-eb7a-4323-8932-f60eb84fd31f",
      ResourceVersion: (string) (len=4) "5125",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855864894,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "92912b50-3c24-43c0-aa62-569d0aa66c91",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 32 39 31 32 62  35 30 2d 33 63 32 34 2d  |\"92912b50-3c24-|
              00000120  34 33 63 30 2d 61 61 36  32 2d 35 36 39 64 30 61  |43c0-aa62-569d0a|
              00000130  61 36 36 63 39 31 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |a66c91\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jul  6 12:14:56.175: INFO: All old ReplicaSets of Deployment "webserver-deployment":
  Jul  6 12:14:56.176: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3628",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2824f6e8-7ff3-4e04-bc30-1136456b6985",
      ResourceVersion: (string) (len=4) "5123",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855864890,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "92912b50-3c24-43c0-aa62-569d0aa66c91",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 32 39 31 32 62  35 30 2d 33 63 32 34 2d  |\"92912b50-3c24-|
              00000120  34 33 63 30 2d 61 61 36  32 2d 35 36 39 64 30 61  |43c0-aa62-569d0a|
              00000130  61 36 36 63 39 31 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |a66c91\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jul  6 12:14:56.195: INFO: Pod "webserver-deployment-557759b7c7-4jwnj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-4jwnj",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3628",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fa8df3df-0501-4af3-9148-ccaac3e7abf2",
      ResourceVersion: (string) (len=4) "5157",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855864896,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "2824f6e8-7ff3-4e04-bc30-1136456b6985",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 38  32 34 66 36 65 38 2d 37  |d\":\"2824f6e8-7|
              00000090  66 66 33 2d 34 65 30 34  2d 62 63 33 30 2d 31 31  |ff3-4e04-bc30-11|
              000000a0  33 36 34 35 36 62 36 39  38 35 5c 22 7d 22 3a 7b  |36456b6985\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rbghb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rbghb",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-24-251",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul  6 12:14:56.196: INFO: Pod "webserver-deployment-557759b7c7-4q6kz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-4q6kz",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3628",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b634e216-d298-4b37-b53e-b0ac21223b2d",
      ResourceVersion: (string) (len=4) "5165",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855864896,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "2824f6e8-7ff3-4e04-bc30-1136456b6985",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 38  32 34 66 36 65 38 2d 37  |d\":\"2824f6e8-7|
              00000090  66 66 33 2d 34 65 30 34  2d 62 63 33 30 2d 31 31  |ff3-4e04-bc30-11|
              000000a0  33 36 34 35 36 62 36 39  38 35 5c 22 7d 22 3a 7b  |36456b6985\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-b4gkw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-b4gkw",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul  6 12:14:56.196: INFO: Pod "webserver-deployment-557759b7c7-5lfnl" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-5lfnl",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3628",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1d4d70c5-0225-41d2-a0ea-b53d47132439",
      ResourceVersion: (string) (len=4) "4958",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855864890,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "2824f6e8-7ff3-4e04-bc30-1136456b6985",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864890,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 38  32 34 66 36 65 38 2d 37  |d\":\"2824f6e8-7|
              00000090  66 66 33 2d 34 65 30 34  2d 62 63 33 30 2d 31 31  |ff3-4e04-bc30-11|
              000000a0  33 36 34 35 36 62 36 39  38 35 5c 22 7d 22 3a 7b  |36456b6985\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864892,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 30  34 2e 37 32 5c 22 7d 22  |2.168.204.72\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gbl47",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gbl47",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-90-155",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864892,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864890,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864892,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864892,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864890,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.90.155",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.90.155"
        }
      },
      PodIP: (string) (len=14) "192.168.204.72",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.204.72"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855864890,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63855864892,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://c1244b20a73e55415cf915c1d8d338dd96f5c30e90803376ab1b1075a1003c60",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul  6 12:14:56.197: INFO: Pod "webserver-deployment-557759b7c7-5rlvw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-5rlvw",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3628",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "aceede50-0b01-4f5a-9f53-51b82f54a969",
      ResourceVersion: (string) (len=4) "5168",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855864896,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "2824f6e8-7ff3-4e04-bc30-1136456b6985",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 38  32 34 66 36 65 38 2d 37  |d\":\"2824f6e8-7|
              00000090  66 66 33 2d 34 65 30 34  2d 62 63 33 30 2d 31 31  |ff3-4e04-bc30-11|
              000000a0  33 36 34 35 36 62 36 39  38 35 5c 22 7d 22 3a 7b  |36456b6985\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kfxq9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kfxq9",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul  6 12:14:56.198: INFO: Pod "webserver-deployment-557759b7c7-6khgf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-6khgf",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3628",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "32ce1161-b2ef-499f-ba5c-a6f8732943ac",
      ResourceVersion: (string) (len=4) "5163",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855864896,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "2824f6e8-7ff3-4e04-bc30-1136456b6985",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 38  32 34 66 36 65 38 2d 37  |d\":\"2824f6e8-7|
              00000090  66 66 33 2d 34 65 30 34  2d 62 63 33 30 2d 31 31  |ff3-4e04-bc30-11|
              000000a0  33 36 34 35 36 62 36 39  38 35 5c 22 7d 22 3a 7b  |36456b6985\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kprgw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kprgw",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-9-199",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.9.199",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.9.199"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855864896,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul  6 12:14:56.199: INFO: Pod "webserver-deployment-557759b7c7-8nnl9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-8nnl9",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3628",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9ad7d888-1aaf-41db-918b-8917a6a78805",
      ResourceVersion: (string) (len=4) "5171",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855864896,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "2824f6e8-7ff3-4e04-bc30-1136456b6985",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 38  32 34 66 36 65 38 2d 37  |d\":\"2824f6e8-7|
              00000090  66 66 33 2d 34 65 30 34  2d 62 63 33 30 2d 31 31  |ff3-4e04-bc30-11|
              000000a0  33 36 34 35 36 62 36 39  38 35 5c 22 7d 22 3a 7b  |36456b6985\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fnzql",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fnzql",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-24-251",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.24.251",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.24.251"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855864896,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul  6 12:14:56.201: INFO: Pod "webserver-deployment-557759b7c7-gcgcv" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-gcgcv",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3628",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a5bd63d2-e718-4a01-ab11-6cf7a48a7147",
      ResourceVersion: (string) (len=4) "4991",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855864890,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "2824f6e8-7ff3-4e04-bc30-1136456b6985",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864890,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 38  32 34 66 36 65 38 2d 37  |d\":\"2824f6e8-7|
              00000090  66 66 33 2d 34 65 30 34  2d 62 63 33 30 2d 31 31  |ff3-4e04-bc30-11|
              000000a0  33 36 34 35 36 62 36 39  38 35 5c 22 7d 22 3a 7b  |36456b6985\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864893,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 34  30 2e 31 33 5c 22 7d 22  |2.168.140.13\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qlwbs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qlwbs",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-24-251",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864893,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864890,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864893,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864893,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864890,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.24.251",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.24.251"
        }
      },
      PodIP: (string) (len=14) "192.168.140.13",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.140.13"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855864890,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63855864893,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://30ee885de608ba784e28374fab0cc58e9ec8d9c6d17667db7bb674e61612173b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul  6 12:14:56.206: INFO: Pod "webserver-deployment-557759b7c7-gn5t4" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-gn5t4",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3628",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "da83e83e-b4e9-417c-9c81-148d66bd2a4c",
      ResourceVersion: (string) (len=4) "4974",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855864890,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "2824f6e8-7ff3-4e04-bc30-1136456b6985",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864890,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 38  32 34 66 36 65 38 2d 37  |d\":\"2824f6e8-7|
              00000090  66 66 33 2d 34 65 30 34  2d 62 63 33 30 2d 31 31  |ff3-4e04-bc30-11|
              000000a0  33 36 34 35 36 62 36 39  38 35 5c 22 7d 22 3a 7b  |36456b6985\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864893,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 31  32 2e 37 30 5c 22 7d 22  |2.168.112.70\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-58zjw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-58zjw",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-9-199",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864893,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864890,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864893,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864893,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864890,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.9.199",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.9.199"
        }
      },
      PodIP: (string) (len=14) "192.168.112.70",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.112.70"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855864890,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63855864893,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://27836059d55bdce5c37574a153eea19887502b7411e9bf303bf1c86538952bf9",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul  6 12:14:56.207: INFO: Pod "webserver-deployment-557759b7c7-hbhfh" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-hbhfh",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3628",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b535f3a2-f796-49a3-8b5e-e30329b39ef3",
      ResourceVersion: (string) (len=4) "4952",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855864890,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "2824f6e8-7ff3-4e04-bc30-1136456b6985",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864890,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 38  32 34 66 36 65 38 2d 37  |d\":\"2824f6e8-7|
              00000090  66 66 33 2d 34 65 30 34  2d 62 63 33 30 2d 31 31  |ff3-4e04-bc30-11|
              000000a0  33 36 34 35 36 62 36 39  38 35 5c 22 7d 22 3a 7b  |36456b6985\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864892,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 30  34 2e 37 30 5c 22 7d 22  |2.168.204.70\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lgpwk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lgpwk",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-90-155",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864892,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864890,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864892,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864892,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864890,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.90.155",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.90.155"
        }
      },
      PodIP: (string) (len=14) "192.168.204.70",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.204.70"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855864890,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63855864892,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://3bd13945f5492425f850e8daf5435d614885f05df2bb41543df37fad0543fa23",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul  6 12:14:56.209: INFO: Pod "webserver-deployment-557759b7c7-hnch5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-hnch5",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3628",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "51f27fcd-9cbb-4843-a158-87fc3f4e21ae",
      ResourceVersion: (string) (len=4) "5153",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855864896,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "2824f6e8-7ff3-4e04-bc30-1136456b6985",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 38  32 34 66 36 65 38 2d 37  |d\":\"2824f6e8-7|
              00000090  66 66 33 2d 34 65 30 34  2d 62 63 33 30 2d 31 31  |ff3-4e04-bc30-11|
              000000a0  33 36 34 35 36 62 36 39  38 35 5c 22 7d 22 3a 7b  |36456b6985\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kwpsd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kwpsd",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-90-155",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul  6 12:14:56.209: INFO: Pod "webserver-deployment-557759b7c7-hplbl" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-hplbl",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3628",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5be6eee1-4fc1-4c9e-a326-a12f7e2cb5c4",
      ResourceVersion: (string) (len=4) "4978",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855864890,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "2824f6e8-7ff3-4e04-bc30-1136456b6985",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864890,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 38  32 34 66 36 65 38 2d 37  |d\":\"2824f6e8-7|
              00000090  66 66 33 2d 34 65 30 34  2d 62 63 33 30 2d 31 31  |ff3-4e04-bc30-11|
              000000a0  33 36 34 35 36 62 36 39  38 35 5c 22 7d 22 3a 7b  |36456b6985\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864893,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 31  32 2e 36 38 5c 22 7d 22  |2.168.112.68\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-x7kdb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-x7kdb",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-9-199",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864893,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864890,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864893,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864893,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864890,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.9.199",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.9.199"
        }
      },
      PodIP: (string) (len=14) "192.168.112.68",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.112.68"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855864890,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63855864892,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://5ed9c5c5046f45cf13fe943748d97a9ae65984d09358634c64dde05043b3e566",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul  6 12:14:56.213: INFO: Pod "webserver-deployment-557759b7c7-k7m29" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-k7m29",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3628",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "25c8845d-f464-40fd-a428-dde6e9fc4562",
      ResourceVersion: (string) (len=4) "5142",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855864896,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "2824f6e8-7ff3-4e04-bc30-1136456b6985",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 38  32 34 66 36 65 38 2d 37  |d\":\"2824f6e8-7|
              00000090  66 66 33 2d 34 65 30 34  2d 62 63 33 30 2d 31 31  |ff3-4e04-bc30-11|
              000000a0  33 36 34 35 36 62 36 39  38 35 5c 22 7d 22 3a 7b  |36456b6985\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-74t5c",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-74t5c",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-24-251",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.24.251",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.24.251"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855864896,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul  6 12:14:56.217: INFO: Pod "webserver-deployment-557759b7c7-k7xbn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-k7xbn",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3628",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e754a22d-68d9-4403-ae44-a48f610467e5",
      ResourceVersion: (string) (len=4) "5160",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855864896,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "2824f6e8-7ff3-4e04-bc30-1136456b6985",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 38  32 34 66 36 65 38 2d 37  |d\":\"2824f6e8-7|
              00000090  66 66 33 2d 34 65 30 34  2d 62 63 33 30 2d 31 31  |ff3-4e04-bc30-11|
              000000a0  33 36 34 35 36 62 36 39  38 35 5c 22 7d 22 3a 7b  |36456b6985\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wjz4v",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wjz4v",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-90-155",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul  6 12:14:56.218: INFO: Pod "webserver-deployment-557759b7c7-ktlxw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-ktlxw",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3628",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "89743349-773f-4c13-a5b5-db13ed2b030e",
      ResourceVersion: (string) (len=4) "5169",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855864896,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "2824f6e8-7ff3-4e04-bc30-1136456b6985",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 38  32 34 66 36 65 38 2d 37  |d\":\"2824f6e8-7|
              00000090  66 66 33 2d 34 65 30 34  2d 62 63 33 30 2d 31 31  |ff3-4e04-bc30-11|
              000000a0  33 36 34 35 36 62 36 39  38 35 5c 22 7d 22 3a 7b  |36456b6985\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cjdcv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cjdcv",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul  6 12:14:56.219: INFO: Pod "webserver-deployment-557759b7c7-p8787" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-p8787",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3628",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "05b5cee2-5f5e-43b5-b7b5-885b3b6f0eca",
      ResourceVersion: (string) (len=4) "5161",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855864896,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "2824f6e8-7ff3-4e04-bc30-1136456b6985",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 38  32 34 66 36 65 38 2d 37  |d\":\"2824f6e8-7|
              00000090  66 66 33 2d 34 65 30 34  2d 62 63 33 30 2d 31 31  |ff3-4e04-bc30-11|
              000000a0  33 36 34 35 36 62 36 39  38 35 5c 22 7d 22 3a 7b  |36456b6985\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-g6wkn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-g6wkn",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul  6 12:14:56.220: INFO: Pod "webserver-deployment-557759b7c7-pfx8t" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-pfx8t",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3628",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "24f11d3c-5c29-47a8-a238-518669b24351",
      ResourceVersion: (string) (len=4) "5164",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855864896,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "2824f6e8-7ff3-4e04-bc30-1136456b6985",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 38  32 34 66 36 65 38 2d 37  |d\":\"2824f6e8-7|
              00000090  66 66 33 2d 34 65 30 34  2d 62 63 33 30 2d 31 31  |ff3-4e04-bc30-11|
              000000a0  33 36 34 35 36 62 36 39  38 35 5c 22 7d 22 3a 7b  |36456b6985\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lmb4h",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lmb4h",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul  6 12:14:56.221: INFO: Pod "webserver-deployment-557759b7c7-qdtv2" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-qdtv2",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3628",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f6d50f45-01f6-4147-9d9e-77399f8aa96c",
      ResourceVersion: (string) (len=4) "4994",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855864890,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "2824f6e8-7ff3-4e04-bc30-1136456b6985",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864890,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 38  32 34 66 36 65 38 2d 37  |d\":\"2824f6e8-7|
              00000090  66 66 33 2d 34 65 30 34  2d 62 63 33 30 2d 31 31  |ff3-4e04-bc30-11|
              000000a0  33 36 34 35 36 62 36 39  38 35 5c 22 7d 22 3a 7b  |36456b6985\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864893,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 34  30 2e 31 32 5c 22 7d 22  |2.168.140.12\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mrwnp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mrwnp",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-24-251",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864893,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864890,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864893,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864893,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864890,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.24.251",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.24.251"
        }
      },
      PodIP: (string) (len=14) "192.168.140.12",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.140.12"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855864890,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63855864893,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://2065e417c4c34cf0ed9dbe582c1df1b936ef4dc70266344d785986101cddf007",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul  6 12:14:56.227: INFO: Pod "webserver-deployment-557759b7c7-shgw7" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-shgw7",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3628",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d43b8b15-5d31-4cb8-8aab-b24377cc9145",
      ResourceVersion: (string) (len=4) "4981",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855864890,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "2824f6e8-7ff3-4e04-bc30-1136456b6985",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864890,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 38  32 34 66 36 65 38 2d 37  |d\":\"2824f6e8-7|
              00000090  66 66 33 2d 34 65 30 34  2d 62 63 33 30 2d 31 31  |ff3-4e04-bc30-11|
              000000a0  33 36 34 35 36 62 36 39  38 35 5c 22 7d 22 3a 7b  |36456b6985\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864893,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 31  32 2e 36 39 5c 22 7d 22  |2.168.112.69\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jgf74",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jgf74",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-9-199",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864893,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864890,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864893,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864893,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864890,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.9.199",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.9.199"
        }
      },
      PodIP: (string) (len=14) "192.168.112.69",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.112.69"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855864890,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63855864893,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://5ccae5d4806c51cf25f48e33ecc3689a8ead9e757636f4d7a83a2e1ca5106b7e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul  6 12:14:56.228: INFO: Pod "webserver-deployment-557759b7c7-tmzlr" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-tmzlr",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3628",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fae38afc-0433-41a0-8f0f-f017d81cbfba",
      ResourceVersion: (string) (len=4) "4956",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855864890,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "2824f6e8-7ff3-4e04-bc30-1136456b6985",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864890,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 38  32 34 66 36 65 38 2d 37  |d\":\"2824f6e8-7|
              00000090  66 66 33 2d 34 65 30 34  2d 62 63 33 30 2d 31 31  |ff3-4e04-bc30-11|
              000000a0  33 36 34 35 36 62 36 39  38 35 5c 22 7d 22 3a 7b  |36456b6985\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864892,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 30  34 2e 37 31 5c 22 7d 22  |2.168.204.71\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-l7dwt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-l7dwt",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-90-155",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864892,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864890,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864892,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864892,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864890,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.90.155",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.90.155"
        }
      },
      PodIP: (string) (len=14) "192.168.204.71",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.204.71"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855864890,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63855864892,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://72ab60a73fcea135d5899e7a756a22e032fe7ab96712abc5b16fc44276ad68a5",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul  6 12:14:56.232: INFO: Pod "webserver-deployment-557759b7c7-xv7r6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-xv7r6",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3628",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "71da9b7e-0ffa-43c6-9e9d-4410222e8915",
      ResourceVersion: (string) (len=4) "5159",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855864896,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "2824f6e8-7ff3-4e04-bc30-1136456b6985",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 38  32 34 66 36 65 38 2d 37  |d\":\"2824f6e8-7|
              00000090  66 66 33 2d 34 65 30 34  2d 62 63 33 30 2d 31 31  |ff3-4e04-bc30-11|
              000000a0  33 36 34 35 36 62 36 39  38 35 5c 22 7d 22 3a 7b  |36456b6985\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vpsgv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vpsgv",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-9-199",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul  6 12:14:56.232: INFO: Pod "webserver-deployment-9b4f5bf69-2x6vz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-2x6vz",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3628",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "79c83586-7cc1-464b-884a-5f3655a612db",
      ResourceVersion: (string) (len=4) "5167",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855864896,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "eb7f68ec-eb7a-4323-8932-f60eb84fd31f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 62  37 66 36 38 65 63 2d 65  |d\":\"eb7f68ec-e|
              00000090  62 37 61 2d 34 33 32 33  2d 38 39 33 32 2d 66 36  |b7a-4323-8932-f6|
              000000a0  30 65 62 38 34 66 64 33  31 66 5c 22 7d 22 3a 7b  |0eb84fd31f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ttpkv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ttpkv",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-90-155",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul  6 12:14:56.233: INFO: Pod "webserver-deployment-9b4f5bf69-9t6ct" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-9t6ct",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3628",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "416f82b7-8ea0-4c2a-b801-984b137ea854",
      ResourceVersion: (string) (len=4) "5115",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855864894,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "eb7f68ec-eb7a-4323-8932-f60eb84fd31f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 62  37 66 36 38 65 63 2d 65  |d\":\"eb7f68ec-e|
              00000090  62 37 61 2d 34 33 32 33  2d 38 39 33 32 2d 66 36  |b7a-4323-8932-f6|
              000000a0  30 65 62 38 34 66 64 33  31 66 5c 22 7d 22 3a 7b  |0eb84fd31f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864895,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 34 30 2e 31  34 5c 22 7d 22 3a 7b 22  |68.140.14\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wtt4z",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wtt4z",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-24-251",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864895,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.24.251",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.24.251"
        }
      },
      PodIP: (string) (len=14) "192.168.140.14",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.140.14"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855864894,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul  6 12:14:56.239: INFO: Pod "webserver-deployment-9b4f5bf69-cbvq6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-cbvq6",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3628",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d06df019-b6a3-41c2-b8b4-ac9e29a779b3",
      ResourceVersion: (string) (len=4) "5109",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855864894,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "eb7f68ec-eb7a-4323-8932-f60eb84fd31f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 62  37 66 36 38 65 63 2d 65  |d\":\"eb7f68ec-e|
              00000090  62 37 61 2d 34 33 32 33  2d 38 39 33 32 2d 66 36  |b7a-4323-8932-f6|
              000000a0  30 65 62 38 34 66 64 33  31 66 5c 22 7d 22 3a 7b  |0eb84fd31f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864895,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 31 32 2e 37  32 5c 22 7d 22 3a 7b 22  |68.112.72\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-22qq6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-22qq6",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-9-199",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864895,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.9.199",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.9.199"
        }
      },
      PodIP: (string) (len=14) "192.168.112.72",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.112.72"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855864894,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul  6 12:14:56.240: INFO: Pod "webserver-deployment-9b4f5bf69-h4mjv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-h4mjv",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3628",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "70cd79c7-63b6-496b-a930-722f99ae9f8f",
      ResourceVersion: (string) (len=4) "5112",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855864894,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "eb7f68ec-eb7a-4323-8932-f60eb84fd31f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 62  37 66 36 38 65 63 2d 65  |d\":\"eb7f68ec-e|
              00000090  62 37 61 2d 34 33 32 33  2d 38 39 33 32 2d 66 36  |b7a-4323-8932-f6|
              000000a0  30 65 62 38 34 66 64 33  31 66 5c 22 7d 22 3a 7b  |0eb84fd31f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864895,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 31 32 2e 37  31 5c 22 7d 22 3a 7b 22  |68.112.71\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5cng5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5cng5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-9-199",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864895,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.9.199",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.9.199"
        }
      },
      PodIP: (string) (len=14) "192.168.112.71",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.112.71"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855864894,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul  6 12:14:56.243: INFO: Pod "webserver-deployment-9b4f5bf69-jkknn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-jkknn",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3628",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ac93c3d7-65c7-40c2-9da9-13bdf64cba7d",
      ResourceVersion: (string) (len=4) "5162",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855864896,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "eb7f68ec-eb7a-4323-8932-f60eb84fd31f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 62  37 66 36 38 65 63 2d 65  |d\":\"eb7f68ec-e|
              00000090  62 37 61 2d 34 33 32 33  2d 38 39 33 32 2d 66 36  |b7a-4323-8932-f6|
              000000a0  30 65 62 38 34 66 64 33  31 66 5c 22 7d 22 3a 7b  |0eb84fd31f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rpd5j",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rpd5j",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-24-251",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul  6 12:14:56.247: INFO: Pod "webserver-deployment-9b4f5bf69-mk25z" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-mk25z",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3628",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1f05ddda-f31d-4427-8194-68d0675ea9d7",
      ResourceVersion: (string) (len=4) "5173",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855864896,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "eb7f68ec-eb7a-4323-8932-f60eb84fd31f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 62  37 66 36 38 65 63 2d 65  |d\":\"eb7f68ec-e|
              00000090  62 37 61 2d 34 33 32 33  2d 38 39 33 32 2d 66 36  |b7a-4323-8932-f6|
              000000a0  30 65 62 38 34 66 64 33  31 66 5c 22 7d 22 3a 7b  |0eb84fd31f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-42lt2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-42lt2",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-90-155",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.90.155",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.90.155"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855864896,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul  6 12:14:56.251: INFO: Pod "webserver-deployment-9b4f5bf69-ndnws" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-ndnws",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3628",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "977a9359-acc9-4440-9c9a-2a78b7630d53",
      ResourceVersion: (string) (len=4) "5118",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855864894,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "eb7f68ec-eb7a-4323-8932-f60eb84fd31f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 62  37 66 36 38 65 63 2d 65  |d\":\"eb7f68ec-e|
              00000090  62 37 61 2d 34 33 32 33  2d 38 39 33 32 2d 66 36  |b7a-4323-8932-f6|
              000000a0  30 65 62 38 34 66 64 33  31 66 5c 22 7d 22 3a 7b  |0eb84fd31f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864895,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 34 30 2e 31  35 5c 22 7d 22 3a 7b 22  |68.140.15\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-s2nh6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-s2nh6",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-24-251",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864895,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.24.251",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.24.251"
        }
      },
      PodIP: (string) (len=14) "192.168.140.15",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.140.15"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855864894,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul  6 12:14:56.255: INFO: Pod "webserver-deployment-9b4f5bf69-nj7t2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-nj7t2",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3628",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5fd901b3-accc-4006-a761-6f85971cec72",
      ResourceVersion: (string) (len=4) "5152",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855864896,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "eb7f68ec-eb7a-4323-8932-f60eb84fd31f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 62  37 66 36 38 65 63 2d 65  |d\":\"eb7f68ec-e|
              00000090  62 37 61 2d 34 33 32 33  2d 38 39 33 32 2d 66 36  |b7a-4323-8932-f6|
              000000a0  30 65 62 38 34 66 64 33  31 66 5c 22 7d 22 3a 7b  |0eb84fd31f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-h97ql",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-h97ql",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-9-199",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul  6 12:14:56.258: INFO: Pod "webserver-deployment-9b4f5bf69-ptf4d" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-ptf4d",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3628",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6005822a-66d9-4fd4-94d3-644fb73e9d61",
      ResourceVersion: (string) (len=4) "5084",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855864894,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "eb7f68ec-eb7a-4323-8932-f60eb84fd31f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 62  37 66 36 38 65 63 2d 65  |d\":\"eb7f68ec-e|
              00000090  62 37 61 2d 34 33 32 33  2d 38 39 33 32 2d 66 36  |b7a-4323-8932-f6|
              000000a0  30 65 62 38 34 66 64 33  31 66 5c 22 7d 22 3a 7b  |0eb84fd31f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 32 30 34 2e 37  33 5c 22 7d 22 3a 7b 22  |68.204.73\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-777dx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-777dx",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-90-155",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.90.155",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.90.155"
        }
      },
      PodIP: (string) (len=14) "192.168.204.73",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.204.73"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855864894,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul  6 12:14:56.262: INFO: Pod "webserver-deployment-9b4f5bf69-t9jn8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-t9jn8",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3628",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3dd77a43-d174-4409-9436-ec9217db6833",
      ResourceVersion: (string) (len=4) "5172",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855864896,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "eb7f68ec-eb7a-4323-8932-f60eb84fd31f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 62  37 66 36 38 65 63 2d 65  |d\":\"eb7f68ec-e|
              00000090  62 37 61 2d 34 33 32 33  2d 38 39 33 32 2d 66 36  |b7a-4323-8932-f6|
              000000a0  30 65 62 38 34 66 64 33  31 66 5c 22 7d 22 3a 7b  |0eb84fd31f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-42vpl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-42vpl",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-90-155",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul  6 12:14:56.264: INFO: Pod "webserver-deployment-9b4f5bf69-v5wnx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-v5wnx",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3628",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "51a8ab83-49ca-43a6-89fc-21f6182f2a0a",
      ResourceVersion: (string) (len=4) "5176",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855864896,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "eb7f68ec-eb7a-4323-8932-f60eb84fd31f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 62  37 66 36 38 65 63 2d 65  |d\":\"eb7f68ec-e|
              00000090  62 37 61 2d 34 33 32 33  2d 38 39 33 32 2d 66 36  |b7a-4323-8932-f6|
              000000a0  30 65 62 38 34 66 64 33  31 66 5c 22 7d 22 3a 7b  |0eb84fd31f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-z2nhc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-z2nhc",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul  6 12:14:56.266: INFO: Pod "webserver-deployment-9b4f5bf69-wd8cq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-wd8cq",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3628",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "db3d23cb-d618-47e6-8f5d-d18bcf55a0c7",
      ResourceVersion: (string) (len=4) "5170",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855864896,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "eb7f68ec-eb7a-4323-8932-f60eb84fd31f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 62  37 66 36 38 65 63 2d 65  |d\":\"eb7f68ec-e|
              00000090  62 37 61 2d 34 33 32 33  2d 38 39 33 32 2d 66 36  |b7a-4323-8932-f6|
              000000a0  30 65 62 38 34 66 64 33  31 66 5c 22 7d 22 3a 7b  |0eb84fd31f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fvrq8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fvrq8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-9-199",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul  6 12:14:56.267: INFO: Pod "webserver-deployment-9b4f5bf69-z9xd5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-z9xd5",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3628",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f5b5806b-d9a6-436c-8490-9f5cca23ca26",
      ResourceVersion: (string) (len=4) "5148",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855864896,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "eb7f68ec-eb7a-4323-8932-f60eb84fd31f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 62  37 66 36 38 65 63 2d 65  |d\":\"eb7f68ec-e|
              00000090  62 37 61 2d 34 33 32 33  2d 38 39 33 32 2d 66 36  |b7a-4323-8932-f6|
              000000a0  30 65 62 38 34 66 64 33  31 66 5c 22 7d 22 3a 7b  |0eb84fd31f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cfg6g",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cfg6g",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-24-251",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855864896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul  6 12:14:56.268: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3628" for this suite. @ 07/06/24 12:14:56.277
• [6.281 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 07/06/24 12:14:56.284
  Jul  6 12:14:56.284: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename gc @ 07/06/24 12:14:56.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:14:56.305
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:14:56.307
  STEP: create the rc @ 07/06/24 12:14:56.316
  W0706 12:14:56.321080      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 07/06/24 12:15:02.327
  STEP: wait for the rc to be deleted @ 07/06/24 12:15:02.342
  Jul  6 12:15:03.356: INFO: 87 pods remaining
  Jul  6 12:15:03.357: INFO: 86 pods has nil DeletionTimestamp
  Jul  6 12:15:03.357: INFO: 
  Jul  6 12:15:04.352: INFO: 80 pods remaining
  Jul  6 12:15:04.352: INFO: 80 pods has nil DeletionTimestamp
  Jul  6 12:15:04.352: INFO: 
  Jul  6 12:15:05.357: INFO: 60 pods remaining
  Jul  6 12:15:05.357: INFO: 60 pods has nil DeletionTimestamp
  Jul  6 12:15:05.357: INFO: 
  Jul  6 12:15:06.353: INFO: 46 pods remaining
  Jul  6 12:15:06.354: INFO: 46 pods has nil DeletionTimestamp
  Jul  6 12:15:06.354: INFO: 
  Jul  6 12:15:07.353: INFO: 40 pods remaining
  Jul  6 12:15:07.353: INFO: 40 pods has nil DeletionTimestamp
  Jul  6 12:15:07.353: INFO: 
  Jul  6 12:15:08.352: INFO: 20 pods remaining
  Jul  6 12:15:08.352: INFO: 20 pods has nil DeletionTimestamp
  Jul  6 12:15:08.352: INFO: 
  Jul  6 12:15:09.353: INFO: 6 pods remaining
  Jul  6 12:15:09.353: INFO: 6 pods has nil DeletionTimestamp
  Jul  6 12:15:09.353: INFO: 
  STEP: Gathering metrics @ 07/06/24 12:15:10.35
  W0706 12:15:10.354009      21 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Jul  6 12:15:10.354: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jul  6 12:15:10.354: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1450" for this suite. @ 07/06/24 12:15:10.359
• [14.082 seconds]
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 07/06/24 12:15:10.367
  Jul  6 12:15:10.367: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename emptydir @ 07/06/24 12:15:10.367
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:15:10.381
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:15:10.383
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 07/06/24 12:15:10.385
  STEP: Saw pod success @ 07/06/24 12:15:14.407
  Jul  6 12:15:14.410: INFO: Trying to get logs from node ip-172-31-24-251 pod pod-b94a929d-4a51-4e85-a934-f85a9eff90fa container test-container: <nil>
  STEP: delete the pod @ 07/06/24 12:15:14.416
  Jul  6 12:15:14.432: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4199" for this suite. @ 07/06/24 12:15:14.435
• [4.074 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3565
  STEP: Creating a kubernetes client @ 07/06/24 12:15:14.441
  Jul  6 12:15:14.441: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename services @ 07/06/24 12:15:14.441
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:15:14.454
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:15:14.458
  STEP: creating a collection of services @ 07/06/24 12:15:14.461
  Jul  6 12:15:14.461: INFO: Creating e2e-svc-a-cgdq8
  Jul  6 12:15:14.470: INFO: Creating e2e-svc-b-2cpwh
  Jul  6 12:15:14.480: INFO: Creating e2e-svc-c-r58pw
  STEP: deleting service collection @ 07/06/24 12:15:14.492
  Jul  6 12:15:14.519: INFO: Collection of services has been deleted
  Jul  6 12:15:14.519: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3467" for this suite. @ 07/06/24 12:15:14.523
• [0.089 seconds]
------------------------------
SSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:335
  STEP: Creating a kubernetes client @ 07/06/24 12:15:14.53
  Jul  6 12:15:14.530: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename sched-pred @ 07/06/24 12:15:14.53
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:15:14.543
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:15:14.546
  Jul  6 12:15:14.549: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Jul  6 12:15:14.553: INFO: Waiting for terminating namespaces to be deleted...
  Jul  6 12:15:14.557: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-24-251 before test
  Jul  6 12:15:14.562: INFO: nginx-ingress-controller-kubernetes-worker-pn62c from ingress-nginx-kubernetes-worker started at 2024-07-06 12:10:53 +0000 UTC (1 container statuses recorded)
  Jul  6 12:15:14.562: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jul  6 12:15:14.562: INFO: calico-node-xcgv8 from kube-system started at 2024-07-06 12:10:33 +0000 UTC (1 container statuses recorded)
  Jul  6 12:15:14.562: INFO: 	Container calico-node ready: true, restart count 0
  Jul  6 12:15:14.562: INFO: sonobuoy from sonobuoy started at 2024-07-06 12:13:22 +0000 UTC (1 container statuses recorded)
  Jul  6 12:15:14.562: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Jul  6 12:15:14.562: INFO: sonobuoy-systemd-logs-daemon-set-ada2bb128210461e-nx2fj from sonobuoy started at 2024-07-06 12:13:24 +0000 UTC (2 container statuses recorded)
  Jul  6 12:15:14.562: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jul  6 12:15:14.562: INFO: 	Container systemd-logs ready: true, restart count 0
  Jul  6 12:15:14.562: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-9-199 before test
  Jul  6 12:15:14.565: INFO: nginx-ingress-controller-kubernetes-worker-sjnwc from ingress-nginx-kubernetes-worker started at 2024-07-06 12:04:14 +0000 UTC (1 container statuses recorded)
  Jul  6 12:15:14.565: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jul  6 12:15:14.565: INFO: calico-node-pfjxw from kube-system started at 2024-07-06 12:10:23 +0000 UTC (1 container statuses recorded)
  Jul  6 12:15:14.565: INFO: 	Container calico-node ready: true, restart count 0
  Jul  6 12:15:14.565: INFO: sonobuoy-e2e-job-aef6c266b67a4bc4 from sonobuoy started at 2024-07-06 12:13:24 +0000 UTC (2 container statuses recorded)
  Jul  6 12:15:14.566: INFO: 	Container e2e ready: true, restart count 0
  Jul  6 12:15:14.566: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jul  6 12:15:14.566: INFO: sonobuoy-systemd-logs-daemon-set-ada2bb128210461e-prx26 from sonobuoy started at 2024-07-06 12:13:24 +0000 UTC (2 container statuses recorded)
  Jul  6 12:15:14.566: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jul  6 12:15:14.566: INFO: 	Container systemd-logs ready: true, restart count 0
  Jul  6 12:15:14.566: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-90-155 before test
  Jul  6 12:15:14.569: INFO: nginx-ingress-controller-kubernetes-worker-j7txc from ingress-nginx-kubernetes-worker started at 2024-07-06 11:58:40 +0000 UTC (1 container statuses recorded)
  Jul  6 12:15:14.569: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jul  6 12:15:14.569: INFO: calico-node-wqvcf from kube-system started at 2024-07-06 12:11:25 +0000 UTC (1 container statuses recorded)
  Jul  6 12:15:14.569: INFO: 	Container calico-node ready: true, restart count 0
  Jul  6 12:15:14.569: INFO: coredns-bddfd76d7-bnkt2 from kube-system started at 2024-07-06 11:58:40 +0000 UTC (1 container statuses recorded)
  Jul  6 12:15:14.569: INFO: 	Container coredns ready: true, restart count 0
  Jul  6 12:15:14.569: INFO: kube-state-metrics-6f48cdd76-49lrw from kube-system started at 2024-07-06 11:58:40 +0000 UTC (1 container statuses recorded)
  Jul  6 12:15:14.569: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Jul  6 12:15:14.569: INFO: metrics-server-v0.6.3-69d7fbfdf8-vsjkb from kube-system started at 2024-07-06 11:58:40 +0000 UTC (2 container statuses recorded)
  Jul  6 12:15:14.569: INFO: 	Container metrics-server ready: true, restart count 0
  Jul  6 12:15:14.569: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Jul  6 12:15:14.569: INFO: dashboard-metrics-scraper-5dd7cb5fc-9ss52 from kubernetes-dashboard started at 2024-07-06 11:58:40 +0000 UTC (1 container statuses recorded)
  Jul  6 12:15:14.569: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Jul  6 12:15:14.569: INFO: kubernetes-dashboard-7b899cb9d9-fl6gc from kubernetes-dashboard started at 2024-07-06 11:58:40 +0000 UTC (1 container statuses recorded)
  Jul  6 12:15:14.569: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Jul  6 12:15:14.569: INFO: sonobuoy-systemd-logs-daemon-set-ada2bb128210461e-p2g2w from sonobuoy started at 2024-07-06 12:13:24 +0000 UTC (2 container statuses recorded)
  Jul  6 12:15:14.569: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jul  6 12:15:14.569: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node ip-172-31-24-251 @ 07/06/24 12:15:14.586
  STEP: verifying the node has the label node ip-172-31-9-199 @ 07/06/24 12:15:14.595
  STEP: verifying the node has the label node ip-172-31-90-155 @ 07/06/24 12:15:14.61
  Jul  6 12:15:14.621: INFO: Pod nginx-ingress-controller-kubernetes-worker-j7txc requesting resource cpu=0m on Node ip-172-31-90-155
  Jul  6 12:15:14.621: INFO: Pod nginx-ingress-controller-kubernetes-worker-pn62c requesting resource cpu=0m on Node ip-172-31-24-251
  Jul  6 12:15:14.621: INFO: Pod nginx-ingress-controller-kubernetes-worker-sjnwc requesting resource cpu=0m on Node ip-172-31-9-199
  Jul  6 12:15:14.621: INFO: Pod calico-node-pfjxw requesting resource cpu=250m on Node ip-172-31-9-199
  Jul  6 12:15:14.621: INFO: Pod calico-node-wqvcf requesting resource cpu=250m on Node ip-172-31-90-155
  Jul  6 12:15:14.621: INFO: Pod calico-node-xcgv8 requesting resource cpu=250m on Node ip-172-31-24-251
  Jul  6 12:15:14.621: INFO: Pod coredns-bddfd76d7-bnkt2 requesting resource cpu=100m on Node ip-172-31-90-155
  Jul  6 12:15:14.621: INFO: Pod kube-state-metrics-6f48cdd76-49lrw requesting resource cpu=0m on Node ip-172-31-90-155
  Jul  6 12:15:14.621: INFO: Pod metrics-server-v0.6.3-69d7fbfdf8-vsjkb requesting resource cpu=5m on Node ip-172-31-90-155
  Jul  6 12:15:14.621: INFO: Pod dashboard-metrics-scraper-5dd7cb5fc-9ss52 requesting resource cpu=0m on Node ip-172-31-90-155
  Jul  6 12:15:14.621: INFO: Pod kubernetes-dashboard-7b899cb9d9-fl6gc requesting resource cpu=0m on Node ip-172-31-90-155
  Jul  6 12:15:14.621: INFO: Pod sonobuoy requesting resource cpu=0m on Node ip-172-31-24-251
  Jul  6 12:15:14.621: INFO: Pod sonobuoy-e2e-job-aef6c266b67a4bc4 requesting resource cpu=0m on Node ip-172-31-9-199
  Jul  6 12:15:14.621: INFO: Pod sonobuoy-systemd-logs-daemon-set-ada2bb128210461e-nx2fj requesting resource cpu=0m on Node ip-172-31-24-251
  Jul  6 12:15:14.621: INFO: Pod sonobuoy-systemd-logs-daemon-set-ada2bb128210461e-p2g2w requesting resource cpu=0m on Node ip-172-31-90-155
  Jul  6 12:15:14.621: INFO: Pod sonobuoy-systemd-logs-daemon-set-ada2bb128210461e-prx26 requesting resource cpu=0m on Node ip-172-31-9-199
  STEP: Starting Pods to consume most of the cluster CPU. @ 07/06/24 12:15:14.621
  Jul  6 12:15:14.621: INFO: Creating a pod which consumes cpu=1225m on Node ip-172-31-24-251
  Jul  6 12:15:14.630: INFO: Creating a pod which consumes cpu=1225m on Node ip-172-31-9-199
  Jul  6 12:15:14.637: INFO: Creating a pod which consumes cpu=1151m on Node ip-172-31-90-155
  STEP: Creating another pod that requires unavailable amount of CPU. @ 07/06/24 12:15:16.664
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-1925119a-e07b-4267-8eb6-c79add895653.17df9ebc63684547], Reason = [Scheduled], Message = [Successfully assigned sched-pred-723/filler-pod-1925119a-e07b-4267-8eb6-c79add895653 to ip-172-31-24-251] @ 07/06/24 12:15:16.668
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-1925119a-e07b-4267-8eb6-c79add895653.17df9ebc80e449c0], Reason = [Pulling], Message = [Pulling image "registry.k8s.io/pause:3.9"] @ 07/06/24 12:15:16.668
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-1925119a-e07b-4267-8eb6-c79add895653.17df9ebc84c9f090], Reason = [Pulled], Message = [Successfully pulled image "registry.k8s.io/pause:3.9" in 65ms (65ms including waiting)] @ 07/06/24 12:15:16.668
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-1925119a-e07b-4267-8eb6-c79add895653.17df9ebc85d6437e], Reason = [Created], Message = [Created container filler-pod-1925119a-e07b-4267-8eb6-c79add895653] @ 07/06/24 12:15:16.668
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-1925119a-e07b-4267-8eb6-c79add895653.17df9ebc88f57c24], Reason = [Started], Message = [Started container filler-pod-1925119a-e07b-4267-8eb6-c79add895653] @ 07/06/24 12:15:16.668
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-4f276fb9-a2e8-4020-8537-e0698573ee2a.17df9ebc644fa9f5], Reason = [Scheduled], Message = [Successfully assigned sched-pred-723/filler-pod-4f276fb9-a2e8-4020-8537-e0698573ee2a to ip-172-31-90-155] @ 07/06/24 12:15:16.668
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-4f276fb9-a2e8-4020-8537-e0698573ee2a.17df9ebc82293bab], Reason = [Pulling], Message = [Pulling image "registry.k8s.io/pause:3.9"] @ 07/06/24 12:15:16.668
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-4f276fb9-a2e8-4020-8537-e0698573ee2a.17df9ebc86b57528], Reason = [Pulled], Message = [Successfully pulled image "registry.k8s.io/pause:3.9" in 76ms (76ms including waiting)] @ 07/06/24 12:15:16.668
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-4f276fb9-a2e8-4020-8537-e0698573ee2a.17df9ebc87bfdd04], Reason = [Created], Message = [Created container filler-pod-4f276fb9-a2e8-4020-8537-e0698573ee2a] @ 07/06/24 12:15:16.668
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-4f276fb9-a2e8-4020-8537-e0698573ee2a.17df9ebc8b93392f], Reason = [Started], Message = [Started container filler-pod-4f276fb9-a2e8-4020-8537-e0698573ee2a] @ 07/06/24 12:15:16.668
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a9f3afb1-8f07-4c77-adf2-2fef6a0a7b5c.17df9ebc639a0d6c], Reason = [Scheduled], Message = [Successfully assigned sched-pred-723/filler-pod-a9f3afb1-8f07-4c77-adf2-2fef6a0a7b5c to ip-172-31-9-199] @ 07/06/24 12:15:16.668
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a9f3afb1-8f07-4c77-adf2-2fef6a0a7b5c.17df9ebc81bc867f], Reason = [Pulling], Message = [Pulling image "registry.k8s.io/pause:3.9"] @ 07/06/24 12:15:16.668
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a9f3afb1-8f07-4c77-adf2-2fef6a0a7b5c.17df9ebc86977bbe], Reason = [Pulled], Message = [Successfully pulled image "registry.k8s.io/pause:3.9" in 81ms (81ms including waiting)] @ 07/06/24 12:15:16.668
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a9f3afb1-8f07-4c77-adf2-2fef6a0a7b5c.17df9ebc88070043], Reason = [Created], Message = [Created container filler-pod-a9f3afb1-8f07-4c77-adf2-2fef6a0a7b5c] @ 07/06/24 12:15:16.668
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a9f3afb1-8f07-4c77-adf2-2fef6a0a7b5c.17df9ebc8afac019], Reason = [Started], Message = [Started container filler-pod-a9f3afb1-8f07-4c77-adf2-2fef6a0a7b5c] @ 07/06/24 12:15:16.668
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.17df9ebcdcdb3d7d], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 Insufficient cpu. preemption: 0/5 nodes are available: 2 Preemption is not helpful for scheduling, 3 No preemption victims found for incoming pod.] @ 07/06/24 12:15:16.73
  STEP: removing the label node off the node ip-172-31-24-251 @ 07/06/24 12:15:17.679
  STEP: verifying the node doesn't have the label node @ 07/06/24 12:15:17.689
  STEP: removing the label node off the node ip-172-31-9-199 @ 07/06/24 12:15:17.695
  STEP: verifying the node doesn't have the label node @ 07/06/24 12:15:17.71
  STEP: removing the label node off the node ip-172-31-90-155 @ 07/06/24 12:15:17.716
  STEP: verifying the node doesn't have the label node @ 07/06/24 12:15:17.725
  Jul  6 12:15:17.728: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-723" for this suite. @ 07/06/24 12:15:17.737
• [3.212 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:183
  STEP: Creating a kubernetes client @ 07/06/24 12:15:17.743
  Jul  6 12:15:17.743: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename kubelet-test @ 07/06/24 12:15:17.744
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:15:17.759
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:15:17.762
  Jul  6 12:15:19.796: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-3055" for this suite. @ 07/06/24 12:15:19.8
• [2.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 07/06/24 12:15:19.805
  Jul  6 12:15:19.805: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename configmap @ 07/06/24 12:15:19.805
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:15:19.822
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:15:19.824
  STEP: Creating configMap with name configmap-test-volume-map-8b9d7091-75f8-4792-bab2-09cc1af4c590 @ 07/06/24 12:15:19.826
  STEP: Creating a pod to test consume configMaps @ 07/06/24 12:15:19.833
  STEP: Saw pod success @ 07/06/24 12:15:21.85
  Jul  6 12:15:21.853: INFO: Trying to get logs from node ip-172-31-9-199 pod pod-configmaps-8e1a3f50-f069-4540-9e79-4a4c0f3ac9c3 container agnhost-container: <nil>
  STEP: delete the pod @ 07/06/24 12:15:21.867
  Jul  6 12:15:21.889: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9025" for this suite. @ 07/06/24 12:15:21.893
• [2.094 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:94
  STEP: Creating a kubernetes client @ 07/06/24 12:15:21.899
  Jul  6 12:15:21.899: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename configmap @ 07/06/24 12:15:21.899
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:15:21.914
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:15:21.916
  STEP: Creating configMap configmap-4641/configmap-test-5371c4de-bfd7-452e-b567-b3bfcbb399b6 @ 07/06/24 12:15:21.921
  STEP: Creating a pod to test consume configMaps @ 07/06/24 12:15:21.924
  STEP: Saw pod success @ 07/06/24 12:15:25.945
  Jul  6 12:15:25.948: INFO: Trying to get logs from node ip-172-31-24-251 pod pod-configmaps-952ce02a-6da6-46a9-ba42-992d86e4d1a8 container env-test: <nil>
  STEP: delete the pod @ 07/06/24 12:15:25.955
  Jul  6 12:15:25.972: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4641" for this suite. @ 07/06/24 12:15:25.975
• [4.082 seconds]
------------------------------
SSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:810
  STEP: Creating a kubernetes client @ 07/06/24 12:15:25.981
  Jul  6 12:15:25.981: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename svcaccounts @ 07/06/24 12:15:25.981
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:15:25.994
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:15:25.997
  STEP: Creating ServiceAccount "e2e-sa-4pgzs"  @ 07/06/24 12:15:25.999
  Jul  6 12:15:26.004: INFO: AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-4pgzs"  @ 07/06/24 12:15:26.004
  Jul  6 12:15:26.010: INFO: AutomountServiceAccountToken: true
  Jul  6 12:15:26.010: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3706" for this suite. @ 07/06/24 12:15:26.014
• [0.041 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:161
  STEP: Creating a kubernetes client @ 07/06/24 12:15:26.022
  Jul  6 12:15:26.022: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename cronjob @ 07/06/24 12:15:26.023
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:15:26.038
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:15:26.04
  STEP: Creating a ReplaceConcurrent cronjob @ 07/06/24 12:15:26.043
  STEP: Ensuring a job is scheduled @ 07/06/24 12:15:26.049
  STEP: Ensuring exactly one is scheduled @ 07/06/24 12:16:02.053
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 07/06/24 12:16:02.057
  STEP: Ensuring the job is replaced with a new one @ 07/06/24 12:16:02.059
  STEP: Removing cronjob @ 07/06/24 12:17:02.063
  Jul  6 12:17:02.069: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-299" for this suite. @ 07/06/24 12:17:02.072
• [96.058 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 07/06/24 12:17:02.081
  Jul  6 12:17:02.081: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename secrets @ 07/06/24 12:17:02.081
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:17:02.101
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:17:02.103
  STEP: Creating secret with name secret-test-018863ae-821a-45ea-b256-5cebb7b07d3e @ 07/06/24 12:17:02.107
  STEP: Creating a pod to test consume secrets @ 07/06/24 12:17:02.112
  STEP: Saw pod success @ 07/06/24 12:17:06.134
  Jul  6 12:17:06.137: INFO: Trying to get logs from node ip-172-31-24-251 pod pod-secrets-8c633d10-8240-4be8-b3c9-e7bac32cc493 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/06/24 12:17:06.148
  Jul  6 12:17:06.164: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2880" for this suite. @ 07/06/24 12:17:06.167
• [4.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 07/06/24 12:17:06.174
  Jul  6 12:17:06.174: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename webhook @ 07/06/24 12:17:06.174
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:17:06.191
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:17:06.195
  STEP: Setting up server cert @ 07/06/24 12:17:06.218
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/06/24 12:17:06.474
  STEP: Deploying the webhook pod @ 07/06/24 12:17:06.48
  STEP: Wait for the deployment to be ready @ 07/06/24 12:17:06.493
  Jul  6 12:17:06.502: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/06/24 12:17:08.512
  STEP: Verifying the service has paired with the endpoint @ 07/06/24 12:17:08.519
  Jul  6 12:17:09.519: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 07/06/24 12:17:09.525
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 07/06/24 12:17:09.538
  STEP: Creating a dummy validating-webhook-configuration object @ 07/06/24 12:17:09.551
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 07/06/24 12:17:09.56
  STEP: Creating a dummy mutating-webhook-configuration object @ 07/06/24 12:17:09.565
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 07/06/24 12:17:09.573
  Jul  6 12:17:09.632: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9367" for this suite. @ 07/06/24 12:17:09.634
  STEP: Destroying namespace "webhook-markers-3119" for this suite. @ 07/06/24 12:17:09.64
• [3.473 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 07/06/24 12:17:09.647
  Jul  6 12:17:09.647: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename downward-api @ 07/06/24 12:17:09.647
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:17:09.664
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:17:09.666
  STEP: Creating a pod to test downward API volume plugin @ 07/06/24 12:17:09.668
  STEP: Saw pod success @ 07/06/24 12:17:13.695
  Jul  6 12:17:13.698: INFO: Trying to get logs from node ip-172-31-24-251 pod downwardapi-volume-21efc582-6ae3-4b76-b22f-29a2693e73b7 container client-container: <nil>
  STEP: delete the pod @ 07/06/24 12:17:13.704
  Jul  6 12:17:13.718: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7939" for this suite. @ 07/06/24 12:17:13.721
• [4.083 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:168
  STEP: Creating a kubernetes client @ 07/06/24 12:17:13.73
  Jul  6 12:17:13.730: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename downward-api @ 07/06/24 12:17:13.731
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:17:13.746
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:17:13.749
  STEP: Creating a pod to test downward api env vars @ 07/06/24 12:17:13.751
  STEP: Saw pod success @ 07/06/24 12:17:17.781
  Jul  6 12:17:17.785: INFO: Trying to get logs from node ip-172-31-24-251 pod downward-api-7a8242bc-5666-4074-8c22-4ab6f7a54e94 container dapi-container: <nil>
  STEP: delete the pod @ 07/06/24 12:17:17.792
  Jul  6 12:17:17.805: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5011" for this suite. @ 07/06/24 12:17:17.808
• [4.086 seconds]
------------------------------
SS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 07/06/24 12:17:17.816
  Jul  6 12:17:17.816: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename deployment @ 07/06/24 12:17:17.817
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:17:17.829
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:17:17.832
  STEP: creating a Deployment @ 07/06/24 12:17:17.838
  STEP: waiting for Deployment to be created @ 07/06/24 12:17:17.843
  STEP: waiting for all Replicas to be Ready @ 07/06/24 12:17:17.844
  Jul  6 12:17:17.846: INFO: observed Deployment test-deployment in namespace deployment-5290 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jul  6 12:17:17.846: INFO: observed Deployment test-deployment in namespace deployment-5290 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jul  6 12:17:17.855: INFO: observed Deployment test-deployment in namespace deployment-5290 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jul  6 12:17:17.855: INFO: observed Deployment test-deployment in namespace deployment-5290 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jul  6 12:17:17.870: INFO: observed Deployment test-deployment in namespace deployment-5290 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jul  6 12:17:17.871: INFO: observed Deployment test-deployment in namespace deployment-5290 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jul  6 12:17:17.901: INFO: observed Deployment test-deployment in namespace deployment-5290 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jul  6 12:17:17.901: INFO: observed Deployment test-deployment in namespace deployment-5290 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jul  6 12:17:18.764: INFO: observed Deployment test-deployment in namespace deployment-5290 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Jul  6 12:17:18.764: INFO: observed Deployment test-deployment in namespace deployment-5290 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Jul  6 12:17:19.211: INFO: observed Deployment test-deployment in namespace deployment-5290 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 07/06/24 12:17:19.211
  Jul  6 12:17:19.221: INFO: observed event type ADDED
  STEP: waiting for Replicas to scale @ 07/06/24 12:17:19.221
  Jul  6 12:17:19.222: INFO: observed Deployment test-deployment in namespace deployment-5290 with ReadyReplicas 0
  Jul  6 12:17:19.222: INFO: observed Deployment test-deployment in namespace deployment-5290 with ReadyReplicas 0
  Jul  6 12:17:19.222: INFO: observed Deployment test-deployment in namespace deployment-5290 with ReadyReplicas 0
  Jul  6 12:17:19.222: INFO: observed Deployment test-deployment in namespace deployment-5290 with ReadyReplicas 0
  Jul  6 12:17:19.222: INFO: observed Deployment test-deployment in namespace deployment-5290 with ReadyReplicas 0
  Jul  6 12:17:19.222: INFO: observed Deployment test-deployment in namespace deployment-5290 with ReadyReplicas 0
  Jul  6 12:17:19.222: INFO: observed Deployment test-deployment in namespace deployment-5290 with ReadyReplicas 0
  Jul  6 12:17:19.222: INFO: observed Deployment test-deployment in namespace deployment-5290 with ReadyReplicas 0
  Jul  6 12:17:19.222: INFO: observed Deployment test-deployment in namespace deployment-5290 with ReadyReplicas 1
  Jul  6 12:17:19.222: INFO: observed Deployment test-deployment in namespace deployment-5290 with ReadyReplicas 1
  Jul  6 12:17:19.223: INFO: observed Deployment test-deployment in namespace deployment-5290 with ReadyReplicas 2
  Jul  6 12:17:19.223: INFO: observed Deployment test-deployment in namespace deployment-5290 with ReadyReplicas 2
  Jul  6 12:17:19.223: INFO: observed Deployment test-deployment in namespace deployment-5290 with ReadyReplicas 2
  Jul  6 12:17:19.223: INFO: observed Deployment test-deployment in namespace deployment-5290 with ReadyReplicas 2
  Jul  6 12:17:19.236: INFO: observed Deployment test-deployment in namespace deployment-5290 with ReadyReplicas 2
  Jul  6 12:17:19.236: INFO: observed Deployment test-deployment in namespace deployment-5290 with ReadyReplicas 2
  Jul  6 12:17:19.259: INFO: observed Deployment test-deployment in namespace deployment-5290 with ReadyReplicas 2
  Jul  6 12:17:19.259: INFO: observed Deployment test-deployment in namespace deployment-5290 with ReadyReplicas 2
  Jul  6 12:17:19.271: INFO: observed Deployment test-deployment in namespace deployment-5290 with ReadyReplicas 1
  Jul  6 12:17:19.271: INFO: observed Deployment test-deployment in namespace deployment-5290 with ReadyReplicas 1
  Jul  6 12:17:20.225: INFO: observed Deployment test-deployment in namespace deployment-5290 with ReadyReplicas 2
  Jul  6 12:17:20.225: INFO: observed Deployment test-deployment in namespace deployment-5290 with ReadyReplicas 2
  Jul  6 12:17:20.248: INFO: observed Deployment test-deployment in namespace deployment-5290 with ReadyReplicas 1
  STEP: listing Deployments @ 07/06/24 12:17:20.249
  Jul  6 12:17:20.251: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 07/06/24 12:17:20.251
  Jul  6 12:17:20.260: INFO: observed Deployment test-deployment in namespace deployment-5290 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 07/06/24 12:17:20.26
  Jul  6 12:17:20.268: INFO: observed Deployment test-deployment in namespace deployment-5290 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jul  6 12:17:20.274: INFO: observed Deployment test-deployment in namespace deployment-5290 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jul  6 12:17:20.303: INFO: observed Deployment test-deployment in namespace deployment-5290 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jul  6 12:17:20.318: INFO: observed Deployment test-deployment in namespace deployment-5290 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jul  6 12:17:21.240: INFO: observed Deployment test-deployment in namespace deployment-5290 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Jul  6 12:17:21.260: INFO: observed Deployment test-deployment in namespace deployment-5290 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Jul  6 12:17:21.270: INFO: observed Deployment test-deployment in namespace deployment-5290 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Jul  6 12:17:21.284: INFO: observed Deployment test-deployment in namespace deployment-5290 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Jul  6 12:17:22.780: INFO: observed Deployment test-deployment in namespace deployment-5290 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 07/06/24 12:17:22.811
  STEP: fetching the DeploymentStatus @ 07/06/24 12:17:22.82
  Jul  6 12:17:22.827: INFO: observed Deployment test-deployment in namespace deployment-5290 with ReadyReplicas 1
  Jul  6 12:17:22.827: INFO: observed Deployment test-deployment in namespace deployment-5290 with ReadyReplicas 1
  Jul  6 12:17:22.827: INFO: observed Deployment test-deployment in namespace deployment-5290 with ReadyReplicas 1
  Jul  6 12:17:22.827: INFO: observed Deployment test-deployment in namespace deployment-5290 with ReadyReplicas 1
  Jul  6 12:17:22.827: INFO: observed Deployment test-deployment in namespace deployment-5290 with ReadyReplicas 2
  Jul  6 12:17:22.827: INFO: observed Deployment test-deployment in namespace deployment-5290 with ReadyReplicas 2
  Jul  6 12:17:22.827: INFO: observed Deployment test-deployment in namespace deployment-5290 with ReadyReplicas 2
  Jul  6 12:17:22.827: INFO: observed Deployment test-deployment in namespace deployment-5290 with ReadyReplicas 2
  Jul  6 12:17:22.827: INFO: observed Deployment test-deployment in namespace deployment-5290 with ReadyReplicas 3
  STEP: deleting the Deployment @ 07/06/24 12:17:22.827
  Jul  6 12:17:22.836: INFO: observed event type MODIFIED
  Jul  6 12:17:22.836: INFO: observed event type MODIFIED
  Jul  6 12:17:22.836: INFO: observed event type MODIFIED
  Jul  6 12:17:22.837: INFO: observed event type MODIFIED
  Jul  6 12:17:22.837: INFO: observed event type MODIFIED
  Jul  6 12:17:22.837: INFO: observed event type MODIFIED
  Jul  6 12:17:22.837: INFO: observed event type MODIFIED
  Jul  6 12:17:22.837: INFO: observed event type MODIFIED
  Jul  6 12:17:22.837: INFO: observed event type MODIFIED
  Jul  6 12:17:22.837: INFO: observed event type MODIFIED
  Jul  6 12:17:22.837: INFO: observed event type MODIFIED
  Jul  6 12:17:22.837: INFO: observed event type MODIFIED
  Jul  6 12:17:22.840: INFO: Log out all the ReplicaSets if there is no deployment created
  Jul  6 12:17:22.845: INFO: ReplicaSet "test-deployment-64fd565c98":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-64fd565c98",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5290",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f0dcbffb-4cd9-4a4e-acf7-dd357bc7d937",
      ResourceVersion: (string) (len=4) "8966",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855865039,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "3bd6c3f3-f057-47e5-832a-af6a0c8f6199",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855865042,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 33 62 64 36  63 33 66 33 2d 66 30 35  |":\"3bd6c3f3-f05|
              00000130  37 2d 34 37 65 35 2d 38  33 32 61 2d 61 66 36 61  |7-47e5-832a-af6a|
              00000140  30 63 38 66 36 31 39 39  5c 22 7d 22 3a 7b 7d 7d  |0c8f6199\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855865042,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=22) "test-deployment-static": (string) (len=4) "true",
          (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=25) "registry.k8s.io/pause:3.9",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Jul  6 12:17:22.851: INFO: pod: "test-deployment-64fd565c98-2p4kr":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-64fd565c98-2p4kr",
      GenerateName: (string) (len=27) "test-deployment-64fd565c98-",
      Namespace: (string) (len=15) "deployment-5290",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a5d7d941-abba-4b6a-89c4-8b24bc4a1bd7",
      ResourceVersion: (string) (len=4) "8960",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855865039,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855865044,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-64fd565c98",
          UID: (types.UID) (len=36) "f0dcbffb-4cd9-4a4e-acf7-dd357bc7d937",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855865039,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  66 30 64 63 62 66 66 62  |uid\":\"f0dcbffb|
              000000a0  2d 34 63 64 39 2d 34 61  34 65 2d 61 63 66 37 2d  |-4cd9-4a4e-acf7-|
              000000b0  64 64 33 35 37 62 63 37  64 39 33 37 5c 22 7d 22  |dd357bc7d937\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855865040,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 34  30 2e 35 39 5c 22 7d 22  |2.168.140.59\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-86t2b",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-86t2b",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-24-251",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855865040,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855865039,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855865040,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855865040,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855865039,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.24.251",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.24.251"
        }
      },
      PodIP: (string) (len=14) "192.168.140.59",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.140.59"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855865039,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63855865039,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=77) "containerd://50cd73af0a2a2a7bb4d4465dfafb33a6b0cff96b2122ac93b7b6790027f8c969",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Jul  6 12:17:22.853: INFO: ReplicaSet "test-deployment-79ff746c4":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-79ff746c4",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5290",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8838c2aa-aefc-4d56-b1e2-a6a683f7ee6e",
      ResourceVersion: (string) (len=4) "8955",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855865040,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "3bd6c3f3-f057-47e5-832a-af6a0c8f6199",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855865041,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 33 62 64 36  63 33 66 33 2d 66 30 35  |":\"3bd6c3f3-f05|
              00000130  37 2d 34 37 65 35 2d 38  33 32 61 2d 61 66 36 61  |7-47e5-832a-af6a|
              00000140  30 63 38 66 36 31 39 39  5c 22 7d 22 3a 7b 7d 7d  |0c8f6199\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855865042,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Jul  6 12:17:22.859: INFO: pod: "test-deployment-79ff746c4-lg6p6":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-lg6p6",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-5290",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0e4d1bc1-e3a0-49fc-aa5e-1d088fc97f92",
      ResourceVersion: (string) (len=4) "8916",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855865040,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "8838c2aa-aefc-4d56-b1e2-a6a683f7ee6e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855865040,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  38 38 33 38 63 32 61 61  |uid\":\"8838c2aa|
              000000a0  2d 61 65 66 63 2d 34 64  35 36 2d 62 31 65 32 2d  |-aefc-4d56-b1e2-|
              000000b0  61 36 61 36 38 33 66 37  65 65 36 65 5c 22 7d 22  |a6a683f7ee6e\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855865041,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 34  30 2e 36 30 5c 22 7d 22  |2.168.140.60\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hrccg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hrccg",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-24-251",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855865041,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855865040,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855865041,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855865041,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855865040,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.24.251",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.24.251"
        }
      },
      PodIP: (string) (len=14) "192.168.140.60",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.140.60"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855865040,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63855865040,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://ba655147885252d03f87f4fb5fceb508d70d6b31ef164530fdad8c8117e43cd2",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Jul  6 12:17:22.861: INFO: pod: "test-deployment-79ff746c4-nxhff":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-nxhff",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-5290",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "11b0c95b-0741-4d92-bef6-33d35efe89cf",
      ResourceVersion: (string) (len=4) "8975",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855865041,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855865043,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "8838c2aa-aefc-4d56-b1e2-a6a683f7ee6e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855865041,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  38 38 33 38 63 32 61 61  |uid\":\"8838c2aa|
              000000a0  2d 61 65 66 63 2d 34 64  35 36 2d 62 31 65 32 2d  |-aefc-4d56-b1e2-|
              000000b0  61 36 61 36 38 33 66 37  65 65 36 65 5c 22 7d 22  |a6a683f7ee6e\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855865042,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 31  32 2e 31 31 32 5c 22 7d  |2.168.112.112\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9vx99",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9vx99",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-9-199",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855865042,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855865041,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855865042,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855865042,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855865041,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.9.199",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.9.199"
        }
      },
      PodIP: (string) (len=15) "192.168.112.112",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.112.112"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855865041,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63855865041,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://4f2cd4af0f42015936fc365ef8c2caa97249f21304cb607f1399d42825a6aa4f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Jul  6 12:17:22.862: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5290" for this suite. @ 07/06/24 12:17:22.867
• [5.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:889
  STEP: Creating a kubernetes client @ 07/06/24 12:17:22.876
  Jul  6 12:17:22.876: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename resourcequota @ 07/06/24 12:17:22.876
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:17:22.889
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:17:22.892
  STEP: Creating a ResourceQuota @ 07/06/24 12:17:22.894
  STEP: Getting a ResourceQuota @ 07/06/24 12:17:22.899
  STEP: Updating a ResourceQuota @ 07/06/24 12:17:22.904
  STEP: Verifying a ResourceQuota was modified @ 07/06/24 12:17:22.91
  STEP: Deleting a ResourceQuota @ 07/06/24 12:17:22.915
  STEP: Verifying the deleted ResourceQuota @ 07/06/24 12:17:22.924
  Jul  6 12:17:22.926: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-554" for this suite. @ 07/06/24 12:17:22.93
• [0.064 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 07/06/24 12:17:22.94
  Jul  6 12:17:22.940: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename deployment @ 07/06/24 12:17:22.94
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:17:22.954
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:17:22.959
  Jul  6 12:17:22.962: INFO: Creating simple deployment test-new-deployment
  Jul  6 12:17:22.981: INFO: deployment "test-new-deployment" doesn't have the required revision set
  STEP: getting scale subresource @ 07/06/24 12:17:24.995
  STEP: updating a scale subresource @ 07/06/24 12:17:24.997
  STEP: verifying the deployment Spec.Replicas was modified @ 07/06/24 12:17:25.003
  STEP: Patch a scale subresource @ 07/06/24 12:17:25.006
  Jul  6 12:17:25.024: INFO: Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2749",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dd2f6781-149a-40b5-b144-08404c97755c",
      ResourceVersion: (string) (len=4) "9053",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855865042,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855865042,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855865044,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855865044,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855865044,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855865044,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855865042,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-557759b7c7\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jul  6 12:17:25.035: INFO: New ReplicaSet "test-new-deployment-557759b7c7" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2749",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0f786a32-100c-4cf4-b8ee-986ba9854e1e",
      ResourceVersion: (string) (len=4) "9056",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855865042,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "4",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "5"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "dd2f6781-149a-40b5-b144-08404c97755c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855865044,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855865045,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 64 32 66 36 37  38 31 2d 31 34 39 61 2d  |\"dd2f6781-149a-|
              00000120  34 30 62 35 2d 62 31 34  34 2d 30 38 34 30 34 63  |40b5-b144-08404c|
              00000130  39 37 37 35 35 63 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |97755c\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(4),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jul  6 12:17:25.039: INFO: Pod "test-new-deployment-557759b7c7-22hqn" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-22hqn",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2749",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d47ee9b6-e0b2-4611-baa7-e332525cacea",
      ResourceVersion: (string) (len=4) "9044",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855865042,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "0f786a32-100c-4cf4-b8ee-986ba9854e1e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855865042,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 66  37 38 36 61 33 32 2d 31  |d\":\"0f786a32-1|
              00000090  30 30 63 2d 34 63 66 34  2d 62 38 65 65 2d 39 38  |00c-4cf4-b8ee-98|
              000000a0  36 62 61 39 38 35 34 65  31 65 5c 22 7d 22 3a 7b  |6ba9854e1e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855865044,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 34  30 2e 36 31 5c 22 7d 22  |2.168.140.61\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fhgvw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fhgvw",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-24-251",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855865044,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855865042,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855865044,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855865044,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855865042,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.24.251",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.24.251"
        }
      },
      PodIP: (string) (len=14) "192.168.140.61",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.140.61"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855865042,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63855865043,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://5212b2087615393d54c520a218154b368a58c59c73cbee7a020f64920eaab500",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul  6 12:17:25.041: INFO: Pod "test-new-deployment-557759b7c7-f4d2l" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-f4d2l",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2749",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7e02d2f3-8018-4181-a529-7944f7e18af7",
      ResourceVersion: (string) (len=4) "9059",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855865045,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "0f786a32-100c-4cf4-b8ee-986ba9854e1e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855865045,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 66  37 38 36 61 33 32 2d 31  |d\":\"0f786a32-1|
              00000090  30 30 63 2d 34 63 66 34  2d 62 38 65 65 2d 39 38  |00c-4cf4-b8ee-98|
              000000a0  36 62 61 39 38 35 34 65  31 65 5c 22 7d 22 3a 7b  |6ba9854e1e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ft686",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ft686",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-9-199",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855865045,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul  6 12:17:25.041: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2749" for this suite. @ 07/06/24 12:17:25.047
• [2.120 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:330
  STEP: Creating a kubernetes client @ 07/06/24 12:17:25.06
  Jul  6 12:17:25.060: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename resourcequota @ 07/06/24 12:17:25.061
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:17:25.086
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:17:25.089
  STEP: Counting existing ResourceQuota @ 07/06/24 12:17:42.095
  STEP: Creating a ResourceQuota @ 07/06/24 12:17:47.098
  STEP: Ensuring resource quota status is calculated @ 07/06/24 12:17:47.104
  STEP: Creating a ConfigMap @ 07/06/24 12:17:49.108
  STEP: Ensuring resource quota status captures configMap creation @ 07/06/24 12:17:49.117
  STEP: Deleting a ConfigMap @ 07/06/24 12:17:51.122
  STEP: Ensuring resource quota status released usage @ 07/06/24 12:17:51.13
  Jul  6 12:17:53.134: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6795" for this suite. @ 07/06/24 12:17:53.137
• [28.085 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 07/06/24 12:17:53.145
  Jul  6 12:17:53.145: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename cronjob @ 07/06/24 12:17:53.146
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:17:53.163
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:17:53.165
  STEP: Creating a ForbidConcurrent cronjob @ 07/06/24 12:17:53.167
  STEP: Ensuring a job is scheduled @ 07/06/24 12:17:53.171
  STEP: Ensuring exactly one is scheduled @ 07/06/24 12:18:01.175
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 07/06/24 12:18:01.179
  STEP: Ensuring no more jobs are scheduled @ 07/06/24 12:18:01.182
  STEP: Removing cronjob @ 07/06/24 12:23:01.191
  Jul  6 12:23:01.197: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-6139" for this suite. @ 07/06/24 12:23:01.201
• [308.062 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 07/06/24 12:23:01.208
  Jul  6 12:23:01.208: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename disruption @ 07/06/24 12:23:01.208
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:23:01.231
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:23:01.234
  STEP: creating the pdb @ 07/06/24 12:23:01.238
  STEP: Waiting for the pdb to be processed @ 07/06/24 12:23:01.242
  STEP: updating the pdb @ 07/06/24 12:23:03.245
  STEP: Waiting for the pdb to be processed @ 07/06/24 12:23:03.256
  STEP: patching the pdb @ 07/06/24 12:23:03.261
  STEP: Waiting for the pdb to be processed @ 07/06/24 12:23:03.27
  STEP: Waiting for the pdb to be deleted @ 07/06/24 12:23:05.282
  Jul  6 12:23:05.284: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-7904" for this suite. @ 07/06/24 12:23:05.287
• [4.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 07/06/24 12:23:05.295
  Jul  6 12:23:05.295: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename webhook @ 07/06/24 12:23:05.295
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:23:05.309
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:23:05.311
  STEP: Setting up server cert @ 07/06/24 12:23:05.329
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/06/24 12:23:05.515
  STEP: Deploying the webhook pod @ 07/06/24 12:23:05.523
  STEP: Wait for the deployment to be ready @ 07/06/24 12:23:05.535
  Jul  6 12:23:05.543: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/06/24 12:23:07.554
  STEP: Verifying the service has paired with the endpoint @ 07/06/24 12:23:07.565
  Jul  6 12:23:08.566: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 07/06/24 12:23:08.574
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 07/06/24 12:23:08.575
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 07/06/24 12:23:08.575
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 07/06/24 12:23:08.575
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 07/06/24 12:23:08.576
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 07/06/24 12:23:08.576
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 07/06/24 12:23:08.577
  Jul  6 12:23:08.610: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-732" for this suite. @ 07/06/24 12:23:08.614
  STEP: Destroying namespace "webhook-markers-6011" for this suite. @ 07/06/24 12:23:08.62
• [3.332 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 07/06/24 12:23:08.628
  Jul  6 12:23:08.628: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename crd-watch @ 07/06/24 12:23:08.629
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:23:08.644
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:23:08.647
  Jul  6 12:23:08.649: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Creating first CR  @ 07/06/24 12:23:11.182
  Jul  6 12:23:11.185: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-07-06T12:23:11Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-07-06T12:23:11Z]] name:name1 resourceVersion:10001 uid:74afc755-a7b0-4fb5-958c-aa5a24c7b51c] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 07/06/24 12:23:21.187
  Jul  6 12:23:21.193: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-07-06T12:23:21Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-07-06T12:23:21Z]] name:name2 resourceVersion:10040 uid:e54be5db-5139-48eb-88b6-ed0f1f3bccc5] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 07/06/24 12:23:31.193
  Jul  6 12:23:31.200: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-07-06T12:23:11Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-07-06T12:23:31Z]] name:name1 resourceVersion:10060 uid:74afc755-a7b0-4fb5-958c-aa5a24c7b51c] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 07/06/24 12:23:41.2
  Jul  6 12:23:41.207: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-07-06T12:23:21Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-07-06T12:23:41Z]] name:name2 resourceVersion:10079 uid:e54be5db-5139-48eb-88b6-ed0f1f3bccc5] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 07/06/24 12:23:51.207
  Jul  6 12:23:51.215: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-07-06T12:23:11Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-07-06T12:23:31Z]] name:name1 resourceVersion:10099 uid:74afc755-a7b0-4fb5-958c-aa5a24c7b51c] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 07/06/24 12:24:01.215
  Jul  6 12:24:01.222: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-07-06T12:23:21Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-07-06T12:23:41Z]] name:name2 resourceVersion:10119 uid:e54be5db-5139-48eb-88b6-ed0f1f3bccc5] num:map[num1:9223372036854775807 num2:1000000]]}
  Jul  6 12:24:11.735: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-688" for this suite. @ 07/06/24 12:24:11.739
• [63.119 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:649
  STEP: Creating a kubernetes client @ 07/06/24 12:24:11.748
  Jul  6 12:24:11.748: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename svcaccounts @ 07/06/24 12:24:11.749
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:24:11.761
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:24:11.764
  STEP: creating a ServiceAccount @ 07/06/24 12:24:11.767
  STEP: watching for the ServiceAccount to be added @ 07/06/24 12:24:11.775
  STEP: patching the ServiceAccount @ 07/06/24 12:24:11.776
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 07/06/24 12:24:11.781
  STEP: deleting the ServiceAccount @ 07/06/24 12:24:11.784
  Jul  6 12:24:11.796: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5939" for this suite. @ 07/06/24 12:24:11.799
• [0.059 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 07/06/24 12:24:11.807
  Jul  6 12:24:11.807: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename downward-api @ 07/06/24 12:24:11.808
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:24:11.82
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:24:11.823
  STEP: Creating a pod to test downward API volume plugin @ 07/06/24 12:24:11.825
  STEP: Saw pod success @ 07/06/24 12:24:15.845
  Jul  6 12:24:15.848: INFO: Trying to get logs from node ip-172-31-24-251 pod downwardapi-volume-c5d08394-7694-42a2-b0c7-f7b8da5275b2 container client-container: <nil>
  STEP: delete the pod @ 07/06/24 12:24:15.86
  Jul  6 12:24:15.876: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3012" for this suite. @ 07/06/24 12:24:15.879
• [4.080 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 07/06/24 12:24:15.887
  Jul  6 12:24:15.887: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename projected @ 07/06/24 12:24:15.888
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:24:15.902
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:24:15.904
  STEP: Creating configMap with name projected-configmap-test-volume-aade9367-556a-426a-91a3-54b3372122f2 @ 07/06/24 12:24:15.906
  STEP: Creating a pod to test consume configMaps @ 07/06/24 12:24:15.911
  STEP: Saw pod success @ 07/06/24 12:24:19.932
  Jul  6 12:24:19.937: INFO: Trying to get logs from node ip-172-31-24-251 pod pod-projected-configmaps-0be9efd4-cfb1-4fc6-9376-02811a9f0f70 container agnhost-container: <nil>
  STEP: delete the pod @ 07/06/24 12:24:19.942
  Jul  6 12:24:19.955: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7333" for this suite. @ 07/06/24 12:24:19.958
• [4.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 07/06/24 12:24:19.965
  Jul  6 12:24:19.965: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename events @ 07/06/24 12:24:19.965
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:24:19.98
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:24:19.985
  STEP: Create set of events @ 07/06/24 12:24:19.987
  STEP: get a list of Events with a label in the current namespace @ 07/06/24 12:24:20.002
  STEP: delete a list of events @ 07/06/24 12:24:20.005
  Jul  6 12:24:20.005: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 07/06/24 12:24:20.025
  Jul  6 12:24:20.028: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-7471" for this suite. @ 07/06/24 12:24:20.032
• [0.075 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 07/06/24 12:24:20.04
  Jul  6 12:24:20.040: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename containers @ 07/06/24 12:24:20.041
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:24:20.053
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:24:20.055
  STEP: Creating a pod to test override command @ 07/06/24 12:24:20.058
  STEP: Saw pod success @ 07/06/24 12:24:22.075
  Jul  6 12:24:22.078: INFO: Trying to get logs from node ip-172-31-24-251 pod client-containers-9b7014f2-21fb-4937-9b80-44914b0647eb container agnhost-container: <nil>
  STEP: delete the pod @ 07/06/24 12:24:22.083
  Jul  6 12:24:22.102: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-6962" for this suite. @ 07/06/24 12:24:22.106
• [2.072 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:51
  STEP: Creating a kubernetes client @ 07/06/24 12:24:22.112
  Jul  6 12:24:22.112: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename kubelet-test @ 07/06/24 12:24:22.113
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:24:22.125
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:24:22.127
  Jul  6 12:24:24.158: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9059" for this suite. @ 07/06/24 12:24:24.161
• [2.056 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1084
  STEP: Creating a kubernetes client @ 07/06/24 12:24:24.169
  Jul  6 12:24:24.169: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename kubectl @ 07/06/24 12:24:24.169
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:24:24.181
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:24:24.183
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 07/06/24 12:24:24.186
  Jul  6 12:24:24.186: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-3666 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Jul  6 12:24:24.238: INFO: stderr: ""
  Jul  6 12:24:24.238: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 07/06/24 12:24:24.238
  Jul  6 12:24:24.238: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-3666 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  Jul  6 12:24:24.283: INFO: stderr: ""
  Jul  6 12:24:24.283: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 07/06/24 12:24:24.283
  Jul  6 12:24:24.285: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-3666 delete pods e2e-test-httpd-pod'
  Jul  6 12:24:25.387: INFO: stderr: ""
  Jul  6 12:24:25.387: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Jul  6 12:24:25.387: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3666" for this suite. @ 07/06/24 12:24:25.39
• [1.226 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 07/06/24 12:24:25.395
  Jul  6 12:24:25.395: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename container-runtime @ 07/06/24 12:24:25.395
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:24:25.414
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:24:25.416
  STEP: create the container @ 07/06/24 12:24:25.419
  W0706 12:24:25.427882      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 07/06/24 12:24:25.428
  STEP: get the container status @ 07/06/24 12:24:28.446
  STEP: the container should be terminated @ 07/06/24 12:24:28.448
  STEP: the termination message should be set @ 07/06/24 12:24:28.448
  Jul  6 12:24:28.448: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 07/06/24 12:24:28.448
  Jul  6 12:24:28.460: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1246" for this suite. @ 07/06/24 12:24:28.463
• [3.074 seconds]
------------------------------
SSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 07/06/24 12:24:28.469
  Jul  6 12:24:28.469: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename proxy @ 07/06/24 12:24:28.47
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:24:28.482
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:24:28.485
  STEP: starting an echo server on multiple ports @ 07/06/24 12:24:28.497
  STEP: creating replication controller proxy-service-74mfb in namespace proxy-6759 @ 07/06/24 12:24:28.497
  I0706 12:24:28.507693      21 runners.go:197] Created replication controller with name: proxy-service-74mfb, namespace: proxy-6759, replica count: 1
  I0706 12:24:29.558334      21 runners.go:197] proxy-service-74mfb Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0706 12:24:30.558550      21 runners.go:197] proxy-service-74mfb Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  I0706 12:24:31.559511      21 runners.go:197] proxy-service-74mfb Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jul  6 12:24:31.564: INFO: setup took 3.07723256s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 07/06/24 12:24:31.564
  Jul  6 12:24:31.569: INFO: (0) /api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:162/proxy/: bar (200; 4.459837ms)
  Jul  6 12:24:31.569: INFO: (0) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:1080/proxy/rewriteme">test<... (200; 4.814053ms)
  Jul  6 12:24:31.570: INFO: (0) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:160/proxy/: foo (200; 5.518991ms)
  Jul  6 12:24:31.570: INFO: (0) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:162/proxy/: bar (200; 5.486015ms)
  Jul  6 12:24:31.571: INFO: (0) /api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:1080/proxy/rewriteme">... (200; 6.661972ms)
  Jul  6 12:24:31.571: INFO: (0) /api/v1/namespaces/proxy-6759/services/http:proxy-service-74mfb:portname1/proxy/: foo (200; 6.814931ms)
  Jul  6 12:24:31.572: INFO: (0) /api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:443/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:443/proxy/tlsrewritem... (200; 7.56277ms)
  Jul  6 12:24:31.572: INFO: (0) /api/v1/namespaces/proxy-6759/services/proxy-service-74mfb:portname1/proxy/: foo (200; 7.501509ms)
  Jul  6 12:24:31.573: INFO: (0) /api/v1/namespaces/proxy-6759/services/http:proxy-service-74mfb:portname2/proxy/: bar (200; 8.326639ms)
  Jul  6 12:24:31.575: INFO: (0) /api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:160/proxy/: foo (200; 10.403321ms)
  Jul  6 12:24:31.575: INFO: (0) /api/v1/namespaces/proxy-6759/services/proxy-service-74mfb:portname2/proxy/: bar (200; 10.918491ms)
  Jul  6 12:24:31.576: INFO: (0) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw/proxy/rewriteme">test</a> (200; 10.996683ms)
  Jul  6 12:24:31.576: INFO: (0) /api/v1/namespaces/proxy-6759/services/https:proxy-service-74mfb:tlsportname2/proxy/: tls qux (200; 11.192265ms)
  Jul  6 12:24:31.576: INFO: (0) /api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:460/proxy/: tls baz (200; 11.452529ms)
  Jul  6 12:24:31.576: INFO: (0) /api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:462/proxy/: tls qux (200; 11.547861ms)
  Jul  6 12:24:31.576: INFO: (0) /api/v1/namespaces/proxy-6759/services/https:proxy-service-74mfb:tlsportname1/proxy/: tls baz (200; 11.662309ms)
  Jul  6 12:24:31.580: INFO: (1) /api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:462/proxy/: tls qux (200; 3.8504ms)
  Jul  6 12:24:31.580: INFO: (1) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:1080/proxy/rewriteme">test<... (200; 4.087901ms)
  Jul  6 12:24:31.581: INFO: (1) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:160/proxy/: foo (200; 4.310718ms)
  Jul  6 12:24:31.581: INFO: (1) /api/v1/namespaces/proxy-6759/services/http:proxy-service-74mfb:portname2/proxy/: bar (200; 4.664951ms)
  Jul  6 12:24:31.582: INFO: (1) /api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:162/proxy/: bar (200; 6.092268ms)
  Jul  6 12:24:31.582: INFO: (1) /api/v1/namespaces/proxy-6759/services/http:proxy-service-74mfb:portname1/proxy/: foo (200; 5.915643ms)
  Jul  6 12:24:31.582: INFO: (1) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:162/proxy/: bar (200; 5.79928ms)
  Jul  6 12:24:31.582: INFO: (1) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw/proxy/rewriteme">test</a> (200; 6.140814ms)
  Jul  6 12:24:31.583: INFO: (1) /api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:1080/proxy/rewriteme">... (200; 6.266853ms)
  Jul  6 12:24:31.583: INFO: (1) /api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:160/proxy/: foo (200; 6.39691ms)
  Jul  6 12:24:31.583: INFO: (1) /api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:443/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:443/proxy/tlsrewritem... (200; 6.508459ms)
  Jul  6 12:24:31.583: INFO: (1) /api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:460/proxy/: tls baz (200; 6.631976ms)
  Jul  6 12:24:31.583: INFO: (1) /api/v1/namespaces/proxy-6759/services/proxy-service-74mfb:portname2/proxy/: bar (200; 6.828389ms)
  Jul  6 12:24:31.583: INFO: (1) /api/v1/namespaces/proxy-6759/services/https:proxy-service-74mfb:tlsportname1/proxy/: tls baz (200; 7.048068ms)
  Jul  6 12:24:31.584: INFO: (1) /api/v1/namespaces/proxy-6759/services/proxy-service-74mfb:portname1/proxy/: foo (200; 7.440163ms)
  Jul  6 12:24:31.584: INFO: (1) /api/v1/namespaces/proxy-6759/services/https:proxy-service-74mfb:tlsportname2/proxy/: tls qux (200; 7.749508ms)
  Jul  6 12:24:31.587: INFO: (2) /api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:462/proxy/: tls qux (200; 2.851773ms)
  Jul  6 12:24:31.589: INFO: (2) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw/proxy/rewriteme">test</a> (200; 4.886327ms)
  Jul  6 12:24:31.589: INFO: (2) /api/v1/namespaces/proxy-6759/services/https:proxy-service-74mfb:tlsportname1/proxy/: tls baz (200; 5.02523ms)
  Jul  6 12:24:31.589: INFO: (2) /api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:1080/proxy/rewriteme">... (200; 4.852634ms)
  Jul  6 12:24:31.589: INFO: (2) /api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:460/proxy/: tls baz (200; 4.890563ms)
  Jul  6 12:24:31.590: INFO: (2) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:162/proxy/: bar (200; 5.415557ms)
  Jul  6 12:24:31.590: INFO: (2) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:1080/proxy/rewriteme">test<... (200; 5.549053ms)
  Jul  6 12:24:31.590: INFO: (2) /api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:162/proxy/: bar (200; 5.598862ms)
  Jul  6 12:24:31.590: INFO: (2) /api/v1/namespaces/proxy-6759/services/proxy-service-74mfb:portname1/proxy/: foo (200; 6.018628ms)
  Jul  6 12:24:31.590: INFO: (2) /api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:160/proxy/: foo (200; 6.152082ms)
  Jul  6 12:24:31.591: INFO: (2) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:160/proxy/: foo (200; 6.445471ms)
  Jul  6 12:24:31.591: INFO: (2) /api/v1/namespaces/proxy-6759/services/proxy-service-74mfb:portname2/proxy/: bar (200; 6.933009ms)
  Jul  6 12:24:31.591: INFO: (2) /api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:443/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:443/proxy/tlsrewritem... (200; 6.829379ms)
  Jul  6 12:24:31.591: INFO: (2) /api/v1/namespaces/proxy-6759/services/http:proxy-service-74mfb:portname2/proxy/: bar (200; 7.240418ms)
  Jul  6 12:24:31.592: INFO: (2) /api/v1/namespaces/proxy-6759/services/http:proxy-service-74mfb:portname1/proxy/: foo (200; 8.193869ms)
  Jul  6 12:24:31.593: INFO: (2) /api/v1/namespaces/proxy-6759/services/https:proxy-service-74mfb:tlsportname2/proxy/: tls qux (200; 8.23176ms)
  Jul  6 12:24:31.597: INFO: (3) /api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:462/proxy/: tls qux (200; 4.055796ms)
  Jul  6 12:24:31.597: INFO: (3) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:1080/proxy/rewriteme">test<... (200; 4.158938ms)
  Jul  6 12:24:31.597: INFO: (3) /api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:162/proxy/: bar (200; 4.304278ms)
  Jul  6 12:24:31.598: INFO: (3) /api/v1/namespaces/proxy-6759/services/proxy-service-74mfb:portname1/proxy/: foo (200; 4.965905ms)
  Jul  6 12:24:31.598: INFO: (3) /api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:160/proxy/: foo (200; 4.715391ms)
  Jul  6 12:24:31.598: INFO: (3) /api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:1080/proxy/rewriteme">... (200; 5.073242ms)
  Jul  6 12:24:31.598: INFO: (3) /api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:460/proxy/: tls baz (200; 5.366289ms)
  Jul  6 12:24:31.598: INFO: (3) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:160/proxy/: foo (200; 5.646743ms)
  Jul  6 12:24:31.599: INFO: (3) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw/proxy/rewriteme">test</a> (200; 5.843018ms)
  Jul  6 12:24:31.599: INFO: (3) /api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:443/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:443/proxy/tlsrewritem... (200; 5.890416ms)
  Jul  6 12:24:31.599: INFO: (3) /api/v1/namespaces/proxy-6759/services/http:proxy-service-74mfb:portname2/proxy/: bar (200; 6.47603ms)
  Jul  6 12:24:31.600: INFO: (3) /api/v1/namespaces/proxy-6759/services/https:proxy-service-74mfb:tlsportname2/proxy/: tls qux (200; 6.850726ms)
  Jul  6 12:24:31.600: INFO: (3) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:162/proxy/: bar (200; 6.783914ms)
  Jul  6 12:24:31.600: INFO: (3) /api/v1/namespaces/proxy-6759/services/proxy-service-74mfb:portname2/proxy/: bar (200; 7.2762ms)
  Jul  6 12:24:31.600: INFO: (3) /api/v1/namespaces/proxy-6759/services/http:proxy-service-74mfb:portname1/proxy/: foo (200; 7.466889ms)
  Jul  6 12:24:31.601: INFO: (3) /api/v1/namespaces/proxy-6759/services/https:proxy-service-74mfb:tlsportname1/proxy/: tls baz (200; 7.922661ms)
  Jul  6 12:24:31.604: INFO: (4) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:1080/proxy/rewriteme">test<... (200; 3.079675ms)
  Jul  6 12:24:31.604: INFO: (4) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:162/proxy/: bar (200; 3.626351ms)
  Jul  6 12:24:31.605: INFO: (4) /api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:443/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:443/proxy/tlsrewritem... (200; 4.038556ms)
  Jul  6 12:24:31.605: INFO: (4) /api/v1/namespaces/proxy-6759/services/https:proxy-service-74mfb:tlsportname1/proxy/: tls baz (200; 4.39756ms)
  Jul  6 12:24:31.605: INFO: (4) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw/proxy/rewriteme">test</a> (200; 4.630587ms)
  Jul  6 12:24:31.606: INFO: (4) /api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:160/proxy/: foo (200; 5.390205ms)
  Jul  6 12:24:31.607: INFO: (4) /api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:1080/proxy/rewriteme">... (200; 6.197469ms)
  Jul  6 12:24:31.607: INFO: (4) /api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:462/proxy/: tls qux (200; 6.343319ms)
  Jul  6 12:24:31.608: INFO: (4) /api/v1/namespaces/proxy-6759/services/https:proxy-service-74mfb:tlsportname2/proxy/: tls qux (200; 6.795083ms)
  Jul  6 12:24:31.608: INFO: (4) /api/v1/namespaces/proxy-6759/services/http:proxy-service-74mfb:portname2/proxy/: bar (200; 6.730652ms)
  Jul  6 12:24:31.608: INFO: (4) /api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:162/proxy/: bar (200; 6.775498ms)
  Jul  6 12:24:31.608: INFO: (4) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:160/proxy/: foo (200; 6.852877ms)
  Jul  6 12:24:31.608: INFO: (4) /api/v1/namespaces/proxy-6759/services/http:proxy-service-74mfb:portname1/proxy/: foo (200; 6.857804ms)
  Jul  6 12:24:31.608: INFO: (4) /api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:460/proxy/: tls baz (200; 7.316823ms)
  Jul  6 12:24:31.608: INFO: (4) /api/v1/namespaces/proxy-6759/services/proxy-service-74mfb:portname2/proxy/: bar (200; 7.521839ms)
  Jul  6 12:24:31.609: INFO: (4) /api/v1/namespaces/proxy-6759/services/proxy-service-74mfb:portname1/proxy/: foo (200; 7.730271ms)
  Jul  6 12:24:31.612: INFO: (5) /api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:1080/proxy/rewriteme">... (200; 2.901897ms)
  Jul  6 12:24:31.623: INFO: (5) /api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:462/proxy/: tls qux (200; 14.269194ms)
  Jul  6 12:24:31.623: INFO: (5) /api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:443/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:443/proxy/tlsrewritem... (200; 14.387615ms)
  Jul  6 12:24:31.631: INFO: (5) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:160/proxy/: foo (200; 22.412899ms)
  Jul  6 12:24:31.632: INFO: (5) /api/v1/namespaces/proxy-6759/services/http:proxy-service-74mfb:portname2/proxy/: bar (200; 22.940113ms)
  Jul  6 12:24:31.632: INFO: (5) /api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:160/proxy/: foo (200; 23.353789ms)
  Jul  6 12:24:31.632: INFO: (5) /api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:460/proxy/: tls baz (200; 23.458379ms)
  Jul  6 12:24:31.632: INFO: (5) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw/proxy/rewriteme">test</a> (200; 23.353969ms)
  Jul  6 12:24:31.636: INFO: (5) /api/v1/namespaces/proxy-6759/services/https:proxy-service-74mfb:tlsportname2/proxy/: tls qux (200; 27.514571ms)
  Jul  6 12:24:31.637: INFO: (5) /api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:162/proxy/: bar (200; 28.492236ms)
  Jul  6 12:24:31.638: INFO: (5) /api/v1/namespaces/proxy-6759/services/http:proxy-service-74mfb:portname1/proxy/: foo (200; 28.903873ms)
  Jul  6 12:24:31.638: INFO: (5) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:1080/proxy/rewriteme">test<... (200; 28.819091ms)
  Jul  6 12:24:31.638: INFO: (5) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:162/proxy/: bar (200; 28.944697ms)
  Jul  6 12:24:31.639: INFO: (5) /api/v1/namespaces/proxy-6759/services/proxy-service-74mfb:portname1/proxy/: foo (200; 30.023077ms)
  Jul  6 12:24:31.640: INFO: (5) /api/v1/namespaces/proxy-6759/services/https:proxy-service-74mfb:tlsportname1/proxy/: tls baz (200; 31.27953ms)
  Jul  6 12:24:31.640: INFO: (5) /api/v1/namespaces/proxy-6759/services/proxy-service-74mfb:portname2/proxy/: bar (200; 31.3742ms)
  Jul  6 12:24:31.656: INFO: (6) /api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:443/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:443/proxy/tlsrewritem... (200; 15.560042ms)
  Jul  6 12:24:31.656: INFO: (6) /api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:460/proxy/: tls baz (200; 15.505243ms)
  Jul  6 12:24:31.656: INFO: (6) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:1080/proxy/rewriteme">test<... (200; 15.611017ms)
  Jul  6 12:24:31.657: INFO: (6) /api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:162/proxy/: bar (200; 16.47367ms)
  Jul  6 12:24:31.657: INFO: (6) /api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:160/proxy/: foo (200; 16.823768ms)
  Jul  6 12:24:31.657: INFO: (6) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw/proxy/rewriteme">test</a> (200; 16.865979ms)
  Jul  6 12:24:31.660: INFO: (6) /api/v1/namespaces/proxy-6759/services/proxy-service-74mfb:portname1/proxy/: foo (200; 19.831638ms)
  Jul  6 12:24:31.663: INFO: (6) /api/v1/namespaces/proxy-6759/services/proxy-service-74mfb:portname2/proxy/: bar (200; 22.845423ms)
  Jul  6 12:24:31.664: INFO: (6) /api/v1/namespaces/proxy-6759/services/http:proxy-service-74mfb:portname2/proxy/: bar (200; 23.070391ms)
  Jul  6 12:24:31.664: INFO: (6) /api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:1080/proxy/rewriteme">... (200; 22.995456ms)
  Jul  6 12:24:31.664: INFO: (6) /api/v1/namespaces/proxy-6759/services/http:proxy-service-74mfb:portname1/proxy/: foo (200; 23.05113ms)
  Jul  6 12:24:31.670: INFO: (6) /api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:462/proxy/: tls qux (200; 29.318046ms)
  Jul  6 12:24:31.670: INFO: (6) /api/v1/namespaces/proxy-6759/services/https:proxy-service-74mfb:tlsportname1/proxy/: tls baz (200; 29.207031ms)
  Jul  6 12:24:31.670: INFO: (6) /api/v1/namespaces/proxy-6759/services/https:proxy-service-74mfb:tlsportname2/proxy/: tls qux (200; 29.204737ms)
  Jul  6 12:24:31.670: INFO: (6) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:162/proxy/: bar (200; 29.761761ms)
  Jul  6 12:24:31.670: INFO: (6) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:160/proxy/: foo (200; 29.931326ms)
  Jul  6 12:24:31.683: INFO: (7) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:162/proxy/: bar (200; 12.63521ms)
  Jul  6 12:24:31.685: INFO: (7) /api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:460/proxy/: tls baz (200; 14.105627ms)
  Jul  6 12:24:31.687: INFO: (7) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw/proxy/rewriteme">test</a> (200; 16.709749ms)
  Jul  6 12:24:31.688: INFO: (7) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:1080/proxy/rewriteme">test<... (200; 16.878935ms)
  Jul  6 12:24:31.688: INFO: (7) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:160/proxy/: foo (200; 16.8635ms)
  Jul  6 12:24:31.688: INFO: (7) /api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:162/proxy/: bar (200; 16.851079ms)
  Jul  6 12:24:31.688: INFO: (7) /api/v1/namespaces/proxy-6759/services/http:proxy-service-74mfb:portname1/proxy/: foo (200; 16.810178ms)
  Jul  6 12:24:31.688: INFO: (7) /api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:443/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:443/proxy/tlsrewritem... (200; 17.090077ms)
  Jul  6 12:24:31.688: INFO: (7) /api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:1080/proxy/rewriteme">... (200; 17.157745ms)
  Jul  6 12:24:31.688: INFO: (7) /api/v1/namespaces/proxy-6759/services/https:proxy-service-74mfb:tlsportname2/proxy/: tls qux (200; 17.341993ms)
  Jul  6 12:24:31.688: INFO: (7) /api/v1/namespaces/proxy-6759/services/http:proxy-service-74mfb:portname2/proxy/: bar (200; 17.416193ms)
  Jul  6 12:24:31.688: INFO: (7) /api/v1/namespaces/proxy-6759/services/https:proxy-service-74mfb:tlsportname1/proxy/: tls baz (200; 17.454296ms)
  Jul  6 12:24:31.688: INFO: (7) /api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:462/proxy/: tls qux (200; 17.344097ms)
  Jul  6 12:24:31.689: INFO: (7) /api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:160/proxy/: foo (200; 17.859338ms)
  Jul  6 12:24:31.689: INFO: (7) /api/v1/namespaces/proxy-6759/services/proxy-service-74mfb:portname2/proxy/: bar (200; 17.935589ms)
  Jul  6 12:24:31.689: INFO: (7) /api/v1/namespaces/proxy-6759/services/proxy-service-74mfb:portname1/proxy/: foo (200; 18.133117ms)
  Jul  6 12:24:31.692: INFO: (8) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:1080/proxy/rewriteme">test<... (200; 3.322046ms)
  Jul  6 12:24:31.693: INFO: (8) /api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:1080/proxy/rewriteme">... (200; 4.315431ms)
  Jul  6 12:24:31.694: INFO: (8) /api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:160/proxy/: foo (200; 4.56538ms)
  Jul  6 12:24:31.694: INFO: (8) /api/v1/namespaces/proxy-6759/services/https:proxy-service-74mfb:tlsportname2/proxy/: tls qux (200; 4.789331ms)
  Jul  6 12:24:31.694: INFO: (8) /api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:462/proxy/: tls qux (200; 5.063646ms)
  Jul  6 12:24:31.695: INFO: (8) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw/proxy/rewriteme">test</a> (200; 5.51332ms)
  Jul  6 12:24:31.695: INFO: (8) /api/v1/namespaces/proxy-6759/services/http:proxy-service-74mfb:portname2/proxy/: bar (200; 6.435048ms)
  Jul  6 12:24:31.695: INFO: (8) /api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:443/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:443/proxy/tlsrewritem... (200; 6.193298ms)
  Jul  6 12:24:31.695: INFO: (8) /api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:460/proxy/: tls baz (200; 6.190814ms)
  Jul  6 12:24:31.696: INFO: (8) /api/v1/namespaces/proxy-6759/services/proxy-service-74mfb:portname1/proxy/: foo (200; 6.593418ms)
  Jul  6 12:24:31.696: INFO: (8) /api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:162/proxy/: bar (200; 6.817422ms)
  Jul  6 12:24:31.696: INFO: (8) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:160/proxy/: foo (200; 7.166022ms)
  Jul  6 12:24:31.696: INFO: (8) /api/v1/namespaces/proxy-6759/services/proxy-service-74mfb:portname2/proxy/: bar (200; 7.171675ms)
  Jul  6 12:24:31.696: INFO: (8) /api/v1/namespaces/proxy-6759/services/https:proxy-service-74mfb:tlsportname1/proxy/: tls baz (200; 7.528762ms)
  Jul  6 12:24:31.697: INFO: (8) /api/v1/namespaces/proxy-6759/services/http:proxy-service-74mfb:portname1/proxy/: foo (200; 7.703604ms)
  Jul  6 12:24:31.697: INFO: (8) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:162/proxy/: bar (200; 7.601181ms)
  Jul  6 12:24:31.701: INFO: (9) /api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:462/proxy/: tls qux (200; 4.006042ms)
  Jul  6 12:24:31.701: INFO: (9) /api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:160/proxy/: foo (200; 4.424202ms)
  Jul  6 12:24:31.702: INFO: (9) /api/v1/namespaces/proxy-6759/services/proxy-service-74mfb:portname1/proxy/: foo (200; 5.280429ms)
  Jul  6 12:24:31.702: INFO: (9) /api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:443/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:443/proxy/tlsrewritem... (200; 5.447777ms)
  Jul  6 12:24:31.703: INFO: (9) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:162/proxy/: bar (200; 5.879666ms)
  Jul  6 12:24:31.703: INFO: (9) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:160/proxy/: foo (200; 6.022185ms)
  Jul  6 12:24:31.703: INFO: (9) /api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:162/proxy/: bar (200; 6.002033ms)
  Jul  6 12:24:31.703: INFO: (9) /api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:1080/proxy/rewriteme">... (200; 5.980878ms)
  Jul  6 12:24:31.703: INFO: (9) /api/v1/namespaces/proxy-6759/services/http:proxy-service-74mfb:portname1/proxy/: foo (200; 6.528404ms)
  Jul  6 12:24:31.704: INFO: (9) /api/v1/namespaces/proxy-6759/services/http:proxy-service-74mfb:portname2/proxy/: bar (200; 6.82642ms)
  Jul  6 12:24:31.704: INFO: (9) /api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:460/proxy/: tls baz (200; 7.033241ms)
  Jul  6 12:24:31.704: INFO: (9) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:1080/proxy/rewriteme">test<... (200; 7.544339ms)
  Jul  6 12:24:31.704: INFO: (9) /api/v1/namespaces/proxy-6759/services/proxy-service-74mfb:portname2/proxy/: bar (200; 7.738761ms)
  Jul  6 12:24:31.704: INFO: (9) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw/proxy/rewriteme">test</a> (200; 7.644544ms)
  Jul  6 12:24:31.704: INFO: (9) /api/v1/namespaces/proxy-6759/services/https:proxy-service-74mfb:tlsportname1/proxy/: tls baz (200; 7.729565ms)
  Jul  6 12:24:31.704: INFO: (9) /api/v1/namespaces/proxy-6759/services/https:proxy-service-74mfb:tlsportname2/proxy/: tls qux (200; 7.72277ms)
  Jul  6 12:24:31.707: INFO: (10) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:1080/proxy/rewriteme">test<... (200; 2.91332ms)
  Jul  6 12:24:31.708: INFO: (10) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw/proxy/rewriteme">test</a> (200; 3.126027ms)
  Jul  6 12:24:31.709: INFO: (10) /api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:462/proxy/: tls qux (200; 4.180179ms)
  Jul  6 12:24:31.709: INFO: (10) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:160/proxy/: foo (200; 4.219795ms)
  Jul  6 12:24:31.709: INFO: (10) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:162/proxy/: bar (200; 4.571124ms)
  Jul  6 12:24:31.710: INFO: (10) /api/v1/namespaces/proxy-6759/services/proxy-service-74mfb:portname1/proxy/: foo (200; 4.892084ms)
  Jul  6 12:24:31.710: INFO: (10) /api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:160/proxy/: foo (200; 5.491152ms)
  Jul  6 12:24:31.710: INFO: (10) /api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:460/proxy/: tls baz (200; 5.525188ms)
  Jul  6 12:24:31.711: INFO: (10) /api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:1080/proxy/rewriteme">... (200; 6.095132ms)
  Jul  6 12:24:31.711: INFO: (10) /api/v1/namespaces/proxy-6759/services/https:proxy-service-74mfb:tlsportname2/proxy/: tls qux (200; 6.341809ms)
  Jul  6 12:24:31.711: INFO: (10) /api/v1/namespaces/proxy-6759/services/https:proxy-service-74mfb:tlsportname1/proxy/: tls baz (200; 6.492376ms)
  Jul  6 12:24:31.711: INFO: (10) /api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:162/proxy/: bar (200; 6.385915ms)
  Jul  6 12:24:31.711: INFO: (10) /api/v1/namespaces/proxy-6759/services/http:proxy-service-74mfb:portname1/proxy/: foo (200; 6.828965ms)
  Jul  6 12:24:31.711: INFO: (10) /api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:443/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:443/proxy/tlsrewritem... (200; 6.777518ms)
  Jul  6 12:24:31.712: INFO: (10) /api/v1/namespaces/proxy-6759/services/http:proxy-service-74mfb:portname2/proxy/: bar (200; 7.477159ms)
  Jul  6 12:24:31.712: INFO: (10) /api/v1/namespaces/proxy-6759/services/proxy-service-74mfb:portname2/proxy/: bar (200; 7.634399ms)
  Jul  6 12:24:31.715: INFO: (11) /api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:162/proxy/: bar (200; 2.616145ms)
  Jul  6 12:24:31.717: INFO: (11) /api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:460/proxy/: tls baz (200; 4.133ms)
  Jul  6 12:24:31.717: INFO: (11) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:162/proxy/: bar (200; 4.044153ms)
  Jul  6 12:24:31.717: INFO: (11) /api/v1/namespaces/proxy-6759/services/proxy-service-74mfb:portname1/proxy/: foo (200; 4.759603ms)
  Jul  6 12:24:31.718: INFO: (11) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw/proxy/rewriteme">test</a> (200; 5.413684ms)
  Jul  6 12:24:31.718: INFO: (11) /api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:1080/proxy/rewriteme">... (200; 5.484976ms)
  Jul  6 12:24:31.718: INFO: (11) /api/v1/namespaces/proxy-6759/services/https:proxy-service-74mfb:tlsportname2/proxy/: tls qux (200; 5.439238ms)
  Jul  6 12:24:31.718: INFO: (11) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:1080/proxy/rewriteme">test<... (200; 5.931819ms)
  Jul  6 12:24:31.719: INFO: (11) /api/v1/namespaces/proxy-6759/services/http:proxy-service-74mfb:portname2/proxy/: bar (200; 6.007611ms)
  Jul  6 12:24:31.719: INFO: (11) /api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:462/proxy/: tls qux (200; 6.027486ms)
  Jul  6 12:24:31.719: INFO: (11) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:160/proxy/: foo (200; 5.961192ms)
  Jul  6 12:24:31.719: INFO: (11) /api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:443/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:443/proxy/tlsrewritem... (200; 6.124687ms)
  Jul  6 12:24:31.719: INFO: (11) /api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:160/proxy/: foo (200; 6.149251ms)
  Jul  6 12:24:31.720: INFO: (11) /api/v1/namespaces/proxy-6759/services/http:proxy-service-74mfb:portname1/proxy/: foo (200; 7.078431ms)
  Jul  6 12:24:31.721: INFO: (11) /api/v1/namespaces/proxy-6759/services/proxy-service-74mfb:portname2/proxy/: bar (200; 7.948567ms)
  Jul  6 12:24:31.721: INFO: (11) /api/v1/namespaces/proxy-6759/services/https:proxy-service-74mfb:tlsportname1/proxy/: tls baz (200; 8.019341ms)
  Jul  6 12:24:31.724: INFO: (12) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:1080/proxy/rewriteme">test<... (200; 3.135622ms)
  Jul  6 12:24:31.725: INFO: (12) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:160/proxy/: foo (200; 3.778545ms)
  Jul  6 12:24:31.725: INFO: (12) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw/proxy/rewriteme">test</a> (200; 4.274651ms)
  Jul  6 12:24:31.725: INFO: (12) /api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:443/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:443/proxy/tlsrewritem... (200; 4.314754ms)
  Jul  6 12:24:31.726: INFO: (12) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:162/proxy/: bar (200; 4.794647ms)
  Jul  6 12:24:31.726: INFO: (12) /api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:1080/proxy/rewriteme">... (200; 4.904955ms)
  Jul  6 12:24:31.726: INFO: (12) /api/v1/namespaces/proxy-6759/services/http:proxy-service-74mfb:portname2/proxy/: bar (200; 5.487035ms)
  Jul  6 12:24:31.727: INFO: (12) /api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:162/proxy/: bar (200; 5.747224ms)
  Jul  6 12:24:31.727: INFO: (12) /api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:160/proxy/: foo (200; 6.22615ms)
  Jul  6 12:24:31.727: INFO: (12) /api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:462/proxy/: tls qux (200; 6.318067ms)
  Jul  6 12:24:31.728: INFO: (12) /api/v1/namespaces/proxy-6759/services/proxy-service-74mfb:portname2/proxy/: bar (200; 6.955424ms)
  Jul  6 12:24:31.728: INFO: (12) /api/v1/namespaces/proxy-6759/services/proxy-service-74mfb:portname1/proxy/: foo (200; 7.604206ms)
  Jul  6 12:24:31.731: INFO: (12) /api/v1/namespaces/proxy-6759/services/https:proxy-service-74mfb:tlsportname2/proxy/: tls qux (200; 10.497841ms)
  Jul  6 12:24:31.731: INFO: (12) /api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:460/proxy/: tls baz (200; 10.430299ms)
  Jul  6 12:24:31.732: INFO: (12) /api/v1/namespaces/proxy-6759/services/http:proxy-service-74mfb:portname1/proxy/: foo (200; 11.479469ms)
  Jul  6 12:24:31.733: INFO: (12) /api/v1/namespaces/proxy-6759/services/https:proxy-service-74mfb:tlsportname1/proxy/: tls baz (200; 12.358163ms)
  Jul  6 12:24:31.737: INFO: (13) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:160/proxy/: foo (200; 3.468692ms)
  Jul  6 12:24:31.738: INFO: (13) /api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:1080/proxy/rewriteme">... (200; 4.400103ms)
  Jul  6 12:24:31.738: INFO: (13) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:1080/proxy/rewriteme">test<... (200; 4.528408ms)
  Jul  6 12:24:31.738: INFO: (13) /api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:162/proxy/: bar (200; 4.782309ms)
  Jul  6 12:24:31.739: INFO: (13) /api/v1/namespaces/proxy-6759/services/proxy-service-74mfb:portname1/proxy/: foo (200; 5.342759ms)
  Jul  6 12:24:31.739: INFO: (13) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:162/proxy/: bar (200; 5.466993ms)
  Jul  6 12:24:31.740: INFO: (13) /api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:443/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:443/proxy/tlsrewritem... (200; 5.986635ms)
  Jul  6 12:24:31.740: INFO: (13) /api/v1/namespaces/proxy-6759/services/https:proxy-service-74mfb:tlsportname2/proxy/: tls qux (200; 6.620812ms)
  Jul  6 12:24:31.740: INFO: (13) /api/v1/namespaces/proxy-6759/services/http:proxy-service-74mfb:portname2/proxy/: bar (200; 6.787175ms)
  Jul  6 12:24:31.740: INFO: (13) /api/v1/namespaces/proxy-6759/services/https:proxy-service-74mfb:tlsportname1/proxy/: tls baz (200; 6.733547ms)
  Jul  6 12:24:31.740: INFO: (13) /api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:160/proxy/: foo (200; 6.849697ms)
  Jul  6 12:24:31.740: INFO: (13) /api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:460/proxy/: tls baz (200; 6.730259ms)
  Jul  6 12:24:31.741: INFO: (13) /api/v1/namespaces/proxy-6759/services/proxy-service-74mfb:portname2/proxy/: bar (200; 7.141807ms)
  Jul  6 12:24:31.741: INFO: (13) /api/v1/namespaces/proxy-6759/services/http:proxy-service-74mfb:portname1/proxy/: foo (200; 7.159755ms)
  Jul  6 12:24:31.741: INFO: (13) /api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:462/proxy/: tls qux (200; 7.353ms)
  Jul  6 12:24:31.741: INFO: (13) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw/proxy/rewriteme">test</a> (200; 7.301993ms)
  Jul  6 12:24:31.745: INFO: (14) /api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:1080/proxy/rewriteme">... (200; 3.908614ms)
  Jul  6 12:24:31.746: INFO: (14) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:1080/proxy/rewriteme">test<... (200; 4.654357ms)
  Jul  6 12:24:31.746: INFO: (14) /api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:160/proxy/: foo (200; 5.010309ms)
  Jul  6 12:24:31.746: INFO: (14) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:160/proxy/: foo (200; 4.928784ms)
  Jul  6 12:24:31.746: INFO: (14) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:162/proxy/: bar (200; 5.165243ms)
  Jul  6 12:24:31.746: INFO: (14) /api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:460/proxy/: tls baz (200; 5.141719ms)
  Jul  6 12:24:31.746: INFO: (14) /api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:462/proxy/: tls qux (200; 5.045054ms)
  Jul  6 12:24:31.746: INFO: (14) /api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:443/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:443/proxy/tlsrewritem... (200; 5.206232ms)
  Jul  6 12:24:31.747: INFO: (14) /api/v1/namespaces/proxy-6759/services/https:proxy-service-74mfb:tlsportname1/proxy/: tls baz (200; 5.445723ms)
  Jul  6 12:24:31.747: INFO: (14) /api/v1/namespaces/proxy-6759/services/proxy-service-74mfb:portname1/proxy/: foo (200; 6.233459ms)
  Jul  6 12:24:31.748: INFO: (14) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw/proxy/rewriteme">test</a> (200; 7.021492ms)
  Jul  6 12:24:31.748: INFO: (14) /api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:162/proxy/: bar (200; 6.838794ms)
  Jul  6 12:24:31.748: INFO: (14) /api/v1/namespaces/proxy-6759/services/http:proxy-service-74mfb:portname1/proxy/: foo (200; 7.084028ms)
  Jul  6 12:24:31.748: INFO: (14) /api/v1/namespaces/proxy-6759/services/proxy-service-74mfb:portname2/proxy/: bar (200; 7.279916ms)
  Jul  6 12:24:31.748: INFO: (14) /api/v1/namespaces/proxy-6759/services/https:proxy-service-74mfb:tlsportname2/proxy/: tls qux (200; 7.280973ms)
  Jul  6 12:24:31.749: INFO: (14) /api/v1/namespaces/proxy-6759/services/http:proxy-service-74mfb:portname2/proxy/: bar (200; 7.557336ms)
  Jul  6 12:24:31.753: INFO: (15) /api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:443/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:443/proxy/tlsrewritem... (200; 3.744864ms)
  Jul  6 12:24:31.753: INFO: (15) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw/proxy/rewriteme">test</a> (200; 4.566177ms)
  Jul  6 12:24:31.754: INFO: (15) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:162/proxy/: bar (200; 5.191396ms)
  Jul  6 12:24:31.755: INFO: (15) /api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:1080/proxy/rewriteme">... (200; 5.79218ms)
  Jul  6 12:24:31.755: INFO: (15) /api/v1/namespaces/proxy-6759/services/http:proxy-service-74mfb:portname2/proxy/: bar (200; 5.932348ms)
  Jul  6 12:24:31.755: INFO: (15) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:160/proxy/: foo (200; 5.988891ms)
  Jul  6 12:24:31.755: INFO: (15) /api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:162/proxy/: bar (200; 6.166829ms)
  Jul  6 12:24:31.755: INFO: (15) /api/v1/namespaces/proxy-6759/services/http:proxy-service-74mfb:portname1/proxy/: foo (200; 6.502902ms)
  Jul  6 12:24:31.755: INFO: (15) /api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:160/proxy/: foo (200; 6.358809ms)
  Jul  6 12:24:31.755: INFO: (15) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:1080/proxy/rewriteme">test<... (200; 6.668686ms)
  Jul  6 12:24:31.755: INFO: (15) /api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:460/proxy/: tls baz (200; 6.522841ms)
  Jul  6 12:24:31.755: INFO: (15) /api/v1/namespaces/proxy-6759/services/proxy-service-74mfb:portname1/proxy/: foo (200; 6.577246ms)
  Jul  6 12:24:31.756: INFO: (15) /api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:462/proxy/: tls qux (200; 6.980856ms)
  Jul  6 12:24:31.756: INFO: (15) /api/v1/namespaces/proxy-6759/services/https:proxy-service-74mfb:tlsportname2/proxy/: tls qux (200; 7.218584ms)
  Jul  6 12:24:31.756: INFO: (15) /api/v1/namespaces/proxy-6759/services/proxy-service-74mfb:portname2/proxy/: bar (200; 7.272976ms)
  Jul  6 12:24:31.758: INFO: (15) /api/v1/namespaces/proxy-6759/services/https:proxy-service-74mfb:tlsportname1/proxy/: tls baz (200; 9.06829ms)
  Jul  6 12:24:31.762: INFO: (16) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:162/proxy/: bar (200; 3.641972ms)
  Jul  6 12:24:31.763: INFO: (16) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:1080/proxy/rewriteme">test<... (200; 4.758783ms)
  Jul  6 12:24:31.763: INFO: (16) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw/proxy/rewriteme">test</a> (200; 4.809286ms)
  Jul  6 12:24:31.764: INFO: (16) /api/v1/namespaces/proxy-6759/services/https:proxy-service-74mfb:tlsportname1/proxy/: tls baz (200; 5.31173ms)
  Jul  6 12:24:31.764: INFO: (16) /api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:460/proxy/: tls baz (200; 5.524021ms)
  Jul  6 12:24:31.764: INFO: (16) /api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:443/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:443/proxy/tlsrewritem... (200; 5.365665ms)
  Jul  6 12:24:31.764: INFO: (16) /api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:1080/proxy/rewriteme">... (200; 5.476679ms)
  Jul  6 12:24:31.764: INFO: (16) /api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:462/proxy/: tls qux (200; 5.467923ms)
  Jul  6 12:24:31.765: INFO: (16) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:160/proxy/: foo (200; 6.237583ms)
  Jul  6 12:24:31.765: INFO: (16) /api/v1/namespaces/proxy-6759/services/http:proxy-service-74mfb:portname2/proxy/: bar (200; 6.565123ms)
  Jul  6 12:24:31.765: INFO: (16) /api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:160/proxy/: foo (200; 6.95ms)
  Jul  6 12:24:31.765: INFO: (16) /api/v1/namespaces/proxy-6759/services/proxy-service-74mfb:portname2/proxy/: bar (200; 7.194561ms)
  Jul  6 12:24:31.765: INFO: (16) /api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:162/proxy/: bar (200; 7.112309ms)
  Jul  6 12:24:31.766: INFO: (16) /api/v1/namespaces/proxy-6759/services/proxy-service-74mfb:portname1/proxy/: foo (200; 7.277309ms)
  Jul  6 12:24:31.766: INFO: (16) /api/v1/namespaces/proxy-6759/services/https:proxy-service-74mfb:tlsportname2/proxy/: tls qux (200; 7.535085ms)
  Jul  6 12:24:31.766: INFO: (16) /api/v1/namespaces/proxy-6759/services/http:proxy-service-74mfb:portname1/proxy/: foo (200; 7.997007ms)
  Jul  6 12:24:31.769: INFO: (17) /api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:443/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:443/proxy/tlsrewritem... (200; 3.101966ms)
  Jul  6 12:24:31.770: INFO: (17) /api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:460/proxy/: tls baz (200; 3.250884ms)
  Jul  6 12:24:31.770: INFO: (17) /api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:462/proxy/: tls qux (200; 4.016539ms)
  Jul  6 12:24:31.771: INFO: (17) /api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:160/proxy/: foo (200; 4.309244ms)
  Jul  6 12:24:31.771: INFO: (17) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:162/proxy/: bar (200; 4.323987ms)
  Jul  6 12:24:31.771: INFO: (17) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:160/proxy/: foo (200; 4.503054ms)
  Jul  6 12:24:31.771: INFO: (17) /api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:1080/proxy/rewriteme">... (200; 4.847328ms)
  Jul  6 12:24:31.772: INFO: (17) /api/v1/namespaces/proxy-6759/services/http:proxy-service-74mfb:portname2/proxy/: bar (200; 5.525489ms)
  Jul  6 12:24:31.772: INFO: (17) /api/v1/namespaces/proxy-6759/services/proxy-service-74mfb:portname1/proxy/: foo (200; 6.117436ms)
  Jul  6 12:24:31.772: INFO: (17) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:1080/proxy/rewriteme">test<... (200; 6.123781ms)
  Jul  6 12:24:31.773: INFO: (17) /api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:162/proxy/: bar (200; 6.319126ms)
  Jul  6 12:24:31.773: INFO: (17) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw/proxy/rewriteme">test</a> (200; 6.19514ms)
  Jul  6 12:24:31.773: INFO: (17) /api/v1/namespaces/proxy-6759/services/proxy-service-74mfb:portname2/proxy/: bar (200; 6.515879ms)
  Jul  6 12:24:31.773: INFO: (17) /api/v1/namespaces/proxy-6759/services/https:proxy-service-74mfb:tlsportname2/proxy/: tls qux (200; 6.676963ms)
  Jul  6 12:24:31.773: INFO: (17) /api/v1/namespaces/proxy-6759/services/http:proxy-service-74mfb:portname1/proxy/: foo (200; 7.198493ms)
  Jul  6 12:24:31.774: INFO: (17) /api/v1/namespaces/proxy-6759/services/https:proxy-service-74mfb:tlsportname1/proxy/: tls baz (200; 7.197351ms)
  Jul  6 12:24:31.777: INFO: (18) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:162/proxy/: bar (200; 3.449991ms)
  Jul  6 12:24:31.778: INFO: (18) /api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:443/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:443/proxy/tlsrewritem... (200; 3.881512ms)
  Jul  6 12:24:31.778: INFO: (18) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:1080/proxy/rewriteme">test<... (200; 4.273652ms)
  Jul  6 12:24:31.779: INFO: (18) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:160/proxy/: foo (200; 5.456927ms)
  Jul  6 12:24:31.779: INFO: (18) /api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:460/proxy/: tls baz (200; 5.662947ms)
  Jul  6 12:24:31.780: INFO: (18) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw/proxy/rewriteme">test</a> (200; 5.824516ms)
  Jul  6 12:24:31.780: INFO: (18) /api/v1/namespaces/proxy-6759/services/http:proxy-service-74mfb:portname2/proxy/: bar (200; 6.024673ms)
  Jul  6 12:24:31.780: INFO: (18) /api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:162/proxy/: bar (200; 6.172483ms)
  Jul  6 12:24:31.781: INFO: (18) /api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:1080/proxy/rewriteme">... (200; 7.249793ms)
  Jul  6 12:24:31.781: INFO: (18) /api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:462/proxy/: tls qux (200; 7.391019ms)
  Jul  6 12:24:31.781: INFO: (18) /api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:160/proxy/: foo (200; 7.465073ms)
  Jul  6 12:24:31.781: INFO: (18) /api/v1/namespaces/proxy-6759/services/proxy-service-74mfb:portname1/proxy/: foo (200; 7.357044ms)
  Jul  6 12:24:31.781: INFO: (18) /api/v1/namespaces/proxy-6759/services/https:proxy-service-74mfb:tlsportname1/proxy/: tls baz (200; 7.45657ms)
  Jul  6 12:24:31.782: INFO: (18) /api/v1/namespaces/proxy-6759/services/proxy-service-74mfb:portname2/proxy/: bar (200; 8.353284ms)
  Jul  6 12:24:31.783: INFO: (18) /api/v1/namespaces/proxy-6759/services/https:proxy-service-74mfb:tlsportname2/proxy/: tls qux (200; 8.616389ms)
  Jul  6 12:24:31.784: INFO: (18) /api/v1/namespaces/proxy-6759/services/http:proxy-service-74mfb:portname1/proxy/: foo (200; 10.241783ms)
  Jul  6 12:24:31.788: INFO: (19) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:1080/proxy/rewriteme">test<... (200; 4.472975ms)
  Jul  6 12:24:31.789: INFO: (19) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw/proxy/rewriteme">test</a> (200; 4.632422ms)
  Jul  6 12:24:31.789: INFO: (19) /api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:162/proxy/: bar (200; 4.59723ms)
  Jul  6 12:24:31.789: INFO: (19) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:160/proxy/: foo (200; 4.649028ms)
  Jul  6 12:24:31.789: INFO: (19) /api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:460/proxy/: tls baz (200; 5.259303ms)
  Jul  6 12:24:31.790: INFO: (19) /api/v1/namespaces/proxy-6759/services/http:proxy-service-74mfb:portname2/proxy/: bar (200; 5.911136ms)
  Jul  6 12:24:31.790: INFO: (19) /api/v1/namespaces/proxy-6759/services/https:proxy-service-74mfb:tlsportname2/proxy/: tls qux (200; 6.38541ms)
  Jul  6 12:24:31.790: INFO: (19) /api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:1080/proxy/rewriteme">... (200; 6.378561ms)
  Jul  6 12:24:31.790: INFO: (19) /api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:443/proxy/: <a href="/api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:443/proxy/tlsrewritem... (200; 6.267581ms)
  Jul  6 12:24:31.790: INFO: (19) /api/v1/namespaces/proxy-6759/services/http:proxy-service-74mfb:portname1/proxy/: foo (200; 6.443199ms)
  Jul  6 12:24:31.791: INFO: (19) /api/v1/namespaces/proxy-6759/pods/http:proxy-service-74mfb-ss9rw:160/proxy/: foo (200; 6.652253ms)
  Jul  6 12:24:31.791: INFO: (19) /api/v1/namespaces/proxy-6759/pods/proxy-service-74mfb-ss9rw:162/proxy/: bar (200; 6.776965ms)
  Jul  6 12:24:31.791: INFO: (19) /api/v1/namespaces/proxy-6759/pods/https:proxy-service-74mfb-ss9rw:462/proxy/: tls qux (200; 6.798494ms)
  Jul  6 12:24:31.791: INFO: (19) /api/v1/namespaces/proxy-6759/services/https:proxy-service-74mfb:tlsportname1/proxy/: tls baz (200; 7.310775ms)
  Jul  6 12:24:31.792: INFO: (19) /api/v1/namespaces/proxy-6759/services/proxy-service-74mfb:portname2/proxy/: bar (200; 7.433973ms)
  Jul  6 12:24:31.792: INFO: (19) /api/v1/namespaces/proxy-6759/services/proxy-service-74mfb:portname1/proxy/: foo (200; 7.893811ms)
  STEP: deleting ReplicationController proxy-service-74mfb in namespace proxy-6759, will wait for the garbage collector to delete the pods @ 07/06/24 12:24:31.792
  Jul  6 12:24:31.852: INFO: Deleting ReplicationController proxy-service-74mfb took: 7.612925ms
  Jul  6 12:24:31.953: INFO: Terminating ReplicationController proxy-service-74mfb pods took: 100.962248ms
  Jul  6 12:24:33.953: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-6759" for this suite. @ 07/06/24 12:24:33.958
• [5.496 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 07/06/24 12:24:33.965
  Jul  6 12:24:33.965: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename gc @ 07/06/24 12:24:33.966
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:24:33.978
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:24:33.982
  STEP: create the rc @ 07/06/24 12:24:33.989
  W0706 12:24:33.994790      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 07/06/24 12:24:39.997
  STEP: wait for the rc to be deleted @ 07/06/24 12:24:40.002
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 07/06/24 12:24:45.007
  STEP: Gathering metrics @ 07/06/24 12:25:15.014
  W0706 12:25:15.018675      21 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Jul  6 12:25:15.018: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jul  6 12:25:15.018: INFO: Deleting pod "simpletest.rc-26lqg" in namespace "gc-4138"
  Jul  6 12:25:15.033: INFO: Deleting pod "simpletest.rc-2m46k" in namespace "gc-4138"
  Jul  6 12:25:15.046: INFO: Deleting pod "simpletest.rc-2zg6d" in namespace "gc-4138"
  Jul  6 12:25:15.057: INFO: Deleting pod "simpletest.rc-4gbxp" in namespace "gc-4138"
  Jul  6 12:25:15.072: INFO: Deleting pod "simpletest.rc-4gswx" in namespace "gc-4138"
  Jul  6 12:25:15.085: INFO: Deleting pod "simpletest.rc-4n8th" in namespace "gc-4138"
  Jul  6 12:25:15.094: INFO: Deleting pod "simpletest.rc-4wndg" in namespace "gc-4138"
  Jul  6 12:25:15.109: INFO: Deleting pod "simpletest.rc-4xrnp" in namespace "gc-4138"
  Jul  6 12:25:15.119: INFO: Deleting pod "simpletest.rc-5h75t" in namespace "gc-4138"
  Jul  6 12:25:15.134: INFO: Deleting pod "simpletest.rc-5wntz" in namespace "gc-4138"
  Jul  6 12:25:15.153: INFO: Deleting pod "simpletest.rc-6bq44" in namespace "gc-4138"
  Jul  6 12:25:15.165: INFO: Deleting pod "simpletest.rc-6q79k" in namespace "gc-4138"
  Jul  6 12:25:15.176: INFO: Deleting pod "simpletest.rc-724g9" in namespace "gc-4138"
  Jul  6 12:25:15.187: INFO: Deleting pod "simpletest.rc-72k92" in namespace "gc-4138"
  Jul  6 12:25:15.198: INFO: Deleting pod "simpletest.rc-79njq" in namespace "gc-4138"
  Jul  6 12:25:15.218: INFO: Deleting pod "simpletest.rc-7dcm9" in namespace "gc-4138"
  Jul  6 12:25:15.236: INFO: Deleting pod "simpletest.rc-7hf4d" in namespace "gc-4138"
  Jul  6 12:25:15.246: INFO: Deleting pod "simpletest.rc-7wflc" in namespace "gc-4138"
  Jul  6 12:25:15.266: INFO: Deleting pod "simpletest.rc-7xdvr" in namespace "gc-4138"
  Jul  6 12:25:15.281: INFO: Deleting pod "simpletest.rc-8r8jz" in namespace "gc-4138"
  Jul  6 12:25:15.298: INFO: Deleting pod "simpletest.rc-9bb9g" in namespace "gc-4138"
  Jul  6 12:25:15.311: INFO: Deleting pod "simpletest.rc-9bxw2" in namespace "gc-4138"
  Jul  6 12:25:15.326: INFO: Deleting pod "simpletest.rc-9mngf" in namespace "gc-4138"
  Jul  6 12:25:15.338: INFO: Deleting pod "simpletest.rc-9vs67" in namespace "gc-4138"
  Jul  6 12:25:15.357: INFO: Deleting pod "simpletest.rc-bgx7k" in namespace "gc-4138"
  Jul  6 12:25:15.379: INFO: Deleting pod "simpletest.rc-bhwxw" in namespace "gc-4138"
  Jul  6 12:25:15.398: INFO: Deleting pod "simpletest.rc-bqjvd" in namespace "gc-4138"
  Jul  6 12:25:15.418: INFO: Deleting pod "simpletest.rc-c7b2p" in namespace "gc-4138"
  Jul  6 12:25:15.430: INFO: Deleting pod "simpletest.rc-cc9ft" in namespace "gc-4138"
  Jul  6 12:25:15.446: INFO: Deleting pod "simpletest.rc-cd8fg" in namespace "gc-4138"
  Jul  6 12:25:15.458: INFO: Deleting pod "simpletest.rc-cj64n" in namespace "gc-4138"
  Jul  6 12:25:15.471: INFO: Deleting pod "simpletest.rc-cqqq4" in namespace "gc-4138"
  Jul  6 12:25:15.484: INFO: Deleting pod "simpletest.rc-cqzx6" in namespace "gc-4138"
  Jul  6 12:25:15.497: INFO: Deleting pod "simpletest.rc-crbsp" in namespace "gc-4138"
  Jul  6 12:25:15.510: INFO: Deleting pod "simpletest.rc-cxgk2" in namespace "gc-4138"
  Jul  6 12:25:15.523: INFO: Deleting pod "simpletest.rc-d6rsg" in namespace "gc-4138"
  Jul  6 12:25:15.539: INFO: Deleting pod "simpletest.rc-dh2lt" in namespace "gc-4138"
  Jul  6 12:25:15.559: INFO: Deleting pod "simpletest.rc-drnh9" in namespace "gc-4138"
  Jul  6 12:25:15.574: INFO: Deleting pod "simpletest.rc-dxqb9" in namespace "gc-4138"
  Jul  6 12:25:15.591: INFO: Deleting pod "simpletest.rc-f44zf" in namespace "gc-4138"
  Jul  6 12:25:15.607: INFO: Deleting pod "simpletest.rc-f75z2" in namespace "gc-4138"
  Jul  6 12:25:15.618: INFO: Deleting pod "simpletest.rc-fbwvw" in namespace "gc-4138"
  Jul  6 12:25:15.628: INFO: Deleting pod "simpletest.rc-fdwm2" in namespace "gc-4138"
  Jul  6 12:25:15.646: INFO: Deleting pod "simpletest.rc-fjmq6" in namespace "gc-4138"
  Jul  6 12:25:15.658: INFO: Deleting pod "simpletest.rc-fq4bj" in namespace "gc-4138"
  Jul  6 12:25:15.673: INFO: Deleting pod "simpletest.rc-fw87j" in namespace "gc-4138"
  Jul  6 12:25:15.687: INFO: Deleting pod "simpletest.rc-fz5ns" in namespace "gc-4138"
  Jul  6 12:25:15.699: INFO: Deleting pod "simpletest.rc-hc2gt" in namespace "gc-4138"
  Jul  6 12:25:15.715: INFO: Deleting pod "simpletest.rc-hdfqn" in namespace "gc-4138"
  Jul  6 12:25:15.726: INFO: Deleting pod "simpletest.rc-hq2v2" in namespace "gc-4138"
  Jul  6 12:25:15.740: INFO: Deleting pod "simpletest.rc-hqjl4" in namespace "gc-4138"
  Jul  6 12:25:15.758: INFO: Deleting pod "simpletest.rc-hqxxf" in namespace "gc-4138"
  Jul  6 12:25:15.780: INFO: Deleting pod "simpletest.rc-jckm9" in namespace "gc-4138"
  Jul  6 12:25:15.796: INFO: Deleting pod "simpletest.rc-jd4mb" in namespace "gc-4138"
  Jul  6 12:25:15.819: INFO: Deleting pod "simpletest.rc-jd8wv" in namespace "gc-4138"
  Jul  6 12:25:15.836: INFO: Deleting pod "simpletest.rc-jrjsj" in namespace "gc-4138"
  Jul  6 12:25:15.849: INFO: Deleting pod "simpletest.rc-k5zpx" in namespace "gc-4138"
  Jul  6 12:25:15.863: INFO: Deleting pod "simpletest.rc-kghbl" in namespace "gc-4138"
  Jul  6 12:25:15.875: INFO: Deleting pod "simpletest.rc-kwl44" in namespace "gc-4138"
  Jul  6 12:25:15.894: INFO: Deleting pod "simpletest.rc-kxcf4" in namespace "gc-4138"
  Jul  6 12:25:15.908: INFO: Deleting pod "simpletest.rc-kzb4z" in namespace "gc-4138"
  Jul  6 12:25:15.920: INFO: Deleting pod "simpletest.rc-l259m" in namespace "gc-4138"
  Jul  6 12:25:15.933: INFO: Deleting pod "simpletest.rc-lvmm6" in namespace "gc-4138"
  Jul  6 12:25:15.944: INFO: Deleting pod "simpletest.rc-lwb6r" in namespace "gc-4138"
  Jul  6 12:25:15.959: INFO: Deleting pod "simpletest.rc-lxd8s" in namespace "gc-4138"
  Jul  6 12:25:15.969: INFO: Deleting pod "simpletest.rc-lz7pg" in namespace "gc-4138"
  Jul  6 12:25:15.980: INFO: Deleting pod "simpletest.rc-mm4fg" in namespace "gc-4138"
  Jul  6 12:25:15.997: INFO: Deleting pod "simpletest.rc-mtj9f" in namespace "gc-4138"
  Jul  6 12:25:16.026: INFO: Deleting pod "simpletest.rc-mtvjb" in namespace "gc-4138"
  Jul  6 12:25:16.075: INFO: Deleting pod "simpletest.rc-ndk4p" in namespace "gc-4138"
  Jul  6 12:25:16.119: INFO: Deleting pod "simpletest.rc-nrkfv" in namespace "gc-4138"
  Jul  6 12:25:16.169: INFO: Deleting pod "simpletest.rc-pbg6m" in namespace "gc-4138"
  Jul  6 12:25:16.225: INFO: Deleting pod "simpletest.rc-phkd9" in namespace "gc-4138"
  Jul  6 12:25:16.272: INFO: Deleting pod "simpletest.rc-plbwd" in namespace "gc-4138"
  Jul  6 12:25:16.318: INFO: Deleting pod "simpletest.rc-pqb7x" in namespace "gc-4138"
  Jul  6 12:25:16.370: INFO: Deleting pod "simpletest.rc-pqzpn" in namespace "gc-4138"
  Jul  6 12:25:16.423: INFO: Deleting pod "simpletest.rc-qnszw" in namespace "gc-4138"
  Jul  6 12:25:16.482: INFO: Deleting pod "simpletest.rc-rw6qq" in namespace "gc-4138"
  Jul  6 12:25:16.521: INFO: Deleting pod "simpletest.rc-st4qj" in namespace "gc-4138"
  Jul  6 12:25:16.570: INFO: Deleting pod "simpletest.rc-sxsrz" in namespace "gc-4138"
  Jul  6 12:25:16.622: INFO: Deleting pod "simpletest.rc-v4qtv" in namespace "gc-4138"
  Jul  6 12:25:16.671: INFO: Deleting pod "simpletest.rc-v5rk2" in namespace "gc-4138"
  Jul  6 12:25:16.719: INFO: Deleting pod "simpletest.rc-v6brh" in namespace "gc-4138"
  Jul  6 12:25:16.770: INFO: Deleting pod "simpletest.rc-v8x47" in namespace "gc-4138"
  Jul  6 12:25:16.847: INFO: Deleting pod "simpletest.rc-vjlh8" in namespace "gc-4138"
  Jul  6 12:25:16.871: INFO: Deleting pod "simpletest.rc-vnbsq" in namespace "gc-4138"
  Jul  6 12:25:16.930: INFO: Deleting pod "simpletest.rc-vp7js" in namespace "gc-4138"
  Jul  6 12:25:16.969: INFO: Deleting pod "simpletest.rc-vrxk8" in namespace "gc-4138"
  Jul  6 12:25:17.047: INFO: Deleting pod "simpletest.rc-vsqfm" in namespace "gc-4138"
  Jul  6 12:25:17.068: INFO: Deleting pod "simpletest.rc-wb9r4" in namespace "gc-4138"
  Jul  6 12:25:17.147: INFO: Deleting pod "simpletest.rc-wfq2t" in namespace "gc-4138"
  Jul  6 12:25:17.179: INFO: Deleting pod "simpletest.rc-wvl75" in namespace "gc-4138"
  Jul  6 12:25:17.220: INFO: Deleting pod "simpletest.rc-x2bgj" in namespace "gc-4138"
  Jul  6 12:25:17.274: INFO: Deleting pod "simpletest.rc-xcw4l" in namespace "gc-4138"
  Jul  6 12:25:17.322: INFO: Deleting pod "simpletest.rc-xjqnf" in namespace "gc-4138"
  Jul  6 12:25:17.372: INFO: Deleting pod "simpletest.rc-xmt4h" in namespace "gc-4138"
  Jul  6 12:25:17.421: INFO: Deleting pod "simpletest.rc-xshjd" in namespace "gc-4138"
  Jul  6 12:25:17.485: INFO: Deleting pod "simpletest.rc-z7jmw" in namespace "gc-4138"
  Jul  6 12:25:17.520: INFO: Deleting pod "simpletest.rc-zdxhh" in namespace "gc-4138"
  Jul  6 12:25:17.571: INFO: Deleting pod "simpletest.rc-zqlpx" in namespace "gc-4138"
  Jul  6 12:25:17.625: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4138" for this suite. @ 07/06/24 12:25:17.664
• [43.749 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 07/06/24 12:25:17.715
  Jul  6 12:25:17.715: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename emptydir @ 07/06/24 12:25:17.716
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:25:17.729
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:25:17.732
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 07/06/24 12:25:17.735
  STEP: Saw pod success @ 07/06/24 12:25:21.758
  Jul  6 12:25:21.761: INFO: Trying to get logs from node ip-172-31-24-251 pod pod-891d3ff5-db6c-4ea1-a8f5-32fb98ec6dd9 container test-container: <nil>
  STEP: delete the pod @ 07/06/24 12:25:21.766
  Jul  6 12:25:21.784: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2005" for this suite. @ 07/06/24 12:25:21.788
• [4.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1015
  STEP: Creating a kubernetes client @ 07/06/24 12:25:21.794
  Jul  6 12:25:21.794: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename resourcequota @ 07/06/24 12:25:21.795
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:25:21.806
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:25:21.809
  STEP: Creating resourceQuota "e2e-rq-status-tmxpg" @ 07/06/24 12:25:21.815
  Jul  6 12:25:21.824: INFO: Resource quota "e2e-rq-status-tmxpg" reports spec: hard cpu limit of 500m
  Jul  6 12:25:21.824: INFO: Resource quota "e2e-rq-status-tmxpg" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-tmxpg" /status @ 07/06/24 12:25:21.824
  STEP: Confirm /status for "e2e-rq-status-tmxpg" resourceQuota via watch @ 07/06/24 12:25:21.832
  Jul  6 12:25:21.833: INFO: observed resourceQuota "e2e-rq-status-tmxpg" in namespace "resourcequota-7461" with hard status: v1.ResourceList(nil)
  Jul  6 12:25:21.834: INFO: Found resourceQuota "e2e-rq-status-tmxpg" in namespace "resourcequota-7461" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Jul  6 12:25:21.834: INFO: ResourceQuota "e2e-rq-status-tmxpg" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 07/06/24 12:25:21.836
  Jul  6 12:25:21.841: INFO: Resource quota "e2e-rq-status-tmxpg" reports spec: hard cpu limit of 1
  Jul  6 12:25:21.841: INFO: Resource quota "e2e-rq-status-tmxpg" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-tmxpg" /status @ 07/06/24 12:25:21.841
  STEP: Confirm /status for "e2e-rq-status-tmxpg" resourceQuota via watch @ 07/06/24 12:25:21.85
  Jul  6 12:25:21.851: INFO: observed resourceQuota "e2e-rq-status-tmxpg" in namespace "resourcequota-7461" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Jul  6 12:25:21.851: INFO: Found resourceQuota "e2e-rq-status-tmxpg" in namespace "resourcequota-7461" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  Jul  6 12:25:21.851: INFO: ResourceQuota "e2e-rq-status-tmxpg" /status was patched
  STEP: Get "e2e-rq-status-tmxpg" /status @ 07/06/24 12:25:21.851
  Jul  6 12:25:21.854: INFO: Resourcequota "e2e-rq-status-tmxpg" reports status: hard cpu of 1
  Jul  6 12:25:21.854: INFO: Resourcequota "e2e-rq-status-tmxpg" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-tmxpg" /status before checking Spec is unchanged @ 07/06/24 12:25:21.857
  Jul  6 12:25:21.862: INFO: Resourcequota "e2e-rq-status-tmxpg" reports status: hard cpu of 2
  Jul  6 12:25:21.862: INFO: Resourcequota "e2e-rq-status-tmxpg" reports status: hard memory of 2Gi
  Jul  6 12:25:21.863: INFO: Found resourceQuota "e2e-rq-status-tmxpg" in namespace "resourcequota-7461" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  Jul  6 12:25:21.865: INFO: ResourceQuota "e2e-rq-status-tmxpg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tmxpg", GenerateName:"", Namespace:"resourcequota-7461", SelfLink:"", UID:"3583c4ff-7d2b-4951-a5f2-4def952ec0d9", ResourceVersion:"12492", Generation:0, CreationTimestamp:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tmxpg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d851d0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d85218), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d852a8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul  6 12:25:26.866: INFO: ResourceQuota "e2e-rq-status-tmxpg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tmxpg", GenerateName:"", Namespace:"resourcequota-7461", SelfLink:"", UID:"3583c4ff-7d2b-4951-a5f2-4def952ec0d9", ResourceVersion:"12492", Generation:0, CreationTimestamp:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tmxpg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d85578), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d855d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d85620), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul  6 12:25:31.867: INFO: ResourceQuota "e2e-rq-status-tmxpg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tmxpg", GenerateName:"", Namespace:"resourcequota-7461", SelfLink:"", UID:"3583c4ff-7d2b-4951-a5f2-4def952ec0d9", ResourceVersion:"12492", Generation:0, CreationTimestamp:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tmxpg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d858c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d85920), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d85968), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul  6 12:25:36.868: INFO: ResourceQuota "e2e-rq-status-tmxpg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tmxpg", GenerateName:"", Namespace:"resourcequota-7461", SelfLink:"", UID:"3583c4ff-7d2b-4951-a5f2-4def952ec0d9", ResourceVersion:"12492", Generation:0, CreationTimestamp:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tmxpg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d85d10), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d85d58), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d85d88), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul  6 12:25:41.867: INFO: ResourceQuota "e2e-rq-status-tmxpg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tmxpg", GenerateName:"", Namespace:"resourcequota-7461", SelfLink:"", UID:"3583c4ff-7d2b-4951-a5f2-4def952ec0d9", ResourceVersion:"12492", Generation:0, CreationTimestamp:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tmxpg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050a8258), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050a8330), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050a84f8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul  6 12:25:46.867: INFO: ResourceQuota "e2e-rq-status-tmxpg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tmxpg", GenerateName:"", Namespace:"resourcequota-7461", SelfLink:"", UID:"3583c4ff-7d2b-4951-a5f2-4def952ec0d9", ResourceVersion:"12492", Generation:0, CreationTimestamp:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tmxpg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050a8f90), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050a9338), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050a9410), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul  6 12:25:51.868: INFO: ResourceQuota "e2e-rq-status-tmxpg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tmxpg", GenerateName:"", Namespace:"resourcequota-7461", SelfLink:"", UID:"3583c4ff-7d2b-4951-a5f2-4def952ec0d9", ResourceVersion:"12492", Generation:0, CreationTimestamp:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tmxpg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050a9818), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050a9878), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050a98a8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul  6 12:25:56.867: INFO: ResourceQuota "e2e-rq-status-tmxpg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tmxpg", GenerateName:"", Namespace:"resourcequota-7461", SelfLink:"", UID:"3583c4ff-7d2b-4951-a5f2-4def952ec0d9", ResourceVersion:"12492", Generation:0, CreationTimestamp:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tmxpg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044da1f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044da258), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044da2b8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul  6 12:26:01.868: INFO: ResourceQuota "e2e-rq-status-tmxpg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tmxpg", GenerateName:"", Namespace:"resourcequota-7461", SelfLink:"", UID:"3583c4ff-7d2b-4951-a5f2-4def952ec0d9", ResourceVersion:"12492", Generation:0, CreationTimestamp:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tmxpg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050a9c68), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050a9c98), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050a9ce0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul  6 12:26:06.867: INFO: ResourceQuota "e2e-rq-status-tmxpg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tmxpg", GenerateName:"", Namespace:"resourcequota-7461", SelfLink:"", UID:"3583c4ff-7d2b-4951-a5f2-4def952ec0d9", ResourceVersion:"12492", Generation:0, CreationTimestamp:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tmxpg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044da648), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044da6a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044da6d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul  6 12:26:11.867: INFO: ResourceQuota "e2e-rq-status-tmxpg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tmxpg", GenerateName:"", Namespace:"resourcequota-7461", SelfLink:"", UID:"3583c4ff-7d2b-4951-a5f2-4def952ec0d9", ResourceVersion:"12492", Generation:0, CreationTimestamp:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tmxpg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044da900), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044da948), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044da990), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul  6 12:26:16.868: INFO: ResourceQuota "e2e-rq-status-tmxpg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tmxpg", GenerateName:"", Namespace:"resourcequota-7461", SelfLink:"", UID:"3583c4ff-7d2b-4951-a5f2-4def952ec0d9", ResourceVersion:"12492", Generation:0, CreationTimestamp:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tmxpg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044daca8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044dacf0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044dad80), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul  6 12:26:21.867: INFO: ResourceQuota "e2e-rq-status-tmxpg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tmxpg", GenerateName:"", Namespace:"resourcequota-7461", SelfLink:"", UID:"3583c4ff-7d2b-4951-a5f2-4def952ec0d9", ResourceVersion:"12492", Generation:0, CreationTimestamp:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tmxpg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044db080), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044db0e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044db110), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul  6 12:26:26.867: INFO: ResourceQuota "e2e-rq-status-tmxpg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tmxpg", GenerateName:"", Namespace:"resourcequota-7461", SelfLink:"", UID:"3583c4ff-7d2b-4951-a5f2-4def952ec0d9", ResourceVersion:"12492", Generation:0, CreationTimestamp:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tmxpg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044db320), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044db368), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044db3b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul  6 12:26:31.868: INFO: ResourceQuota "e2e-rq-status-tmxpg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tmxpg", GenerateName:"", Namespace:"resourcequota-7461", SelfLink:"", UID:"3583c4ff-7d2b-4951-a5f2-4def952ec0d9", ResourceVersion:"12492", Generation:0, CreationTimestamp:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tmxpg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050343a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050343f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005034420), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul  6 12:26:36.868: INFO: ResourceQuota "e2e-rq-status-tmxpg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tmxpg", GenerateName:"", Namespace:"resourcequota-7461", SelfLink:"", UID:"3583c4ff-7d2b-4951-a5f2-4def952ec0d9", ResourceVersion:"12492", Generation:0, CreationTimestamp:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tmxpg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050347f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005034828), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050348a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul  6 12:26:41.866: INFO: ResourceQuota "e2e-rq-status-tmxpg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tmxpg", GenerateName:"", Namespace:"resourcequota-7461", SelfLink:"", UID:"3583c4ff-7d2b-4951-a5f2-4def952ec0d9", ResourceVersion:"12492", Generation:0, CreationTimestamp:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tmxpg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005034e10), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005034e40), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005034ea0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul  6 12:26:46.868: INFO: ResourceQuota "e2e-rq-status-tmxpg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tmxpg", GenerateName:"", Namespace:"resourcequota-7461", SelfLink:"", UID:"3583c4ff-7d2b-4951-a5f2-4def952ec0d9", ResourceVersion:"12492", Generation:0, CreationTimestamp:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tmxpg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050350e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005035128), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005035170), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul  6 12:26:51.867: INFO: ResourceQuota "e2e-rq-status-tmxpg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tmxpg", GenerateName:"", Namespace:"resourcequota-7461", SelfLink:"", UID:"3583c4ff-7d2b-4951-a5f2-4def952ec0d9", ResourceVersion:"12492", Generation:0, CreationTimestamp:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tmxpg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044dbba8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044dbbd8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044dbc38), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul  6 12:26:56.866: INFO: ResourceQuota "e2e-rq-status-tmxpg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tmxpg", GenerateName:"", Namespace:"resourcequota-7461", SelfLink:"", UID:"3583c4ff-7d2b-4951-a5f2-4def952ec0d9", ResourceVersion:"12492", Generation:0, CreationTimestamp:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tmxpg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005035458), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050354a0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050354e8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul  6 12:27:01.869: INFO: ResourceQuota "e2e-rq-status-tmxpg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tmxpg", GenerateName:"", Namespace:"resourcequota-7461", SelfLink:"", UID:"3583c4ff-7d2b-4951-a5f2-4def952ec0d9", ResourceVersion:"12492", Generation:0, CreationTimestamp:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tmxpg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044dbf68), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e72018), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e72048), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul  6 12:27:06.867: INFO: ResourceQuota "e2e-rq-status-tmxpg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tmxpg", GenerateName:"", Namespace:"resourcequota-7461", SelfLink:"", UID:"3583c4ff-7d2b-4951-a5f2-4def952ec0d9", ResourceVersion:"12492", Generation:0, CreationTimestamp:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tmxpg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e72270), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e722b8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e722e8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul  6 12:27:11.869: INFO: ResourceQuota "e2e-rq-status-tmxpg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tmxpg", GenerateName:"", Namespace:"resourcequota-7461", SelfLink:"", UID:"3583c4ff-7d2b-4951-a5f2-4def952ec0d9", ResourceVersion:"12492", Generation:0, CreationTimestamp:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tmxpg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e72678), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e726c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e72708), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul  6 12:27:16.869: INFO: ResourceQuota "e2e-rq-status-tmxpg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tmxpg", GenerateName:"", Namespace:"resourcequota-7461", SelfLink:"", UID:"3583c4ff-7d2b-4951-a5f2-4def952ec0d9", ResourceVersion:"12492", Generation:0, CreationTimestamp:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tmxpg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e720c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e720f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e72150), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul  6 12:27:21.867: INFO: ResourceQuota "e2e-rq-status-tmxpg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tmxpg", GenerateName:"", Namespace:"resourcequota-7461", SelfLink:"", UID:"3583c4ff-7d2b-4951-a5f2-4def952ec0d9", ResourceVersion:"12492", Generation:0, CreationTimestamp:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tmxpg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050343f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005034420), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005034600), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul  6 12:27:26.866: INFO: ResourceQuota "e2e-rq-status-tmxpg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tmxpg", GenerateName:"", Namespace:"resourcequota-7461", SelfLink:"", UID:"3583c4ff-7d2b-4951-a5f2-4def952ec0d9", ResourceVersion:"12492", Generation:0, CreationTimestamp:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tmxpg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e723d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e72420), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e72480), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul  6 12:27:31.868: INFO: ResourceQuota "e2e-rq-status-tmxpg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tmxpg", GenerateName:"", Namespace:"resourcequota-7461", SelfLink:"", UID:"3583c4ff-7d2b-4951-a5f2-4def952ec0d9", ResourceVersion:"12492", Generation:0, CreationTimestamp:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tmxpg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e72a20), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e72a80), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e72ac8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul  6 12:27:36.867: INFO: ResourceQuota "e2e-rq-status-tmxpg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tmxpg", GenerateName:"", Namespace:"resourcequota-7461", SelfLink:"", UID:"3583c4ff-7d2b-4951-a5f2-4def952ec0d9", ResourceVersion:"12492", Generation:0, CreationTimestamp:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tmxpg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e72d98), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e72de0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e72e40), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul  6 12:27:41.867: INFO: ResourceQuota "e2e-rq-status-tmxpg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tmxpg", GenerateName:"", Namespace:"resourcequota-7461", SelfLink:"", UID:"3583c4ff-7d2b-4951-a5f2-4def952ec0d9", ResourceVersion:"12492", Generation:0, CreationTimestamp:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tmxpg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e73020), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e73068), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e730c8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul  6 12:27:46.868: INFO: ResourceQuota "e2e-rq-status-tmxpg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tmxpg", GenerateName:"", Namespace:"resourcequota-7461", SelfLink:"", UID:"3583c4ff-7d2b-4951-a5f2-4def952ec0d9", ResourceVersion:"12492", Generation:0, CreationTimestamp:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tmxpg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e73308), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e73338), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e73398), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul  6 12:27:51.867: INFO: ResourceQuota "e2e-rq-status-tmxpg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tmxpg", GenerateName:"", Namespace:"resourcequota-7461", SelfLink:"", UID:"3583c4ff-7d2b-4951-a5f2-4def952ec0d9", ResourceVersion:"12492", Generation:0, CreationTimestamp:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tmxpg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050350f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005035140), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005035188), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul  6 12:27:56.869: INFO: ResourceQuota "e2e-rq-status-tmxpg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tmxpg", GenerateName:"", Namespace:"resourcequota-7461", SelfLink:"", UID:"3583c4ff-7d2b-4951-a5f2-4def952ec0d9", ResourceVersion:"12492", Generation:0, CreationTimestamp:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tmxpg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005035368), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050353b0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050353f8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul  6 12:28:01.868: INFO: ResourceQuota "e2e-rq-status-tmxpg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tmxpg", GenerateName:"", Namespace:"resourcequota-7461", SelfLink:"", UID:"3583c4ff-7d2b-4951-a5f2-4def952ec0d9", ResourceVersion:"12492", Generation:0, CreationTimestamp:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tmxpg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e737e8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e73818), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e73848), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul  6 12:28:06.867: INFO: ResourceQuota "e2e-rq-status-tmxpg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tmxpg", GenerateName:"", Namespace:"resourcequota-7461", SelfLink:"", UID:"3583c4ff-7d2b-4951-a5f2-4def952ec0d9", ResourceVersion:"12492", Generation:0, CreationTimestamp:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tmxpg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e73a40), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e73a88), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e73ab8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul  6 12:28:11.868: INFO: ResourceQuota "e2e-rq-status-tmxpg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tmxpg", GenerateName:"", Namespace:"resourcequota-7461", SelfLink:"", UID:"3583c4ff-7d2b-4951-a5f2-4def952ec0d9", ResourceVersion:"12492", Generation:0, CreationTimestamp:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tmxpg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e73cb0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e73ce0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e73d40), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul  6 12:28:16.866: INFO: ResourceQuota "e2e-rq-status-tmxpg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tmxpg", GenerateName:"", Namespace:"resourcequota-7461", SelfLink:"", UID:"3583c4ff-7d2b-4951-a5f2-4def952ec0d9", ResourceVersion:"12492", Generation:0, CreationTimestamp:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tmxpg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005035998), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050359f8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005035a28), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul  6 12:28:21.866: INFO: ResourceQuota "e2e-rq-status-tmxpg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tmxpg", GenerateName:"", Namespace:"resourcequota-7461", SelfLink:"", UID:"3583c4ff-7d2b-4951-a5f2-4def952ec0d9", ResourceVersion:"12492", Generation:0, CreationTimestamp:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tmxpg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e32150), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e32198), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e321e0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul  6 12:28:26.868: INFO: ResourceQuota "e2e-rq-status-tmxpg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tmxpg", GenerateName:"", Namespace:"resourcequota-7461", SelfLink:"", UID:"3583c4ff-7d2b-4951-a5f2-4def952ec0d9", ResourceVersion:"12492", Generation:0, CreationTimestamp:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tmxpg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e32528), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e32588), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e325d0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul  6 12:28:31.867: INFO: ResourceQuota "e2e-rq-status-tmxpg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tmxpg", GenerateName:"", Namespace:"resourcequota-7461", SelfLink:"", UID:"3583c4ff-7d2b-4951-a5f2-4def952ec0d9", ResourceVersion:"12492", Generation:0, CreationTimestamp:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tmxpg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e32810), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e32858), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e328b8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul  6 12:28:36.867: INFO: ResourceQuota "e2e-rq-status-tmxpg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tmxpg", GenerateName:"", Namespace:"resourcequota-7461", SelfLink:"", UID:"3583c4ff-7d2b-4951-a5f2-4def952ec0d9", ResourceVersion:"12492", Generation:0, CreationTimestamp:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tmxpg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005035d58), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005035d88), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 12, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005035dd0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jul  6 12:28:41.867: INFO: ResourceQuota "e2e-rq-status-tmxpg" Spec was unchanged and /status reset
  Jul  6 12:28:41.867: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7461" for this suite. @ 07/06/24 12:28:41.87
• [200.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 07/06/24 12:28:41.878
  Jul  6 12:28:41.878: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename pods @ 07/06/24 12:28:41.879
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:28:41.891
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:28:41.895
  STEP: creating the pod @ 07/06/24 12:28:41.898
  STEP: setting up watch @ 07/06/24 12:28:41.898
  STEP: submitting the pod to kubernetes @ 07/06/24 12:28:42.001
  STEP: verifying the pod is in kubernetes @ 07/06/24 12:28:42.011
  STEP: verifying pod creation was observed @ 07/06/24 12:28:42.017
  STEP: deleting the pod gracefully @ 07/06/24 12:28:44.03
  STEP: verifying pod deletion was observed @ 07/06/24 12:28:44.038
  Jul  6 12:28:45.425: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4724" for this suite. @ 07/06/24 12:28:45.428
• [3.556 seconds]
------------------------------
SSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:153
  STEP: Creating a kubernetes client @ 07/06/24 12:28:45.435
  Jul  6 12:28:45.435: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 07/06/24 12:28:45.435
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:28:45.448
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:28:45.451
  STEP: create the container to handle the HTTPGet hook request. @ 07/06/24 12:28:45.457
  STEP: create the pod with lifecycle hook @ 07/06/24 12:28:47.481
  STEP: delete the pod with lifecycle hook @ 07/06/24 12:28:49.496
  STEP: check prestop hook @ 07/06/24 12:28:51.51
  Jul  6 12:28:51.520: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-3513" for this suite. @ 07/06/24 12:28:51.524
• [6.095 seconds]
------------------------------
S
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1455
  STEP: Creating a kubernetes client @ 07/06/24 12:28:51.53
  Jul  6 12:28:51.530: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename services @ 07/06/24 12:28:51.531
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:28:51.544
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:28:51.547
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-1715 @ 07/06/24 12:28:51.55
  STEP: changing the ExternalName service to type=NodePort @ 07/06/24 12:28:51.556
  STEP: creating replication controller externalname-service in namespace services-1715 @ 07/06/24 12:28:51.58
  I0706 12:28:51.592614      21 runners.go:197] Created replication controller with name: externalname-service, namespace: services-1715, replica count: 2
  I0706 12:28:54.644599      21 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jul  6 12:28:54.644: INFO: Creating new exec pod
  Jul  6 12:28:57.664: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=services-1715 exec execpodrbg5n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Jul  6 12:28:57.766: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Jul  6 12:28:57.766: INFO: stdout: "externalname-service-v95xf"
  Jul  6 12:28:57.766: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=services-1715 exec execpodrbg5n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.99 80'
  Jul  6 12:28:57.844: INFO: stderr: "+ nc -v -t -w 2 10.152.183.99 80\n+ echo hostName\nConnection to 10.152.183.99 80 port [tcp/http] succeeded!\n"
  Jul  6 12:28:57.844: INFO: stdout: ""
  Jul  6 12:28:58.767: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=services-1715 exec execpodrbg5n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.99 80'
  Jul  6 12:28:58.855: INFO: stderr: "+ nc -v -t -w 2 10.152.183.99 80\n+ echo hostName\nConnection to 10.152.183.99 80 port [tcp/http] succeeded!\n"
  Jul  6 12:28:58.855: INFO: stdout: ""
  Jul  6 12:28:59.767: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=services-1715 exec execpodrbg5n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.99 80'
  Jul  6 12:28:59.853: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.99 80\nConnection to 10.152.183.99 80 port [tcp/http] succeeded!\n"
  Jul  6 12:28:59.853: INFO: stdout: "externalname-service-v95xf"
  Jul  6 12:28:59.853: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=services-1715 exec execpodrbg5n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.9.199 32702'
  Jul  6 12:28:59.956: INFO: stderr: "+ nc -v -t -w 2 172.31.9.199 32702\nConnection to 172.31.9.199 32702 port [tcp/*] succeeded!\n+ echo hostName\n"
  Jul  6 12:28:59.956: INFO: stdout: ""
  Jul  6 12:29:00.854: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=services-1715 exec execpodrbg5n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.9.199 32702'
  Jul  6 12:29:00.941: INFO: stderr: "+ nc -v -t -w 2 172.31.9.199 32702\n+ echo hostName\nConnection to 172.31.9.199 32702 port [tcp/*] succeeded!\n"
  Jul  6 12:29:00.941: INFO: stdout: "externalname-service-v95xf"
  Jul  6 12:29:00.941: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=services-1715 exec execpodrbg5n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.24.251 32702'
  Jul  6 12:29:01.029: INFO: stderr: "+ nc -v -t -w 2 172.31.24.251 32702\n+ echo hostName\nConnection to 172.31.24.251 32702 port [tcp/*] succeeded!\n"
  Jul  6 12:29:01.029: INFO: stdout: "externalname-service-v95xf"
  Jul  6 12:29:01.029: INFO: Cleaning up the ExternalName to NodePort test service
  Jul  6 12:29:01.050: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1715" for this suite. @ 07/06/24 12:29:01.054
• [9.531 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 07/06/24 12:29:01.061
  Jul  6 12:29:01.061: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename replication-controller @ 07/06/24 12:29:01.061
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:29:01.076
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:29:01.078
  STEP: Creating replication controller my-hostname-basic-13dd0d71-070d-46b9-98f6-6cc8ef1b3731 @ 07/06/24 12:29:01.08
  Jul  6 12:29:01.089: INFO: Pod name my-hostname-basic-13dd0d71-070d-46b9-98f6-6cc8ef1b3731: Found 0 pods out of 1
  Jul  6 12:29:06.092: INFO: Pod name my-hostname-basic-13dd0d71-070d-46b9-98f6-6cc8ef1b3731: Found 1 pods out of 1
  Jul  6 12:29:06.092: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-13dd0d71-070d-46b9-98f6-6cc8ef1b3731" are running
  Jul  6 12:29:06.096: INFO: Pod "my-hostname-basic-13dd0d71-070d-46b9-98f6-6cc8ef1b3731-jvl9v" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-06 12:29:02 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-06 12:29:01 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-06 12:29:02 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-06 12:29:02 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-06 12:29:01 +0000 UTC Reason: Message:}])
  Jul  6 12:29:06.096: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 07/06/24 12:29:06.096
  Jul  6 12:29:06.106: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-5774" for this suite. @ 07/06/24 12:29:06.11
• [5.062 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3649
  STEP: Creating a kubernetes client @ 07/06/24 12:29:06.123
  Jul  6 12:29:06.123: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename services @ 07/06/24 12:29:06.123
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:29:06.134
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:29:06.137
  STEP: creating service multiprotocol-test in namespace services-5623 @ 07/06/24 12:29:06.139
  STEP: creating pod pod1 in namespace services-5623 @ 07/06/24 12:29:06.152
  STEP: Creating pod pod1 in namespace services-5623 @ 07/06/24 12:29:06.152
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-5623 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 07/06/24 12:29:08.178
  Jul  6 12:29:08.186: INFO: successfully validated that service multiprotocol-test in namespace services-5623 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 07/06/24 12:29:08.186
  Jul  6 12:29:08.186: INFO: Creating new exec pod
  Jul  6 12:29:10.197: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=services-5623 exec execpodmn7gf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.178 80'
  Jul  6 12:29:10.337: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.178 80\nConnection to 10.152.183.178 80 port [tcp/http] succeeded!\n"
  Jul  6 12:29:10.337: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul  6 12:29:10.337: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=services-5623 exec execpodmn7gf -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.178 80'
  Jul  6 12:29:14.426: INFO: stderr: "+ nc -v -u -w 2 10.152.183.178 80\n+ echo hostName\nConnection to 10.152.183.178 80 port [udp/*] succeeded!\n"
  Jul  6 12:29:14.426: INFO: stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 07/06/24 12:29:14.426
  Jul  6 12:29:14.436: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=services-5623 exec execpodmn7gf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.178 80'
  Jul  6 12:29:14.529: INFO: stderr: "+ nc -v -t -w 2 10.152.183.178 80\n+ echo hostName\nConnection to 10.152.183.178 80 port [tcp/http] succeeded!\n"
  Jul  6 12:29:14.529: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul  6 12:29:14.529: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=services-5623 exec execpodmn7gf -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.178 80'
  Jul  6 12:29:18.618: INFO: stderr: "+ nc -v -u -w 2 10.152.183.178 80\n+ echo hostName\nConnection to 10.152.183.178 80 port [udp/*] succeeded!\n"
  Jul  6 12:29:18.618: INFO: stdout: ""
  Jul  6 12:29:18.618: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=services-5623 exec execpodmn7gf -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.178 80'
  Jul  6 12:29:22.714: INFO: stderr: "+ nc -v -u -w 2 10.152.183.178 80\n+ echo hostName\nConnection to 10.152.183.178 80 port [udp/*] succeeded!\n"
  Jul  6 12:29:22.714: INFO: stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 07/06/24 12:29:22.714
  Jul  6 12:29:22.725: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=services-5623 exec execpodmn7gf -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.178 80'
  Jul  6 12:29:26.817: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.178 80\nConnection to 10.152.183.178 80 port [udp/*] succeeded!\n"
  Jul  6 12:29:26.817: INFO: stdout: "pod1"
  Jul  6 12:29:26.818: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=services-5623 exec execpodmn7gf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.178 80'
  Jul  6 12:29:28.906: INFO: rc: 1
  Jul  6 12:29:28.906: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=services-5623 exec execpodmn7gf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.178 80:
  Command stdout:

  stderr:
  + nc -v -t -w 2 10.152.183.178 80
  + echo hostName
  nc: connect to 10.152.183.178 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Jul  6 12:29:28.906: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=services-5623 exec execpodmn7gf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.178 80'
  Jul  6 12:29:30.993: INFO: rc: 1
  Jul  6 12:29:30.993: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=services-5623 exec execpodmn7gf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.178 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.152.183.178 80
  nc: connect to 10.152.183.178 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Jul  6 12:29:30.994: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=services-5623 exec execpodmn7gf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.178 80'
  Jul  6 12:29:33.078: INFO: rc: 1
  Jul  6 12:29:33.078: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=services-5623 exec execpodmn7gf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.178 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.152.183.178 80
  nc: connect to 10.152.183.178 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Jul  6 12:29:33.078: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5623" for this suite. @ 07/06/24 12:29:33.082
• [26.968 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 07/06/24 12:29:33.09
  Jul  6 12:29:33.090: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename pods @ 07/06/24 12:29:33.091
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:29:33.102
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:29:33.104
  STEP: creating a Pod with a static label @ 07/06/24 12:29:33.111
  STEP: watching for Pod to be ready @ 07/06/24 12:29:33.12
  Jul  6 12:29:33.121: INFO: observed Pod pod-test in namespace pods-6496 in phase Pending with labels: map[test-pod-static:true] & conditions []
  Jul  6 12:29:33.125: INFO: observed Pod pod-test in namespace pods-6496 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-07-06 12:29:33 +0000 UTC  }]
  Jul  6 12:29:33.141: INFO: observed Pod pod-test in namespace pods-6496 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-07-06 12:29:33 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-07-06 12:29:33 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-07-06 12:29:33 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-07-06 12:29:33 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-07-06 12:29:33 +0000 UTC  }]
  Jul  6 12:29:34.499: INFO: Found Pod pod-test in namespace pods-6496 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-07-06 12:29:34 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-07-06 12:29:33 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2024-07-06 12:29:34 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2024-07-06 12:29:34 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-07-06 12:29:33 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 07/06/24 12:29:34.504
  STEP: getting the Pod and ensuring that it's patched @ 07/06/24 12:29:34.513
  STEP: replacing the Pod's status Ready condition to False @ 07/06/24 12:29:34.519
  STEP: check the Pod again to ensure its Ready conditions are False @ 07/06/24 12:29:34.528
  STEP: deleting the Pod via a Collection with a LabelSelector @ 07/06/24 12:29:34.528
  STEP: watching for the Pod to be deleted @ 07/06/24 12:29:34.538
  Jul  6 12:29:34.539: INFO: observed event type MODIFIED
  Jul  6 12:29:36.505: INFO: observed event type MODIFIED
  Jul  6 12:29:36.654: INFO: observed event type MODIFIED
  Jul  6 12:29:37.509: INFO: observed event type MODIFIED
  Jul  6 12:29:37.522: INFO: observed event type MODIFIED
  Jul  6 12:29:37.527: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6496" for this suite. @ 07/06/24 12:29:37.53
• [4.445 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 07/06/24 12:29:37.536
  Jul  6 12:29:37.536: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename container-probe @ 07/06/24 12:29:37.537
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:29:37.548
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:29:37.55
  STEP: Creating pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918 @ 07/06/24 12:29:37.554
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/06/24 12:29:39.572
  Jul  6 12:29:39.575: INFO: Initial restart count of pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 is 0
  Jul  6 12:29:39.578: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:29:41.583: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:29:43.587: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:29:45.592: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:29:47.596: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:29:49.599: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:29:51.604: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:29:53.608: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:29:55.612: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:29:57.616: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:29:59.621: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:30:01.626: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:30:03.630: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:30:05.634: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:30:07.639: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:30:09.642: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:30:11.647: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:30:13.651: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:30:15.654: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:30:17.660: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:30:19.664: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:30:21.668: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:30:23.674: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:30:25.678: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:30:27.684: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:30:29.688: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:30:31.691: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:30:33.697: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:30:35.701: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:30:37.705: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:30:39.709: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:30:41.714: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:30:43.718: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:30:45.723: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:30:47.728: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:30:49.732: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:30:51.737: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:30:53.742: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:30:55.746: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:30:57.750: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:30:59.754: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:31:01.759: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:31:03.762: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:31:05.767: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:31:07.772: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:31:09.775: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:31:11.780: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:31:13.785: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:31:15.790: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:31:17.795: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:31:19.799: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:31:21.803: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:31:23.806: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:31:25.811: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:31:27.815: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:31:29.819: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:31:31.824: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:31:33.829: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:31:35.834: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:31:37.839: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:31:39.843: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:31:41.848: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:31:43.852: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:31:45.857: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:31:47.861: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:31:49.864: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:31:51.870: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:31:53.873: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:31:55.877: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:31:57.883: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:31:59.887: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:32:01.890: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:32:03.894: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:32:05.898: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:32:07.903: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:32:09.907: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:32:11.913: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:32:13.916: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:32:15.920: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:32:17.926: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:32:19.929: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:32:21.933: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:32:23.938: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:32:25.941: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:32:27.946: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:32:29.950: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:32:31.953: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:32:33.959: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:32:35.962: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:32:37.965: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:32:39.969: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:32:41.975: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:32:43.980: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:32:45.985: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:32:47.990: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:32:49.994: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:32:51.999: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:32:54.002: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:32:56.006: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:32:58.011: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:33:00.015: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:33:02.019: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:33:04.024: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:33:06.028: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:33:08.033: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:33:10.038: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:33:12.042: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:33:14.047: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:33:16.052: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:33:18.056: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:33:20.060: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:33:22.065: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:33:24.069: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:33:26.075: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:33:28.079: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:33:30.084: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:33:32.089: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:33:34.094: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:33:36.098: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  Jul  6 12:33:38.103: INFO: Get pod test-webserver-06fa407a-2e56-429b-a9e7-d9a4a552a045 in namespace container-probe-1918
  STEP: deleting the pod @ 07/06/24 12:33:40.104
  Jul  6 12:33:40.119: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1918" for this suite. @ 07/06/24 12:33:40.122
• [242.591 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 07/06/24 12:33:40.128
  Jul  6 12:33:40.128: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename projected @ 07/06/24 12:33:40.129
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:33:40.143
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:33:40.145
  STEP: Creating projection with secret that has name projected-secret-test-84796730-99fe-4232-bf58-406d75ca3298 @ 07/06/24 12:33:40.15
  STEP: Creating a pod to test consume secrets @ 07/06/24 12:33:40.155
  STEP: Saw pod success @ 07/06/24 12:33:42.174
  Jul  6 12:33:42.177: INFO: Trying to get logs from node ip-172-31-24-251 pod pod-projected-secrets-0681d5c8-f00a-4060-8ab1-400b29fe1096 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 07/06/24 12:33:42.19
  Jul  6 12:33:42.208: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1896" for this suite. @ 07/06/24 12:33:42.212
• [2.090 seconds]
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 07/06/24 12:33:42.218
  Jul  6 12:33:42.218: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename container-probe @ 07/06/24 12:33:42.219
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:33:42.23
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:33:42.233
  STEP: Creating pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775 @ 07/06/24 12:33:42.235
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/06/24 12:33:44.256
  Jul  6 12:33:44.258: INFO: Initial restart count of pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e is 0
  Jul  6 12:33:44.261: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:33:46.265: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:33:48.269: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:33:50.273: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:33:52.277: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:33:54.281: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:33:56.286: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:33:58.291: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:34:00.295: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:34:02.299: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:34:04.302: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:34:04.302: INFO: Restart count of pod container-probe-1775/liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e is now 1 (20.044121337s elapsed)
  Jul  6 12:34:06.308: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:34:08.311: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:34:10.315: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:34:12.318: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:34:14.322: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:34:16.328: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:34:18.332: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:34:20.336: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:34:22.341: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:34:24.346: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:34:24.346: INFO: Restart count of pod container-probe-1775/liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e is now 2 (40.087397818s elapsed)
  Jul  6 12:34:26.350: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:34:28.356: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:34:30.360: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:34:32.365: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:34:34.370: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:34:36.374: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:34:38.377: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:34:40.383: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:34:42.387: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:34:44.392: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:34:44.392: INFO: Restart count of pod container-probe-1775/liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e is now 3 (1m0.133832314s elapsed)
  Jul  6 12:34:46.398: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:34:48.402: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:34:50.406: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:34:52.410: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:34:54.414: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:34:56.419: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:34:58.424: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:35:00.428: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:35:02.431: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:35:04.435: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:35:04.435: INFO: Restart count of pod container-probe-1775/liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e is now 4 (1m20.176936277s elapsed)
  Jul  6 12:35:06.440: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:35:08.444: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:35:10.449: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:35:12.453: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:35:14.458: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:35:16.463: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:35:18.467: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:35:20.471: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:35:22.477: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:35:24.483: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:35:26.487: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:35:28.492: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:35:30.497: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:35:32.502: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:35:34.505: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:35:36.511: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:35:38.515: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:35:40.520: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:35:42.524: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:35:44.528: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:35:46.531: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:35:48.537: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:35:50.540: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:35:52.544: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:35:54.551: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:35:56.555: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:35:58.560: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:36:00.566: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:36:02.570: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:36:04.576: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:36:06.581: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:36:08.584: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:36:10.589: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:36:12.595: INFO: Get pod liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e in namespace container-probe-1775
  Jul  6 12:36:12.595: INFO: Restart count of pod container-probe-1775/liveness-47aa55ee-13ce-4096-83ab-4ffa44470f6e is now 5 (2m28.337104665s elapsed)
  STEP: deleting the pod @ 07/06/24 12:36:12.596
  Jul  6 12:36:12.608: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1775" for this suite. @ 07/06/24 12:36:12.611
• [150.399 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 07/06/24 12:36:12.617
  Jul  6 12:36:12.617: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename endpointslice @ 07/06/24 12:36:12.618
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:36:12.633
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:36:12.636
  STEP: getting /apis @ 07/06/24 12:36:12.638
  STEP: getting /apis/discovery.k8s.io @ 07/06/24 12:36:12.642
  STEP: getting /apis/discovery.k8s.iov1 @ 07/06/24 12:36:12.643
  STEP: creating @ 07/06/24 12:36:12.644
  STEP: getting @ 07/06/24 12:36:12.661
  STEP: listing @ 07/06/24 12:36:12.664
  STEP: watching @ 07/06/24 12:36:12.667
  Jul  6 12:36:12.667: INFO: starting watch
  STEP: cluster-wide listing @ 07/06/24 12:36:12.668
  STEP: cluster-wide watching @ 07/06/24 12:36:12.67
  Jul  6 12:36:12.670: INFO: starting watch
  STEP: patching @ 07/06/24 12:36:12.671
  STEP: updating @ 07/06/24 12:36:12.675
  Jul  6 12:36:12.683: INFO: waiting for watch events with expected annotations
  Jul  6 12:36:12.683: INFO: saw patched and updated annotations
  STEP: deleting @ 07/06/24 12:36:12.683
  STEP: deleting a collection @ 07/06/24 12:36:12.694
  Jul  6 12:36:12.707: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-9231" for this suite. @ 07/06/24 12:36:12.71
• [0.099 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 07/06/24 12:36:12.717
  Jul  6 12:36:12.717: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 07/06/24 12:36:12.718
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:36:12.732
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:36:12.734
  STEP: Setting up the test @ 07/06/24 12:36:12.736
  STEP: Creating hostNetwork=false pod @ 07/06/24 12:36:12.737
  STEP: Creating hostNetwork=true pod @ 07/06/24 12:36:14.76
  STEP: Running the test @ 07/06/24 12:36:16.775
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 07/06/24 12:36:16.775
  Jul  6 12:36:16.775: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8674 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul  6 12:36:16.775: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  Jul  6 12:36:16.776: INFO: ExecWithOptions: Clientset creation
  Jul  6 12:36:16.776: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8674/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Jul  6 12:36:16.827: INFO: Exec stderr: ""
  Jul  6 12:36:16.827: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8674 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul  6 12:36:16.827: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  Jul  6 12:36:16.828: INFO: ExecWithOptions: Clientset creation
  Jul  6 12:36:16.828: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8674/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Jul  6 12:36:16.871: INFO: Exec stderr: ""
  Jul  6 12:36:16.871: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8674 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul  6 12:36:16.871: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  Jul  6 12:36:16.871: INFO: ExecWithOptions: Clientset creation
  Jul  6 12:36:16.871: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8674/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Jul  6 12:36:16.911: INFO: Exec stderr: ""
  Jul  6 12:36:16.911: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8674 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul  6 12:36:16.911: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  Jul  6 12:36:16.911: INFO: ExecWithOptions: Clientset creation
  Jul  6 12:36:16.911: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8674/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Jul  6 12:36:16.950: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 07/06/24 12:36:16.951
  Jul  6 12:36:16.951: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8674 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul  6 12:36:16.951: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  Jul  6 12:36:16.951: INFO: ExecWithOptions: Clientset creation
  Jul  6 12:36:16.951: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8674/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Jul  6 12:36:16.999: INFO: Exec stderr: ""
  Jul  6 12:36:16.999: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8674 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul  6 12:36:16.999: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  Jul  6 12:36:16.999: INFO: ExecWithOptions: Clientset creation
  Jul  6 12:36:16.999: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8674/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Jul  6 12:36:17.038: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 07/06/24 12:36:17.039
  Jul  6 12:36:17.039: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8674 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul  6 12:36:17.039: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  Jul  6 12:36:17.039: INFO: ExecWithOptions: Clientset creation
  Jul  6 12:36:17.039: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8674/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Jul  6 12:36:17.083: INFO: Exec stderr: ""
  Jul  6 12:36:17.083: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8674 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul  6 12:36:17.083: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  Jul  6 12:36:17.083: INFO: ExecWithOptions: Clientset creation
  Jul  6 12:36:17.083: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8674/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Jul  6 12:36:17.129: INFO: Exec stderr: ""
  Jul  6 12:36:17.129: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8674 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul  6 12:36:17.130: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  Jul  6 12:36:17.130: INFO: ExecWithOptions: Clientset creation
  Jul  6 12:36:17.130: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8674/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Jul  6 12:36:17.174: INFO: Exec stderr: ""
  Jul  6 12:36:17.174: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8674 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul  6 12:36:17.174: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  Jul  6 12:36:17.174: INFO: ExecWithOptions: Clientset creation
  Jul  6 12:36:17.174: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8674/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Jul  6 12:36:17.215: INFO: Exec stderr: ""
  Jul  6 12:36:17.215: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-8674" for this suite. @ 07/06/24 12:36:17.219
• [4.507 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 07/06/24 12:36:17.224
  Jul  6 12:36:17.224: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename cronjob @ 07/06/24 12:36:17.225
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:36:17.239
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:36:17.243
  STEP: Creating a suspended cronjob @ 07/06/24 12:36:17.245
  STEP: Ensuring no jobs are scheduled @ 07/06/24 12:36:17.251
  STEP: Ensuring no job exists by listing jobs explicitly @ 07/06/24 12:41:17.258
  STEP: Removing cronjob @ 07/06/24 12:41:17.26
  Jul  6 12:41:17.267: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-6062" for this suite. @ 07/06/24 12:41:17.27
• [300.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:141
  STEP: Creating a kubernetes client @ 07/06/24 12:41:17.278
  Jul  6 12:41:17.278: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename secrets @ 07/06/24 12:41:17.279
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:41:17.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:41:17.296
  STEP: Creating projection with secret that has name secret-emptykey-test-9a867014-026d-47e9-937f-0e7f08f93ebc @ 07/06/24 12:41:17.299
  Jul  6 12:41:17.300: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3923" for this suite. @ 07/06/24 12:41:17.303
• [0.030 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 07/06/24 12:41:17.309
  Jul  6 12:41:17.309: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename configmap @ 07/06/24 12:41:17.309
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:41:17.323
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:41:17.326
  STEP: Creating configMap with name configmap-test-upd-78be37e3-d4cf-464a-bd13-f12656f86f56 @ 07/06/24 12:41:17.331
  STEP: Creating the pod @ 07/06/24 12:41:17.336
  STEP: Updating configmap configmap-test-upd-78be37e3-d4cf-464a-bd13-f12656f86f56 @ 07/06/24 12:41:19.374
  STEP: waiting to observe update in volume @ 07/06/24 12:41:19.378
  Jul  6 12:42:39.703: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2213" for this suite. @ 07/06/24 12:42:39.706
• [82.403 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2199
  STEP: Creating a kubernetes client @ 07/06/24 12:42:39.712
  Jul  6 12:42:39.712: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename services @ 07/06/24 12:42:39.712
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:42:39.724
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:42:39.726
  STEP: creating service in namespace services-2032 @ 07/06/24 12:42:39.729
  STEP: creating service affinity-clusterip-transition in namespace services-2032 @ 07/06/24 12:42:39.729
  STEP: creating replication controller affinity-clusterip-transition in namespace services-2032 @ 07/06/24 12:42:39.739
  I0706 12:42:39.751034      21 runners.go:197] Created replication controller with name: affinity-clusterip-transition, namespace: services-2032, replica count: 3
  I0706 12:42:42.802610      21 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jul  6 12:42:42.808: INFO: Creating new exec pod
  Jul  6 12:42:45.822: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=services-2032 exec execpod-affinitybmpgw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  Jul  6 12:42:45.909: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  Jul  6 12:42:45.909: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul  6 12:42:45.909: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=services-2032 exec execpod-affinitybmpgw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.138 80'
  Jul  6 12:42:45.992: INFO: stderr: "+ nc -v -t -w 2 10.152.183.138 80\nConnection to 10.152.183.138 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Jul  6 12:42:45.992: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul  6 12:42:46.002: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=services-2032 exec execpod-affinitybmpgw -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.138:80/ ; done'
  Jul  6 12:42:46.137: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.138:80/\n"
  Jul  6 12:42:46.137: INFO: stdout: "\naffinity-clusterip-transition-w64ng\naffinity-clusterip-transition-w64ng\naffinity-clusterip-transition-w64ng\naffinity-clusterip-transition-b7jjf\naffinity-clusterip-transition-qnp5z\naffinity-clusterip-transition-qnp5z\naffinity-clusterip-transition-qnp5z\naffinity-clusterip-transition-b7jjf\naffinity-clusterip-transition-qnp5z\naffinity-clusterip-transition-qnp5z\naffinity-clusterip-transition-b7jjf\naffinity-clusterip-transition-qnp5z\naffinity-clusterip-transition-qnp5z\naffinity-clusterip-transition-qnp5z\naffinity-clusterip-transition-qnp5z\naffinity-clusterip-transition-qnp5z"
  Jul  6 12:42:46.137: INFO: Received response from host: affinity-clusterip-transition-w64ng
  Jul  6 12:42:46.137: INFO: Received response from host: affinity-clusterip-transition-w64ng
  Jul  6 12:42:46.137: INFO: Received response from host: affinity-clusterip-transition-w64ng
  Jul  6 12:42:46.137: INFO: Received response from host: affinity-clusterip-transition-b7jjf
  Jul  6 12:42:46.137: INFO: Received response from host: affinity-clusterip-transition-qnp5z
  Jul  6 12:42:46.137: INFO: Received response from host: affinity-clusterip-transition-qnp5z
  Jul  6 12:42:46.137: INFO: Received response from host: affinity-clusterip-transition-qnp5z
  Jul  6 12:42:46.137: INFO: Received response from host: affinity-clusterip-transition-b7jjf
  Jul  6 12:42:46.137: INFO: Received response from host: affinity-clusterip-transition-qnp5z
  Jul  6 12:42:46.137: INFO: Received response from host: affinity-clusterip-transition-qnp5z
  Jul  6 12:42:46.137: INFO: Received response from host: affinity-clusterip-transition-b7jjf
  Jul  6 12:42:46.137: INFO: Received response from host: affinity-clusterip-transition-qnp5z
  Jul  6 12:42:46.137: INFO: Received response from host: affinity-clusterip-transition-qnp5z
  Jul  6 12:42:46.137: INFO: Received response from host: affinity-clusterip-transition-qnp5z
  Jul  6 12:42:46.137: INFO: Received response from host: affinity-clusterip-transition-qnp5z
  Jul  6 12:42:46.137: INFO: Received response from host: affinity-clusterip-transition-qnp5z
  Jul  6 12:42:46.145: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=services-2032 exec execpod-affinitybmpgw -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.138:80/ ; done'
  Jul  6 12:42:46.283: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.138:80/\n"
  Jul  6 12:42:46.283: INFO: stdout: "\naffinity-clusterip-transition-qnp5z\naffinity-clusterip-transition-qnp5z\naffinity-clusterip-transition-qnp5z\naffinity-clusterip-transition-qnp5z\naffinity-clusterip-transition-qnp5z\naffinity-clusterip-transition-qnp5z\naffinity-clusterip-transition-qnp5z\naffinity-clusterip-transition-qnp5z\naffinity-clusterip-transition-qnp5z\naffinity-clusterip-transition-qnp5z\naffinity-clusterip-transition-qnp5z\naffinity-clusterip-transition-qnp5z\naffinity-clusterip-transition-qnp5z\naffinity-clusterip-transition-qnp5z\naffinity-clusterip-transition-qnp5z\naffinity-clusterip-transition-qnp5z"
  Jul  6 12:42:46.283: INFO: Received response from host: affinity-clusterip-transition-qnp5z
  Jul  6 12:42:46.283: INFO: Received response from host: affinity-clusterip-transition-qnp5z
  Jul  6 12:42:46.283: INFO: Received response from host: affinity-clusterip-transition-qnp5z
  Jul  6 12:42:46.283: INFO: Received response from host: affinity-clusterip-transition-qnp5z
  Jul  6 12:42:46.283: INFO: Received response from host: affinity-clusterip-transition-qnp5z
  Jul  6 12:42:46.283: INFO: Received response from host: affinity-clusterip-transition-qnp5z
  Jul  6 12:42:46.283: INFO: Received response from host: affinity-clusterip-transition-qnp5z
  Jul  6 12:42:46.283: INFO: Received response from host: affinity-clusterip-transition-qnp5z
  Jul  6 12:42:46.283: INFO: Received response from host: affinity-clusterip-transition-qnp5z
  Jul  6 12:42:46.283: INFO: Received response from host: affinity-clusterip-transition-qnp5z
  Jul  6 12:42:46.283: INFO: Received response from host: affinity-clusterip-transition-qnp5z
  Jul  6 12:42:46.283: INFO: Received response from host: affinity-clusterip-transition-qnp5z
  Jul  6 12:42:46.283: INFO: Received response from host: affinity-clusterip-transition-qnp5z
  Jul  6 12:42:46.283: INFO: Received response from host: affinity-clusterip-transition-qnp5z
  Jul  6 12:42:46.283: INFO: Received response from host: affinity-clusterip-transition-qnp5z
  Jul  6 12:42:46.283: INFO: Received response from host: affinity-clusterip-transition-qnp5z
  Jul  6 12:42:46.283: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-2032, will wait for the garbage collector to delete the pods @ 07/06/24 12:42:46.296
  Jul  6 12:42:46.356: INFO: Deleting ReplicationController affinity-clusterip-transition took: 6.370097ms
  Jul  6 12:42:46.457: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 100.558989ms
  Jul  6 12:42:49.480: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2032" for this suite. @ 07/06/24 12:42:49.483
• [9.778 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1838
  STEP: Creating a kubernetes client @ 07/06/24 12:42:49.49
  Jul  6 12:42:49.490: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename kubectl @ 07/06/24 12:42:49.49
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:42:49.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:42:49.504
  STEP: starting the proxy server @ 07/06/24 12:42:49.507
  Jul  6 12:42:49.507: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-3416 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 07/06/24 12:42:49.552
  Jul  6 12:42:49.558: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3416" for this suite. @ 07/06/24 12:42:49.561
• [0.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 07/06/24 12:42:49.569
  Jul  6 12:42:49.569: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename discovery @ 07/06/24 12:42:49.569
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:42:49.583
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:42:49.586
  STEP: Setting up server cert @ 07/06/24 12:42:49.589
  STEP: Requesting APIResourceList from "/api/v1" @ 07/06/24 12:42:49.724
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 07/06/24 12:42:49.725
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 07/06/24 12:42:49.726
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 07/06/24 12:42:49.728
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 07/06/24 12:42:49.728
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 07/06/24 12:42:49.729
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 07/06/24 12:42:49.73
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 07/06/24 12:42:49.731
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 07/06/24 12:42:49.732
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 07/06/24 12:42:49.733
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 07/06/24 12:42:49.734
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 07/06/24 12:42:49.734
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 07/06/24 12:42:49.735
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 07/06/24 12:42:49.736
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 07/06/24 12:42:49.737
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 07/06/24 12:42:49.738
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 07/06/24 12:42:49.738
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 07/06/24 12:42:49.739
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 07/06/24 12:42:49.74
  Jul  6 12:42:49.741: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-7025" for this suite. @ 07/06/24 12:42:49.746
• [0.185 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 07/06/24 12:42:49.754
  Jul  6 12:42:49.754: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename subpath @ 07/06/24 12:42:49.754
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:42:49.766
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:42:49.769
  STEP: Setting up data @ 07/06/24 12:42:49.771
  STEP: Creating pod pod-subpath-test-configmap-xgkn @ 07/06/24 12:42:49.78
  STEP: Creating a pod to test atomic-volume-subpath @ 07/06/24 12:42:49.78
  STEP: Saw pod success @ 07/06/24 12:43:13.846
  Jul  6 12:43:13.849: INFO: Trying to get logs from node ip-172-31-24-251 pod pod-subpath-test-configmap-xgkn container test-container-subpath-configmap-xgkn: <nil>
  STEP: delete the pod @ 07/06/24 12:43:13.856
  STEP: Deleting pod pod-subpath-test-configmap-xgkn @ 07/06/24 12:43:13.872
  Jul  6 12:43:13.872: INFO: Deleting pod "pod-subpath-test-configmap-xgkn" in namespace "subpath-4301"
  Jul  6 12:43:13.875: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-4301" for this suite. @ 07/06/24 12:43:13.878
• [24.130 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:948
  STEP: Creating a kubernetes client @ 07/06/24 12:43:13.884
  Jul  6 12:43:13.884: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename resourcequota @ 07/06/24 12:43:13.885
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:43:13.901
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:43:13.903
  STEP: Creating a ResourceQuota @ 07/06/24 12:43:13.906
  STEP: Getting a ResourceQuota @ 07/06/24 12:43:13.91
  STEP: Listing all ResourceQuotas with LabelSelector @ 07/06/24 12:43:13.914
  STEP: Patching the ResourceQuota @ 07/06/24 12:43:13.918
  STEP: Deleting a Collection of ResourceQuotas @ 07/06/24 12:43:13.922
  STEP: Verifying the deleted ResourceQuota @ 07/06/24 12:43:13.933
  Jul  6 12:43:13.935: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-885" for this suite. @ 07/06/24 12:43:13.939
• [0.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 07/06/24 12:43:13.944
  Jul  6 12:43:13.944: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename pod-network-test @ 07/06/24 12:43:13.944
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:43:13.957
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:43:13.96
  STEP: Performing setup for networking test in namespace pod-network-test-5354 @ 07/06/24 12:43:13.962
  STEP: creating a selector @ 07/06/24 12:43:13.963
  STEP: Creating the service pods in kubernetes @ 07/06/24 12:43:13.963
  Jul  6 12:43:13.963: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 07/06/24 12:43:26.042
  Jul  6 12:43:28.074: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Jul  6 12:43:28.074: INFO: Going to poll 192.168.140.56 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Jul  6 12:43:28.076: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.140.56 8081 | grep -v '^\s*$'] Namespace:pod-network-test-5354 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul  6 12:43:28.076: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  Jul  6 12:43:28.076: INFO: ExecWithOptions: Clientset creation
  Jul  6 12:43:28.076: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-5354/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.140.56+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jul  6 12:43:29.120: INFO: Found all 1 expected endpoints: [netserver-0]
  Jul  6 12:43:29.120: INFO: Going to poll 192.168.112.101 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Jul  6 12:43:29.124: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.112.101 8081 | grep -v '^\s*$'] Namespace:pod-network-test-5354 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul  6 12:43:29.124: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  Jul  6 12:43:29.124: INFO: ExecWithOptions: Clientset creation
  Jul  6 12:43:29.124: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-5354/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.112.101+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jul  6 12:43:30.163: INFO: Found all 1 expected endpoints: [netserver-1]
  Jul  6 12:43:30.164: INFO: Going to poll 192.168.204.92 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Jul  6 12:43:30.167: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.204.92 8081 | grep -v '^\s*$'] Namespace:pod-network-test-5354 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul  6 12:43:30.167: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  Jul  6 12:43:30.167: INFO: ExecWithOptions: Clientset creation
  Jul  6 12:43:30.168: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-5354/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.204.92+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jul  6 12:43:31.216: INFO: Found all 1 expected endpoints: [netserver-2]
  Jul  6 12:43:31.216: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-5354" for this suite. @ 07/06/24 12:43:31.221
• [17.283 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1798
  STEP: Creating a kubernetes client @ 07/06/24 12:43:31.227
  Jul  6 12:43:31.227: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename kubectl @ 07/06/24 12:43:31.228
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:43:31.241
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:43:31.244
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 07/06/24 12:43:31.246
  Jul  6 12:43:31.247: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-9380 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Jul  6 12:43:31.295: INFO: stderr: ""
  Jul  6 12:43:31.295: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 07/06/24 12:43:31.295
  STEP: verifying the pod e2e-test-httpd-pod was created @ 07/06/24 12:43:36.346
  Jul  6 12:43:36.346: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-9380 get pod e2e-test-httpd-pod -o json'
  Jul  6 12:43:36.389: INFO: stderr: ""
  Jul  6 12:43:36.389: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2024-07-06T12:43:31Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-9380\",\n        \"resourceVersion\": \"16047\",\n        \"uid\": \"7af4b6b5-063e-4b72-82e1-e9c225792487\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-vdp86\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ip-172-31-24-251\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-vdp86\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-07-06T12:43:32Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-07-06T12:43:31Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-07-06T12:43:32Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-07-06T12:43:32Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-07-06T12:43:31Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://cc06a2c4efc848ca4b4fdae31d698b42049aa3b0fd5cf98cc4102bf00b322d0b\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2024-07-06T12:43:31Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"172.31.24.251\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"172.31.24.251\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"192.168.140.58\",\n        \"podIPs\": [\n            {\n                \"ip\": \"192.168.140.58\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2024-07-06T12:43:31Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 07/06/24 12:43:36.389
  Jul  6 12:43:36.389: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-9380 replace -f -'
  Jul  6 12:43:36.477: INFO: stderr: ""
  Jul  6 12:43:36.477: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 07/06/24 12:43:36.477
  Jul  6 12:43:36.480: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-9380 delete pods e2e-test-httpd-pod'
  Jul  6 12:43:37.840: INFO: stderr: ""
  Jul  6 12:43:37.840: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Jul  6 12:43:37.840: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9380" for this suite. @ 07/06/24 12:43:37.844
• [6.624 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:163
  STEP: Creating a kubernetes client @ 07/06/24 12:43:37.851
  Jul  6 12:43:37.851: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename resourcequota @ 07/06/24 12:43:37.852
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:43:37.911
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:43:37.914
  STEP: Discovering how many secrets are in namespace by default @ 07/06/24 12:43:37.916
  STEP: Counting existing ResourceQuota @ 07/06/24 12:43:42.919
  STEP: Creating a ResourceQuota @ 07/06/24 12:43:47.922
  STEP: Ensuring resource quota status is calculated @ 07/06/24 12:43:47.929
  STEP: Creating a Secret @ 07/06/24 12:43:49.932
  STEP: Ensuring resource quota status captures secret creation @ 07/06/24 12:43:49.943
  STEP: Deleting a secret @ 07/06/24 12:43:51.948
  STEP: Ensuring resource quota status released usage @ 07/06/24 12:43:51.956
  Jul  6 12:43:53.961: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6553" for this suite. @ 07/06/24 12:43:53.966
• [16.121 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1764
  STEP: Creating a kubernetes client @ 07/06/24 12:43:53.973
  Jul  6 12:43:53.973: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename kubectl @ 07/06/24 12:43:53.973
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:43:53.987
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:43:53.99
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 07/06/24 12:43:53.993
  Jul  6 12:43:53.993: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-9811 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  Jul  6 12:43:54.040: INFO: stderr: ""
  Jul  6 12:43:54.040: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 07/06/24 12:43:54.04
  Jul  6 12:43:54.045: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-9811 delete pods e2e-test-httpd-pod'
  Jul  6 12:43:55.870: INFO: stderr: ""
  Jul  6 12:43:55.870: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Jul  6 12:43:55.870: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9811" for this suite. @ 07/06/24 12:43:55.874
• [1.907 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 07/06/24 12:43:55.88
  Jul  6 12:43:55.880: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename container-probe @ 07/06/24 12:43:55.881
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:43:55.892
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:43:55.896
  Jul  6 12:44:17.967: INFO: Container started at 2024-07-06 12:43:56 +0000 UTC, pod became ready at 2024-07-06 12:44:16 +0000 UTC
  Jul  6 12:44:17.967: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4576" for this suite. @ 07/06/24 12:44:17.971
• [22.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:234
  STEP: Creating a kubernetes client @ 07/06/24 12:44:17.976
  Jul  6 12:44:17.976: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename resourcequota @ 07/06/24 12:44:17.976
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:44:17.989
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:44:17.992
  STEP: Counting existing ResourceQuota @ 07/06/24 12:44:17.994
  STEP: Creating a ResourceQuota @ 07/06/24 12:44:22.998
  STEP: Ensuring resource quota status is calculated @ 07/06/24 12:44:23.002
  STEP: Creating a Pod that fits quota @ 07/06/24 12:44:25.007
  STEP: Ensuring ResourceQuota status captures the pod usage @ 07/06/24 12:44:25.021
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 07/06/24 12:44:27.025
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 07/06/24 12:44:27.027
  STEP: Ensuring a pod cannot update its resource requirements @ 07/06/24 12:44:27.029
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 07/06/24 12:44:27.033
  STEP: Deleting the pod @ 07/06/24 12:44:29.037
  STEP: Ensuring resource quota status released the pod usage @ 07/06/24 12:44:29.053
  Jul  6 12:44:31.058: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-245" for this suite. @ 07/06/24 12:44:31.061
• [13.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 07/06/24 12:44:31.067
  Jul  6 12:44:31.067: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename emptydir @ 07/06/24 12:44:31.068
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:44:31.081
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:44:31.084
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 07/06/24 12:44:31.087
  STEP: Saw pod success @ 07/06/24 12:44:33.105
  Jul  6 12:44:33.108: INFO: Trying to get logs from node ip-172-31-24-251 pod pod-19e52455-75d9-4c3c-848f-c45f30c211d1 container test-container: <nil>
  STEP: delete the pod @ 07/06/24 12:44:33.113
  Jul  6 12:44:33.130: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3684" for this suite. @ 07/06/24 12:44:33.133
• [2.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 07/06/24 12:44:33.139
  Jul  6 12:44:33.139: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename svc-latency @ 07/06/24 12:44:33.139
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:44:33.152
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:44:33.155
  Jul  6 12:44:33.157: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-961 @ 07/06/24 12:44:33.158
  I0706 12:44:33.163895      21 runners.go:197] Created replication controller with name: svc-latency-rc, namespace: svc-latency-961, replica count: 1
  I0706 12:44:34.215671      21 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jul  6 12:44:34.325: INFO: Created: latency-svc-h6l5n
  Jul  6 12:44:34.335: INFO: Got endpoints: latency-svc-h6l5n [18.479772ms]
  Jul  6 12:44:34.346: INFO: Created: latency-svc-4qhmh
  Jul  6 12:44:34.351: INFO: Got endpoints: latency-svc-4qhmh [16.166566ms]
  Jul  6 12:44:34.357: INFO: Created: latency-svc-4zg7k
  Jul  6 12:44:34.363: INFO: Created: latency-svc-mfgjn
  Jul  6 12:44:34.365: INFO: Got endpoints: latency-svc-4zg7k [30.03399ms]
  Jul  6 12:44:34.370: INFO: Got endpoints: latency-svc-mfgjn [34.905659ms]
  Jul  6 12:44:34.374: INFO: Created: latency-svc-pm8tt
  Jul  6 12:44:34.380: INFO: Created: latency-svc-wxwxd
  Jul  6 12:44:34.380: INFO: Got endpoints: latency-svc-pm8tt [45.452931ms]
  Jul  6 12:44:34.393: INFO: Created: latency-svc-2cz4p
  Jul  6 12:44:34.394: INFO: Got endpoints: latency-svc-wxwxd [58.825058ms]
  Jul  6 12:44:34.396: INFO: Got endpoints: latency-svc-2cz4p [61.225551ms]
  Jul  6 12:44:34.404: INFO: Created: latency-svc-v7ttl
  Jul  6 12:44:34.410: INFO: Got endpoints: latency-svc-v7ttl [74.708575ms]
  Jul  6 12:44:34.416: INFO: Created: latency-svc-lk7mq
  Jul  6 12:44:34.422: INFO: Created: latency-svc-tk4xk
  Jul  6 12:44:34.423: INFO: Got endpoints: latency-svc-lk7mq [87.517239ms]
  Jul  6 12:44:34.428: INFO: Got endpoints: latency-svc-tk4xk [93.135334ms]
  Jul  6 12:44:34.432: INFO: Created: latency-svc-4lq66
  Jul  6 12:44:34.436: INFO: Got endpoints: latency-svc-4lq66 [100.778438ms]
  Jul  6 12:44:34.439: INFO: Created: latency-svc-vhj5k
  Jul  6 12:44:34.446: INFO: Got endpoints: latency-svc-vhj5k [110.20432ms]
  Jul  6 12:44:34.448: INFO: Created: latency-svc-w66m6
  Jul  6 12:44:34.454: INFO: Got endpoints: latency-svc-w66m6 [118.134344ms]
  Jul  6 12:44:34.457: INFO: Created: latency-svc-w66fx
  Jul  6 12:44:34.460: INFO: Got endpoints: latency-svc-w66fx [124.84255ms]
  Jul  6 12:44:34.463: INFO: Created: latency-svc-mb7pf
  Jul  6 12:44:34.469: INFO: Got endpoints: latency-svc-mb7pf [133.02439ms]
  Jul  6 12:44:34.471: INFO: Created: latency-svc-gb8l5
  Jul  6 12:44:34.478: INFO: Got endpoints: latency-svc-gb8l5 [142.557181ms]
  Jul  6 12:44:34.480: INFO: Created: latency-svc-dgf27
  Jul  6 12:44:34.485: INFO: Got endpoints: latency-svc-dgf27 [133.892672ms]
  Jul  6 12:44:34.490: INFO: Created: latency-svc-gv59h
  Jul  6 12:44:34.496: INFO: Got endpoints: latency-svc-gv59h [131.418071ms]
  Jul  6 12:44:34.497: INFO: Created: latency-svc-zr7hm
  Jul  6 12:44:34.504: INFO: Got endpoints: latency-svc-zr7hm [134.317145ms]
  Jul  6 12:44:34.514: INFO: Created: latency-svc-hczrs
  Jul  6 12:44:34.519: INFO: Got endpoints: latency-svc-hczrs [137.855257ms]
  Jul  6 12:44:34.522: INFO: Created: latency-svc-fq5cv
  Jul  6 12:44:34.527: INFO: Got endpoints: latency-svc-fq5cv [132.728676ms]
  Jul  6 12:44:34.528: INFO: Created: latency-svc-fwfcm
  Jul  6 12:44:34.535: INFO: Got endpoints: latency-svc-fwfcm [138.240014ms]
  Jul  6 12:44:34.537: INFO: Created: latency-svc-jt6xv
  Jul  6 12:44:34.540: INFO: Got endpoints: latency-svc-jt6xv [130.394793ms]
  Jul  6 12:44:34.545: INFO: Created: latency-svc-zzjcq
  Jul  6 12:44:34.551: INFO: Got endpoints: latency-svc-zzjcq [128.684288ms]
  Jul  6 12:44:34.554: INFO: Created: latency-svc-gnzqx
  Jul  6 12:44:34.560: INFO: Got endpoints: latency-svc-gnzqx [131.917637ms]
  Jul  6 12:44:34.561: INFO: Created: latency-svc-jgdtt
  Jul  6 12:44:34.568: INFO: Created: latency-svc-wdnxl
  Jul  6 12:44:34.569: INFO: Got endpoints: latency-svc-jgdtt [132.862222ms]
  Jul  6 12:44:34.575: INFO: Created: latency-svc-xlnfj
  Jul  6 12:44:34.576: INFO: Got endpoints: latency-svc-wdnxl [129.967822ms]
  Jul  6 12:44:34.583: INFO: Got endpoints: latency-svc-xlnfj [129.444282ms]
  Jul  6 12:44:34.588: INFO: Created: latency-svc-dzsd4
  Jul  6 12:44:34.593: INFO: Got endpoints: latency-svc-dzsd4 [132.89533ms]
  Jul  6 12:44:34.596: INFO: Created: latency-svc-mfjgq
  Jul  6 12:44:34.600: INFO: Created: latency-svc-ff7gq
  Jul  6 12:44:34.608: INFO: Got endpoints: latency-svc-mfjgq [139.212631ms]
  Jul  6 12:44:34.609: INFO: Got endpoints: latency-svc-ff7gq [130.985476ms]
  Jul  6 12:44:34.612: INFO: Created: latency-svc-rvg5r
  Jul  6 12:44:34.615: INFO: Got endpoints: latency-svc-rvg5r [129.778361ms]
  Jul  6 12:44:34.617: INFO: Created: latency-svc-xjk62
  Jul  6 12:44:34.622: INFO: Got endpoints: latency-svc-xjk62 [125.970156ms]
  Jul  6 12:44:34.624: INFO: Created: latency-svc-hzsbw
  Jul  6 12:44:34.631: INFO: Got endpoints: latency-svc-hzsbw [126.533584ms]
  Jul  6 12:44:34.634: INFO: Created: latency-svc-qskcm
  Jul  6 12:44:34.638: INFO: Got endpoints: latency-svc-qskcm [119.558943ms]
  Jul  6 12:44:34.642: INFO: Created: latency-svc-d4s25
  Jul  6 12:44:34.649: INFO: Got endpoints: latency-svc-d4s25 [122.428413ms]
  Jul  6 12:44:34.651: INFO: Created: latency-svc-2f6k9
  Jul  6 12:44:34.658: INFO: Created: latency-svc-7cw7l
  Jul  6 12:44:34.661: INFO: Created: latency-svc-94nkn
  Jul  6 12:44:34.665: INFO: Created: latency-svc-scsng
  Jul  6 12:44:34.673: INFO: Created: latency-svc-8txcm
  Jul  6 12:44:34.679: INFO: Created: latency-svc-j7z2w
  Jul  6 12:44:34.683: INFO: Got endpoints: latency-svc-2f6k9 [147.96646ms]
  Jul  6 12:44:34.685: INFO: Created: latency-svc-mmltf
  Jul  6 12:44:34.692: INFO: Created: latency-svc-bggg6
  Jul  6 12:44:34.697: INFO: Created: latency-svc-ppfmn
  Jul  6 12:44:34.702: INFO: Created: latency-svc-gp94n
  Jul  6 12:44:34.710: INFO: Created: latency-svc-94v72
  Jul  6 12:44:34.714: INFO: Created: latency-svc-dr95k
  Jul  6 12:44:34.718: INFO: Created: latency-svc-v64r7
  Jul  6 12:44:34.732: INFO: Got endpoints: latency-svc-7cw7l [191.528197ms]
  Jul  6 12:44:34.732: INFO: Created: latency-svc-mmsvb
  Jul  6 12:44:34.737: INFO: Created: latency-svc-wn2rc
  Jul  6 12:44:34.743: INFO: Created: latency-svc-nzkk9
  Jul  6 12:44:34.750: INFO: Created: latency-svc-b8z65
  Jul  6 12:44:34.783: INFO: Got endpoints: latency-svc-94nkn [231.151391ms]
  Jul  6 12:44:34.792: INFO: Created: latency-svc-66cwk
  Jul  6 12:44:34.832: INFO: Got endpoints: latency-svc-scsng [271.364022ms]
  Jul  6 12:44:34.840: INFO: Created: latency-svc-rt759
  Jul  6 12:44:34.882: INFO: Got endpoints: latency-svc-8txcm [312.974647ms]
  Jul  6 12:44:34.892: INFO: Created: latency-svc-v7k87
  Jul  6 12:44:34.933: INFO: Got endpoints: latency-svc-j7z2w [356.958489ms]
  Jul  6 12:44:34.942: INFO: Created: latency-svc-zj9k9
  Jul  6 12:44:34.983: INFO: Got endpoints: latency-svc-mmltf [399.182214ms]
  Jul  6 12:44:34.992: INFO: Created: latency-svc-cbnwj
  Jul  6 12:44:35.032: INFO: Got endpoints: latency-svc-bggg6 [438.123131ms]
  Jul  6 12:44:35.042: INFO: Created: latency-svc-gnhjb
  Jul  6 12:44:35.081: INFO: Got endpoints: latency-svc-ppfmn [473.345121ms]
  Jul  6 12:44:35.091: INFO: Created: latency-svc-l4j64
  Jul  6 12:44:35.132: INFO: Got endpoints: latency-svc-gp94n [522.243849ms]
  Jul  6 12:44:35.139: INFO: Created: latency-svc-mxncv
  Jul  6 12:44:35.183: INFO: Got endpoints: latency-svc-94v72 [568.311451ms]
  Jul  6 12:44:35.194: INFO: Created: latency-svc-zzdlc
  Jul  6 12:44:35.233: INFO: Got endpoints: latency-svc-dr95k [610.275214ms]
  Jul  6 12:44:35.249: INFO: Created: latency-svc-6cfgd
  Jul  6 12:44:35.285: INFO: Got endpoints: latency-svc-v64r7 [654.242554ms]
  Jul  6 12:44:35.293: INFO: Created: latency-svc-vngn8
  Jul  6 12:44:35.331: INFO: Got endpoints: latency-svc-mmsvb [692.417055ms]
  Jul  6 12:44:35.344: INFO: Created: latency-svc-dwtlj
  Jul  6 12:44:35.383: INFO: Got endpoints: latency-svc-wn2rc [733.492607ms]
  Jul  6 12:44:35.392: INFO: Created: latency-svc-clvjb
  Jul  6 12:44:35.433: INFO: Got endpoints: latency-svc-nzkk9 [749.65817ms]
  Jul  6 12:44:35.440: INFO: Created: latency-svc-zzb6b
  Jul  6 12:44:35.482: INFO: Got endpoints: latency-svc-b8z65 [750.317566ms]
  Jul  6 12:44:35.493: INFO: Created: latency-svc-r9cgf
  Jul  6 12:44:35.531: INFO: Got endpoints: latency-svc-66cwk [748.449053ms]
  Jul  6 12:44:35.542: INFO: Created: latency-svc-2nnng
  Jul  6 12:44:35.583: INFO: Got endpoints: latency-svc-rt759 [750.579686ms]
  Jul  6 12:44:35.591: INFO: Created: latency-svc-gx6xr
  Jul  6 12:44:35.633: INFO: Got endpoints: latency-svc-v7k87 [750.672663ms]
  Jul  6 12:44:35.642: INFO: Created: latency-svc-hx4cj
  Jul  6 12:44:35.684: INFO: Got endpoints: latency-svc-zj9k9 [750.918445ms]
  Jul  6 12:44:35.694: INFO: Created: latency-svc-f87bw
  Jul  6 12:44:35.733: INFO: Got endpoints: latency-svc-cbnwj [750.282414ms]
  Jul  6 12:44:35.741: INFO: Created: latency-svc-znz2q
  Jul  6 12:44:35.781: INFO: Got endpoints: latency-svc-gnhjb [749.638795ms]
  Jul  6 12:44:35.792: INFO: Created: latency-svc-ls5cw
  Jul  6 12:44:35.832: INFO: Got endpoints: latency-svc-l4j64 [751.081859ms]
  Jul  6 12:44:35.841: INFO: Created: latency-svc-dkmn2
  Jul  6 12:44:35.882: INFO: Got endpoints: latency-svc-mxncv [750.2301ms]
  Jul  6 12:44:35.891: INFO: Created: latency-svc-b27zh
  Jul  6 12:44:35.932: INFO: Got endpoints: latency-svc-zzdlc [748.510953ms]
  Jul  6 12:44:35.942: INFO: Created: latency-svc-bnjml
  Jul  6 12:44:35.983: INFO: Got endpoints: latency-svc-6cfgd [749.903097ms]
  Jul  6 12:44:35.992: INFO: Created: latency-svc-gx4qj
  Jul  6 12:44:36.032: INFO: Got endpoints: latency-svc-vngn8 [747.113184ms]
  Jul  6 12:44:36.043: INFO: Created: latency-svc-knjp8
  Jul  6 12:44:36.088: INFO: Got endpoints: latency-svc-dwtlj [756.867826ms]
  Jul  6 12:44:36.099: INFO: Created: latency-svc-4lgvg
  Jul  6 12:44:36.132: INFO: Got endpoints: latency-svc-clvjb [749.222784ms]
  Jul  6 12:44:36.142: INFO: Created: latency-svc-4gbkm
  Jul  6 12:44:36.183: INFO: Got endpoints: latency-svc-zzb6b [749.916958ms]
  Jul  6 12:44:36.191: INFO: Created: latency-svc-9mnrv
  Jul  6 12:44:36.235: INFO: Got endpoints: latency-svc-r9cgf [752.427795ms]
  Jul  6 12:44:36.244: INFO: Created: latency-svc-pb6t8
  Jul  6 12:44:36.282: INFO: Got endpoints: latency-svc-2nnng [750.404835ms]
  Jul  6 12:44:36.294: INFO: Created: latency-svc-q5ws6
  Jul  6 12:44:36.333: INFO: Got endpoints: latency-svc-gx6xr [750.201892ms]
  Jul  6 12:44:36.351: INFO: Created: latency-svc-jv5hl
  Jul  6 12:44:36.390: INFO: Got endpoints: latency-svc-hx4cj [757.349467ms]
  Jul  6 12:44:36.400: INFO: Created: latency-svc-4pb4w
  Jul  6 12:44:36.432: INFO: Got endpoints: latency-svc-f87bw [747.703525ms]
  Jul  6 12:44:36.442: INFO: Created: latency-svc-g7gdn
  Jul  6 12:44:36.483: INFO: Got endpoints: latency-svc-znz2q [750.474546ms]
  Jul  6 12:44:36.492: INFO: Created: latency-svc-drqh4
  Jul  6 12:44:36.531: INFO: Got endpoints: latency-svc-ls5cw [749.257541ms]
  Jul  6 12:44:36.541: INFO: Created: latency-svc-8sdm9
  Jul  6 12:44:36.581: INFO: Got endpoints: latency-svc-dkmn2 [748.388945ms]
  Jul  6 12:44:36.591: INFO: Created: latency-svc-t7pkl
  Jul  6 12:44:36.633: INFO: Got endpoints: latency-svc-b27zh [751.600333ms]
  Jul  6 12:44:36.641: INFO: Created: latency-svc-mz5xd
  Jul  6 12:44:36.682: INFO: Got endpoints: latency-svc-bnjml [750.134987ms]
  Jul  6 12:44:36.691: INFO: Created: latency-svc-4gzqh
  Jul  6 12:44:36.733: INFO: Got endpoints: latency-svc-gx4qj [749.556117ms]
  Jul  6 12:44:36.742: INFO: Created: latency-svc-5527s
  Jul  6 12:44:36.782: INFO: Got endpoints: latency-svc-knjp8 [749.061059ms]
  Jul  6 12:44:36.791: INFO: Created: latency-svc-x2m4d
  Jul  6 12:44:36.832: INFO: Got endpoints: latency-svc-4lgvg [744.105758ms]
  Jul  6 12:44:36.841: INFO: Created: latency-svc-5rk9v
  Jul  6 12:44:36.882: INFO: Got endpoints: latency-svc-4gbkm [749.780628ms]
  Jul  6 12:44:36.892: INFO: Created: latency-svc-w6fcl
  Jul  6 12:44:36.933: INFO: Got endpoints: latency-svc-9mnrv [750.242391ms]
  Jul  6 12:44:36.941: INFO: Created: latency-svc-wnhs6
  Jul  6 12:44:36.982: INFO: Got endpoints: latency-svc-pb6t8 [746.615104ms]
  Jul  6 12:44:36.991: INFO: Created: latency-svc-pfcmp
  Jul  6 12:44:37.032: INFO: Got endpoints: latency-svc-q5ws6 [750.36985ms]
  Jul  6 12:44:37.042: INFO: Created: latency-svc-9dz8s
  Jul  6 12:44:37.083: INFO: Got endpoints: latency-svc-jv5hl [749.290609ms]
  Jul  6 12:44:37.090: INFO: Created: latency-svc-d84sr
  Jul  6 12:44:37.132: INFO: Got endpoints: latency-svc-4pb4w [742.202087ms]
  Jul  6 12:44:37.142: INFO: Created: latency-svc-g99zz
  Jul  6 12:44:37.182: INFO: Got endpoints: latency-svc-g7gdn [750.476568ms]
  Jul  6 12:44:37.192: INFO: Created: latency-svc-5ptjp
  Jul  6 12:44:37.232: INFO: Got endpoints: latency-svc-drqh4 [748.566851ms]
  Jul  6 12:44:37.239: INFO: Created: latency-svc-9wkmq
  Jul  6 12:44:37.282: INFO: Got endpoints: latency-svc-8sdm9 [751.413254ms]
  Jul  6 12:44:37.291: INFO: Created: latency-svc-ltcdp
  Jul  6 12:44:37.333: INFO: Got endpoints: latency-svc-t7pkl [752.336389ms]
  Jul  6 12:44:37.345: INFO: Created: latency-svc-5j96v
  Jul  6 12:44:37.382: INFO: Got endpoints: latency-svc-mz5xd [748.722067ms]
  Jul  6 12:44:37.392: INFO: Created: latency-svc-4wrdt
  Jul  6 12:44:37.430: INFO: Got endpoints: latency-svc-4gzqh [748.173158ms]
  Jul  6 12:44:37.440: INFO: Created: latency-svc-dthgv
  Jul  6 12:44:37.482: INFO: Got endpoints: latency-svc-5527s [749.104134ms]
  Jul  6 12:44:37.494: INFO: Created: latency-svc-5qdcv
  Jul  6 12:44:37.532: INFO: Got endpoints: latency-svc-x2m4d [750.32408ms]
  Jul  6 12:44:37.540: INFO: Created: latency-svc-kk4xh
  Jul  6 12:44:37.582: INFO: Got endpoints: latency-svc-5rk9v [750.321755ms]
  Jul  6 12:44:37.593: INFO: Created: latency-svc-4k5k4
  Jul  6 12:44:37.631: INFO: Got endpoints: latency-svc-w6fcl [749.463317ms]
  Jul  6 12:44:37.642: INFO: Created: latency-svc-bbq78
  Jul  6 12:44:37.683: INFO: Got endpoints: latency-svc-wnhs6 [749.845352ms]
  Jul  6 12:44:37.690: INFO: Created: latency-svc-ldpvr
  Jul  6 12:44:37.733: INFO: Got endpoints: latency-svc-pfcmp [751.105008ms]
  Jul  6 12:44:37.742: INFO: Created: latency-svc-n2zkr
  Jul  6 12:44:37.780: INFO: Got endpoints: latency-svc-9dz8s [747.488798ms]
  Jul  6 12:44:37.790: INFO: Created: latency-svc-wg4tf
  Jul  6 12:44:37.832: INFO: Got endpoints: latency-svc-d84sr [749.548359ms]
  Jul  6 12:44:37.841: INFO: Created: latency-svc-r79h9
  Jul  6 12:44:37.882: INFO: Got endpoints: latency-svc-g99zz [749.911293ms]
  Jul  6 12:44:37.892: INFO: Created: latency-svc-hqcr6
  Jul  6 12:44:37.931: INFO: Got endpoints: latency-svc-5ptjp [749.149399ms]
  Jul  6 12:44:37.944: INFO: Created: latency-svc-wwwqd
  Jul  6 12:44:37.983: INFO: Got endpoints: latency-svc-9wkmq [750.717344ms]
  Jul  6 12:44:37.992: INFO: Created: latency-svc-7kd4l
  Jul  6 12:44:38.032: INFO: Got endpoints: latency-svc-ltcdp [749.839534ms]
  Jul  6 12:44:38.046: INFO: Created: latency-svc-psgvt
  Jul  6 12:44:38.081: INFO: Got endpoints: latency-svc-5j96v [747.453174ms]
  Jul  6 12:44:38.092: INFO: Created: latency-svc-bkt5v
  Jul  6 12:44:38.133: INFO: Got endpoints: latency-svc-4wrdt [750.510297ms]
  Jul  6 12:44:38.141: INFO: Created: latency-svc-6drnt
  Jul  6 12:44:38.181: INFO: Got endpoints: latency-svc-dthgv [750.464882ms]
  Jul  6 12:44:38.189: INFO: Created: latency-svc-z7xnn
  Jul  6 12:44:38.232: INFO: Got endpoints: latency-svc-5qdcv [749.460546ms]
  Jul  6 12:44:38.243: INFO: Created: latency-svc-mdrdn
  Jul  6 12:44:38.283: INFO: Got endpoints: latency-svc-kk4xh [750.814309ms]
  Jul  6 12:44:38.295: INFO: Created: latency-svc-fgdqs
  Jul  6 12:44:38.336: INFO: Got endpoints: latency-svc-4k5k4 [753.112529ms]
  Jul  6 12:44:38.351: INFO: Created: latency-svc-nrxds
  Jul  6 12:44:38.385: INFO: Got endpoints: latency-svc-bbq78 [753.736933ms]
  Jul  6 12:44:38.396: INFO: Created: latency-svc-pj9vp
  Jul  6 12:44:38.432: INFO: Got endpoints: latency-svc-ldpvr [749.544089ms]
  Jul  6 12:44:38.441: INFO: Created: latency-svc-s6k4r
  Jul  6 12:44:38.483: INFO: Got endpoints: latency-svc-n2zkr [750.510888ms]
  Jul  6 12:44:38.492: INFO: Created: latency-svc-sfwtr
  Jul  6 12:44:38.532: INFO: Got endpoints: latency-svc-wg4tf [751.855125ms]
  Jul  6 12:44:38.541: INFO: Created: latency-svc-n95t7
  Jul  6 12:44:38.582: INFO: Got endpoints: latency-svc-r79h9 [749.315425ms]
  Jul  6 12:44:38.590: INFO: Created: latency-svc-jhctw
  Jul  6 12:44:38.632: INFO: Got endpoints: latency-svc-hqcr6 [749.359564ms]
  Jul  6 12:44:38.642: INFO: Created: latency-svc-xvpxn
  Jul  6 12:44:38.682: INFO: Got endpoints: latency-svc-wwwqd [750.708684ms]
  Jul  6 12:44:38.690: INFO: Created: latency-svc-wc6lq
  Jul  6 12:44:38.733: INFO: Got endpoints: latency-svc-7kd4l [750.165215ms]
  Jul  6 12:44:38.744: INFO: Created: latency-svc-hnbwx
  Jul  6 12:44:38.782: INFO: Got endpoints: latency-svc-psgvt [749.814611ms]
  Jul  6 12:44:38.792: INFO: Created: latency-svc-sj22t
  Jul  6 12:44:38.833: INFO: Got endpoints: latency-svc-bkt5v [752.005449ms]
  Jul  6 12:44:38.843: INFO: Created: latency-svc-plnzk
  Jul  6 12:44:38.882: INFO: Got endpoints: latency-svc-6drnt [749.482973ms]
  Jul  6 12:44:38.890: INFO: Created: latency-svc-c5npr
  Jul  6 12:44:38.933: INFO: Got endpoints: latency-svc-z7xnn [752.475587ms]
  Jul  6 12:44:38.943: INFO: Created: latency-svc-s55nv
  Jul  6 12:44:38.982: INFO: Got endpoints: latency-svc-mdrdn [750.624485ms]
  Jul  6 12:44:38.992: INFO: Created: latency-svc-8pk9f
  Jul  6 12:44:39.032: INFO: Got endpoints: latency-svc-fgdqs [749.108165ms]
  Jul  6 12:44:39.041: INFO: Created: latency-svc-pc4z7
  Jul  6 12:44:39.082: INFO: Got endpoints: latency-svc-nrxds [746.5574ms]
  Jul  6 12:44:39.092: INFO: Created: latency-svc-cnjsg
  Jul  6 12:44:39.132: INFO: Got endpoints: latency-svc-pj9vp [746.362527ms]
  Jul  6 12:44:39.141: INFO: Created: latency-svc-wrw75
  Jul  6 12:44:39.182: INFO: Got endpoints: latency-svc-s6k4r [749.952182ms]
  Jul  6 12:44:39.193: INFO: Created: latency-svc-5zhm2
  Jul  6 12:44:39.232: INFO: Got endpoints: latency-svc-sfwtr [748.380934ms]
  Jul  6 12:44:39.240: INFO: Created: latency-svc-6qltr
  Jul  6 12:44:39.283: INFO: Got endpoints: latency-svc-n95t7 [750.52595ms]
  Jul  6 12:44:39.291: INFO: Created: latency-svc-lv4m2
  Jul  6 12:44:39.332: INFO: Got endpoints: latency-svc-jhctw [750.542226ms]
  Jul  6 12:44:39.342: INFO: Created: latency-svc-jgzm4
  Jul  6 12:44:39.382: INFO: Got endpoints: latency-svc-xvpxn [749.864935ms]
  Jul  6 12:44:39.392: INFO: Created: latency-svc-7rn78
  Jul  6 12:44:39.432: INFO: Got endpoints: latency-svc-wc6lq [749.55167ms]
  Jul  6 12:44:39.440: INFO: Created: latency-svc-sgmms
  Jul  6 12:44:39.482: INFO: Got endpoints: latency-svc-hnbwx [748.584564ms]
  Jul  6 12:44:39.491: INFO: Created: latency-svc-87mzq
  Jul  6 12:44:39.532: INFO: Got endpoints: latency-svc-sj22t [750.06648ms]
  Jul  6 12:44:39.542: INFO: Created: latency-svc-ddssb
  Jul  6 12:44:39.582: INFO: Got endpoints: latency-svc-plnzk [749.280006ms]
  Jul  6 12:44:39.590: INFO: Created: latency-svc-cjzjb
  Jul  6 12:44:39.632: INFO: Got endpoints: latency-svc-c5npr [749.733408ms]
  Jul  6 12:44:39.641: INFO: Created: latency-svc-k99k7
  Jul  6 12:44:39.683: INFO: Got endpoints: latency-svc-s55nv [749.908384ms]
  Jul  6 12:44:39.692: INFO: Created: latency-svc-88cfd
  Jul  6 12:44:39.732: INFO: Got endpoints: latency-svc-8pk9f [749.26283ms]
  Jul  6 12:44:39.740: INFO: Created: latency-svc-cnknn
  Jul  6 12:44:39.782: INFO: Got endpoints: latency-svc-pc4z7 [750.064084ms]
  Jul  6 12:44:39.797: INFO: Created: latency-svc-58mcb
  Jul  6 12:44:39.833: INFO: Got endpoints: latency-svc-cnjsg [750.653646ms]
  Jul  6 12:44:39.842: INFO: Created: latency-svc-fzqp5
  Jul  6 12:44:39.884: INFO: Got endpoints: latency-svc-wrw75 [752.412619ms]
  Jul  6 12:44:39.894: INFO: Created: latency-svc-tmddk
  Jul  6 12:44:39.930: INFO: Got endpoints: latency-svc-5zhm2 [747.527348ms]
  Jul  6 12:44:39.939: INFO: Created: latency-svc-88d45
  Jul  6 12:44:39.982: INFO: Got endpoints: latency-svc-6qltr [750.441866ms]
  Jul  6 12:44:39.991: INFO: Created: latency-svc-crsd9
  Jul  6 12:44:40.032: INFO: Got endpoints: latency-svc-lv4m2 [749.59885ms]
  Jul  6 12:44:40.041: INFO: Created: latency-svc-7hqc9
  Jul  6 12:44:40.082: INFO: Got endpoints: latency-svc-jgzm4 [749.704634ms]
  Jul  6 12:44:40.092: INFO: Created: latency-svc-fz46n
  Jul  6 12:44:40.133: INFO: Got endpoints: latency-svc-7rn78 [751.212222ms]
  Jul  6 12:44:40.143: INFO: Created: latency-svc-2xmc5
  Jul  6 12:44:40.181: INFO: Got endpoints: latency-svc-sgmms [748.567621ms]
  Jul  6 12:44:40.190: INFO: Created: latency-svc-26sbq
  Jul  6 12:44:40.231: INFO: Got endpoints: latency-svc-87mzq [749.393182ms]
  Jul  6 12:44:40.240: INFO: Created: latency-svc-t22qn
  Jul  6 12:44:40.283: INFO: Got endpoints: latency-svc-ddssb [750.085006ms]
  Jul  6 12:44:40.292: INFO: Created: latency-svc-wr6cb
  Jul  6 12:44:40.332: INFO: Got endpoints: latency-svc-cjzjb [749.816391ms]
  Jul  6 12:44:40.344: INFO: Created: latency-svc-vxppd
  Jul  6 12:44:40.381: INFO: Got endpoints: latency-svc-k99k7 [749.206246ms]
  Jul  6 12:44:40.390: INFO: Created: latency-svc-l5dfn
  Jul  6 12:44:40.433: INFO: Got endpoints: latency-svc-88cfd [749.682582ms]
  Jul  6 12:44:40.443: INFO: Created: latency-svc-jdrll
  Jul  6 12:44:40.483: INFO: Got endpoints: latency-svc-cnknn [750.371797ms]
  Jul  6 12:44:40.491: INFO: Created: latency-svc-mjd9r
  Jul  6 12:44:40.532: INFO: Got endpoints: latency-svc-58mcb [749.696026ms]
  Jul  6 12:44:40.541: INFO: Created: latency-svc-qhljd
  Jul  6 12:44:40.582: INFO: Got endpoints: latency-svc-fzqp5 [749.294027ms]
  Jul  6 12:44:40.593: INFO: Created: latency-svc-l24pd
  Jul  6 12:44:40.631: INFO: Got endpoints: latency-svc-tmddk [746.497297ms]
  Jul  6 12:44:40.641: INFO: Created: latency-svc-l2r4l
  Jul  6 12:44:40.682: INFO: Got endpoints: latency-svc-88d45 [751.052691ms]
  Jul  6 12:44:40.691: INFO: Created: latency-svc-kngtd
  Jul  6 12:44:40.733: INFO: Got endpoints: latency-svc-crsd9 [750.208177ms]
  Jul  6 12:44:40.742: INFO: Created: latency-svc-btjgp
  Jul  6 12:44:40.782: INFO: Got endpoints: latency-svc-7hqc9 [749.532831ms]
  Jul  6 12:44:40.792: INFO: Created: latency-svc-6vh8r
  Jul  6 12:44:40.833: INFO: Got endpoints: latency-svc-fz46n [750.200552ms]
  Jul  6 12:44:40.841: INFO: Created: latency-svc-b96c2
  Jul  6 12:44:40.882: INFO: Got endpoints: latency-svc-2xmc5 [749.067666ms]
  Jul  6 12:44:40.892: INFO: Created: latency-svc-vmk5c
  Jul  6 12:44:40.933: INFO: Got endpoints: latency-svc-26sbq [752.212703ms]
  Jul  6 12:44:40.942: INFO: Created: latency-svc-wfjxf
  Jul  6 12:44:40.982: INFO: Got endpoints: latency-svc-t22qn [750.857664ms]
  Jul  6 12:44:40.991: INFO: Created: latency-svc-cmk7q
  Jul  6 12:44:41.032: INFO: Got endpoints: latency-svc-wr6cb [749.671801ms]
  Jul  6 12:44:41.043: INFO: Created: latency-svc-c8t2n
  Jul  6 12:44:41.084: INFO: Got endpoints: latency-svc-vxppd [751.26727ms]
  Jul  6 12:44:41.093: INFO: Created: latency-svc-5dxsw
  Jul  6 12:44:41.130: INFO: Got endpoints: latency-svc-l5dfn [748.915912ms]
  Jul  6 12:44:41.140: INFO: Created: latency-svc-b8w9x
  Jul  6 12:44:41.183: INFO: Got endpoints: latency-svc-jdrll [749.690198ms]
  Jul  6 12:44:41.192: INFO: Created: latency-svc-2jhxr
  Jul  6 12:44:41.233: INFO: Got endpoints: latency-svc-mjd9r [749.682995ms]
  Jul  6 12:44:41.241: INFO: Created: latency-svc-hvvlh
  Jul  6 12:44:41.283: INFO: Got endpoints: latency-svc-qhljd [751.083067ms]
  Jul  6 12:44:41.293: INFO: Created: latency-svc-mvqzd
  Jul  6 12:44:41.334: INFO: Got endpoints: latency-svc-l24pd [751.267731ms]
  Jul  6 12:44:41.345: INFO: Created: latency-svc-62dqr
  Jul  6 12:44:41.381: INFO: Got endpoints: latency-svc-l2r4l [750.504989ms]
  Jul  6 12:44:41.390: INFO: Created: latency-svc-qqw68
  Jul  6 12:44:41.433: INFO: Got endpoints: latency-svc-kngtd [751.63996ms]
  Jul  6 12:44:41.442: INFO: Created: latency-svc-6crxq
  Jul  6 12:44:41.482: INFO: Got endpoints: latency-svc-btjgp [748.848891ms]
  Jul  6 12:44:41.491: INFO: Created: latency-svc-nn7cl
  Jul  6 12:44:41.532: INFO: Got endpoints: latency-svc-6vh8r [749.749719ms]
  Jul  6 12:44:41.541: INFO: Created: latency-svc-chghm
  Jul  6 12:44:41.582: INFO: Got endpoints: latency-svc-b96c2 [749.241539ms]
  Jul  6 12:44:41.591: INFO: Created: latency-svc-zmgvt
  Jul  6 12:44:41.632: INFO: Got endpoints: latency-svc-vmk5c [749.565931ms]
  Jul  6 12:44:41.648: INFO: Created: latency-svc-5t4m6
  Jul  6 12:44:41.682: INFO: Got endpoints: latency-svc-wfjxf [749.194002ms]
  Jul  6 12:44:41.690: INFO: Created: latency-svc-58bnc
  Jul  6 12:44:41.734: INFO: Got endpoints: latency-svc-cmk7q [751.762953ms]
  Jul  6 12:44:41.743: INFO: Created: latency-svc-gtlw9
  Jul  6 12:44:41.782: INFO: Got endpoints: latency-svc-c8t2n [749.308781ms]
  Jul  6 12:44:41.791: INFO: Created: latency-svc-kzg9t
  Jul  6 12:44:41.833: INFO: Got endpoints: latency-svc-5dxsw [749.366461ms]
  Jul  6 12:44:41.843: INFO: Created: latency-svc-bsmck
  Jul  6 12:44:41.881: INFO: Got endpoints: latency-svc-b8w9x [751.045143ms]
  Jul  6 12:44:41.891: INFO: Created: latency-svc-76dr4
  Jul  6 12:44:41.933: INFO: Got endpoints: latency-svc-2jhxr [750.031151ms]
  Jul  6 12:44:41.942: INFO: Created: latency-svc-tvcl5
  Jul  6 12:44:41.982: INFO: Got endpoints: latency-svc-hvvlh [749.648007ms]
  Jul  6 12:44:41.991: INFO: Created: latency-svc-6qdxv
  Jul  6 12:44:42.033: INFO: Got endpoints: latency-svc-mvqzd [749.421856ms]
  Jul  6 12:44:42.043: INFO: Created: latency-svc-f5fs4
  Jul  6 12:44:42.082: INFO: Got endpoints: latency-svc-62dqr [748.164697ms]
  Jul  6 12:44:42.092: INFO: Created: latency-svc-4n5l9
  Jul  6 12:44:42.132: INFO: Got endpoints: latency-svc-qqw68 [750.24369ms]
  Jul  6 12:44:42.140: INFO: Created: latency-svc-8stc8
  Jul  6 12:44:42.182: INFO: Got endpoints: latency-svc-6crxq [748.988771ms]
  Jul  6 12:44:42.233: INFO: Got endpoints: latency-svc-nn7cl [751.105183ms]
  Jul  6 12:44:42.283: INFO: Got endpoints: latency-svc-chghm [751.170156ms]
  Jul  6 12:44:42.333: INFO: Got endpoints: latency-svc-zmgvt [751.284914ms]
  Jul  6 12:44:42.381: INFO: Got endpoints: latency-svc-5t4m6 [749.469739ms]
  Jul  6 12:44:42.433: INFO: Got endpoints: latency-svc-58bnc [750.62014ms]
  Jul  6 12:44:42.483: INFO: Got endpoints: latency-svc-gtlw9 [748.748263ms]
  Jul  6 12:44:42.537: INFO: Got endpoints: latency-svc-kzg9t [755.077892ms]
  Jul  6 12:44:42.582: INFO: Got endpoints: latency-svc-bsmck [748.411475ms]
  Jul  6 12:44:42.632: INFO: Got endpoints: latency-svc-76dr4 [750.445314ms]
  Jul  6 12:44:42.682: INFO: Got endpoints: latency-svc-tvcl5 [749.425917ms]
  Jul  6 12:44:42.732: INFO: Got endpoints: latency-svc-6qdxv [749.547984ms]
  Jul  6 12:44:42.783: INFO: Got endpoints: latency-svc-f5fs4 [750.037156ms]
  Jul  6 12:44:42.833: INFO: Got endpoints: latency-svc-4n5l9 [750.561541ms]
  Jul  6 12:44:42.882: INFO: Got endpoints: latency-svc-8stc8 [750.1873ms]
  Jul  6 12:44:42.882: INFO: Latencies: [16.166566ms 30.03399ms 34.905659ms 45.452931ms 58.825058ms 61.225551ms 74.708575ms 87.517239ms 93.135334ms 100.778438ms 110.20432ms 118.134344ms 119.558943ms 122.428413ms 124.84255ms 125.970156ms 126.533584ms 128.684288ms 129.444282ms 129.778361ms 129.967822ms 130.394793ms 130.985476ms 131.418071ms 131.917637ms 132.728676ms 132.862222ms 132.89533ms 133.02439ms 133.892672ms 134.317145ms 137.855257ms 138.240014ms 139.212631ms 142.557181ms 147.96646ms 191.528197ms 231.151391ms 271.364022ms 312.974647ms 356.958489ms 399.182214ms 438.123131ms 473.345121ms 522.243849ms 568.311451ms 610.275214ms 654.242554ms 692.417055ms 733.492607ms 742.202087ms 744.105758ms 746.362527ms 746.497297ms 746.5574ms 746.615104ms 747.113184ms 747.453174ms 747.488798ms 747.527348ms 747.703525ms 748.164697ms 748.173158ms 748.380934ms 748.388945ms 748.411475ms 748.449053ms 748.510953ms 748.566851ms 748.567621ms 748.584564ms 748.722067ms 748.748263ms 748.848891ms 748.915912ms 748.988771ms 749.061059ms 749.067666ms 749.104134ms 749.108165ms 749.149399ms 749.194002ms 749.206246ms 749.222784ms 749.241539ms 749.257541ms 749.26283ms 749.280006ms 749.290609ms 749.294027ms 749.308781ms 749.315425ms 749.359564ms 749.366461ms 749.393182ms 749.421856ms 749.425917ms 749.460546ms 749.463317ms 749.469739ms 749.482973ms 749.532831ms 749.544089ms 749.547984ms 749.548359ms 749.55167ms 749.556117ms 749.565931ms 749.59885ms 749.638795ms 749.648007ms 749.65817ms 749.671801ms 749.682582ms 749.682995ms 749.690198ms 749.696026ms 749.704634ms 749.733408ms 749.749719ms 749.780628ms 749.814611ms 749.816391ms 749.839534ms 749.845352ms 749.864935ms 749.903097ms 749.908384ms 749.911293ms 749.916958ms 749.952182ms 750.031151ms 750.037156ms 750.064084ms 750.06648ms 750.085006ms 750.134987ms 750.165215ms 750.1873ms 750.200552ms 750.201892ms 750.208177ms 750.2301ms 750.242391ms 750.24369ms 750.282414ms 750.317566ms 750.321755ms 750.32408ms 750.36985ms 750.371797ms 750.404835ms 750.441866ms 750.445314ms 750.464882ms 750.474546ms 750.476568ms 750.504989ms 750.510297ms 750.510888ms 750.52595ms 750.542226ms 750.561541ms 750.579686ms 750.62014ms 750.624485ms 750.653646ms 750.672663ms 750.708684ms 750.717344ms 750.814309ms 750.857664ms 750.918445ms 751.045143ms 751.052691ms 751.081859ms 751.083067ms 751.105008ms 751.105183ms 751.170156ms 751.212222ms 751.26727ms 751.267731ms 751.284914ms 751.413254ms 751.600333ms 751.63996ms 751.762953ms 751.855125ms 752.005449ms 752.212703ms 752.336389ms 752.412619ms 752.427795ms 752.475587ms 753.112529ms 753.736933ms 755.077892ms 756.867826ms 757.349467ms]
  Jul  6 12:44:42.883: INFO: 50 %ile: 749.482973ms
  Jul  6 12:44:42.883: INFO: 90 %ile: 751.212222ms
  Jul  6 12:44:42.883: INFO: 99 %ile: 756.867826ms
  Jul  6 12:44:42.883: INFO: Total sample count: 200
  Jul  6 12:44:42.883: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-961" for this suite. @ 07/06/24 12:44:42.887
• [9.756 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 07/06/24 12:44:42.896
  Jul  6 12:44:42.896: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename emptydir @ 07/06/24 12:44:42.896
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:44:42.91
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:44:42.913
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 07/06/24 12:44:42.916
  STEP: Saw pod success @ 07/06/24 12:44:46.941
  Jul  6 12:44:46.944: INFO: Trying to get logs from node ip-172-31-9-199 pod pod-47956ed8-8bbb-49ca-a6f9-cd0b9016c6d3 container test-container: <nil>
  STEP: delete the pod @ 07/06/24 12:44:46.955
  Jul  6 12:44:46.971: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6836" for this suite. @ 07/06/24 12:44:46.975
• [4.085 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 07/06/24 12:44:46.982
  Jul  6 12:44:46.982: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename projected @ 07/06/24 12:44:46.983
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:44:46.994
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:44:46.997
  STEP: Creating a pod to test downward API volume plugin @ 07/06/24 12:44:47
  STEP: Saw pod success @ 07/06/24 12:44:51.029
  Jul  6 12:44:51.032: INFO: Trying to get logs from node ip-172-31-9-199 pod downwardapi-volume-2105ba1d-1a3c-44ba-aa7a-1514ca626412 container client-container: <nil>
  STEP: delete the pod @ 07/06/24 12:44:51.037
  Jul  6 12:44:51.057: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-466" for this suite. @ 07/06/24 12:44:51.06
• [4.083 seconds]
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 07/06/24 12:44:51.066
  Jul  6 12:44:51.066: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename daemonsets @ 07/06/24 12:44:51.066
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:44:51.078
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:44:51.08
  STEP: Creating simple DaemonSet "daemon-set" @ 07/06/24 12:44:51.108
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/06/24 12:44:51.113
  Jul  6 12:44:51.118: INFO: DaemonSet pods can't tolerate node ip-172-31-76-18 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul  6 12:44:51.118: INFO: DaemonSet pods can't tolerate node ip-172-31-9-125 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul  6 12:44:51.123: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul  6 12:44:51.123: INFO: Node ip-172-31-24-251 is running 0 daemon pod, expected 1
  Jul  6 12:44:52.118: INFO: DaemonSet pods can't tolerate node ip-172-31-76-18 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul  6 12:44:52.118: INFO: DaemonSet pods can't tolerate node ip-172-31-9-125 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul  6 12:44:52.122: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jul  6 12:44:52.122: INFO: Node ip-172-31-90-155 is running 0 daemon pod, expected 1
  Jul  6 12:44:53.117: INFO: DaemonSet pods can't tolerate node ip-172-31-76-18 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul  6 12:44:53.117: INFO: DaemonSet pods can't tolerate node ip-172-31-9-125 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul  6 12:44:53.120: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jul  6 12:44:53.120: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 07/06/24 12:44:53.122
  Jul  6 12:44:53.125: INFO: Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 07/06/24 12:44:53.125
  Jul  6 12:44:53.137: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 07/06/24 12:44:53.137
  Jul  6 12:44:53.140: INFO: Observed &DaemonSet event: ADDED
  Jul  6 12:44:53.140: INFO: Observed &DaemonSet event: MODIFIED
  Jul  6 12:44:53.140: INFO: Observed &DaemonSet event: MODIFIED
  Jul  6 12:44:53.140: INFO: Observed &DaemonSet event: MODIFIED
  Jul  6 12:44:53.140: INFO: Observed &DaemonSet event: MODIFIED
  Jul  6 12:44:53.140: INFO: Found daemon set daemon-set in namespace daemonsets-31 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Jul  6 12:44:53.140: INFO: Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 07/06/24 12:44:53.14
  STEP: watching for the daemon set status to be patched @ 07/06/24 12:44:53.151
  Jul  6 12:44:53.153: INFO: Observed &DaemonSet event: ADDED
  Jul  6 12:44:53.154: INFO: Observed &DaemonSet event: MODIFIED
  Jul  6 12:44:53.154: INFO: Observed &DaemonSet event: MODIFIED
  Jul  6 12:44:53.154: INFO: Observed &DaemonSet event: MODIFIED
  Jul  6 12:44:53.154: INFO: Observed &DaemonSet event: MODIFIED
  Jul  6 12:44:53.154: INFO: Observed daemon set daemon-set in namespace daemonsets-31 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Jul  6 12:44:53.154: INFO: Observed &DaemonSet event: MODIFIED
  Jul  6 12:44:53.154: INFO: Found daemon set daemon-set in namespace daemonsets-31 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  Jul  6 12:44:53.154: INFO: Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 07/06/24 12:44:53.158
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-31, will wait for the garbage collector to delete the pods @ 07/06/24 12:44:53.158
  Jul  6 12:44:53.222: INFO: Deleting DaemonSet.extensions daemon-set took: 11.422197ms
  Jul  6 12:44:55.423: INFO: Terminating DaemonSet.extensions daemon-set pods took: 2.201062405s
  Jul  6 12:44:56.126: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul  6 12:44:56.126: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jul  6 12:44:56.132: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"18364"},"items":null}

  Jul  6 12:44:56.135: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"18364"},"items":null}

  Jul  6 12:44:56.146: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-31" for this suite. @ 07/06/24 12:44:56.149
• [5.091 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:321
  STEP: Creating a kubernetes client @ 07/06/24 12:44:56.157
  Jul  6 12:44:56.157: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename statefulset @ 07/06/24 12:44:56.158
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:44:56.175
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:44:56.177
  STEP: Creating service test in namespace statefulset-1309 @ 07/06/24 12:44:56.18
  STEP: Creating a new StatefulSet @ 07/06/24 12:44:56.185
  Jul  6 12:44:56.203: INFO: Found 0 stateful pods, waiting for 3
  Jul  6 12:45:06.201: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Jul  6 12:45:06.201: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Jul  6 12:45:06.201: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  Jul  6 12:45:06.212: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=statefulset-1309 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jul  6 12:45:06.298: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jul  6 12:45:06.298: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jul  6 12:45:06.298: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 07/06/24 12:45:16.309
  Jul  6 12:45:16.327: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 07/06/24 12:45:16.327
  STEP: Updating Pods in reverse ordinal order @ 07/06/24 12:45:26.335
  Jul  6 12:45:26.337: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=statefulset-1309 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jul  6 12:45:26.419: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jul  6 12:45:26.419: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jul  6 12:45:26.420: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jul  6 12:45:36.431: INFO: Waiting for StatefulSet statefulset-1309/ss2 to complete update
  STEP: Rolling back to a previous revision @ 07/06/24 12:45:46.436
  Jul  6 12:45:46.436: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=statefulset-1309 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jul  6 12:45:46.530: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jul  6 12:45:46.530: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jul  6 12:45:46.530: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jul  6 12:45:56.557: INFO: Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 07/06/24 12:46:06.565
  Jul  6 12:46:06.568: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=statefulset-1309 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jul  6 12:46:06.648: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jul  6 12:46:06.648: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jul  6 12:46:06.648: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jul  6 12:46:16.663: INFO: Deleting all statefulset in ns statefulset-1309
  Jul  6 12:46:16.665: INFO: Scaling statefulset ss2 to 0
  Jul  6 12:46:26.678: INFO: Waiting for statefulset status.replicas updated to 0
  Jul  6 12:46:26.681: INFO: Deleting statefulset ss2
  Jul  6 12:46:26.695: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1309" for this suite. @ 07/06/24 12:46:26.699
• [90.550 seconds]
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 07/06/24 12:46:26.707
  Jul  6 12:46:26.707: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename container-runtime @ 07/06/24 12:46:26.708
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:46:26.721
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:46:26.724
  STEP: create the container @ 07/06/24 12:46:26.726
  W0706 12:46:26.734269      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 07/06/24 12:46:26.734
  STEP: get the container status @ 07/06/24 12:46:29.753
  STEP: the container should be terminated @ 07/06/24 12:46:29.755
  STEP: the termination message should be set @ 07/06/24 12:46:29.755
  Jul  6 12:46:29.755: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 07/06/24 12:46:29.755
  Jul  6 12:46:29.771: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7479" for this suite. @ 07/06/24 12:46:29.775
• [3.074 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 07/06/24 12:46:29.782
  Jul  6 12:46:29.782: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename replication-controller @ 07/06/24 12:46:29.782
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:46:29.794
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:46:29.797
  STEP: creating a ReplicationController @ 07/06/24 12:46:29.803
  STEP: waiting for RC to be added @ 07/06/24 12:46:29.808
  STEP: waiting for available Replicas @ 07/06/24 12:46:29.808
  STEP: patching ReplicationController @ 07/06/24 12:46:31.106
  STEP: waiting for RC to be modified @ 07/06/24 12:46:31.113
  STEP: patching ReplicationController status @ 07/06/24 12:46:31.113
  STEP: waiting for RC to be modified @ 07/06/24 12:46:31.118
  STEP: waiting for available Replicas @ 07/06/24 12:46:31.12
  STEP: fetching ReplicationController status @ 07/06/24 12:46:31.126
  STEP: patching ReplicationController scale @ 07/06/24 12:46:31.129
  STEP: waiting for RC to be modified @ 07/06/24 12:46:31.135
  STEP: waiting for ReplicationController's scale to be the max amount @ 07/06/24 12:46:31.135
  STEP: fetching ReplicationController; ensuring that it's patched @ 07/06/24 12:46:32.229
  STEP: updating ReplicationController status @ 07/06/24 12:46:32.231
  STEP: waiting for RC to be modified @ 07/06/24 12:46:32.236
  STEP: listing all ReplicationControllers @ 07/06/24 12:46:32.236
  STEP: checking that ReplicationController has expected values @ 07/06/24 12:46:32.241
  STEP: deleting ReplicationControllers by collection @ 07/06/24 12:46:32.241
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 07/06/24 12:46:32.249
  Jul  6 12:46:32.291: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0706 12:46:32.292064      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-7764" for this suite. @ 07/06/24 12:46:32.294
• [2.519 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:76
  STEP: Creating a kubernetes client @ 07/06/24 12:46:32.301
  Jul  6 12:46:32.301: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename var-expansion @ 07/06/24 12:46:32.301
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:46:32.314
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:46:32.318
  STEP: Creating a pod to test substitution in container's command @ 07/06/24 12:46:32.32
  E0706 12:46:33.292429      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:46:34.293329      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/06/24 12:46:34.338
  Jul  6 12:46:34.340: INFO: Trying to get logs from node ip-172-31-24-251 pod var-expansion-e497c1e0-e5af-4813-a56f-31196a25ed60 container dapi-container: <nil>
  STEP: delete the pod @ 07/06/24 12:46:34.355
  Jul  6 12:46:34.370: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7504" for this suite. @ 07/06/24 12:46:34.374
• [2.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1031
  STEP: Creating a kubernetes client @ 07/06/24 12:46:34.38
  Jul  6 12:46:34.380: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename statefulset @ 07/06/24 12:46:34.38
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:46:34.394
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:46:34.396
  STEP: Creating service test in namespace statefulset-9537 @ 07/06/24 12:46:34.399
  STEP: Creating statefulset ss in namespace statefulset-9537 @ 07/06/24 12:46:34.408
  Jul  6 12:46:34.419: INFO: Found 0 stateful pods, waiting for 1
  E0706 12:46:35.293982      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:46:36.294238      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:46:37.294319      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:46:38.294612      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:46:39.294721      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:46:40.294791      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:46:41.295644      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:46:42.295739      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:46:43.295817      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:46:44.295916      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 12:46:44.418: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 07/06/24 12:46:44.425
  STEP: Getting /status @ 07/06/24 12:46:44.432
  Jul  6 12:46:44.436: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 07/06/24 12:46:44.436
  Jul  6 12:46:44.444: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 07/06/24 12:46:44.444
  Jul  6 12:46:44.446: INFO: Observed &StatefulSet event: ADDED
  Jul  6 12:46:44.446: INFO: Found Statefulset ss in namespace statefulset-9537 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jul  6 12:46:44.446: INFO: Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 07/06/24 12:46:44.446
  Jul  6 12:46:44.446: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Jul  6 12:46:44.452: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 07/06/24 12:46:44.452
  Jul  6 12:46:44.454: INFO: Observed &StatefulSet event: ADDED
  Jul  6 12:46:44.454: INFO: Deleting all statefulset in ns statefulset-9537
  Jul  6 12:46:44.458: INFO: Scaling statefulset ss to 0
  E0706 12:46:45.296589      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:46:46.296737      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:46:47.296933      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:46:48.297172      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:46:49.297542      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:46:50.297628      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:46:51.297755      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:46:52.298352      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:46:53.298532      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:46:54.298624      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 12:46:54.474: INFO: Waiting for statefulset status.replicas updated to 0
  Jul  6 12:46:54.479: INFO: Deleting statefulset ss
  Jul  6 12:46:54.489: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9537" for this suite. @ 07/06/24 12:46:54.493
• [20.119 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 07/06/24 12:46:54.499
  Jul  6 12:46:54.499: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename dns @ 07/06/24 12:46:54.5
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:46:54.516
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:46:54.519
  STEP: Creating a test headless service @ 07/06/24 12:46:54.521
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-3901.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-3901.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 07/06/24 12:46:54.526
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-3901.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-3901.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 07/06/24 12:46:54.526
  STEP: creating a pod to probe DNS @ 07/06/24 12:46:54.527
  STEP: submitting the pod to kubernetes @ 07/06/24 12:46:54.527
  E0706 12:46:55.299574      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:46:56.299669      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/06/24 12:46:56.55
  STEP: looking for the results for each expected name from probers @ 07/06/24 12:46:56.553
  Jul  6 12:46:56.568: INFO: DNS probes using dns-3901/dns-test-e7e01cdc-e9a8-4740-af80-9ea085521ad2 succeeded

  STEP: deleting the pod @ 07/06/24 12:46:56.568
  STEP: deleting the test headless service @ 07/06/24 12:46:56.587
  Jul  6 12:46:56.596: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3901" for this suite. @ 07/06/24 12:46:56.601
• [2.108 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 07/06/24 12:46:56.607
  Jul  6 12:46:56.607: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename gc @ 07/06/24 12:46:56.607
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:46:56.62
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:46:56.623
  STEP: create the deployment @ 07/06/24 12:46:56.625
  W0706 12:46:56.630967      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 07/06/24 12:46:56.631
  STEP: delete the deployment @ 07/06/24 12:46:57.136
  STEP: wait for all rs to be garbage collected @ 07/06/24 12:46:57.142
  STEP: expected 0 pods, got 2 pods @ 07/06/24 12:46:57.153
  E0706 12:46:57.300577      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 07/06/24 12:46:57.65
  W0706 12:46:57.656491      21 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Jul  6 12:46:57.656: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jul  6 12:46:57.656: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7334" for this suite. @ 07/06/24 12:46:57.662
• [1.064 seconds]
------------------------------
S
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 07/06/24 12:46:57.671
  Jul  6 12:46:57.671: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename daemonsets @ 07/06/24 12:46:57.671
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:46:57.684
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:46:57.686
  STEP: Creating simple DaemonSet "daemon-set" @ 07/06/24 12:46:57.706
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/06/24 12:46:57.712
  Jul  6 12:46:57.715: INFO: DaemonSet pods can't tolerate node ip-172-31-76-18 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul  6 12:46:57.715: INFO: DaemonSet pods can't tolerate node ip-172-31-9-125 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul  6 12:46:57.717: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul  6 12:46:57.717: INFO: Node ip-172-31-24-251 is running 0 daemon pod, expected 1
  E0706 12:46:58.301370      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 12:46:58.716: INFO: DaemonSet pods can't tolerate node ip-172-31-76-18 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul  6 12:46:58.716: INFO: DaemonSet pods can't tolerate node ip-172-31-9-125 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul  6 12:46:58.720: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul  6 12:46:58.720: INFO: Node ip-172-31-24-251 is running 0 daemon pod, expected 1
  E0706 12:46:59.302301      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 12:46:59.717: INFO: DaemonSet pods can't tolerate node ip-172-31-76-18 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul  6 12:46:59.717: INFO: DaemonSet pods can't tolerate node ip-172-31-9-125 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul  6 12:46:59.720: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jul  6 12:46:59.720: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 07/06/24 12:46:59.722
  Jul  6 12:46:59.737: INFO: DaemonSet pods can't tolerate node ip-172-31-76-18 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul  6 12:46:59.737: INFO: DaemonSet pods can't tolerate node ip-172-31-9-125 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul  6 12:46:59.740: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jul  6 12:46:59.740: INFO: Node ip-172-31-24-251 is running 0 daemon pod, expected 1
  E0706 12:47:00.303174      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 12:47:00.737: INFO: DaemonSet pods can't tolerate node ip-172-31-76-18 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul  6 12:47:00.737: INFO: DaemonSet pods can't tolerate node ip-172-31-9-125 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul  6 12:47:00.740: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jul  6 12:47:00.740: INFO: Node ip-172-31-24-251 is running 0 daemon pod, expected 1
  E0706 12:47:01.303609      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 12:47:01.736: INFO: DaemonSet pods can't tolerate node ip-172-31-76-18 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul  6 12:47:01.736: INFO: DaemonSet pods can't tolerate node ip-172-31-9-125 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul  6 12:47:01.739: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jul  6 12:47:01.739: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 07/06/24 12:47:01.744
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8541, will wait for the garbage collector to delete the pods @ 07/06/24 12:47:01.744
  Jul  6 12:47:01.810: INFO: Deleting DaemonSet.extensions daemon-set took: 12.831691ms
  Jul  6 12:47:01.911: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.298424ms
  E0706 12:47:02.304441      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 12:47:03.215: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul  6 12:47:03.215: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jul  6 12:47:03.218: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"19520"},"items":null}

  Jul  6 12:47:03.220: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"19520"},"items":null}

  Jul  6 12:47:03.230: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8541" for this suite. @ 07/06/24 12:47:03.234
• [5.569 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 07/06/24 12:47:03.24
  Jul  6 12:47:03.240: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename containers @ 07/06/24 12:47:03.241
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:47:03.254
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:47:03.257
  STEP: Creating a pod to test override all @ 07/06/24 12:47:03.259
  E0706 12:47:03.305018      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:47:04.305263      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:47:05.306025      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:47:06.306167      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/06/24 12:47:07.281
  Jul  6 12:47:07.285: INFO: Trying to get logs from node ip-172-31-24-251 pod client-containers-e8503588-3428-497b-8f0b-732d77e00a3a container agnhost-container: <nil>
  STEP: delete the pod @ 07/06/24 12:47:07.291
  Jul  6 12:47:07.305: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0706 12:47:07.306801      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "containers-4184" for this suite. @ 07/06/24 12:47:07.309
• [4.074 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 07/06/24 12:47:07.314
  Jul  6 12:47:07.314: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename disruption @ 07/06/24 12:47:07.314
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:47:07.33
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:47:07.333
  STEP: Creating a kubernetes client @ 07/06/24 12:47:07.336
  Jul  6 12:47:07.336: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename disruption-2 @ 07/06/24 12:47:07.336
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:47:07.35
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:47:07.352
  STEP: Waiting for the pdb to be processed @ 07/06/24 12:47:07.358
  E0706 12:47:08.307243      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:47:09.307619      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 07/06/24 12:47:09.369
  STEP: Waiting for the pdb to be processed @ 07/06/24 12:47:09.378
  E0706 12:47:10.307820      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:47:11.307898      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: listing a collection of PDBs across all namespaces @ 07/06/24 12:47:11.382
  STEP: listing a collection of PDBs in namespace disruption-2820 @ 07/06/24 12:47:11.385
  STEP: deleting a collection of PDBs @ 07/06/24 12:47:11.387
  STEP: Waiting for the PDB collection to be deleted @ 07/06/24 12:47:11.4
  Jul  6 12:47:11.402: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-6579" for this suite. @ 07/06/24 12:47:11.404
  Jul  6 12:47:11.410: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2820" for this suite. @ 07/06/24 12:47:11.413
• [4.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 07/06/24 12:47:11.418
  Jul  6 12:47:11.418: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename projected @ 07/06/24 12:47:11.419
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:47:11.431
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:47:11.434
  STEP: Creating the pod @ 07/06/24 12:47:11.436
  E0706 12:47:12.308001      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:47:13.308091      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 12:47:13.973: INFO: Successfully updated pod "labelsupdate89f701fe-13d3-448f-862b-f611fef7682e"
  E0706 12:47:14.309092      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:47:15.310038      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:47:16.310683      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:47:17.310885      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 12:47:17.996: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8325" for this suite. @ 07/06/24 12:47:18
• [6.588 seconds]
------------------------------
S
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 07/06/24 12:47:18.006
  Jul  6 12:47:18.006: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename secrets @ 07/06/24 12:47:18.007
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:47:18.021
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:47:18.025
  STEP: Creating secret with name secret-test-b68fc43d-f9c7-41ae-9d05-d5c38b90cf4b @ 07/06/24 12:47:18.027
  STEP: Creating a pod to test consume secrets @ 07/06/24 12:47:18.033
  E0706 12:47:18.311548      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:47:19.311603      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:47:20.312634      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:47:21.312882      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/06/24 12:47:22.052
  Jul  6 12:47:22.056: INFO: Trying to get logs from node ip-172-31-24-251 pod pod-secrets-8b410680-6956-40aa-810c-9b27bd8dd6f5 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/06/24 12:47:22.062
  Jul  6 12:47:22.074: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5930" for this suite. @ 07/06/24 12:47:22.078
• [4.077 seconds]
------------------------------
SSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 07/06/24 12:47:22.083
  Jul  6 12:47:22.083: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename sched-preemption @ 07/06/24 12:47:22.084
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:47:22.097
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:47:22.1
  Jul  6 12:47:22.114: INFO: Waiting up to 1m0s for all nodes to be ready
  E0706 12:47:22.312942      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:47:23.312960      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:47:24.313871      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:47:25.313994      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:47:26.314837      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:47:27.315591      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:47:28.315701      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:47:29.315804      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:47:30.316331      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:47:31.316414      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:47:32.317037      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:47:33.317837      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:47:34.317961      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:47:35.318206      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:47:36.318833      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:47:37.318900      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:47:38.319007      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:47:39.319089      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:47:40.319604      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:47:41.319669      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:47:42.319904      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:47:43.319995      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:47:44.320836      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:47:45.320924      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:47:46.321325      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:47:47.322222      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:47:48.323289      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:47:49.323881      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:47:50.324531      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:47:51.325020      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:47:52.325165      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:47:53.325335      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:47:54.325718      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:47:55.326463      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:47:56.327370      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:47:57.327476      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:47:58.328094      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:47:59.328311      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:48:00.329277      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:48:01.329636      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:48:02.330271      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:48:03.330363      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:48:04.330477      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:48:05.330867      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:48:06.331066      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:48:07.331054      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:48:08.332077      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:48:09.332332      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:48:10.332415      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:48:11.332522      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:48:12.332757      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:48:13.332831      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:48:14.333792      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:48:15.333887      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:48:16.333977      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:48:17.334147      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:48:18.335060      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:48:19.335599      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:48:20.336437      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:48:21.336579      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 12:48:22.120: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 07/06/24 12:48:22.123
  Jul  6 12:48:22.143: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Jul  6 12:48:22.151: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Jul  6 12:48:22.167: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Jul  6 12:48:22.173: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Jul  6 12:48:22.191: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Jul  6 12:48:22.199: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 07/06/24 12:48:22.2
  E0706 12:48:22.337345      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:48:23.337500      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 07/06/24 12:48:24.226
  E0706 12:48:24.338154      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:48:25.339072      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:48:26.340003      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:48:27.340127      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 12:48:28.322: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-2672" for this suite. @ 07/06/24 12:48:28.325
• [66.247 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 07/06/24 12:48:28.331
  Jul  6 12:48:28.331: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename replicaset @ 07/06/24 12:48:28.331
  E0706 12:48:28.340769      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:48:28.343
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:48:28.346
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 07/06/24 12:48:28.349
  Jul  6 12:48:28.357: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0706 12:48:29.341038      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:48:30.341225      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:48:31.341408      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:48:32.341509      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:48:33.341599      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 12:48:33.363: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/06/24 12:48:33.363
  STEP: getting scale subresource @ 07/06/24 12:48:33.369
  STEP: updating a scale subresource @ 07/06/24 12:48:33.378
  STEP: verifying the replicaset Spec.Replicas was modified @ 07/06/24 12:48:33.386
  STEP: Patch a scale subresource @ 07/06/24 12:48:33.389
  Jul  6 12:48:33.407: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1963" for this suite. @ 07/06/24 12:48:33.419
• [5.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 07/06/24 12:48:33.433
  Jul  6 12:48:33.433: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename sysctl @ 07/06/24 12:48:33.434
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:48:33.452
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:48:33.456
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 07/06/24 12:48:33.46
  STEP: Watching for error events or started pod @ 07/06/24 12:48:33.468
  E0706 12:48:34.342138      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:48:35.342951      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for pod completion @ 07/06/24 12:48:35.472
  E0706 12:48:36.343593      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:48:37.343668      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Checking that the pod succeeded @ 07/06/24 12:48:37.482
  STEP: Getting logs from the pod @ 07/06/24 12:48:37.482
  STEP: Checking that the sysctl is actually updated @ 07/06/24 12:48:37.487
  Jul  6 12:48:37.487: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-7822" for this suite. @ 07/06/24 12:48:37.491
• [4.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 07/06/24 12:48:37.498
  Jul  6 12:48:37.498: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename aggregator @ 07/06/24 12:48:37.499
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:48:37.51
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:48:37.512
  Jul  6 12:48:37.515: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Registering the sample API server. @ 07/06/24 12:48:37.515
  Jul  6 12:48:37.813: INFO: Found ClusterRoles; assuming RBAC is enabled.
  Jul  6 12:48:37.837: INFO: deployment "sample-apiserver-deployment" doesn't have the required revision set
  E0706 12:48:38.344564      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:48:39.344760      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 12:48:39.875: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 6, 12, 48, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 6, 12, 48, 37, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 6, 12, 48, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 6, 12, 48, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0706 12:48:40.344868      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:48:41.344958      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 12:48:41.880: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 6, 12, 48, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 6, 12, 48, 37, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 6, 12, 48, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 6, 12, 48, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0706 12:48:42.345383      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:48:43.345491      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 12:48:43.881: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 6, 12, 48, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 6, 12, 48, 37, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 6, 12, 48, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 6, 12, 48, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0706 12:48:44.345779      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:48:45.345898      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 12:48:45.879: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 6, 12, 48, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 6, 12, 48, 37, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 6, 12, 48, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 6, 12, 48, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0706 12:48:46.346700      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:48:47.347641      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 12:48:47.879: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 6, 12, 48, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 6, 12, 48, 37, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 6, 12, 48, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 6, 12, 48, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0706 12:48:48.347728      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:48:49.347822      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 12:48:49.882: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 6, 12, 48, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 6, 12, 48, 37, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 6, 12, 48, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 6, 12, 48, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0706 12:48:50.348633      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:48:51.348762      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 12:48:51.879: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 6, 12, 48, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 6, 12, 48, 37, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 6, 12, 48, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 6, 12, 48, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0706 12:48:52.348872      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:48:53.348939      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 12:48:53.879: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 6, 12, 48, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 6, 12, 48, 37, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 6, 12, 48, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 6, 12, 48, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0706 12:48:54.349097      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:48:55.349170      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 12:48:55.880: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 6, 12, 48, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 6, 12, 48, 37, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 6, 12, 48, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 6, 12, 48, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0706 12:48:56.349508      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:48:57.349856      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 12:48:57.880: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 6, 12, 48, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 6, 12, 48, 37, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 6, 12, 48, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 6, 12, 48, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0706 12:48:58.350846      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:48:59.350937      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 12:48:59.879: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 6, 12, 48, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 6, 12, 48, 37, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 6, 12, 48, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 6, 12, 48, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0706 12:49:00.351616      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:49:01.351712      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 12:49:01.881: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 6, 12, 48, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 6, 12, 48, 37, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 6, 12, 48, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 6, 12, 48, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0706 12:49:02.351875      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:49:03.357586      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 12:49:03.995: INFO: Waited 111.408076ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 07/06/24 12:49:04.026
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 07/06/24 12:49:04.028
  STEP: List APIServices @ 07/06/24 12:49:04.035
  Jul  6 12:49:04.038: INFO: Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 07/06/24 12:49:04.038
  Jul  6 12:49:04.049: INFO: APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 07/06/24 12:49:04.049
  Jul  6 12:49:04.057: INFO: updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2024, time.July, 6, 12, 49, 3, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 07/06/24 12:49:04.057
  Jul  6 12:49:04.061: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2024-07-06 12:49:03 +0000 UTC Passed all checks passed}
  Jul  6 12:49:04.061: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jul  6 12:49:04.061: INFO: Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 07/06/24 12:49:04.061
  Jul  6 12:49:04.070: INFO: Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-753705416" @ 07/06/24 12:49:04.07
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 07/06/24 12:49:04.08
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 07/06/24 12:49:04.085
  STEP: Patch APIService Status @ 07/06/24 12:49:04.089
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 07/06/24 12:49:04.096
  Jul  6 12:49:04.098: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2024-07-06 12:49:03 +0000 UTC Passed all checks passed}
  Jul  6 12:49:04.098: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jul  6 12:49:04.098: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  Jul  6 12:49:04.098: INFO: Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 07/06/24 12:49:04.098
  STEP: Confirm that the generated APIService has been deleted @ 07/06/24 12:49:04.108
  Jul  6 12:49:04.108: INFO: Requesting list of APIServices to confirm quantity
  Jul  6 12:49:04.113: INFO: Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  Jul  6 12:49:04.113: INFO: APIService v1alpha1.wardle.example.com has been deleted.
  Jul  6 12:49:04.209: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-5462" for this suite. @ 07/06/24 12:49:04.215
• [26.723 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1373
  STEP: Creating a kubernetes client @ 07/06/24 12:49:04.221
  Jul  6 12:49:04.221: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename kubectl @ 07/06/24 12:49:04.222
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:49:04.236
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:49:04.239
  STEP: validating cluster-info @ 07/06/24 12:49:04.243
  Jul  6 12:49:04.243: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-5758 cluster-info'
  Jul  6 12:49:04.284: INFO: stderr: ""
  Jul  6 12:49:04.284: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.152.183.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  Jul  6 12:49:04.284: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5758" for this suite. @ 07/06/24 12:49:04.287
• [0.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:46
  STEP: Creating a kubernetes client @ 07/06/24 12:49:04.3
  Jul  6 12:49:04.300: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename configmap @ 07/06/24 12:49:04.301
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:49:04.313
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:49:04.315
  STEP: Creating configMap configmap-2094/configmap-test-74088d19-c2e0-49d0-aa5b-19add7310fda @ 07/06/24 12:49:04.318
  STEP: Creating a pod to test consume configMaps @ 07/06/24 12:49:04.321
  E0706 12:49:04.357722      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:49:05.357874      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:49:06.357999      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:49:07.358141      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/06/24 12:49:08.343
  Jul  6 12:49:08.346: INFO: Trying to get logs from node ip-172-31-24-251 pod pod-configmaps-cebf54c7-94d4-4939-833a-74df6c9f33e8 container env-test: <nil>
  STEP: delete the pod @ 07/06/24 12:49:08.352
  E0706 12:49:08.358344      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 12:49:08.368: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2094" for this suite. @ 07/06/24 12:49:08.372
• [4.078 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 07/06/24 12:49:08.379
  Jul  6 12:49:08.379: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename replicaset @ 07/06/24 12:49:08.379
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:49:08.39
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:49:08.393
  Jul  6 12:49:08.406: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0706 12:49:09.358590      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:49:10.358683      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:49:11.358796      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:49:12.358898      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:49:13.359334      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 12:49:13.411: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/06/24 12:49:13.411
  STEP: Scaling up "test-rs" replicaset @ 07/06/24 12:49:13.411
  Jul  6 12:49:13.419: INFO: Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 07/06/24 12:49:13.419
  Jul  6 12:49:13.427: INFO: observed ReplicaSet test-rs in namespace replicaset-9533 with ReadyReplicas 1, AvailableReplicas 1
  Jul  6 12:49:13.445: INFO: observed ReplicaSet test-rs in namespace replicaset-9533 with ReadyReplicas 1, AvailableReplicas 1
  Jul  6 12:49:13.462: INFO: observed ReplicaSet test-rs in namespace replicaset-9533 with ReadyReplicas 1, AvailableReplicas 1
  Jul  6 12:49:13.470: INFO: observed ReplicaSet test-rs in namespace replicaset-9533 with ReadyReplicas 1, AvailableReplicas 1
  Jul  6 12:49:14.106: INFO: observed ReplicaSet test-rs in namespace replicaset-9533 with ReadyReplicas 2, AvailableReplicas 2
  E0706 12:49:14.360025      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 12:49:14.497: INFO: observed Replicaset test-rs in namespace replicaset-9533 with ReadyReplicas 3 found true
  Jul  6 12:49:14.497: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9533" for this suite. @ 07/06/24 12:49:14.5
• [6.129 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:115
  STEP: Creating a kubernetes client @ 07/06/24 12:49:14.508
  Jul  6 12:49:14.508: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename var-expansion @ 07/06/24 12:49:14.509
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:49:14.523
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:49:14.526
  STEP: Creating a pod to test substitution in volume subpath @ 07/06/24 12:49:14.528
  E0706 12:49:15.360832      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:49:16.360900      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:49:17.361010      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:49:18.361227      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/06/24 12:49:18.554
  Jul  6 12:49:18.558: INFO: Trying to get logs from node ip-172-31-24-251 pod var-expansion-cf515cd6-c290-40a0-91f5-25bafaeef32d container dapi-container: <nil>
  STEP: delete the pod @ 07/06/24 12:49:18.564
  Jul  6 12:49:18.580: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-749" for this suite. @ 07/06/24 12:49:18.583
• [4.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3154
  STEP: Creating a kubernetes client @ 07/06/24 12:49:18.589
  Jul  6 12:49:18.589: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename services @ 07/06/24 12:49:18.589
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:49:18.602
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:49:18.607
  STEP: creating an Endpoint @ 07/06/24 12:49:18.612
  STEP: waiting for available Endpoint @ 07/06/24 12:49:18.617
  STEP: listing all Endpoints @ 07/06/24 12:49:18.618
  STEP: updating the Endpoint @ 07/06/24 12:49:18.622
  STEP: fetching the Endpoint @ 07/06/24 12:49:18.627
  STEP: patching the Endpoint @ 07/06/24 12:49:18.629
  STEP: fetching the Endpoint @ 07/06/24 12:49:18.636
  STEP: deleting the Endpoint by Collection @ 07/06/24 12:49:18.639
  STEP: waiting for Endpoint deletion @ 07/06/24 12:49:18.646
  STEP: fetching the Endpoint @ 07/06/24 12:49:18.647
  Jul  6 12:49:18.650: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1344" for this suite. @ 07/06/24 12:49:18.653
• [0.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 07/06/24 12:49:18.659
  Jul  6 12:49:18.659: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename deployment @ 07/06/24 12:49:18.659
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:49:18.671
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:49:18.675
  Jul  6 12:49:18.678: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
  Jul  6 12:49:18.685: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0706 12:49:19.361607      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:49:20.361939      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:49:21.362009      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:49:22.362180      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:49:23.362846      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 12:49:23.690: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/06/24 12:49:23.69
  Jul  6 12:49:23.690: INFO: Creating deployment "test-rolling-update-deployment"
  Jul  6 12:49:23.696: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  Jul  6 12:49:23.703: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  E0706 12:49:24.362980      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:49:25.363075      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 12:49:25.710: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
  Jul  6 12:49:25.713: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  Jul  6 12:49:25.721: INFO: Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3976",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "419edf2d-2a3c-4084-a7a7-d690bcf9e787",
      ResourceVersion: (string) (len=5) "20612",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855866963,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855866963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855866964,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855866963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855866963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855866964,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855866963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-7ddb77f68b\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jul  6 12:49:25.726: INFO: New ReplicaSet "test-rolling-update-deployment-7ddb77f68b" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-7ddb77f68b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3976",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b7740774-1962-4094-a860-6b5483e98442",
      ResourceVersion: (string) (len=5) "20602",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855866963,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "419edf2d-2a3c-4084-a7a7-d690bcf9e787",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855866963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 31 39 65 64 66  32 64 2d 32 61 33 63 2d  |\"419edf2d-2a3c-|
              00000120  34 30 38 34 2d 61 37 61  37 2d 64 36 39 30 62 63  |4084-a7a7-d690bc|
              00000130  66 39 65 37 38 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |f9e787\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855866964,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jul  6 12:49:25.727: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
  Jul  6 12:49:25.727: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3976",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a587bc66-eb6e-4c5f-9722-ee5e5ba8d42e",
      ResourceVersion: (string) (len=5) "20611",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855866958,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "419edf2d-2a3c-4084-a7a7-d690bcf9e787",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855866958,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855866964,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 34 31 39 65 64 66 32  |"uid\":\"419edf2|
              000000b0  64 2d 32 61 33 63 2d 34  30 38 34 2d 61 37 61 37  |d-2a3c-4084-a7a7|
              000000c0  2d 64 36 39 30 62 63 66  39 65 37 38 37 5c 22 7d  |-d690bcf9e787\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855866964,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jul  6 12:49:25.731: INFO: Pod "test-rolling-update-deployment-7ddb77f68b-gn9wv" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-7ddb77f68b-gn9wv",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-7ddb77f68b-",
      Namespace: (string) (len=15) "deployment-3976",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "73c1a0ff-d12b-4f1c-a565-14fced3f35dc",
      ResourceVersion: (string) (len=5) "20601",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855866963,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b",
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-7ddb77f68b",
          UID: (types.UID) (len=36) "b7740774-1962-4094-a860-6b5483e98442",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855866963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 37  37 34 30 37 37 34 2d 31  |d\":\"b7740774-1|
              00000090  39 36 32 2d 34 30 39 34  2d 61 38 36 30 2d 36 62  |962-4094-a860-6b|
              000000a0  35 34 38 33 65 39 38 34  34 32 5c 22 7d 22 3a 7b  |5483e98442\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855866964,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 31  32 2e 37 34 5c 22 7d 22  |2.168.112.74\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-z69d7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-z69d7",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-9-199",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855866964,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855866963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855866964,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855866964,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855866963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.9.199",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.9.199"
        }
      },
      PodIP: (string) (len=14) "192.168.112.74",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.112.74"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855866963,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63855866964,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253",
          ContainerID: (string) (len=77) "containerd://57ade8e5862b65ce14026bb9dc9dc4573592932135cac1d0c07348671de7408c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul  6 12:49:25.732: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3976" for this suite. @ 07/06/24 12:49:25.735
• [7.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:155
  STEP: Creating a kubernetes client @ 07/06/24 12:49:25.746
  Jul  6 12:49:25.746: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename var-expansion @ 07/06/24 12:49:25.747
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:49:25.762
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:49:25.764
  E0706 12:49:26.363197      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:49:27.363330      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 12:49:27.785: INFO: Deleting pod "var-expansion-ca6d027c-0114-4c01-925f-0be05d233fc4" in namespace "var-expansion-5075"
  Jul  6 12:49:27.794: INFO: Wait up to 5m0s for pod "var-expansion-ca6d027c-0114-4c01-925f-0be05d233fc4" to be fully deleted
  E0706 12:49:28.363685      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:49:29.363969      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 12:49:29.802: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5075" for this suite. @ 07/06/24 12:49:29.806
• [4.070 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 07/06/24 12:49:29.815
  Jul  6 12:49:29.815: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename endpointslice @ 07/06/24 12:49:29.815
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:49:29.829
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:49:29.831
  Jul  6 12:49:29.881: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-8050" for this suite. @ 07/06/24 12:49:29.884
• [0.078 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 07/06/24 12:49:29.893
  Jul  6 12:49:29.893: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename chunking @ 07/06/24 12:49:29.894
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:49:29.907
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:49:29.911
  STEP: creating a large number of resources @ 07/06/24 12:49:29.913
  E0706 12:49:30.364327      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:49:31.364649      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:49:32.365335      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:49:33.365965      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:49:34.366212      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:49:35.367231      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:49:36.367840      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:49:37.368566      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:49:38.369408      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:49:39.370300      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:49:40.370971      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:49:41.371152      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:49:42.371971      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:49:43.373783      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:49:44.373849      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:49:45.374792      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:49:46.375714      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:49:47.376220      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the first page @ 07/06/24 12:49:47.6
  Jul  6 12:49:47.648: INFO: Retrieved 40/40 results with rv 21150 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjExNTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page until the token expires @ 07/06/24 12:49:47.648
  E0706 12:49:48.377224      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:49:49.377484      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:49:50.377562      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:49:51.377657      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:49:52.377783      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:49:53.377883      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:49:54.378007      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:49:55.378831      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:49:56.378930      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:49:57.379040      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:49:58.379099      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:49:59.379207      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:50:00.379308      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:50:01.379404      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:50:02.379485      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:50:03.379884      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:50:04.379999      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:50:05.380199      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:50:06.380282      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:50:07.380839      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 12:50:07.653: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjExNTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0706 12:50:08.381462      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:50:09.381532      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:50:10.381708      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:50:11.381820      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:50:12.382027      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:50:13.382625      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:50:14.382706      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:50:15.383402      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:50:16.383790      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:50:17.383973      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:50:18.384162      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:50:19.384277      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:50:20.385243      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:50:21.385267      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:50:22.385878      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:50:23.386057      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:50:24.386716      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:50:25.387074      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:50:26.387544      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:50:27.387639      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 12:50:27.654: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjExNTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0706 12:50:28.387731      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:50:29.387822      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:50:30.387985      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:50:31.388077      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:50:32.388169      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:50:33.389235      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:50:34.389410      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:50:35.390184      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:50:36.390239      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:50:37.390343      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:50:38.390532      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:50:39.390560      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:50:40.390647      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:50:41.390731      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:50:42.391603      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:50:43.392537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:50:44.393385      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:50:45.393499      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:50:46.393713      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:50:47.393836      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 12:50:47.653: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjExNTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0706 12:50:48.394272      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:50:49.394394      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:50:50.394542      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:50:51.394645      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:50:52.395623      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:50:53.397132      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:50:54.397195      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:50:55.397284      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:50:56.397411      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:50:57.397722      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:50:58.397928      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:50:59.398043      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:51:00.398863      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:51:01.398958      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:51:02.399051      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:51:03.399771      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:51:04.400052      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:51:05.400268      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:51:06.400686      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:51:07.400872      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 12:51:07.654: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjExNTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0706 12:51:08.401080      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:51:09.401271      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:51:10.401400      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:51:11.401452      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:51:12.401718      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:51:13.401867      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:51:14.401961      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:51:15.402057      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:51:16.402118      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:51:17.402286      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:51:18.403047      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:51:19.403141      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:51:20.403670      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:51:21.403760      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:51:22.404708      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:51:23.405000      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:51:24.405231      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:51:25.406135      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:51:26.406667      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:51:27.406642      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 12:51:27.653: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjExNTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0706 12:51:28.407627      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:51:29.407905      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:51:30.408065      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:51:31.408240      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:51:32.408865      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:51:33.409706      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:51:34.409882      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:51:35.410066      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:51:36.410525      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:51:37.410625      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:51:38.411629      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:51:39.411819      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:51:40.411911      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:51:41.412083      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:51:42.412969      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:51:43.413062      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:51:44.413485      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:51:45.414304      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:51:46.414534      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:51:47.414629      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 12:51:47.652: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjExNTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0706 12:51:48.415599      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:51:49.415695      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:51:50.415912      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:51:51.415998      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:51:52.416174      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:51:53.416344      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:51:54.416434      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:51:55.417429      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:51:56.417601      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:51:57.417787      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:51:58.417972      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:51:59.418184      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:52:00.418386      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:52:01.418532      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:52:02.419601      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:52:03.419872      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:52:04.420007      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:52:05.420080      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:52:06.420391      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:52:07.420545      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 12:52:07.653: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjExNTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0706 12:52:08.421392      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:52:09.421638      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:52:10.421829      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:52:11.422132      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:52:12.422520      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:52:13.423594      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:52:14.423745      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:52:15.423831      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:52:16.423927      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:52:17.424103      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:52:18.424373      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:52:19.424474      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:52:20.424644      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:52:21.424742      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:52:22.425019      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:52:23.425385      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:52:24.425487      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:52:25.425767      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:52:26.425888      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:52:27.426073      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 12:52:27.653: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjExNTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0706 12:52:28.426179      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:52:29.426271      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:52:30.426476      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:52:31.426535      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:52:32.426579      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:52:33.427616      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:52:34.427718      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:52:35.427813      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:52:36.427915      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:52:37.428086      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:52:38.428263      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:52:39.428413      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:52:40.428593      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:52:41.428703      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:52:42.428979      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:52:43.429159      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:52:44.429444      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:52:45.430213      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:52:46.430521      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:52:47.430619      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 12:52:47.654: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjExNTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0706 12:52:48.430901      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:52:49.430939      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:52:50.431043      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:52:51.431143      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:52:52.431624      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:52:53.431718      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:52:54.431889      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:52:55.432094      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:52:56.432289      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:52:57.432630      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:52:58.432734      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:52:59.432815      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:53:00.433304      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:53:01.433372      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:53:02.433479      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:53:03.433751      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:53:04.434150      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:53:05.434238      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:53:06.434579      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:53:07.434658      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 12:53:07.653: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjExNTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0706 12:53:08.435587      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:53:09.435831      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:53:10.435977      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:53:11.436579      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:53:12.436691      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:53:13.436874      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:53:14.437743      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:53:15.438797      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:53:16.438892      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:53:17.439611      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:53:18.439785      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:53:19.439857      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:53:20.440733      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:53:21.440827      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:53:22.441224      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:53:23.441550      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:53:24.441614      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:53:25.441955      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:53:26.442477      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:53:27.442236      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 12:53:27.653: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjExNTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0706 12:53:28.442971      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:53:29.443069      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:53:30.443172      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:53:31.443539      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:53:32.443837      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:53:33.443944      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:53:34.444615      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:53:35.444720      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:53:36.444875      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:53:37.445054      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:53:38.445163      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:53:39.445342      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:53:40.445545      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:53:41.445740      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:53:42.445921      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:53:43.446092      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:53:44.446231      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:53:45.446322      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:53:46.446530      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:53:47.446628      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 12:53:47.662: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjExNTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0706 12:53:48.447731      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:53:49.447919      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:53:50.448018      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:53:51.448128      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:53:52.448205      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:53:53.448400      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:53:54.448513      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:53:55.448579      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:53:56.448680      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:53:57.448859      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:53:58.448966      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:53:59.449418      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:54:00.449670      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:54:01.449762      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:54:02.449885      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:54:03.449963      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:54:04.450320      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:54:05.451070      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:54:06.451163      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:54:07.451963      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 12:54:07.653: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjExNTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0706 12:54:08.452055      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:54:09.452134      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:54:10.452229      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:54:11.452542      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:54:12.452688      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:54:13.453454      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:54:14.453641      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:54:15.454238      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:54:16.454531      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:54:17.455600      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:54:18.455785      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:54:19.456209      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:54:20.456309      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:54:21.456399      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:54:22.456643      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:54:23.456806      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:54:24.456999      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:54:25.457086      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:54:26.457287      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:54:27.457482      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 12:54:27.654: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjExNTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0706 12:54:28.458173      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:54:29.458446      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:54:30.458534      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:54:31.458622      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:54:32.459602      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:54:33.459791      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:54:34.459896      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:54:35.459992      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:54:36.460743      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:54:37.460846      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:54:38.461053      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:54:39.461230      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:54:40.461337      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:54:41.461448      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:54:42.461545      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:54:43.461741      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:54:44.461921      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:54:45.462155      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:54:46.462352      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:54:47.463237      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 12:54:47.653: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjExNTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0706 12:54:48.463846      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:54:49.463997      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:54:50.464161      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:54:51.464250      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:54:52.464349      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:54:53.464940      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:54:54.465161      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:54:55.465397      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:54:56.465500      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:54:57.465603      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:54:58.466108      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:54:59.466281      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:55:00.466502      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:55:01.466546      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:55:02.466644      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:55:03.467617      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:55:04.467742      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:55:05.467982      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:55:06.468075      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:55:07.468255      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 12:55:07.653: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjExNTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0706 12:55:08.468619      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:55:09.468851      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:55:10.468968      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:55:11.469092      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:55:12.469204      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:55:13.469297      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:55:14.470233      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:55:15.471239      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:55:16.471343      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:55:17.472194      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:55:18.473042      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:55:19.473117      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:55:20.473288      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:55:21.473984      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:55:22.474180      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:55:23.474365      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:55:24.474530      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:55:25.474638      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:55:26.474967      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:55:27.474867      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 12:55:27.653: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjExNTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0706 12:55:28.475599      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:55:29.475774      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:55:30.475956      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:55:31.476072      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:55:32.476261      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:55:33.476473      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:55:34.476647      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:55:35.476865      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:55:36.476966      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:55:37.477272      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:55:38.477466      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:55:39.477650      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:55:40.477760      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:55:41.477881      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:55:42.478068      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:55:43.478231      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:55:44.478445      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:55:45.478619      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:55:46.478722      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:55:47.479742      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 12:55:47.654: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjExNTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0706 12:55:48.479835      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:55:49.479998      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:55:50.480142      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:55:51.480232      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:55:52.480449      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:55:53.480694      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:55:54.480794      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:55:55.481095      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:55:56.481198      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:55:57.481998      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:55:58.482137      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:55:59.482167      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:56:00.482268      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:56:01.482540      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:56:02.482621      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:56:03.483598      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:56:04.484149      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:56:05.484916      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:56:06.485021      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:56:07.485252      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 12:56:07.655: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjExNTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0706 12:56:08.485847      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:56:09.486031      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:56:10.486538      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:56:11.486659      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:56:12.486764      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:56:13.486863      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:56:14.486963      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:56:15.487184      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:56:16.487459      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:56:17.487644      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:56:18.487738      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:56:19.487844      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:56:20.488681      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:56:21.488777      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:56:22.488883      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:56:23.488980      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:56:24.489159      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:56:25.489386      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:56:26.489502      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:56:27.489795      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 12:56:27.653: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjExNTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0706 12:56:28.490065      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:56:29.490208      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:56:30.490336      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:56:31.490533      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:56:32.491627      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:56:33.491801      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:56:34.491972      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:56:35.492168      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:56:36.492249      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:56:37.492921      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:56:38.493016      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:56:39.493187      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:56:40.493373      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:56:41.493754      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:56:42.493851      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:56:43.493940      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:56:44.494004      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:56:45.494215      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:56:46.494470      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:56:47.494593      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 12:56:47.654: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjExNTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0706 12:56:48.494831      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:56:49.494914      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:56:50.495083      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:56:51.495953      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:56:52.496053      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:56:53.496164      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:56:54.496336      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:56:55.496584      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:56:56.497515      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:56:57.497768      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:56:58.497877      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:56:59.498054      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:57:00.498147      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:57:01.498328      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:57:02.498464      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:57:03.498539      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:57:04.498634      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:57:05.499513      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:57:06.500348      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:57:07.500620      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 12:57:07.653: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjExNTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0706 12:57:08.500773      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:57:09.500854      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:57:10.501831      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:57:11.502052      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:57:12.502144      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:57:13.502320      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:57:14.502460      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:57:15.502526      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:57:16.502621      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:57:17.503681      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:57:18.503771      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:57:19.503945      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:57:20.504111      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:57:21.504469      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:57:22.504584      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:57:23.504786      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:57:24.504870      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:57:25.504980      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:57:26.505427      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:57:27.505207      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 12:57:27.653: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjExNTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0706 12:57:28.505504      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:57:29.505711      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:57:30.506809      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:57:31.507019      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:57:32.507109      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:57:33.507626      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:57:34.507809      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:57:35.507874      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:57:36.507963      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:57:37.508244      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:57:38.508362      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:57:39.508561      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:57:40.508687      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:57:41.509022      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:57:42.509209      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:57:43.509300      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:57:44.509375      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:57:45.510357      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:57:46.510530      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:57:47.511597      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 12:57:47.654: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjExNTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0706 12:57:48.512014      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:57:49.512681      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:57:50.512768      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:57:51.512857      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:57:52.512949      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:57:53.513053      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:57:54.513137      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:57:55.513225      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:57:56.513349      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:57:57.513431      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:57:58.513514      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:57:59.513607      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:58:00.513906      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:58:01.514015      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:58:02.514132      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:58:03.514303      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:58:04.514502      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:58:05.514573      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:58:06.514659      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:58:07.515633      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 12:58:07.652: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjExNTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0706 12:58:08.515869      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:58:09.516102      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:58:10.516757      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:58:11.516851      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:58:12.517010      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:58:13.517183      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:58:14.517286      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:58:15.517530      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:58:16.517889      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:58:17.517995      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:58:18.518188      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:58:19.518347      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:58:20.518525      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:58:21.518617      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:58:22.519596      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:58:23.519776      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:58:24.519935      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:58:25.520010      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:58:26.520327      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:58:27.520496      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 12:58:27.653: INFO: got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  Jul  6 12:58:27.653: INFO: Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 07/06/24 12:58:27.653
  STEP: retrieving all remaining pages @ 07/06/24 12:58:27.657
  Jul  6 12:58:27.660: INFO: Retrieved 40/40 results with rv 22154 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIxNTQsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  Jul  6 12:58:27.664: INFO: Retrieved 40/40 results with rv 22154 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIxNTQsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  Jul  6 12:58:27.668: INFO: Retrieved 40/40 results with rv 22154 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIxNTQsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  Jul  6 12:58:27.670: INFO: Retrieved 40/40 results with rv 22154 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIxNTQsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  Jul  6 12:58:27.674: INFO: Retrieved 40/40 results with rv 22154 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIxNTQsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  Jul  6 12:58:27.677: INFO: Retrieved 40/40 results with rv 22154 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIxNTQsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  Jul  6 12:58:27.680: INFO: Retrieved 40/40 results with rv 22154 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIxNTQsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  Jul  6 12:58:27.684: INFO: Retrieved 40/40 results with rv 22154 and continue 
  Jul  6 12:58:27.684: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-5593" for this suite. @ 07/06/24 12:58:27.687
• [537.801 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2236
  STEP: Creating a kubernetes client @ 07/06/24 12:58:27.696
  Jul  6 12:58:27.696: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename services @ 07/06/24 12:58:27.696
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:58:27.712
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:58:27.715
  STEP: creating service in namespace services-6358 @ 07/06/24 12:58:27.717
  STEP: creating service affinity-nodeport-transition in namespace services-6358 @ 07/06/24 12:58:27.717
  STEP: creating replication controller affinity-nodeport-transition in namespace services-6358 @ 07/06/24 12:58:27.729
  I0706 12:58:27.737825      21 runners.go:197] Created replication controller with name: affinity-nodeport-transition, namespace: services-6358, replica count: 3
  E0706 12:58:28.520956      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:58:29.521872      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:58:30.522930      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0706 12:58:30.788387      21 runners.go:197] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jul  6 12:58:30.799: INFO: Creating new exec pod
  E0706 12:58:31.523053      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:58:32.523613      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:58:33.524640      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 12:58:33.822: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=services-6358 exec execpod-affinityv8qjk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  Jul  6 12:58:33.918: INFO: stderr: "+ nc -v -t -w 2 affinity-nodeport-transition 80\n+ echo hostName\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  Jul  6 12:58:33.918: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul  6 12:58:33.919: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=services-6358 exec execpod-affinityv8qjk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.84 80'
  Jul  6 12:58:34.009: INFO: stderr: "+ nc -v -t -w 2 10.152.183.84 80\n+ echo hostName\nConnection to 10.152.183.84 80 port [tcp/http] succeeded!\n"
  Jul  6 12:58:34.009: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul  6 12:58:34.010: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=services-6358 exec execpod-affinityv8qjk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.9.199 30929'
  Jul  6 12:58:34.099: INFO: stderr: "+ nc -v -t -w 2 172.31.9.199 30929\n+ echo hostName\nConnection to 172.31.9.199 30929 port [tcp/*] succeeded!\n"
  Jul  6 12:58:34.099: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul  6 12:58:34.099: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=services-6358 exec execpod-affinityv8qjk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.24.251 30929'
  Jul  6 12:58:34.182: INFO: stderr: "+ nc -v -t -w 2 172.31.24.251 30929\n+ echo hostName\nConnection to 172.31.24.251 30929 port [tcp/*] succeeded!\n"
  Jul  6 12:58:34.182: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul  6 12:58:34.192: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=services-6358 exec execpod-affinityv8qjk -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.24.251:30929/ ; done'
  Jul  6 12:58:34.329: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.24.251:30929/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.24.251:30929/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.24.251:30929/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.24.251:30929/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.24.251:30929/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.24.251:30929/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.24.251:30929/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.24.251:30929/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.24.251:30929/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.24.251:30929/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.24.251:30929/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.24.251:30929/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.24.251:30929/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.24.251:30929/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.24.251:30929/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.24.251:30929/\n"
  Jul  6 12:58:34.329: INFO: stdout: "\naffinity-nodeport-transition-bzk6h\naffinity-nodeport-transition-g9zw2\naffinity-nodeport-transition-bzk6h\naffinity-nodeport-transition-g9zw2\naffinity-nodeport-transition-bzk6h\naffinity-nodeport-transition-g9zw2\naffinity-nodeport-transition-n7lqw\naffinity-nodeport-transition-g9zw2\naffinity-nodeport-transition-g9zw2\naffinity-nodeport-transition-g9zw2\naffinity-nodeport-transition-n7lqw\naffinity-nodeport-transition-n7lqw\naffinity-nodeport-transition-g9zw2\naffinity-nodeport-transition-g9zw2\naffinity-nodeport-transition-g9zw2\naffinity-nodeport-transition-n7lqw"
  Jul  6 12:58:34.329: INFO: Received response from host: affinity-nodeport-transition-bzk6h
  Jul  6 12:58:34.329: INFO: Received response from host: affinity-nodeport-transition-g9zw2
  Jul  6 12:58:34.329: INFO: Received response from host: affinity-nodeport-transition-bzk6h
  Jul  6 12:58:34.329: INFO: Received response from host: affinity-nodeport-transition-g9zw2
  Jul  6 12:58:34.329: INFO: Received response from host: affinity-nodeport-transition-bzk6h
  Jul  6 12:58:34.329: INFO: Received response from host: affinity-nodeport-transition-g9zw2
  Jul  6 12:58:34.329: INFO: Received response from host: affinity-nodeport-transition-n7lqw
  Jul  6 12:58:34.329: INFO: Received response from host: affinity-nodeport-transition-g9zw2
  Jul  6 12:58:34.329: INFO: Received response from host: affinity-nodeport-transition-g9zw2
  Jul  6 12:58:34.329: INFO: Received response from host: affinity-nodeport-transition-g9zw2
  Jul  6 12:58:34.329: INFO: Received response from host: affinity-nodeport-transition-n7lqw
  Jul  6 12:58:34.329: INFO: Received response from host: affinity-nodeport-transition-n7lqw
  Jul  6 12:58:34.329: INFO: Received response from host: affinity-nodeport-transition-g9zw2
  Jul  6 12:58:34.329: INFO: Received response from host: affinity-nodeport-transition-g9zw2
  Jul  6 12:58:34.329: INFO: Received response from host: affinity-nodeport-transition-g9zw2
  Jul  6 12:58:34.329: INFO: Received response from host: affinity-nodeport-transition-n7lqw
  Jul  6 12:58:34.340: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=services-6358 exec execpod-affinityv8qjk -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.24.251:30929/ ; done'
  Jul  6 12:58:34.476: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.24.251:30929/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.24.251:30929/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.24.251:30929/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.24.251:30929/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.24.251:30929/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.24.251:30929/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.24.251:30929/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.24.251:30929/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.24.251:30929/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.24.251:30929/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.24.251:30929/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.24.251:30929/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.24.251:30929/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.24.251:30929/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.24.251:30929/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.24.251:30929/\n"
  Jul  6 12:58:34.476: INFO: stdout: "\naffinity-nodeport-transition-n7lqw\naffinity-nodeport-transition-n7lqw\naffinity-nodeport-transition-n7lqw\naffinity-nodeport-transition-n7lqw\naffinity-nodeport-transition-n7lqw\naffinity-nodeport-transition-n7lqw\naffinity-nodeport-transition-n7lqw\naffinity-nodeport-transition-n7lqw\naffinity-nodeport-transition-n7lqw\naffinity-nodeport-transition-n7lqw\naffinity-nodeport-transition-n7lqw\naffinity-nodeport-transition-n7lqw\naffinity-nodeport-transition-n7lqw\naffinity-nodeport-transition-n7lqw\naffinity-nodeport-transition-n7lqw\naffinity-nodeport-transition-n7lqw"
  Jul  6 12:58:34.476: INFO: Received response from host: affinity-nodeport-transition-n7lqw
  Jul  6 12:58:34.476: INFO: Received response from host: affinity-nodeport-transition-n7lqw
  Jul  6 12:58:34.476: INFO: Received response from host: affinity-nodeport-transition-n7lqw
  Jul  6 12:58:34.476: INFO: Received response from host: affinity-nodeport-transition-n7lqw
  Jul  6 12:58:34.476: INFO: Received response from host: affinity-nodeport-transition-n7lqw
  Jul  6 12:58:34.476: INFO: Received response from host: affinity-nodeport-transition-n7lqw
  Jul  6 12:58:34.476: INFO: Received response from host: affinity-nodeport-transition-n7lqw
  Jul  6 12:58:34.476: INFO: Received response from host: affinity-nodeport-transition-n7lqw
  Jul  6 12:58:34.476: INFO: Received response from host: affinity-nodeport-transition-n7lqw
  Jul  6 12:58:34.476: INFO: Received response from host: affinity-nodeport-transition-n7lqw
  Jul  6 12:58:34.476: INFO: Received response from host: affinity-nodeport-transition-n7lqw
  Jul  6 12:58:34.476: INFO: Received response from host: affinity-nodeport-transition-n7lqw
  Jul  6 12:58:34.476: INFO: Received response from host: affinity-nodeport-transition-n7lqw
  Jul  6 12:58:34.476: INFO: Received response from host: affinity-nodeport-transition-n7lqw
  Jul  6 12:58:34.476: INFO: Received response from host: affinity-nodeport-transition-n7lqw
  Jul  6 12:58:34.476: INFO: Received response from host: affinity-nodeport-transition-n7lqw
  Jul  6 12:58:34.477: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-6358, will wait for the garbage collector to delete the pods @ 07/06/24 12:58:34.495
  E0706 12:58:34.525133      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 12:58:34.557: INFO: Deleting ReplicationController affinity-nodeport-transition took: 6.562887ms
  Jul  6 12:58:34.658: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 101.073717ms
  E0706 12:58:35.525229      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:58:36.525528      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 12:58:37.379: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6358" for this suite. @ 07/06/24 12:58:37.383
• [9.692 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:142
  STEP: Creating a kubernetes client @ 07/06/24 12:58:37.388
  Jul  6 12:58:37.388: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename crd-webhook @ 07/06/24 12:58:37.389
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:58:37.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:58:37.406
  STEP: Setting up server cert @ 07/06/24 12:58:37.411
  E0706 12:58:37.526386      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 07/06/24 12:58:37.558
  STEP: Deploying the custom resource conversion webhook pod @ 07/06/24 12:58:37.563
  STEP: Wait for the deployment to be ready @ 07/06/24 12:58:37.576
  Jul  6 12:58:37.584: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0706 12:58:38.526560      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:58:39.526677      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/06/24 12:58:39.595
  STEP: Verifying the service has paired with the endpoint @ 07/06/24 12:58:39.605
  E0706 12:58:40.526773      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 12:58:40.606: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Jul  6 12:58:40.613: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  E0706 12:58:41.526837      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:58:42.527169      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 07/06/24 12:58:43.15
  STEP: v2 custom resource should be converted @ 07/06/24 12:58:43.156
  E0706 12:58:43.527416      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 12:58:43.716: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-5365" for this suite. @ 07/06/24 12:58:43.72
• [6.339 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 07/06/24 12:58:43.727
  Jul  6 12:58:43.727: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename disruption @ 07/06/24 12:58:43.728
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:58:43.741
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:58:43.743
  STEP: Waiting for the pdb to be processed @ 07/06/24 12:58:43.75
  STEP: Waiting for all pods to be running @ 07/06/24 12:58:43.778
  Jul  6 12:58:43.782: INFO: running pods: 0 < 3
  E0706 12:58:44.527513      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:58:45.527858      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 12:58:45.785: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2773" for this suite. @ 07/06/24 12:58:45.788
• [2.069 seconds]
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 07/06/24 12:58:45.797
  Jul  6 12:58:45.797: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename container-runtime @ 07/06/24 12:58:45.797
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:58:45.81
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:58:45.814
  STEP: create the container @ 07/06/24 12:58:45.819
  W0706 12:58:45.826559      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 07/06/24 12:58:45.826
  E0706 12:58:46.528715      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:58:47.528873      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:58:48.528974      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 07/06/24 12:58:48.847
  STEP: the container should be terminated @ 07/06/24 12:58:48.85
  STEP: the termination message should be set @ 07/06/24 12:58:48.85
  Jul  6 12:58:48.850: INFO: Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 07/06/24 12:58:48.85
  Jul  6 12:58:48.866: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-9262" for this suite. @ 07/06/24 12:58:48.868
• [3.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 07/06/24 12:58:48.874
  Jul  6 12:58:48.874: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename projected @ 07/06/24 12:58:48.875
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:58:48.889
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:58:48.893
  STEP: Creating secret with name projected-secret-test-fef7fc71-e1fe-4e40-ae4f-77de5c6ec6fb @ 07/06/24 12:58:48.895
  STEP: Creating a pod to test consume secrets @ 07/06/24 12:58:48.9
  E0706 12:58:49.529804      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:58:50.529924      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:58:51.530024      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:58:52.530191      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/06/24 12:58:52.919
  Jul  6 12:58:52.921: INFO: Trying to get logs from node ip-172-31-9-199 pod pod-projected-secrets-c07ea214-c0c7-4c72-942a-79b0aaca9fc0 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/06/24 12:58:52.938
  Jul  6 12:58:52.955: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4591" for this suite. @ 07/06/24 12:58:52.958
• [4.090 seconds]
------------------------------
SSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 07/06/24 12:58:52.964
  Jul  6 12:58:52.964: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename subjectreview @ 07/06/24 12:58:52.965
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:58:52.977
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:58:52.979
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-2917" @ 07/06/24 12:58:52.981
  Jul  6 12:58:52.986: INFO: saUsername: "system:serviceaccount:subjectreview-2917:e2e"
  Jul  6 12:58:52.986: INFO: saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-2917"}
  Jul  6 12:58:52.986: INFO: saUID: "ecd7c00f-8327-4f82-9442-37c73a2d3a55"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-2917:e2e" @ 07/06/24 12:58:52.986
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-2917:e2e" @ 07/06/24 12:58:52.986
  Jul  6 12:58:52.988: INFO: sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-2917:e2e" api 'list' configmaps in "subjectreview-2917" namespace @ 07/06/24 12:58:52.988
  Jul  6 12:58:52.989: INFO: SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-2917:e2e" @ 07/06/24 12:58:52.989
  Jul  6 12:58:52.991: INFO: lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  Jul  6 12:58:52.991: INFO: LocalSubjectAccessReview has been verified
  Jul  6 12:58:52.991: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-2917" for this suite. @ 07/06/24 12:58:52.994
• [0.036 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 07/06/24 12:58:53.001
  Jul  6 12:58:53.001: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename deployment @ 07/06/24 12:58:53.001
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:58:53.014
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:58:53.017
  Jul  6 12:58:53.020: INFO: Creating deployment "test-recreate-deployment"
  Jul  6 12:58:53.025: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
  Jul  6 12:58:53.033: INFO: deployment "test-recreate-deployment" doesn't have the required revision set
  E0706 12:58:53.530997      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:58:54.531647      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 12:58:55.041: INFO: Waiting deployment "test-recreate-deployment" to complete
  Jul  6 12:58:55.045: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
  Jul  6 12:58:55.052: INFO: Updating deployment test-recreate-deployment
  Jul  6 12:58:55.052: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  Jul  6 12:58:55.127: INFO: Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7197",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5470e597-f682-4b7b-8d83-b1b9a0ba9dbe",
      ResourceVersion: (string) (len=5) "23050",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855867533,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855867535,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855867535,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855867535,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855867535,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855867535,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855867533,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-76fb77d45\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jul  6 12:58:55.130: INFO: New ReplicaSet "test-recreate-deployment-76fb77d45" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7197",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b7c1aa05-fa56-4c0e-b9c1-b4570e238fdd",
      ResourceVersion: (string) (len=5) "23049",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855867535,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "5470e597-f682-4b7b-8d83-b1b9a0ba9dbe",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855867535,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 34 37 30 65 35  39 37 2d 66 36 38 32 2d  |\"5470e597-f682-|
              00000120  34 62 37 62 2d 38 64 38  33 2d 62 31 62 39 61 30  |4b7b-8d83-b1b9a0|
              00000130  62 61 39 64 62 65 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |ba9dbe\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855867535,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jul  6 12:58:55.131: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
  Jul  6 12:58:55.132: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-5cf87b5b86",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7197",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4e6e5bb4-f4f0-4009-920d-4ab6c66f0c59",
      ResourceVersion: (string) (len=5) "23039",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855867533,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "5470e597-f682-4b7b-8d83-b1b9a0ba9dbe",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855867535,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 34 37 30 65 35  39 37 2d 66 36 38 32 2d  |\"5470e597-f682-|
              00000120  34 62 37 62 2d 38 64 38  33 2d 62 31 62 39 61 30  |4b7b-8d83-b1b9a0|
              00000130  62 61 39 64 62 65 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |ba9dbe\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855867535,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jul  6 12:58:55.136: INFO: Pod "test-recreate-deployment-76fb77d45-wwc7s" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-76fb77d45-wwc7s",
      GenerateName: (string) (len=35) "test-recreate-deployment-76fb77d45-",
      Namespace: (string) (len=15) "deployment-7197",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6b4b8359-0a58-42d4-9dac-8dc42e7ca3c5",
      ResourceVersion: (string) (len=5) "23051",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855867535,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
          UID: (types.UID) (len=36) "b7c1aa05-fa56-4c0e-b9c1-b4570e238fdd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855867535,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 37  63 31 61 61 30 35 2d 66  |d\":\"b7c1aa05-f|
              00000090  61 35 36 2d 34 63 30 65  2d 62 39 63 31 2d 62 34  |a56-4c0e-b9c1-b4|
              000000a0  35 37 30 65 32 33 38 66  64 64 5c 22 7d 22 3a 7b  |570e238fdd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855867535,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-m5rpt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-m5rpt",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-24-251",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855867535,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855867535,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855867535,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855867535,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855867535,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.24.251",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.24.251"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855867535,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul  6 12:58:55.137: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7197" for this suite. @ 07/06/24 12:58:55.142
• [2.148 seconds]
------------------------------
SSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:470
  STEP: Creating a kubernetes client @ 07/06/24 12:58:55.149
  Jul  6 12:58:55.149: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename sched-pred @ 07/06/24 12:58:55.15
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:58:55.164
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:58:55.166
  Jul  6 12:58:55.169: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Jul  6 12:58:55.174: INFO: Waiting for terminating namespaces to be deleted...
  Jul  6 12:58:55.177: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-24-251 before test
  Jul  6 12:58:55.182: INFO: test-recreate-deployment-76fb77d45-wwc7s from deployment-7197 started at 2024-07-06 12:58:55 +0000 UTC (1 container statuses recorded)
  Jul  6 12:58:55.182: INFO: 	Container httpd ready: false, restart count 0
  Jul  6 12:58:55.182: INFO: nginx-ingress-controller-kubernetes-worker-pn62c from ingress-nginx-kubernetes-worker started at 2024-07-06 12:10:53 +0000 UTC (1 container statuses recorded)
  Jul  6 12:58:55.182: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jul  6 12:58:55.182: INFO: calico-node-xcgv8 from kube-system started at 2024-07-06 12:10:33 +0000 UTC (1 container statuses recorded)
  Jul  6 12:58:55.182: INFO: 	Container calico-node ready: true, restart count 0
  Jul  6 12:58:55.182: INFO: sonobuoy from sonobuoy started at 2024-07-06 12:13:22 +0000 UTC (1 container statuses recorded)
  Jul  6 12:58:55.182: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Jul  6 12:58:55.182: INFO: sonobuoy-systemd-logs-daemon-set-ada2bb128210461e-nx2fj from sonobuoy started at 2024-07-06 12:13:24 +0000 UTC (2 container statuses recorded)
  Jul  6 12:58:55.182: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jul  6 12:58:55.182: INFO: 	Container systemd-logs ready: true, restart count 0
  Jul  6 12:58:55.182: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-9-199 before test
  Jul  6 12:58:55.185: INFO: nginx-ingress-controller-kubernetes-worker-sjnwc from ingress-nginx-kubernetes-worker started at 2024-07-06 12:04:14 +0000 UTC (1 container statuses recorded)
  Jul  6 12:58:55.185: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jul  6 12:58:55.185: INFO: calico-node-pfjxw from kube-system started at 2024-07-06 12:10:23 +0000 UTC (1 container statuses recorded)
  Jul  6 12:58:55.185: INFO: 	Container calico-node ready: true, restart count 0
  Jul  6 12:58:55.185: INFO: sonobuoy-e2e-job-aef6c266b67a4bc4 from sonobuoy started at 2024-07-06 12:13:24 +0000 UTC (2 container statuses recorded)
  Jul  6 12:58:55.185: INFO: 	Container e2e ready: true, restart count 0
  Jul  6 12:58:55.185: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jul  6 12:58:55.185: INFO: sonobuoy-systemd-logs-daemon-set-ada2bb128210461e-prx26 from sonobuoy started at 2024-07-06 12:13:24 +0000 UTC (2 container statuses recorded)
  Jul  6 12:58:55.185: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jul  6 12:58:55.185: INFO: 	Container systemd-logs ready: true, restart count 0
  Jul  6 12:58:55.185: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-90-155 before test
  Jul  6 12:58:55.191: INFO: nginx-ingress-controller-kubernetes-worker-j7txc from ingress-nginx-kubernetes-worker started at 2024-07-06 11:58:40 +0000 UTC (1 container statuses recorded)
  Jul  6 12:58:55.191: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jul  6 12:58:55.191: INFO: calico-node-wqvcf from kube-system started at 2024-07-06 12:11:25 +0000 UTC (1 container statuses recorded)
  Jul  6 12:58:55.191: INFO: 	Container calico-node ready: true, restart count 0
  Jul  6 12:58:55.191: INFO: coredns-bddfd76d7-bnkt2 from kube-system started at 2024-07-06 11:58:40 +0000 UTC (1 container statuses recorded)
  Jul  6 12:58:55.191: INFO: 	Container coredns ready: true, restart count 0
  Jul  6 12:58:55.191: INFO: kube-state-metrics-6f48cdd76-49lrw from kube-system started at 2024-07-06 11:58:40 +0000 UTC (1 container statuses recorded)
  Jul  6 12:58:55.191: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Jul  6 12:58:55.191: INFO: metrics-server-v0.6.3-69d7fbfdf8-vsjkb from kube-system started at 2024-07-06 11:58:40 +0000 UTC (2 container statuses recorded)
  Jul  6 12:58:55.191: INFO: 	Container metrics-server ready: true, restart count 0
  Jul  6 12:58:55.191: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Jul  6 12:58:55.191: INFO: dashboard-metrics-scraper-5dd7cb5fc-9ss52 from kubernetes-dashboard started at 2024-07-06 11:58:40 +0000 UTC (1 container statuses recorded)
  Jul  6 12:58:55.191: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Jul  6 12:58:55.191: INFO: kubernetes-dashboard-7b899cb9d9-fl6gc from kubernetes-dashboard started at 2024-07-06 11:58:40 +0000 UTC (1 container statuses recorded)
  Jul  6 12:58:55.191: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Jul  6 12:58:55.192: INFO: sonobuoy-systemd-logs-daemon-set-ada2bb128210461e-p2g2w from sonobuoy started at 2024-07-06 12:13:24 +0000 UTC (2 container statuses recorded)
  Jul  6 12:58:55.192: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jul  6 12:58:55.192: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 07/06/24 12:58:55.192
  E0706 12:58:55.532483      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:58:56.532714      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 07/06/24 12:58:57.212
  STEP: Trying to apply a random label on the found node. @ 07/06/24 12:58:57.227
  STEP: verifying the node has the label kubernetes.io/e2e-3fd99725-620c-4c18-b8ff-f341539f1d83 42 @ 07/06/24 12:58:57.237
  STEP: Trying to relaunch the pod, now with labels. @ 07/06/24 12:58:57.239
  E0706 12:58:57.532787      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:58:58.532863      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-3fd99725-620c-4c18-b8ff-f341539f1d83 off the node ip-172-31-24-251 @ 07/06/24 12:58:59.265
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-3fd99725-620c-4c18-b8ff-f341539f1d83 @ 07/06/24 12:58:59.276
  Jul  6 12:58:59.278: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-3797" for this suite. @ 07/06/24 12:58:59.282
• [4.138 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 07/06/24 12:58:59.288
  Jul  6 12:58:59.288: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename sched-preemption @ 07/06/24 12:58:59.289
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 12:58:59.302
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 12:58:59.305
  Jul  6 12:58:59.322: INFO: Waiting up to 1m0s for all nodes to be ready
  E0706 12:58:59.533905      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:59:00.534806      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:59:01.535644      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:59:02.535782      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:59:03.536615      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:59:04.536739      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:59:05.537192      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:59:06.537301      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:59:07.538275      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:59:08.538532      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:59:09.538588      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:59:10.538648      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:59:11.539351      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:59:12.539605      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:59:13.540337      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:59:14.540449      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:59:15.541074      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:59:16.541154      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:59:17.541219      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:59:18.541406      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:59:19.541625      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:59:20.541742      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:59:21.542205      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:59:22.543093      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:59:23.543297      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:59:24.543555      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:59:25.544150      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:59:26.544240      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:59:27.545246      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:59:28.545333      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:59:29.546288      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:59:30.546463      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:59:31.547470      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:59:32.547635      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:59:33.548158      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:59:34.548314      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:59:35.548404      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:59:36.548698      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:59:37.549702      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:59:38.549869      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:59:39.550801      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:59:40.551654      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:59:41.551872      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:59:42.552884      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:59:43.553857      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:59:44.553953      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:59:45.554581      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:59:46.555610      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:59:47.555703      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:59:48.556244      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:59:49.556726      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:59:50.556906      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:59:51.557170      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:59:52.557260      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:59:53.558048      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:59:54.559005      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:59:55.559590      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:59:56.559889      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:59:57.559995      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 12:59:58.560148      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 12:59:59.326: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 07/06/24 12:59:59.328
  Jul  6 12:59:59.345: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Jul  6 12:59:59.352: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Jul  6 12:59:59.369: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Jul  6 12:59:59.378: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Jul  6 12:59:59.391: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Jul  6 12:59:59.397: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 07/06/24 12:59:59.397
  E0706 12:59:59.560561      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:00:00.560800      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 07/06/24 13:00:01.422
  E0706 13:00:01.560917      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:00:02.561965      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:00:03.562618      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:00:04.563620      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:00:05.500: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-9861" for this suite. @ 07/06/24 13:00:05.503
• [66.222 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:78
  STEP: Creating a kubernetes client @ 07/06/24 13:00:05.51
  Jul  6 13:00:05.510: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename resourcequota @ 07/06/24 13:00:05.511
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:00:05.522
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:00:05.525
  STEP: Counting existing ResourceQuota @ 07/06/24 13:00:05.528
  E0706 13:00:05.564229      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:00:06.565051      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:00:07.566054      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:00:08.566751      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:00:09.567475      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 07/06/24 13:00:10.531
  STEP: Ensuring resource quota status is calculated @ 07/06/24 13:00:10.537
  E0706 13:00:10.568374      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:00:11.568756      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:00:12.540: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-778" for this suite. @ 07/06/24 13:00:12.543
• [7.039 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 07/06/24 13:00:12.549
  Jul  6 13:00:12.549: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename sched-preemption @ 07/06/24 13:00:12.55
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:00:12.564
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:00:12.567
  E0706 13:00:12.568748      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:00:12.580: INFO: Waiting up to 1m0s for all nodes to be ready
  E0706 13:00:13.568901      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:00:14.568977      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:00:15.569144      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:00:16.569425      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:00:17.569563      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:00:18.569650      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:00:19.569799      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:00:20.569931      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:00:21.570032      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:00:22.570826      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:00:23.570938      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:00:24.571036      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:00:25.571132      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:00:26.571413      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:00:27.571605      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:00:28.572088      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:00:29.572175      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:00:30.572202      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:00:31.572332      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:00:32.572413      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:00:33.572529      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:00:34.572612      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:00:35.573231      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:00:36.573297      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:00:37.573415      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:00:38.573513      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:00:39.573716      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:00:40.573997      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:00:41.574563      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:00:42.575590      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:00:43.575690      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:00:44.576334      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:00:45.576493      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:00:46.577566      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:00:47.577652      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:00:48.577830      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:00:49.577951      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:00:50.578158      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:00:51.578547      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:00:52.579624      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:00:53.579822      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:00:54.579921      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:00:55.580006      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:00:56.580094      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:00:57.580189      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:00:58.580434      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:00:59.580553      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:01:00.580803      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:01:01.581779      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:01:02.581830      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:01:03.582026      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:01:04.582226      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:01:05.582534      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:01:06.582666      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:01:07.582801      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:01:08.582781      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:01:09.582911      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:01:10.582928      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:01:11.583074      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:01:12.583382      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:01:12.584: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 07/06/24 13:01:12.588
  Jul  6 13:01:12.588: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename sched-preemption-path @ 07/06/24 13:01:12.588
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:01:12.602
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:01:12.604
  STEP: Finding an available node @ 07/06/24 13:01:12.606
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 07/06/24 13:01:12.606
  E0706 13:01:13.583605      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:01:14.583912      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 07/06/24 13:01:14.626
  Jul  6 13:01:14.641: INFO: found a healthy node: ip-172-31-24-251
  E0706 13:01:15.584703      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:01:16.584832      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:01:17.585395      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:01:18.585531      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:01:19.585599      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:01:20.586463      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:01:20.701: INFO: pods created so far: [1 1 1]
  Jul  6 13:01:20.701: INFO: length of pods created so far: 3
  E0706 13:01:21.586732      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:01:22.587612      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:01:22.711: INFO: pods created so far: [2 2 1]
  E0706 13:01:23.587681      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:01:24.587762      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:01:25.587929      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:01:26.588042      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:01:27.588191      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:01:28.588280      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:01:29.588345      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:01:29.771: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-500" for this suite. @ 07/06/24 13:01:29.774
  Jul  6 13:01:29.782: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-4241" for this suite. @ 07/06/24 13:01:29.785
• [77.244 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 07/06/24 13:01:29.793
  Jul  6 13:01:29.793: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename watch @ 07/06/24 13:01:29.794
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:01:29.812
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:01:29.814
  STEP: creating a watch on configmaps with a certain label @ 07/06/24 13:01:29.817
  STEP: creating a new configmap @ 07/06/24 13:01:29.818
  STEP: modifying the configmap once @ 07/06/24 13:01:29.822
  STEP: changing the label value of the configmap @ 07/06/24 13:01:29.828
  STEP: Expecting to observe a delete notification for the watched object @ 07/06/24 13:01:29.835
  Jul  6 13:01:29.835: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9760  8f344245-9218-4b7b-ac30-b2000073d4a8 23823 0 2024-07-06 13:01:29 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-07-06 13:01:29 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jul  6 13:01:29.835: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9760  8f344245-9218-4b7b-ac30-b2000073d4a8 23824 0 2024-07-06 13:01:29 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-07-06 13:01:29 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jul  6 13:01:29.835: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9760  8f344245-9218-4b7b-ac30-b2000073d4a8 23825 0 2024-07-06 13:01:29 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-07-06 13:01:29 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 07/06/24 13:01:29.835
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 07/06/24 13:01:29.842
  E0706 13:01:30.588987      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:01:31.589096      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:01:32.589352      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:01:33.589455      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:01:34.590533      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:01:35.590560      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:01:36.590617      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:01:37.591597      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:01:38.591866      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:01:39.591939      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: changing the label value of the configmap back @ 07/06/24 13:01:39.842
  STEP: modifying the configmap a third time @ 07/06/24 13:01:39.85
  STEP: deleting the configmap @ 07/06/24 13:01:39.857
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 07/06/24 13:01:39.863
  Jul  6 13:01:39.863: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9760  8f344245-9218-4b7b-ac30-b2000073d4a8 23917 0 2024-07-06 13:01:29 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-07-06 13:01:39 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jul  6 13:01:39.863: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9760  8f344245-9218-4b7b-ac30-b2000073d4a8 23918 0 2024-07-06 13:01:29 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-07-06 13:01:39 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jul  6 13:01:39.863: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9760  8f344245-9218-4b7b-ac30-b2000073d4a8 23919 0 2024-07-06 13:01:29 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-07-06 13:01:39 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jul  6 13:01:39.863: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9760" for this suite. @ 07/06/24 13:01:39.866
• [10.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:277
  STEP: Creating a kubernetes client @ 07/06/24 13:01:39.871
  Jul  6 13:01:39.871: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename svcaccounts @ 07/06/24 13:01:39.872
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:01:39.886
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:01:39.889
  STEP: Creating a pod to test service account token:  @ 07/06/24 13:01:39.891
  E0706 13:01:40.592076      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:01:41.592170      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/06/24 13:01:41.907
  Jul  6 13:01:41.909: INFO: Trying to get logs from node ip-172-31-24-251 pod test-pod-9d8a0ca9-25ea-4e6c-8e4f-6bfc7f8bf925 container agnhost-container: <nil>
  STEP: delete the pod @ 07/06/24 13:01:41.925
  Jul  6 13:01:41.943: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5939" for this suite. @ 07/06/24 13:01:41.945
• [2.079 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 07/06/24 13:01:41.95
  Jul  6 13:01:41.950: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/06/24 13:01:41.951
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:01:41.964
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:01:41.966
  Jul  6 13:01:41.969: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  E0706 13:01:42.593112      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:01:43.594125      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:01:44.594191      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:01:45.032: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-5909" for this suite. @ 07/06/24 13:01:45.035
• [3.090 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 07/06/24 13:01:45.041
  Jul  6 13:01:45.041: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename field-validation @ 07/06/24 13:01:45.041
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:01:45.057
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:01:45.06
  Jul  6 13:01:45.062: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  E0706 13:01:45.595071      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:01:46.595234      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:01:47.595405      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0706 13:01:47.595558      21 warnings.go:70] unknown field "alpha"
  W0706 13:01:47.595660      21 warnings.go:70] unknown field "beta"
  W0706 13:01:47.595664      21 warnings.go:70] unknown field "delta"
  W0706 13:01:47.595668      21 warnings.go:70] unknown field "epsilon"
  W0706 13:01:47.595695      21 warnings.go:70] unknown field "gamma"
  Jul  6 13:01:48.128: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2947" for this suite. @ 07/06/24 13:01:48.133
• [3.100 seconds]
------------------------------
SS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 07/06/24 13:01:48.141
  Jul  6 13:01:48.141: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename events @ 07/06/24 13:01:48.141
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:01:48.156
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:01:48.158
  STEP: creating a test event @ 07/06/24 13:01:48.161
  STEP: listing all events in all namespaces @ 07/06/24 13:01:48.164
  STEP: patching the test event @ 07/06/24 13:01:48.172
  STEP: fetching the test event @ 07/06/24 13:01:48.177
  STEP: updating the test event @ 07/06/24 13:01:48.181
  STEP: getting the test event @ 07/06/24 13:01:48.189
  STEP: deleting the test event @ 07/06/24 13:01:48.192
  STEP: listing all events in all namespaces @ 07/06/24 13:01:48.198
  Jul  6 13:01:48.205: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-9865" for this suite. @ 07/06/24 13:01:48.208
• [0.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 07/06/24 13:01:48.213
  Jul  6 13:01:48.213: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename limitrange @ 07/06/24 13:01:48.213
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:01:48.226
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:01:48.228
  STEP: Creating LimitRange "e2e-limitrange-k5br5" in namespace "limitrange-8659" @ 07/06/24 13:01:48.231
  STEP: Creating another limitRange in another namespace @ 07/06/24 13:01:48.234
  Jul  6 13:01:48.246: INFO: Namespace "e2e-limitrange-k5br5-5716" created
  Jul  6 13:01:48.246: INFO: Creating LimitRange "e2e-limitrange-k5br5" in namespace "e2e-limitrange-k5br5-5716"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-k5br5" @ 07/06/24 13:01:48.253
  Jul  6 13:01:48.256: INFO: Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-k5br5" in "limitrange-8659" namespace @ 07/06/24 13:01:48.256
  Jul  6 13:01:48.261: INFO: LimitRange "e2e-limitrange-k5br5" has been patched
  STEP: Delete LimitRange "e2e-limitrange-k5br5" by Collection with labelSelector: "e2e-limitrange-k5br5=patched" @ 07/06/24 13:01:48.261
  STEP: Confirm that the limitRange "e2e-limitrange-k5br5" has been deleted @ 07/06/24 13:01:48.267
  Jul  6 13:01:48.267: INFO: Requesting list of LimitRange to confirm quantity
  Jul  6 13:01:48.270: INFO: Found 0 LimitRange with label "e2e-limitrange-k5br5=patched"
  Jul  6 13:01:48.270: INFO: LimitRange "e2e-limitrange-k5br5" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-k5br5" @ 07/06/24 13:01:48.27
  Jul  6 13:01:48.273: INFO: Found 1 limitRange
  Jul  6 13:01:48.273: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-8659" for this suite. @ 07/06/24 13:01:48.276
  STEP: Destroying namespace "e2e-limitrange-k5br5-5716" for this suite. @ 07/06/24 13:01:48.281
• [0.073 seconds]
------------------------------
SSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:742
  STEP: Creating a kubernetes client @ 07/06/24 13:01:48.286
  Jul  6 13:01:48.286: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename svcaccounts @ 07/06/24 13:01:48.287
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:01:48.299
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:01:48.301
  Jul  6 13:01:48.308: INFO: Got root ca configmap in namespace "svcaccounts-5518"
  Jul  6 13:01:48.314: INFO: Deleted root ca configmap in namespace "svcaccounts-5518"
  E0706 13:01:48.596145      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for a new root ca configmap created @ 07/06/24 13:01:48.815
  Jul  6 13:01:48.820: INFO: Recreated root ca configmap in namespace "svcaccounts-5518"
  Jul  6 13:01:48.826: INFO: Updated root ca configmap in namespace "svcaccounts-5518"
  STEP: waiting for the root ca configmap reconciled @ 07/06/24 13:01:49.327
  Jul  6 13:01:49.331: INFO: Reconciled root ca configmap in namespace "svcaccounts-5518"
  Jul  6 13:01:49.332: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5518" for this suite. @ 07/06/24 13:01:49.336
• [1.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 07/06/24 13:01:49.342
  Jul  6 13:01:49.342: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename init-container @ 07/06/24 13:01:49.342
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:01:49.358
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:01:49.362
  STEP: creating the pod @ 07/06/24 13:01:49.364
  Jul  6 13:01:49.364: INFO: PodSpec: initContainers in spec.initContainers
  E0706 13:01:49.596245      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:01:50.597020      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:01:51.597096      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:01:52.597196      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:01:53.598011      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:01:53.801: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-6966" for this suite. @ 07/06/24 13:01:53.804
• [4.466 seconds]
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 07/06/24 13:01:53.808
  Jul  6 13:01:53.808: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename sysctl @ 07/06/24 13:01:53.809
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:01:53.821
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:01:53.824
  STEP: Creating a pod with one valid and two invalid sysctls @ 07/06/24 13:01:53.826
  Jul  6 13:01:53.831: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-3028" for this suite. @ 07/06/24 13:01:53.834
• [0.031 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:69
  STEP: Creating a kubernetes client @ 07/06/24 13:01:53.84
  Jul  6 13:01:53.840: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/06/24 13:01:53.84
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:01:53.851
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:01:53.854
  Jul  6 13:01:53.859: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  E0706 13:01:54.598748      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 07/06/24 13:01:55.262
  Jul  6 13:01:55.262: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=crd-publish-openapi-1149 --namespace=crd-publish-openapi-1149 create -f -'
  Jul  6 13:01:55.316: INFO: stderr: ""
  Jul  6 13:01:55.316: INFO: stdout: "e2e-test-crd-publish-openapi-8815-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Jul  6 13:01:55.316: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=crd-publish-openapi-1149 --namespace=crd-publish-openapi-1149 delete e2e-test-crd-publish-openapi-8815-crds test-foo'
  Jul  6 13:01:55.379: INFO: stderr: ""
  Jul  6 13:01:55.379: INFO: stdout: "e2e-test-crd-publish-openapi-8815-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  Jul  6 13:01:55.379: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=crd-publish-openapi-1149 --namespace=crd-publish-openapi-1149 apply -f -'
  Jul  6 13:01:55.432: INFO: stderr: ""
  Jul  6 13:01:55.432: INFO: stdout: "e2e-test-crd-publish-openapi-8815-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Jul  6 13:01:55.432: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=crd-publish-openapi-1149 --namespace=crd-publish-openapi-1149 delete e2e-test-crd-publish-openapi-8815-crds test-foo'
  Jul  6 13:01:55.475: INFO: stderr: ""
  Jul  6 13:01:55.475: INFO: stdout: "e2e-test-crd-publish-openapi-8815-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 07/06/24 13:01:55.475
  Jul  6 13:01:55.475: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=crd-publish-openapi-1149 --namespace=crd-publish-openapi-1149 create -f -'
  Jul  6 13:01:55.512: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 07/06/24 13:01:55.512
  Jul  6 13:01:55.512: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=crd-publish-openapi-1149 --namespace=crd-publish-openapi-1149 create -f -'
  Jul  6 13:01:55.549: INFO: rc: 1
  Jul  6 13:01:55.550: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=crd-publish-openapi-1149 --namespace=crd-publish-openapi-1149 apply -f -'
  Jul  6 13:01:55.592: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 07/06/24 13:01:55.592
  Jul  6 13:01:55.592: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=crd-publish-openapi-1149 --namespace=crd-publish-openapi-1149 create -f -'
  E0706 13:01:55.599615      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:01:55.629: INFO: rc: 1
  Jul  6 13:01:55.629: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=crd-publish-openapi-1149 --namespace=crd-publish-openapi-1149 apply -f -'
  Jul  6 13:01:55.672: INFO: rc: 1
  STEP: kubectl explain works to explain CR properties @ 07/06/24 13:01:55.672
  Jul  6 13:01:55.672: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=crd-publish-openapi-1149 explain e2e-test-crd-publish-openapi-8815-crds'
  Jul  6 13:01:55.707: INFO: stderr: ""
  Jul  6 13:01:55.707: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-8815-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 07/06/24 13:01:55.707
  Jul  6 13:01:55.707: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=crd-publish-openapi-1149 explain e2e-test-crd-publish-openapi-8815-crds.metadata'
  Jul  6 13:01:55.742: INFO: stderr: ""
  Jul  6 13:01:55.742: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-8815-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  Jul  6 13:01:55.743: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=crd-publish-openapi-1149 explain e2e-test-crd-publish-openapi-8815-crds.spec'
  Jul  6 13:01:55.778: INFO: stderr: ""
  Jul  6 13:01:55.778: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-8815-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  Jul  6 13:01:55.778: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=crd-publish-openapi-1149 explain e2e-test-crd-publish-openapi-8815-crds.spec.bars'
  Jul  6 13:01:55.814: INFO: stderr: ""
  Jul  6 13:01:55.814: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-8815-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 07/06/24 13:01:55.814
  Jul  6 13:01:55.814: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=crd-publish-openapi-1149 explain e2e-test-crd-publish-openapi-8815-crds.spec.bars2'
  Jul  6 13:01:55.850: INFO: rc: 1
  E0706 13:01:56.600342      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:01:57.108: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1149" for this suite. @ 07/06/24 13:01:57.114
• [3.282 seconds]
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 07/06/24 13:01:57.122
  Jul  6 13:01:57.122: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename configmap @ 07/06/24 13:01:57.123
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:01:57.141
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:01:57.142
  STEP: Creating configMap with name cm-test-opt-del-91f9fa7d-b0e5-4038-a819-0ded019b7916 @ 07/06/24 13:01:57.147
  STEP: Creating configMap with name cm-test-opt-upd-0c4e5b4b-acec-4e1f-9a6d-1e3a999841c7 @ 07/06/24 13:01:57.151
  STEP: Creating the pod @ 07/06/24 13:01:57.154
  E0706 13:01:57.600442      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:01:58.600537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-91f9fa7d-b0e5-4038-a819-0ded019b7916 @ 07/06/24 13:01:59.193
  STEP: Updating configmap cm-test-opt-upd-0c4e5b4b-acec-4e1f-9a6d-1e3a999841c7 @ 07/06/24 13:01:59.199
  STEP: Creating configMap with name cm-test-opt-create-bf31b582-3281-44e3-9be9-72ba69ba9ded @ 07/06/24 13:01:59.203
  STEP: waiting to observe update in volume @ 07/06/24 13:01:59.207
  E0706 13:01:59.600614      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:02:00.600875      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:02:01.601029      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:02:02.601404      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:02:03.602186      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:02:04.602283      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:02:05.602728      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:02:06.602818      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:02:07.603538      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:02:08.603648      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:02:09.604191      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:02:10.604377      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:02:11.604806      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:02:12.605053      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:02:13.605853      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:02:14.606054      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:02:15.606678      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:02:16.606772      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:02:17.606888      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:02:18.607650      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:02:19.607745      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:02:20.607766      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:02:21.607886      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:02:22.607979      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:02:23.608352      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:02:24.608481      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:02:25.609378      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:02:26.609555      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:02:27.610521      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:02:28.610613      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:02:29.610858      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:02:30.611398      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:02:31.612390      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:02:32.612499      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:02:33.613024      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:02:34.613196      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:02:35.613899      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:02:36.613992      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:02:37.614196      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:02:38.614297      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:02:39.614984      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:02:40.615212      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:02:41.615922      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:02:42.616104      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:02:43.616730      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:02:44.616825      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:02:45.617554      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:02:46.617756      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:02:47.618236      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:02:48.618333      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:02:49.618437      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:02:50.618695      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:02:51.619668      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:02:52.619787      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:02:53.620389      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:02:54.620568      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:02:55.620890      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:02:56.621224      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:02:57.621481      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:02:58.621720      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:02:59.622279      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:03:00.623242      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:03:01.623610      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:03:02.623797      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:03:03.623940      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:03:04.624122      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:03:05.624568      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:03:06.624758      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:03:07.625204      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:03:08.625291      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:03:09.625647      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:03:10.626687      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:03:11.627451      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:03:12.628375      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:03:13.629132      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:03:14.629465      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:03:15.629928      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:03:16.630023      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:03:17.630862      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:03:18.631654      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:03:19.632733      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:03:20.633698      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:03:21.634594      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:03:22.634680      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:03:23.634852      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:03:24.634951      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:03:25.635963      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:03:26.636155      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:03:27.637016      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:03:28.637959      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:03:29.588: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9613" for this suite. @ 07/06/24 13:03:29.591
• [92.474 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 07/06/24 13:03:29.597
  Jul  6 13:03:29.597: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename projected @ 07/06/24 13:03:29.598
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:03:29.618
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:03:29.62
  STEP: Creating configMap with name projected-configmap-test-volume-map-31efca5a-6074-4308-bad3-90dbae456ab8 @ 07/06/24 13:03:29.621
  STEP: Creating a pod to test consume configMaps @ 07/06/24 13:03:29.626
  E0706 13:03:29.638745      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:03:30.639327      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:03:31.639474      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:03:32.639636      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:03:33.639743      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/06/24 13:03:33.647
  Jul  6 13:03:33.650: INFO: Trying to get logs from node ip-172-31-9-199 pod pod-projected-configmaps-2c4786ab-9db1-4330-87cd-488eae310010 container agnhost-container: <nil>
  STEP: delete the pod @ 07/06/24 13:03:33.66
  Jul  6 13:03:33.675: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3188" for this suite. @ 07/06/24 13:03:33.678
• [4.088 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:887
  STEP: Creating a kubernetes client @ 07/06/24 13:03:33.685
  Jul  6 13:03:33.685: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename kubectl @ 07/06/24 13:03:33.686
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:03:33.699
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:03:33.701
  STEP: validating api versions @ 07/06/24 13:03:33.703
  Jul  6 13:03:33.703: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-1189 api-versions'
  Jul  6 13:03:33.741: INFO: stderr: ""
  Jul  6 13:03:33.741: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta3\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  Jul  6 13:03:33.741: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1189" for this suite. @ 07/06/24 13:03:33.744
• [0.066 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 07/06/24 13:03:33.751
  Jul  6 13:03:33.751: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename downward-api @ 07/06/24 13:03:33.752
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:03:33.766
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:03:33.768
  STEP: Creating a pod to test downward api env vars @ 07/06/24 13:03:33.77
  E0706 13:03:34.640302      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:03:35.641231      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:03:36.641433      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:03:37.642299      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/06/24 13:03:37.79
  Jul  6 13:03:37.794: INFO: Trying to get logs from node ip-172-31-9-199 pod downward-api-ed4b3e0a-82cb-40cb-be7e-5ea40ff672f3 container dapi-container: <nil>
  STEP: delete the pod @ 07/06/24 13:03:37.8
  Jul  6 13:03:37.814: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1297" for this suite. @ 07/06/24 13:03:37.818
• [4.071 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 07/06/24 13:03:37.823
  Jul  6 13:03:37.823: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename projected @ 07/06/24 13:03:37.823
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:03:37.839
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:03:37.84
  STEP: Creating a pod to test downward API volume plugin @ 07/06/24 13:03:37.842
  E0706 13:03:38.642549      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:03:39.642643      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:03:40.642677      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:03:41.642860      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/06/24 13:03:41.866
  Jul  6 13:03:41.870: INFO: Trying to get logs from node ip-172-31-24-251 pod downwardapi-volume-f8e1e839-cdc3-42a9-965b-629e13104d91 container client-container: <nil>
  STEP: delete the pod @ 07/06/24 13:03:41.876
  Jul  6 13:03:41.889: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3114" for this suite. @ 07/06/24 13:03:41.892
• [4.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 07/06/24 13:03:41.901
  Jul  6 13:03:41.901: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename containers @ 07/06/24 13:03:41.902
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:03:41.918
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:03:41.919
  E0706 13:03:42.643701      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:03:43.643813      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:03:43.944: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-8100" for this suite. @ 07/06/24 13:03:43.948
• [2.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 07/06/24 13:03:43.956
  Jul  6 13:03:43.956: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename endpointslicemirroring @ 07/06/24 13:03:43.956
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:03:43.973
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:03:43.974
  STEP: mirroring a new custom Endpoint @ 07/06/24 13:03:43.985
  Jul  6 13:03:43.993: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
  E0706 13:03:44.643927      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:03:45.644211      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mirroring an update to a custom Endpoint @ 07/06/24 13:03:45.997
  Jul  6 13:03:46.004: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  E0706 13:03:46.644300      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:03:47.644400      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mirroring deletion of a custom Endpoint @ 07/06/24 13:03:48.009
  Jul  6 13:03:48.017: INFO: Waiting for 0 EndpointSlices to exist, got 1
  E0706 13:03:48.644565      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:03:49.644801      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:03:50.021: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-5603" for this suite. @ 07/06/24 13:03:50.024
• [6.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:332
  STEP: Creating a kubernetes client @ 07/06/24 13:03:50.03
  Jul  6 13:03:50.030: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename statefulset @ 07/06/24 13:03:50.031
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:03:50.053
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:03:50.055
  STEP: Creating service test in namespace statefulset-2585 @ 07/06/24 13:03:50.057
  STEP: Creating a new StatefulSet @ 07/06/24 13:03:50.061
  Jul  6 13:03:50.072: INFO: Found 0 stateful pods, waiting for 3
  E0706 13:03:50.645211      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:03:51.645305      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:03:52.645371      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:03:53.645536      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:03:54.645720      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:03:55.646034      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:03:56.646460      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:03:57.646652      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:03:58.647589      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:03:59.647781      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:04:00.075: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Jul  6 13:04:00.075: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Jul  6 13:04:00.075: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 07/06/24 13:04:00.084
  Jul  6 13:04:00.104: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 07/06/24 13:04:00.104
  E0706 13:04:00.648839      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:04:01.648900      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:04:02.649038      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:04:03.649135      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:04:04.649311      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:04:05.650230      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:04:06.650312      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:04:07.650541      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:04:08.650613      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:04:09.651624      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 07/06/24 13:04:10.111
  STEP: Performing a canary update @ 07/06/24 13:04:10.111
  Jul  6 13:04:10.130: INFO: Updating stateful set ss2
  Jul  6 13:04:10.135: INFO: Waiting for Pod statefulset-2585/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0706 13:04:10.651713      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:04:11.651809      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:04:12.651902      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:04:13.651982      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:04:14.652096      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:04:15.652416      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:04:16.652491      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:04:17.652592      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:04:18.652713      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:04:19.652918      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 07/06/24 13:04:20.138
  Jul  6 13:04:20.170: INFO: Found 1 stateful pods, waiting for 3
  E0706 13:04:20.653226      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:04:21.653343      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:04:22.653502      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:04:23.653643      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:04:24.653761      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:04:25.654391      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:04:26.654658      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:04:27.654747      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:04:28.654832      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:04:29.654917      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:04:30.170: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Jul  6 13:04:30.170: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Jul  6 13:04:30.170: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 07/06/24 13:04:30.176
  Jul  6 13:04:30.195: INFO: Updating stateful set ss2
  Jul  6 13:04:30.200: INFO: Waiting for Pod statefulset-2585/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0706 13:04:30.655214      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:04:31.655317      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:04:32.655592      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:04:33.656262      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:04:34.656330      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:04:35.657349      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:04:36.657419      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:04:37.658122      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:04:38.658671      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:04:39.658772      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:04:40.222: INFO: Updating stateful set ss2
  Jul  6 13:04:40.226: INFO: Waiting for StatefulSet statefulset-2585/ss2 to complete update
  Jul  6 13:04:40.226: INFO: Waiting for Pod statefulset-2585/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0706 13:04:40.658946      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:04:41.659059      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:04:42.659628      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:04:43.659820      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:04:44.659939      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:04:45.660305      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:04:46.660619      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:04:47.660815      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:04:48.661009      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:04:49.661183      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:04:50.230: INFO: Deleting all statefulset in ns statefulset-2585
  Jul  6 13:04:50.233: INFO: Scaling statefulset ss2 to 0
  E0706 13:04:50.661997      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:04:51.662112      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:04:52.662998      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:04:53.663074      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:04:54.663161      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:04:55.664245      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:04:56.665175      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:04:57.665261      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:04:58.665514      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:04:59.666189      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:05:00.246: INFO: Waiting for statefulset status.replicas updated to 0
  Jul  6 13:05:00.249: INFO: Deleting statefulset ss2
  Jul  6 13:05:00.261: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2585" for this suite. @ 07/06/24 13:05:00.265
• [70.243 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 07/06/24 13:05:00.273
  Jul  6 13:05:00.273: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename webhook @ 07/06/24 13:05:00.274
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:05:00.289
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:05:00.291
  STEP: Setting up server cert @ 07/06/24 13:05:00.313
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/06/24 13:05:00.464
  STEP: Deploying the webhook pod @ 07/06/24 13:05:00.471
  STEP: Wait for the deployment to be ready @ 07/06/24 13:05:00.482
  Jul  6 13:05:00.488: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0706 13:05:00.667125      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:05:01.667606      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/06/24 13:05:02.499
  STEP: Verifying the service has paired with the endpoint @ 07/06/24 13:05:02.51
  E0706 13:05:02.667958      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:05:03.511: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 07/06/24 13:05:03.58
  STEP: Creating a configMap that should be mutated @ 07/06/24 13:05:03.589
  STEP: Deleting the collection of validation webhooks @ 07/06/24 13:05:03.613
  STEP: Creating a configMap that should not be mutated @ 07/06/24 13:05:03.659
  E0706 13:05:03.668333      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:05:03.697: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5073" for this suite. @ 07/06/24 13:05:03.7
  STEP: Destroying namespace "webhook-markers-5320" for this suite. @ 07/06/24 13:05:03.709
• [3.442 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 07/06/24 13:05:03.715
  Jul  6 13:05:03.715: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename dns @ 07/06/24 13:05:03.716
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:05:03.731
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:05:03.733
  STEP: Creating a test headless service @ 07/06/24 13:05:03.734
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-878.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-878.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-878.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-878.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-878.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-878.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-878.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-878.svc.cluster.local;sleep 1; done
   @ 07/06/24 13:05:03.74
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-878.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-878.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-878.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-878.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-878.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-878.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-878.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-878.svc.cluster.local;sleep 1; done
   @ 07/06/24 13:05:03.74
  STEP: creating a pod to probe DNS @ 07/06/24 13:05:03.74
  STEP: submitting the pod to kubernetes @ 07/06/24 13:05:03.74
  E0706 13:05:04.668476      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:05:05.668991      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/06/24 13:05:05.761
  STEP: looking for the results for each expected name from probers @ 07/06/24 13:05:05.764
  Jul  6 13:05:05.769: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-878.svc.cluster.local from pod dns-878/dns-test-6310b922-f52e-48c7-9559-a7f7a51e8186: the server could not find the requested resource (get pods dns-test-6310b922-f52e-48c7-9559-a7f7a51e8186)
  Jul  6 13:05:05.773: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-878.svc.cluster.local from pod dns-878/dns-test-6310b922-f52e-48c7-9559-a7f7a51e8186: the server could not find the requested resource (get pods dns-test-6310b922-f52e-48c7-9559-a7f7a51e8186)
  Jul  6 13:05:05.776: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-878.svc.cluster.local from pod dns-878/dns-test-6310b922-f52e-48c7-9559-a7f7a51e8186: the server could not find the requested resource (get pods dns-test-6310b922-f52e-48c7-9559-a7f7a51e8186)
  Jul  6 13:05:05.779: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-878.svc.cluster.local from pod dns-878/dns-test-6310b922-f52e-48c7-9559-a7f7a51e8186: the server could not find the requested resource (get pods dns-test-6310b922-f52e-48c7-9559-a7f7a51e8186)
  Jul  6 13:05:05.782: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-878.svc.cluster.local from pod dns-878/dns-test-6310b922-f52e-48c7-9559-a7f7a51e8186: the server could not find the requested resource (get pods dns-test-6310b922-f52e-48c7-9559-a7f7a51e8186)
  Jul  6 13:05:05.786: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-878.svc.cluster.local from pod dns-878/dns-test-6310b922-f52e-48c7-9559-a7f7a51e8186: the server could not find the requested resource (get pods dns-test-6310b922-f52e-48c7-9559-a7f7a51e8186)
  Jul  6 13:05:05.789: INFO: Unable to read jessie_udp@dns-test-service-2.dns-878.svc.cluster.local from pod dns-878/dns-test-6310b922-f52e-48c7-9559-a7f7a51e8186: the server could not find the requested resource (get pods dns-test-6310b922-f52e-48c7-9559-a7f7a51e8186)
  Jul  6 13:05:05.792: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-878.svc.cluster.local from pod dns-878/dns-test-6310b922-f52e-48c7-9559-a7f7a51e8186: the server could not find the requested resource (get pods dns-test-6310b922-f52e-48c7-9559-a7f7a51e8186)
  Jul  6 13:05:05.792: INFO: Lookups using dns-878/dns-test-6310b922-f52e-48c7-9559-a7f7a51e8186 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-878.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-878.svc.cluster.local wheezy_udp@dns-test-service-2.dns-878.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-878.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-878.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-878.svc.cluster.local jessie_udp@dns-test-service-2.dns-878.svc.cluster.local jessie_tcp@dns-test-service-2.dns-878.svc.cluster.local]

  Jul  6 13:05:05.799: INFO: Pod client logs for webserver: 
  Jul  6 13:05:05.804: INFO: Pod client logs for querier: 
  Jul  6 13:05:05.809: INFO: Pod client logs for jessie-querier: 
  E0706 13:05:06.669107      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:05:07.669715      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:05:08.669821      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:05:09.669937      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:05:10.670298      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:05:10.798: INFO: DNS probes using dns-878/dns-test-6310b922-f52e-48c7-9559-a7f7a51e8186 succeeded

  STEP: deleting the pod @ 07/06/24 13:05:10.798
  STEP: deleting the test headless service @ 07/06/24 13:05:10.809
  Jul  6 13:05:10.821: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-878" for this suite. @ 07/06/24 13:05:10.826
• [7.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 07/06/24 13:05:10.833
  Jul  6 13:05:10.833: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename projected @ 07/06/24 13:05:10.834
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:05:10.849
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:05:10.851
  STEP: Creating secret with name s-test-opt-del-0f39753f-37b5-4fe0-bfa5-e7350a61e3ed @ 07/06/24 13:05:10.855
  STEP: Creating secret with name s-test-opt-upd-c10a56f7-0647-4f9c-b98d-f752f222161c @ 07/06/24 13:05:10.859
  STEP: Creating the pod @ 07/06/24 13:05:10.862
  E0706 13:05:11.670549      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:05:12.671594      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-0f39753f-37b5-4fe0-bfa5-e7350a61e3ed @ 07/06/24 13:05:12.902
  STEP: Updating secret s-test-opt-upd-c10a56f7-0647-4f9c-b98d-f752f222161c @ 07/06/24 13:05:12.909
  STEP: Creating secret with name s-test-opt-create-b603ea14-89d3-4983-913b-8c28bfb33f85 @ 07/06/24 13:05:12.912
  STEP: waiting to observe update in volume @ 07/06/24 13:05:12.917
  E0706 13:05:13.672660      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:05:14.672772      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:05:15.672993      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:05:16.673581      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:05:17.674594      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:05:18.674802      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:05:19.674914      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:05:20.675236      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:05:21.675451      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:05:22.675560      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:05:23.676545      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:05:24.676664      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:05:25.676691      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:05:26.676782      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:05:27.676874      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:05:28.676977      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:05:29.677217      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:05:30.678272      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:05:31.678388      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:05:32.678573      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:05:33.678663      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:05:34.678768      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:05:35.679304      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:05:36.679471      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:05:37.679561      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:05:38.679650      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:05:39.679752      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:05:40.680734      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:05:41.681521      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:05:42.681598      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:05:43.681857      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:05:44.681946      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:05:45.682293      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:05:46.682347      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:05:47.682560      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:05:48.682647      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:05:49.682728      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:05:50.683709      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:05:51.683808      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:05:52.684005      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:05:53.684757      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:05:54.684868      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:05:55.685252      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:05:56.685610      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:05:57.686123      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:05:58.686653      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:05:59.686625      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:06:00.686680      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:06:01.687636      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:06:02.687816      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:06:03.688885      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:06:04.689159      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:06:05.690080      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:06:06.690149      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:06:07.691041      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:06:08.691599      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:06:09.692336      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:06:10.693441      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:06:11.693865      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:06:12.693968      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:06:13.694060      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:06:14.694246      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:06:15.695261      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:06:16.695343      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:06:17.695422      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:06:18.695588      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:06:19.696149      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:06:20.696204      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:06:21.696297      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:06:22.696485      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:06:23.696573      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:06:24.696680      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:06:25.697200      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:06:26.697305      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:06:27.698205      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:06:28.698353      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:06:29.699011      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:06:30.699303      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:06:31.699394      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:06:32.699593      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:06:33.700452      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:06:34.700641      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:06:35.700672      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:06:36.700991      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:06:37.701144      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:06:38.701259      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:06:39.701673      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:06:40.701931      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:06:41.702910      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:06:42.703943      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:06:43.704034      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:06:44.704148      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:06:45.314: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-766" for this suite. @ 07/06/24 13:06:45.317
• [94.491 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 07/06/24 13:06:45.324
  Jul  6 13:06:45.324: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename events @ 07/06/24 13:06:45.324
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:06:45.341
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:06:45.343
  STEP: creating a test event @ 07/06/24 13:06:45.344
  STEP: listing events in all namespaces @ 07/06/24 13:06:45.354
  STEP: listing events in test namespace @ 07/06/24 13:06:45.36
  STEP: listing events with field selection filtering on source @ 07/06/24 13:06:45.362
  STEP: listing events with field selection filtering on reportingController @ 07/06/24 13:06:45.364
  STEP: getting the test event @ 07/06/24 13:06:45.367
  STEP: patching the test event @ 07/06/24 13:06:45.369
  STEP: getting the test event @ 07/06/24 13:06:45.377
  STEP: updating the test event @ 07/06/24 13:06:45.379
  STEP: getting the test event @ 07/06/24 13:06:45.385
  STEP: deleting the test event @ 07/06/24 13:06:45.387
  STEP: listing events in all namespaces @ 07/06/24 13:06:45.396
  STEP: listing events in test namespace @ 07/06/24 13:06:45.401
  Jul  6 13:06:45.404: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-6156" for this suite. @ 07/06/24 13:06:45.408
• [0.089 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 07/06/24 13:06:45.413
  Jul  6 13:06:45.413: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename sched-preemption @ 07/06/24 13:06:45.414
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:06:45.43
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:06:45.432
  Jul  6 13:06:45.452: INFO: Waiting up to 1m0s for all nodes to be ready
  E0706 13:06:45.704758      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:06:46.705655      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:06:47.706444      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:06:48.706562      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:06:49.706646      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:06:50.706718      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:06:51.706817      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:06:52.707661      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:06:53.708577      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:06:54.708683      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:06:55.709141      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:06:56.709213      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:06:57.710011      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:06:58.710114      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:06:59.710896      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:07:00.711286      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:07:01.712145      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:07:02.712242      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:07:03.712936      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:07:04.713012      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:07:05.713271      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:07:06.713347      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:07:07.714061      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:07:08.714128      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:07:09.714992      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:07:10.715292      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:07:11.715438      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:07:12.715569      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:07:13.716303      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:07:14.716373      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:07:15.717379      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:07:16.717441      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:07:17.717693      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:07:18.717956      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:07:19.718079      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:07:20.718307      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:07:21.718996      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:07:22.719088      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:07:23.719322      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:07:24.719578      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:07:25.720605      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:07:26.720708      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:07:27.720848      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:07:28.721026      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:07:29.721856      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:07:30.722234      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:07:31.723205      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:07:32.723303      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:07:33.723533      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:07:34.723791      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:07:35.724263      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:07:36.724359      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:07:37.725353      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:07:38.725433      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:07:39.726432      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:07:40.726755      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:07:41.727332      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:07:42.728005      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:07:43.728435      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:07:44.728547      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:07:45.457: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 07/06/24 13:07:45.459
  Jul  6 13:07:45.459: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename sched-preemption-path @ 07/06/24 13:07:45.46
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:07:45.477
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:07:45.479
  Jul  6 13:07:45.492: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  Jul  6 13:07:45.495: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  Jul  6 13:07:45.556: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-5612" for this suite. @ 07/06/24 13:07:45.56
  Jul  6 13:07:45.565: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-2011" for this suite. @ 07/06/24 13:07:45.568
• [60.160 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:572
  STEP: Creating a kubernetes client @ 07/06/24 13:07:45.574
  Jul  6 13:07:45.574: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename job @ 07/06/24 13:07:45.574
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:07:45.59
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:07:45.591
  STEP: Creating a job @ 07/06/24 13:07:45.593
  STEP: Ensuring job reaches completions @ 07/06/24 13:07:45.599
  E0706 13:07:45.729188      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:07:46.729290      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:07:47.729760      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:07:48.729902      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:07:49.730618      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:07:50.730710      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:07:51.731007      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:07:52.731107      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:07:53.731869      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:07:54.731972      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:07:55.603: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9880" for this suite. @ 07/06/24 13:07:55.606
• [10.038 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 07/06/24 13:07:55.612
  Jul  6 13:07:55.612: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename downward-api @ 07/06/24 13:07:55.613
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:07:55.628
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:07:55.63
  STEP: Creating a pod to test downward API volume plugin @ 07/06/24 13:07:55.631
  E0706 13:07:55.732271      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:07:56.732368      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:07:57.733186      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:07:58.733277      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/06/24 13:07:59.653
  Jul  6 13:07:59.657: INFO: Trying to get logs from node ip-172-31-24-251 pod downwardapi-volume-008217a8-d6b6-43da-89a7-807c1ff8724a container client-container: <nil>
  STEP: delete the pod @ 07/06/24 13:07:59.663
  Jul  6 13:07:59.679: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-364" for this suite. @ 07/06/24 13:07:59.682
• [4.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 07/06/24 13:07:59.689
  Jul  6 13:07:59.689: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename downward-api @ 07/06/24 13:07:59.689
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:07:59.706
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:07:59.708
  STEP: Creating a pod to test downward API volume plugin @ 07/06/24 13:07:59.71
  E0706 13:07:59.733606      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:08:00.733704      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:08:01.734278      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:08:02.734508      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/06/24 13:08:03.733
  E0706 13:08:03.735408      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:08:03.736: INFO: Trying to get logs from node ip-172-31-24-251 pod downwardapi-volume-d2366a04-2a48-4fb3-8c7b-8e7a02aa285c container client-container: <nil>
  STEP: delete the pod @ 07/06/24 13:08:03.74
  Jul  6 13:08:03.754: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1902" for this suite. @ 07/06/24 13:08:03.757
• [4.073 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 07/06/24 13:08:03.762
  Jul  6 13:08:03.762: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename pods @ 07/06/24 13:08:03.762
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:08:03.78
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:08:03.782
  STEP: Create a pod @ 07/06/24 13:08:03.783
  E0706 13:08:04.736155      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:08:05.736281      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 07/06/24 13:08:05.796
  Jul  6 13:08:05.804: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
  Jul  6 13:08:05.804: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9797" for this suite. @ 07/06/24 13:08:05.807
• [2.050 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 07/06/24 13:08:05.816
  Jul  6 13:08:05.816: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename configmap @ 07/06/24 13:08:05.817
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:08:05.835
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:08:05.837
  STEP: Creating configMap with name configmap-test-volume-509196f9-2cfb-4d4c-8c54-ae295fd14f14 @ 07/06/24 13:08:05.839
  STEP: Creating a pod to test consume configMaps @ 07/06/24 13:08:05.845
  E0706 13:08:06.736435      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:08:07.736674      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:08:08.736758      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:08:09.736884      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/06/24 13:08:09.861
  Jul  6 13:08:09.865: INFO: Trying to get logs from node ip-172-31-9-199 pod pod-configmaps-e0320c49-0f2f-4bca-a056-e3e8047b322e container agnhost-container: <nil>
  STEP: delete the pod @ 07/06/24 13:08:09.877
  Jul  6 13:08:09.890: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-385" for this suite. @ 07/06/24 13:08:09.893
• [4.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1280
  STEP: Creating a kubernetes client @ 07/06/24 13:08:09.899
  Jul  6 13:08:09.899: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename services @ 07/06/24 13:08:09.9
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:08:09.918
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:08:09.919
  STEP: creating service nodeport-test with type=NodePort in namespace services-8069 @ 07/06/24 13:08:09.921
  STEP: creating replication controller nodeport-test in namespace services-8069 @ 07/06/24 13:08:09.935
  I0706 13:08:09.943822      21 runners.go:197] Created replication controller with name: nodeport-test, namespace: services-8069, replica count: 2
  E0706 13:08:10.737421      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:08:11.738349      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:08:12.738559      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0706 13:08:12.995078      21 runners.go:197] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jul  6 13:08:12.995: INFO: Creating new exec pod
  E0706 13:08:13.739611      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:08:14.739675      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:08:15.740383      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:08:16.015: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=services-8069 exec execpodj6lr5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Jul  6 13:08:16.103: INFO: stderr: "+ nc -v -t -w 2 nodeport-test 80\n+ echo hostName\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Jul  6 13:08:16.103: INFO: stdout: "nodeport-test-lctmp"
  Jul  6 13:08:16.103: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=services-8069 exec execpodj6lr5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.68 80'
  Jul  6 13:08:16.190: INFO: stderr: "+ nc -v -t -w 2 10.152.183.68 80\n+ echo hostName\nConnection to 10.152.183.68 80 port [tcp/http] succeeded!\n"
  Jul  6 13:08:16.190: INFO: stdout: ""
  E0706 13:08:16.740474      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:08:17.104: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=services-8069 exec execpodj6lr5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.68 80'
  Jul  6 13:08:17.186: INFO: stderr: "+ nc -v -t -w 2 10.152.183.68 80\n+ echo hostName\nConnection to 10.152.183.68 80 port [tcp/http] succeeded!\n"
  Jul  6 13:08:17.186: INFO: stdout: "nodeport-test-lctmp"
  Jul  6 13:08:17.186: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=services-8069 exec execpodj6lr5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.9.199 32543'
  Jul  6 13:08:17.277: INFO: stderr: "+ nc -v -t -w 2 172.31.9.199 32543\n+ echo hostName\nConnection to 172.31.9.199 32543 port [tcp/*] succeeded!\n"
  Jul  6 13:08:17.277: INFO: stdout: ""
  E0706 13:08:17.740547      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:08:18.186: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=services-8069 exec execpodj6lr5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.9.199 32543'
  Jul  6 13:08:18.269: INFO: stderr: "+ nc -v -t -w 2 172.31.9.199 32543\n+ echo hostName\nConnection to 172.31.9.199 32543 port [tcp/*] succeeded!\n"
  Jul  6 13:08:18.269: INFO: stdout: ""
  E0706 13:08:18.740602      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:08:19.187: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=services-8069 exec execpodj6lr5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.9.199 32543'
  Jul  6 13:08:19.271: INFO: stderr: "+ nc -v -t -w 2 172.31.9.199 32543\n+ echo hostName\nConnection to 172.31.9.199 32543 port [tcp/*] succeeded!\n"
  Jul  6 13:08:19.271: INFO: stdout: "nodeport-test-c4lm8"
  Jul  6 13:08:19.271: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=services-8069 exec execpodj6lr5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.24.251 32543'
  Jul  6 13:08:19.354: INFO: stderr: "+ nc -v -t -w 2 172.31.24.251 32543\nConnection to 172.31.24.251 32543 port [tcp/*] succeeded!\n+ echo hostName\n"
  Jul  6 13:08:19.354: INFO: stdout: "nodeport-test-c4lm8"
  Jul  6 13:08:19.354: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8069" for this suite. @ 07/06/24 13:08:19.357
• [9.465 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 07/06/24 13:08:19.364
  Jul  6 13:08:19.364: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename emptydir @ 07/06/24 13:08:19.365
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:08:19.38
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:08:19.382
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 07/06/24 13:08:19.384
  E0706 13:08:19.741618      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:08:20.741698      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:08:21.741821      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:08:22.741950      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/06/24 13:08:23.405
  Jul  6 13:08:23.410: INFO: Trying to get logs from node ip-172-31-24-251 pod pod-3b01198a-0c13-481b-b8a3-58cb4a1ca069 container test-container: <nil>
  STEP: delete the pod @ 07/06/24 13:08:23.416
  Jul  6 13:08:23.426: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6462" for this suite. @ 07/06/24 13:08:23.429
• [4.072 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 07/06/24 13:08:23.437
  Jul  6 13:08:23.437: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename replicaset @ 07/06/24 13:08:23.437
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:08:23.454
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:08:23.456
  STEP: Create a ReplicaSet @ 07/06/24 13:08:23.457
  STEP: Verify that the required pods have come up @ 07/06/24 13:08:23.462
  Jul  6 13:08:23.465: INFO: Pod name sample-pod: Found 0 pods out of 3
  E0706 13:08:23.742117      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:08:24.742205      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:08:25.742204      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:08:26.742247      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:08:27.742630      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:08:28.470: INFO: Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 07/06/24 13:08:28.47
  Jul  6 13:08:28.472: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 07/06/24 13:08:28.472
  STEP: DeleteCollection of the ReplicaSets @ 07/06/24 13:08:28.476
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 07/06/24 13:08:28.483
  Jul  6 13:08:28.487: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7894" for this suite. @ 07/06/24 13:08:28.491
• [5.063 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 07/06/24 13:08:28.501
  Jul  6 13:08:28.501: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename namespaces @ 07/06/24 13:08:28.501
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:08:28.524
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:08:28.526
  STEP: Creating namespace "e2e-ns-j2k6w" @ 07/06/24 13:08:28.529
  Jul  6 13:08:28.550: INFO: Namespace "e2e-ns-j2k6w-7605" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-j2k6w-7605" @ 07/06/24 13:08:28.55
  Jul  6 13:08:28.556: INFO: Namespace "e2e-ns-j2k6w-7605" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-j2k6w-7605" @ 07/06/24 13:08:28.556
  Jul  6 13:08:28.565: INFO: Namespace "e2e-ns-j2k6w-7605" has []v1.FinalizerName{"kubernetes"}
  Jul  6 13:08:28.565: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3842" for this suite. @ 07/06/24 13:08:28.568
  STEP: Destroying namespace "e2e-ns-j2k6w-7605" for this suite. @ 07/06/24 13:08:28.573
• [0.078 seconds]
------------------------------
S
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:169
  STEP: Creating a kubernetes client @ 07/06/24 13:08:28.579
  Jul  6 13:08:28.579: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 07/06/24 13:08:28.58
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:08:28.595
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:08:28.597
  STEP: create the container to handle the HTTPGet hook request. @ 07/06/24 13:08:28.603
  E0706 13:08:28.743599      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:08:29.744608      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 07/06/24 13:08:30.618
  E0706 13:08:30.745767      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:08:31.745823      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 07/06/24 13:08:32.636
  STEP: delete the pod with lifecycle hook @ 07/06/24 13:08:32.649
  E0706 13:08:32.746141      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:08:33.746562      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:08:34.664: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-4829" for this suite. @ 07/06/24 13:08:34.669
• [6.095 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 07/06/24 13:08:34.674
  Jul  6 13:08:34.674: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename csiinlinevolumes @ 07/06/24 13:08:34.674
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:08:34.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:08:34.693
  STEP: Creating two CSIDrivers @ 07/06/24 13:08:34.694
  STEP: Getting "inline-driver-c43d8556-6d09-44dd-8448-4689de36f916" & "inline-driver-d3d955a6-450e-490e-9d47-5a989042d666" @ 07/06/24 13:08:34.709
  STEP: Patching the CSIDriver "inline-driver-d3d955a6-450e-490e-9d47-5a989042d666" @ 07/06/24 13:08:34.713
  STEP: Updating the CSIDriver "inline-driver-d3d955a6-450e-490e-9d47-5a989042d666" @ 07/06/24 13:08:34.718
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-2607" @ 07/06/24 13:08:34.726
  STEP: Deleting CSIDriver "inline-driver-c43d8556-6d09-44dd-8448-4689de36f916" @ 07/06/24 13:08:34.729
  STEP: Confirm deletion of CSIDriver "inline-driver-c43d8556-6d09-44dd-8448-4689de36f916" @ 07/06/24 13:08:34.734
  STEP: Deleting CSIDriver "inline-driver-d3d955a6-450e-490e-9d47-5a989042d666" via DeleteCollection @ 07/06/24 13:08:34.737
  STEP: Confirm deletion of CSIDriver "inline-driver-d3d955a6-450e-490e-9d47-5a989042d666" @ 07/06/24 13:08:34.743
  Jul  6 13:08:34.746: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0706 13:08:34.747209      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "csiinlinevolumes-2607" for this suite. @ 07/06/24 13:08:34.749
• [0.079 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 07/06/24 13:08:34.753
  Jul  6 13:08:34.753: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename container-probe @ 07/06/24 13:08:34.754
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:08:34.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:08:34.771
  STEP: Creating pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475 @ 07/06/24 13:08:34.772
  E0706 13:08:35.748348      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:08:36.748433      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/06/24 13:08:36.791
  Jul  6 13:08:36.795: INFO: Initial restart count of pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 is 0
  Jul  6 13:08:36.797: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:08:37.748936      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:08:38.749243      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:08:38.801: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:08:39.749917      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:08:40.750256      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:08:40.805: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:08:41.750553      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:08:42.751613      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:08:42.811: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:08:43.751815      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:08:44.751893      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:08:44.815: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:08:45.752739      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:08:46.752816      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:08:46.821: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:08:47.752927      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:08:48.753001      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:08:48.825: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:08:49.753829      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:08:50.754398      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:08:50.831: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:08:51.754563      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:08:52.754650      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:08:52.835: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:08:53.755026      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:08:54.755123      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:08:54.840: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:08:55.755425      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:08:56.755539      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:08:56.844: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:08:57.755627      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:08:58.755711      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:08:58.849: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:08:59.755811      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:09:00.756787      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:09:00.854: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:09:01.756895      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:09:02.757096      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:09:02.858: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:09:03.757855      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:09:04.758035      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:09:04.862: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:09:05.759084      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:09:06.759255      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:09:06.867: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:09:07.759578      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:09:08.759671      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:09:08.871: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:09:09.759890      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:09:10.760207      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:09:10.874: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:09:11.760295      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:09:12.760372      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:09:12.879: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:09:13.760655      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:09:14.761414      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:09:14.882: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:09:15.762343      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:09:16.762553      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:09:16.887: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:09:17.763220      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:09:18.763329      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:09:18.892: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:09:19.764174      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:09:20.764268      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:09:20.897: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:09:21.765249      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:09:22.765356      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:09:22.901: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:09:23.765495      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:09:24.765611      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:09:24.905: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:09:25.766455      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:09:26.766648      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:09:26.909: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:09:27.767720      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:09:28.767813      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:09:28.914: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:09:29.768536      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:09:30.768826      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:09:30.919: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:09:31.768940      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:09:32.769127      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:09:32.923: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:09:33.769804      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:09:34.769998      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:09:34.928: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:09:35.770027      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:09:36.770128      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:09:36.933: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:09:37.770325      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:09:38.770445      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:09:38.942: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:09:39.770532      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:09:40.770769      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:09:40.947: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:09:41.770865      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:09:42.771634      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:09:42.951: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:09:43.772152      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:09:44.772216      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:09:44.955: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:09:45.773003      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:09:46.773181      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:09:46.961: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:09:47.773365      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:09:48.774385      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:09:48.965: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:09:49.774556      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:09:50.774636      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:09:50.970: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:09:51.775621      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:09:52.775808      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:09:52.975: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:09:53.775893      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:09:54.776154      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:09:54.978: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:09:55.776255      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:09:56.776429      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:09:56.982: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:09:57.776565      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:09:58.776637      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:09:58.988: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:09:59.776957      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:10:00.777634      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:10:00.992: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:10:01.778431      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:10:02.778542      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:10:02.997: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:10:03.778660      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:10:04.778750      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:10:05.002: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:10:05.779215      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:10:06.779550      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:10:07.006: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:10:07.779662      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:10:08.779940      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:10:09.011: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:10:09.780536      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:10:10.780829      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:10:11.014: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:10:11.780926      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:10:12.781030      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:10:13.017: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:10:13.781150      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:10:14.781435      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:10:15.022: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:10:15.782356      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:10:16.782528      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:10:17.026: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:10:17.783606      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:10:18.783688      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:10:19.030: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:10:19.783916      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:10:20.784252      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:10:21.036: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:10:21.784342      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:10:22.784631      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:10:23.040: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:10:23.785440      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:10:24.785536      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:10:25.045: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:10:25.786087      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:10:26.786318      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:10:27.050: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:10:27.786527      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:10:28.786613      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:10:29.054: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:10:29.787594      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:10:30.787760      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:10:31.058: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:10:31.787854      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:10:32.788204      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:10:33.063: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:10:33.788299      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:10:34.788452      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:10:35.067: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:10:35.789293      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:10:36.789425      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:10:37.073: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:10:37.789517      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:10:38.790008      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:10:39.077: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:10:39.790528      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:10:40.790819      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:10:41.082: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:10:41.791616      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:10:42.791707      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:10:43.086: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:10:43.791981      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:10:44.792852      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:10:45.091: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:10:45.793251      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:10:46.793313      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:10:47.096: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:10:47.794325      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:10:48.794528      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:10:49.101: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:10:49.795309      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:10:50.795372      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:10:51.105: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:10:51.795532      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:10:52.795605      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:10:53.112: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:10:53.796562      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:10:54.796769      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:10:55.117: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:10:55.796857      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:10:56.796956      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:10:57.121: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:10:57.797171      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:10:58.797294      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:10:59.124: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:10:59.797428      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:11:00.797856      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:11:01.130: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:11:01.798806      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:11:02.798875      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:11:03.133: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:11:03.799498      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:11:04.799666      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:11:05.139: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:11:05.799840      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:11:06.800034      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:11:07.145: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:11:07.800204      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:11:08.800459      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:11:09.149: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:11:09.801066      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:11:10.801247      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:11:11.153: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:11:11.802246      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:11:12.802352      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:11:13.158: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:11:13.802610      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:11:14.803623      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:11:15.162: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:11:15.804069      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:11:16.804304      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:11:17.166: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:11:17.804393      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:11:18.804584      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:11:19.170: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:11:19.805074      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:11:20.805163      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:11:21.175: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:11:21.805263      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:11:22.805489      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:11:23.180: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:11:23.806264      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:11:24.806355      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:11:25.185: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:11:25.807135      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:11:26.807222      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:11:27.190: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:11:27.807268      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:11:28.807388      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:11:29.194: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:11:29.807851      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:11:30.808448      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:11:31.198: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:11:31.808892      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:11:32.809249      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:11:33.202: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:11:33.810236      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:11:34.810417      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:11:35.206: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:11:35.811095      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:11:36.811193      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:11:37.209: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:11:37.811498      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:11:38.811579      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:11:39.213: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:11:39.812000      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:11:40.812431      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:11:41.218: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:11:41.812553      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:11:42.812658      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:11:43.223: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:11:43.813003      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:11:44.813186      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:11:45.228: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:11:45.813884      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:11:46.814063      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:11:47.233: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:11:47.814206      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:11:48.814296      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:11:49.237: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:11:49.815283      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:11:50.815590      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:11:51.242: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:11:51.815711      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:11:52.815809      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:11:53.246: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:11:53.816078      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:11:54.816171      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:11:55.250: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:11:55.816833      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:11:56.816918      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:11:57.254: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:11:57.818005      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:11:58.818115      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:11:59.259: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:11:59.818911      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:12:00.819277      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:12:01.264: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:12:01.819498      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:12:02.819594      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:12:03.269: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:12:03.820566      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:12:04.820669      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:12:05.274: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:12:05.820828      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:12:06.821178      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:12:07.278: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:12:07.821139      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:12:08.821306      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:12:09.282: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:12:09.821407      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:12:10.821747      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:12:11.288: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:12:11.822699      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:12:12.822793      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:12:13.291: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:12:13.823089      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:12:14.823589      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:12:15.297: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:12:15.824192      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:12:16.824362      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:12:17.301: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:12:17.824996      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:12:18.825087      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:12:19.306: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:12:19.825410      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:12:20.826431      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:12:21.315: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:12:21.826527      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:12:22.826617      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:12:23.318: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:12:23.827421      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:12:24.827554      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:12:25.322: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:12:25.827645      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:12:26.827836      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:12:27.326: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:12:27.828157      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:12:28.828265      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:12:29.330: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:12:29.828813      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:12:30.829895      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:12:31.335: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:12:31.829988      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:12:32.830099      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:12:33.338: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:12:33.830510      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:12:34.830780      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:12:35.342: INFO: Get pod busybox-3217a59d-ac7a-4b8a-b33f-21ba650fdbe5 in namespace container-probe-8475
  E0706 13:12:35.831015      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:12:36.831844      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 07/06/24 13:12:37.343
  Jul  6 13:12:37.355: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8475" for this suite. @ 07/06/24 13:12:37.359
• [242.611 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 07/06/24 13:12:37.365
  Jul  6 13:12:37.365: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename discovery @ 07/06/24 13:12:37.365
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:12:37.381
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:12:37.383
  STEP: Setting up server cert @ 07/06/24 13:12:37.385
  Jul  6 13:12:37.605: INFO: Checking APIGroup: apiregistration.k8s.io
  Jul  6 13:12:37.606: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  Jul  6 13:12:37.606: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
  Jul  6 13:12:37.606: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  Jul  6 13:12:37.606: INFO: Checking APIGroup: apps
  Jul  6 13:12:37.606: INFO: PreferredVersion.GroupVersion: apps/v1
  Jul  6 13:12:37.606: INFO: Versions found [{apps/v1 v1}]
  Jul  6 13:12:37.606: INFO: apps/v1 matches apps/v1
  Jul  6 13:12:37.606: INFO: Checking APIGroup: events.k8s.io
  Jul  6 13:12:37.607: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
  Jul  6 13:12:37.607: INFO: Versions found [{events.k8s.io/v1 v1}]
  Jul  6 13:12:37.607: INFO: events.k8s.io/v1 matches events.k8s.io/v1
  Jul  6 13:12:37.607: INFO: Checking APIGroup: authentication.k8s.io
  Jul  6 13:12:37.607: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
  Jul  6 13:12:37.607: INFO: Versions found [{authentication.k8s.io/v1 v1}]
  Jul  6 13:12:37.607: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
  Jul  6 13:12:37.607: INFO: Checking APIGroup: authorization.k8s.io
  Jul  6 13:12:37.608: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
  Jul  6 13:12:37.608: INFO: Versions found [{authorization.k8s.io/v1 v1}]
  Jul  6 13:12:37.608: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
  Jul  6 13:12:37.608: INFO: Checking APIGroup: autoscaling
  Jul  6 13:12:37.609: INFO: PreferredVersion.GroupVersion: autoscaling/v2
  Jul  6 13:12:37.609: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  Jul  6 13:12:37.609: INFO: autoscaling/v2 matches autoscaling/v2
  Jul  6 13:12:37.609: INFO: Checking APIGroup: batch
  Jul  6 13:12:37.609: INFO: PreferredVersion.GroupVersion: batch/v1
  Jul  6 13:12:37.609: INFO: Versions found [{batch/v1 v1}]
  Jul  6 13:12:37.609: INFO: batch/v1 matches batch/v1
  Jul  6 13:12:37.609: INFO: Checking APIGroup: certificates.k8s.io
  Jul  6 13:12:37.610: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
  Jul  6 13:12:37.610: INFO: Versions found [{certificates.k8s.io/v1 v1}]
  Jul  6 13:12:37.610: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
  Jul  6 13:12:37.610: INFO: Checking APIGroup: networking.k8s.io
  Jul  6 13:12:37.611: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
  Jul  6 13:12:37.611: INFO: Versions found [{networking.k8s.io/v1 v1}]
  Jul  6 13:12:37.611: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
  Jul  6 13:12:37.611: INFO: Checking APIGroup: policy
  Jul  6 13:12:37.611: INFO: PreferredVersion.GroupVersion: policy/v1
  Jul  6 13:12:37.611: INFO: Versions found [{policy/v1 v1}]
  Jul  6 13:12:37.611: INFO: policy/v1 matches policy/v1
  Jul  6 13:12:37.611: INFO: Checking APIGroup: rbac.authorization.k8s.io
  Jul  6 13:12:37.612: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  Jul  6 13:12:37.612: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
  Jul  6 13:12:37.612: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  Jul  6 13:12:37.612: INFO: Checking APIGroup: storage.k8s.io
  Jul  6 13:12:37.613: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
  Jul  6 13:12:37.613: INFO: Versions found [{storage.k8s.io/v1 v1}]
  Jul  6 13:12:37.613: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
  Jul  6 13:12:37.613: INFO: Checking APIGroup: admissionregistration.k8s.io
  Jul  6 13:12:37.613: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  Jul  6 13:12:37.613: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
  Jul  6 13:12:37.613: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  Jul  6 13:12:37.613: INFO: Checking APIGroup: apiextensions.k8s.io
  Jul  6 13:12:37.614: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  Jul  6 13:12:37.614: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
  Jul  6 13:12:37.614: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  Jul  6 13:12:37.614: INFO: Checking APIGroup: scheduling.k8s.io
  Jul  6 13:12:37.615: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  Jul  6 13:12:37.615: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
  Jul  6 13:12:37.615: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  Jul  6 13:12:37.615: INFO: Checking APIGroup: coordination.k8s.io
  Jul  6 13:12:37.615: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
  Jul  6 13:12:37.615: INFO: Versions found [{coordination.k8s.io/v1 v1}]
  Jul  6 13:12:37.615: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
  Jul  6 13:12:37.615: INFO: Checking APIGroup: node.k8s.io
  Jul  6 13:12:37.616: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
  Jul  6 13:12:37.616: INFO: Versions found [{node.k8s.io/v1 v1}]
  Jul  6 13:12:37.616: INFO: node.k8s.io/v1 matches node.k8s.io/v1
  Jul  6 13:12:37.616: INFO: Checking APIGroup: discovery.k8s.io
  Jul  6 13:12:37.616: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
  Jul  6 13:12:37.616: INFO: Versions found [{discovery.k8s.io/v1 v1}]
  Jul  6 13:12:37.616: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
  Jul  6 13:12:37.616: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
  Jul  6 13:12:37.617: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  Jul  6 13:12:37.617: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1 v1} {flowcontrol.apiserver.k8s.io/v1beta3 v1beta3}]
  Jul  6 13:12:37.617: INFO: flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  Jul  6 13:12:37.617: INFO: Checking APIGroup: metrics.k8s.io
  Jul  6 13:12:37.617: INFO: PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  Jul  6 13:12:37.617: INFO: Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  Jul  6 13:12:37.617: INFO: metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  Jul  6 13:12:37.617: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-9541" for this suite. @ 07/06/24 13:12:37.621
• [0.264 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 07/06/24 13:12:37.629
  Jul  6 13:12:37.629: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename pod-network-test @ 07/06/24 13:12:37.629
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:12:37.648
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:12:37.65
  STEP: Performing setup for networking test in namespace pod-network-test-5975 @ 07/06/24 13:12:37.652
  STEP: creating a selector @ 07/06/24 13:12:37.652
  STEP: Creating the service pods in kubernetes @ 07/06/24 13:12:37.652
  Jul  6 13:12:37.652: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0706 13:12:37.832869      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:12:38.833252      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:12:39.833728      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:12:40.833821      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:12:41.834042      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:12:42.834271      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:12:43.834853      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:12:44.834992      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:12:45.835773      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:12:46.835922      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:12:47.836473      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:12:48.836848      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:12:49.836955      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:12:50.837314      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:12:51.837385      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:12:52.837703      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:12:53.838696      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:12:54.839611      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:12:55.840608      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:12:56.840810      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:12:57.841009      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:12:58.841200      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 07/06/24 13:12:59.747
  E0706 13:12:59.841940      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:13:00.842031      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:13:01.761: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Jul  6 13:13:01.761: INFO: Breadth first check of 192.168.140.2 on host 172.31.24.251...
  Jul  6 13:13:01.764: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.140.3:9080/dial?request=hostname&protocol=http&host=192.168.140.2&port=8083&tries=1'] Namespace:pod-network-test-5975 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul  6 13:13:01.764: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  Jul  6 13:13:01.764: INFO: ExecWithOptions: Clientset creation
  Jul  6 13:13:01.764: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-5975/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.140.3%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.140.2%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jul  6 13:13:01.814: INFO: Waiting for responses: map[]
  Jul  6 13:13:01.814: INFO: reached 192.168.140.2 after 0/1 tries
  Jul  6 13:13:01.814: INFO: Breadth first check of 192.168.112.95 on host 172.31.9.199...
  Jul  6 13:13:01.818: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.140.3:9080/dial?request=hostname&protocol=http&host=192.168.112.95&port=8083&tries=1'] Namespace:pod-network-test-5975 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul  6 13:13:01.818: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  Jul  6 13:13:01.818: INFO: ExecWithOptions: Clientset creation
  Jul  6 13:13:01.818: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-5975/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.140.3%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.112.95%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  E0706 13:13:01.842953      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:13:01.863: INFO: Waiting for responses: map[]
  Jul  6 13:13:01.863: INFO: reached 192.168.112.95 after 0/1 tries
  Jul  6 13:13:01.863: INFO: Breadth first check of 192.168.204.105 on host 172.31.90.155...
  Jul  6 13:13:01.866: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.140.3:9080/dial?request=hostname&protocol=http&host=192.168.204.105&port=8083&tries=1'] Namespace:pod-network-test-5975 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul  6 13:13:01.866: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  Jul  6 13:13:01.867: INFO: ExecWithOptions: Clientset creation
  Jul  6 13:13:01.867: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-5975/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.140.3%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.204.105%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jul  6 13:13:01.911: INFO: Waiting for responses: map[]
  Jul  6 13:13:01.911: INFO: reached 192.168.204.105 after 0/1 tries
  Jul  6 13:13:01.911: INFO: Going to retry 0 out of 3 pods....
  Jul  6 13:13:01.911: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-5975" for this suite. @ 07/06/24 13:13:01.914
• [24.291 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 07/06/24 13:13:01.92
  Jul  6 13:13:01.920: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename deployment @ 07/06/24 13:13:01.92
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:13:01.938
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:13:01.939
  STEP: creating a Deployment @ 07/06/24 13:13:01.944
  Jul  6 13:13:01.944: INFO: Creating simple deployment test-deployment-zqclz
  Jul  6 13:13:01.955: INFO: new replicaset for deployment "test-deployment-zqclz" is yet to be created
  E0706 13:13:02.843125      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:13:03.843399      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Getting /status @ 07/06/24 13:13:03.969
  Jul  6 13:13:03.973: INFO: Deployment test-deployment-zqclz has Conditions: [{Available True 2024-07-06 13:13:02 +0000 UTC 2024-07-06 13:13:02 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2024-07-06 13:13:02 +0000 UTC 2024-07-06 13:13:01 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-zqclz-5d576bd769" has successfully progressed.}]
  STEP: updating Deployment Status @ 07/06/24 13:13:03.973
  Jul  6 13:13:03.981: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.July, 6, 13, 13, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 6, 13, 13, 2, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 6, 13, 13, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 6, 13, 13, 1, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-zqclz-5d576bd769\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 07/06/24 13:13:03.981
  Jul  6 13:13:03.982: INFO: Observed &Deployment event: ADDED
  Jul  6 13:13:03.982: INFO: Observed Deployment test-deployment-zqclz in namespace deployment-6481 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-06 13:13:01 +0000 UTC 2024-07-06 13:13:01 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-zqclz-5d576bd769"}
  Jul  6 13:13:03.982: INFO: Observed &Deployment event: MODIFIED
  Jul  6 13:13:03.982: INFO: Observed Deployment test-deployment-zqclz in namespace deployment-6481 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-06 13:13:01 +0000 UTC 2024-07-06 13:13:01 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-zqclz-5d576bd769"}
  Jul  6 13:13:03.982: INFO: Observed Deployment test-deployment-zqclz in namespace deployment-6481 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-07-06 13:13:01 +0000 UTC 2024-07-06 13:13:01 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Jul  6 13:13:03.982: INFO: Observed &Deployment event: MODIFIED
  Jul  6 13:13:03.982: INFO: Observed Deployment test-deployment-zqclz in namespace deployment-6481 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-07-06 13:13:01 +0000 UTC 2024-07-06 13:13:01 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Jul  6 13:13:03.982: INFO: Observed Deployment test-deployment-zqclz in namespace deployment-6481 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-06 13:13:01 +0000 UTC 2024-07-06 13:13:01 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-zqclz-5d576bd769" is progressing.}
  Jul  6 13:13:03.982: INFO: Observed &Deployment event: MODIFIED
  Jul  6 13:13:03.982: INFO: Observed Deployment test-deployment-zqclz in namespace deployment-6481 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-07-06 13:13:02 +0000 UTC 2024-07-06 13:13:02 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Jul  6 13:13:03.982: INFO: Observed Deployment test-deployment-zqclz in namespace deployment-6481 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-06 13:13:02 +0000 UTC 2024-07-06 13:13:01 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-zqclz-5d576bd769" has successfully progressed.}
  Jul  6 13:13:03.982: INFO: Observed &Deployment event: MODIFIED
  Jul  6 13:13:03.983: INFO: Observed Deployment test-deployment-zqclz in namespace deployment-6481 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-07-06 13:13:02 +0000 UTC 2024-07-06 13:13:02 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Jul  6 13:13:03.983: INFO: Observed Deployment test-deployment-zqclz in namespace deployment-6481 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-06 13:13:02 +0000 UTC 2024-07-06 13:13:01 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-zqclz-5d576bd769" has successfully progressed.}
  Jul  6 13:13:03.983: INFO: Found Deployment test-deployment-zqclz in namespace deployment-6481 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jul  6 13:13:03.983: INFO: Deployment test-deployment-zqclz has an updated status
  STEP: patching the Statefulset Status @ 07/06/24 13:13:03.983
  Jul  6 13:13:03.983: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Jul  6 13:13:03.990: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 07/06/24 13:13:03.99
  Jul  6 13:13:03.991: INFO: Observed &Deployment event: ADDED
  Jul  6 13:13:03.991: INFO: Observed deployment test-deployment-zqclz in namespace deployment-6481 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-06 13:13:01 +0000 UTC 2024-07-06 13:13:01 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-zqclz-5d576bd769"}
  Jul  6 13:13:03.991: INFO: Observed &Deployment event: MODIFIED
  Jul  6 13:13:03.991: INFO: Observed deployment test-deployment-zqclz in namespace deployment-6481 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-06 13:13:01 +0000 UTC 2024-07-06 13:13:01 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-zqclz-5d576bd769"}
  Jul  6 13:13:03.991: INFO: Observed deployment test-deployment-zqclz in namespace deployment-6481 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-07-06 13:13:01 +0000 UTC 2024-07-06 13:13:01 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Jul  6 13:13:03.991: INFO: Observed &Deployment event: MODIFIED
  Jul  6 13:13:03.991: INFO: Observed deployment test-deployment-zqclz in namespace deployment-6481 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-07-06 13:13:01 +0000 UTC 2024-07-06 13:13:01 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Jul  6 13:13:03.991: INFO: Observed deployment test-deployment-zqclz in namespace deployment-6481 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-06 13:13:01 +0000 UTC 2024-07-06 13:13:01 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-zqclz-5d576bd769" is progressing.}
  Jul  6 13:13:03.991: INFO: Observed &Deployment event: MODIFIED
  Jul  6 13:13:03.991: INFO: Observed deployment test-deployment-zqclz in namespace deployment-6481 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-07-06 13:13:02 +0000 UTC 2024-07-06 13:13:02 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Jul  6 13:13:03.991: INFO: Observed deployment test-deployment-zqclz in namespace deployment-6481 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-06 13:13:02 +0000 UTC 2024-07-06 13:13:01 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-zqclz-5d576bd769" has successfully progressed.}
  Jul  6 13:13:03.992: INFO: Observed &Deployment event: MODIFIED
  Jul  6 13:13:03.992: INFO: Observed deployment test-deployment-zqclz in namespace deployment-6481 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-07-06 13:13:02 +0000 UTC 2024-07-06 13:13:02 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Jul  6 13:13:03.992: INFO: Observed deployment test-deployment-zqclz in namespace deployment-6481 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-06 13:13:02 +0000 UTC 2024-07-06 13:13:01 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-zqclz-5d576bd769" has successfully progressed.}
  Jul  6 13:13:03.992: INFO: Observed deployment test-deployment-zqclz in namespace deployment-6481 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jul  6 13:13:03.992: INFO: Observed &Deployment event: MODIFIED
  Jul  6 13:13:03.992: INFO: Found deployment test-deployment-zqclz in namespace deployment-6481 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  Jul  6 13:13:03.992: INFO: Deployment test-deployment-zqclz has a patched status
  Jul  6 13:13:03.994: INFO: Deployment "test-deployment-zqclz":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-zqclz",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6481",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cc640ff2-e770-4b32-8f51-365bce3a0ed0",
      ResourceVersion: (string) (len=5) "27069",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855868381,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855868381,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855868383,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855868383,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855868383,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855868383,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-zqclz-5d576bd769\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jul  6 13:13:03.998: INFO: New ReplicaSet "test-deployment-zqclz-5d576bd769" of Deployment "test-deployment-zqclz":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-zqclz-5d576bd769",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6481",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "785071f6-66c7-4016-b76c-ce7325ffd351",
      ResourceVersion: (string) (len=5) "27062",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855868381,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-zqclz",
          UID: (types.UID) (len=36) "cc640ff2-e770-4b32-8f51-365bce3a0ed0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855868381,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 63 63 36  |k:{\"uid\":\"cc6|
              00000120  34 30 66 66 32 2d 65 37  37 30 2d 34 62 33 32 2d  |40ff2-e770-4b32-|
              00000130  38 66 35 31 2d 33 36 35  62 63 65 33 61 30 65 64  |8f51-365bce3a0ed|
              00000140  30 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |0\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855868382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jul  6 13:13:04.005: INFO: Pod "test-deployment-zqclz-5d576bd769-hjpzf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-zqclz-5d576bd769-hjpzf",
      GenerateName: (string) (len=33) "test-deployment-zqclz-5d576bd769-",
      Namespace: (string) (len=15) "deployment-6481",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "76c5338f-2edb-4d65-a3f6-0cfbadb86cbd",
      ResourceVersion: (string) (len=5) "27061",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855868381,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-zqclz-5d576bd769",
          UID: (types.UID) (len=36) "785071f6-66c7-4016-b76c-ce7325ffd351",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855868381,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 37 38 35 30 37 31 66  36 2d 36 36 63 37 2d 34  |"785071f6-66c7-4|
              000000a0  30 31 36 2d 62 37 36 63  2d 63 65 37 33 32 35 66  |016-b76c-ce7325f|
              000000b0  66 64 33 35 31 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |fd351\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855868382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 31  32 2e 31 32 33 5c 22 7d  |2.168.112.123\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hfwck",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hfwck",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-9-199",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855868382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855868381,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855868382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855868382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855868381,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.9.199",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.9.199"
        }
      },
      PodIP: (string) (len=15) "192.168.112.123",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.112.123"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855868381,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63855868382,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://aebc10759e38a52ee918c70319036799f0dbd8efcd47f0e73826df7c4422e3ed",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul  6 13:13:04.006: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6481" for this suite. @ 07/06/24 13:13:04.01
• [2.095 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 07/06/24 13:13:04.015
  Jul  6 13:13:04.015: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename downward-api @ 07/06/24 13:13:04.016
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:13:04.032
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:13:04.034
  STEP: Creating a pod to test downward API volume plugin @ 07/06/24 13:13:04.036
  E0706 13:13:04.843504      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:13:05.843815      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/06/24 13:13:06.051
  Jul  6 13:13:06.054: INFO: Trying to get logs from node ip-172-31-24-251 pod downwardapi-volume-f06e9511-0675-4bac-a745-d1ced7d1eaad container client-container: <nil>
  STEP: delete the pod @ 07/06/24 13:13:06.071
  Jul  6 13:13:06.088: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1800" for this suite. @ 07/06/24 13:13:06.091
• [2.083 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:751
  STEP: Creating a kubernetes client @ 07/06/24 13:13:06.099
  Jul  6 13:13:06.099: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename statefulset @ 07/06/24 13:13:06.099
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:13:06.113
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:13:06.115
  STEP: Creating service test in namespace statefulset-2199 @ 07/06/24 13:13:06.117
  STEP: Creating stateful set ss in namespace statefulset-2199 @ 07/06/24 13:13:06.122
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-2199 @ 07/06/24 13:13:06.131
  Jul  6 13:13:06.134: INFO: Found 0 stateful pods, waiting for 1
  E0706 13:13:06.844253      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:13:07.844330      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:13:08.845353      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:13:09.845418      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:13:10.846419      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:13:11.846603      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:13:12.847618      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:13:13.847944      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:13:14.848122      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:13:15.848195      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:13:16.134: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 07/06/24 13:13:16.134
  Jul  6 13:13:16.139: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=statefulset-2199 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jul  6 13:13:16.231: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jul  6 13:13:16.231: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jul  6 13:13:16.231: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jul  6 13:13:16.234: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0706 13:13:16.848945      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:13:17.849001      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:13:18.849228      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:13:19.849688      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:13:20.849784      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:13:21.849960      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:13:22.850068      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:13:23.850211      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:13:24.850285      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:13:25.850389      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:13:26.236: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Jul  6 13:13:26.236: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Jul  6 13:13:26.249: INFO: POD   NODE              PHASE    GRACE  CONDITIONS
  Jul  6 13:13:26.249: INFO: ss-0  ip-172-31-24-251  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-07-06 13:13:06 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-07-06 13:13:06 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-07-06 13:13:16 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-07-06 13:13:16 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-07-06 13:13:06 +0000 UTC  }]
  Jul  6 13:13:26.249: INFO: 
  Jul  6 13:13:26.249: INFO: StatefulSet ss has not reached scale 3, at 1
  E0706 13:13:26.851465      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:13:27.253: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.997655081s
  E0706 13:13:27.852292      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:13:28.257: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.993771486s
  E0706 13:13:28.852861      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:13:29.262: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.990501753s
  E0706 13:13:29.853729      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:13:30.266: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.984741707s
  E0706 13:13:30.854529      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:13:31.271: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.980584259s
  E0706 13:13:31.854818      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:13:32.279: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.971925851s
  E0706 13:13:32.854913      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:13:33.284: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.967470793s
  E0706 13:13:33.855523      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:13:34.288: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.962559317s
  E0706 13:13:34.856455      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:13:35.293: INFO: Verifying statefulset ss doesn't scale past 3 for another 957.576614ms
  E0706 13:13:35.857184      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-2199 @ 07/06/24 13:13:36.293
  Jul  6 13:13:36.298: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=statefulset-2199 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jul  6 13:13:36.392: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jul  6 13:13:36.392: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jul  6 13:13:36.392: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jul  6 13:13:36.392: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=statefulset-2199 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jul  6 13:13:36.484: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Jul  6 13:13:36.484: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jul  6 13:13:36.484: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jul  6 13:13:36.484: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=statefulset-2199 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jul  6 13:13:36.577: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Jul  6 13:13:36.577: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jul  6 13:13:36.577: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jul  6 13:13:36.580: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Jul  6 13:13:36.580: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Jul  6 13:13:36.580: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 07/06/24 13:13:36.58
  Jul  6 13:13:36.583: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=statefulset-2199 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jul  6 13:13:36.664: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jul  6 13:13:36.664: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jul  6 13:13:36.664: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jul  6 13:13:36.664: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=statefulset-2199 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jul  6 13:13:36.750: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jul  6 13:13:36.750: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jul  6 13:13:36.750: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jul  6 13:13:36.751: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=statefulset-2199 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jul  6 13:13:36.834: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jul  6 13:13:36.834: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jul  6 13:13:36.834: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jul  6 13:13:36.834: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Jul  6 13:13:36.838: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0706 13:13:36.857657      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:13:37.857923      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:13:38.858000      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:13:39.858111      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:13:40.858476      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:13:41.858539      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:13:42.858658      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:13:43.859645      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:13:44.859748      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:13:45.860179      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:13:46.842: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Jul  6 13:13:46.842: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Jul  6 13:13:46.842: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Jul  6 13:13:46.855: INFO: POD   NODE              PHASE    GRACE  CONDITIONS
  Jul  6 13:13:46.855: INFO: ss-0  ip-172-31-24-251  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-07-06 13:13:06 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-07-06 13:13:06 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-07-06 13:13:37 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-07-06 13:13:37 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-07-06 13:13:06 +0000 UTC  }]
  Jul  6 13:13:46.855: INFO: ss-1  ip-172-31-9-199   Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-07-06 13:13:27 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-07-06 13:13:26 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-07-06 13:13:37 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-07-06 13:13:37 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-07-06 13:13:26 +0000 UTC  }]
  Jul  6 13:13:46.855: INFO: ss-2  ip-172-31-90-155  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-07-06 13:13:27 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-07-06 13:13:26 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-07-06 13:13:37 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-07-06 13:13:37 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-07-06 13:13:26 +0000 UTC  }]
  Jul  6 13:13:46.855: INFO: 
  Jul  6 13:13:46.855: INFO: StatefulSet ss has not reached scale 0, at 3
  E0706 13:13:46.860299      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:13:47.858: INFO: Verifying statefulset ss doesn't scale past 0 for another 8.99675981s
  E0706 13:13:47.860676      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:13:48.860822      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:13:48.862: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.993809041s
  E0706 13:13:49.861222      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:13:49.866: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.990100938s
  E0706 13:13:50.861291      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:13:50.870: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.984934379s
  E0706 13:13:51.862169      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:13:51.875: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.981085289s
  E0706 13:13:52.862585      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:13:52.881: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.97566841s
  E0706 13:13:53.862673      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:13:53.886: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.970609107s
  E0706 13:13:54.863298      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:13:54.891: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.964981811s
  E0706 13:13:55.864331      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:13:55.895: INFO: Verifying statefulset ss doesn't scale past 0 for another 959.880647ms
  E0706 13:13:56.864609      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-2199 @ 07/06/24 13:13:56.895
  Jul  6 13:13:56.899: INFO: Scaling statefulset ss to 0
  Jul  6 13:13:56.905: INFO: Waiting for statefulset status.replicas updated to 0
  Jul  6 13:13:56.908: INFO: Deleting all statefulset in ns statefulset-2199
  Jul  6 13:13:56.910: INFO: Scaling statefulset ss to 0
  Jul  6 13:13:56.915: INFO: Waiting for statefulset status.replicas updated to 0
  Jul  6 13:13:56.918: INFO: Deleting statefulset ss
  Jul  6 13:13:56.927: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2199" for this suite. @ 07/06/24 13:13:56.93
• [50.839 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 07/06/24 13:13:56.938
  Jul  6 13:13:56.938: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename runtimeclass @ 07/06/24 13:13:56.938
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:13:56.957
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:13:56.958
  STEP: getting /apis @ 07/06/24 13:13:56.96
  STEP: getting /apis/node.k8s.io @ 07/06/24 13:13:56.963
  STEP: getting /apis/node.k8s.io/v1 @ 07/06/24 13:13:56.963
  STEP: creating @ 07/06/24 13:13:56.964
  STEP: watching @ 07/06/24 13:13:56.977
  Jul  6 13:13:56.977: INFO: starting watch
  STEP: getting @ 07/06/24 13:13:56.981
  STEP: listing @ 07/06/24 13:13:56.984
  STEP: patching @ 07/06/24 13:13:56.986
  STEP: updating @ 07/06/24 13:13:56.992
  Jul  6 13:13:56.996: INFO: waiting for watch events with expected annotations
  STEP: deleting @ 07/06/24 13:13:56.996
  STEP: deleting a collection @ 07/06/24 13:13:57.005
  Jul  6 13:13:57.017: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-2162" for this suite. @ 07/06/24 13:13:57.02
• [0.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 07/06/24 13:13:57.025
  Jul  6 13:13:57.025: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename subpath @ 07/06/24 13:13:57.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:13:57.043
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:13:57.045
  STEP: Setting up data @ 07/06/24 13:13:57.047
  STEP: Creating pod pod-subpath-test-downwardapi-9nrm @ 07/06/24 13:13:57.056
  STEP: Creating a pod to test atomic-volume-subpath @ 07/06/24 13:13:57.056
  E0706 13:13:57.865598      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:13:58.865734      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:13:59.865785      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:14:00.865846      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:14:01.866033      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:14:02.866219      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:14:03.866361      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:14:04.866570      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:14:05.867557      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:14:06.867757      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:14:07.868071      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:14:08.868147      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:14:09.868239      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:14:10.868424      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:14:11.869094      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:14:12.869369      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:14:13.869468      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:14:14.870523      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:14:15.871405      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:14:16.871496      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:14:17.871983      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:14:18.872156      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/06/24 13:14:19.117
  Jul  6 13:14:19.120: INFO: Trying to get logs from node ip-172-31-24-251 pod pod-subpath-test-downwardapi-9nrm container test-container-subpath-downwardapi-9nrm: <nil>
  STEP: delete the pod @ 07/06/24 13:14:19.128
  STEP: Deleting pod pod-subpath-test-downwardapi-9nrm @ 07/06/24 13:14:19.144
  Jul  6 13:14:19.144: INFO: Deleting pod "pod-subpath-test-downwardapi-9nrm" in namespace "subpath-9273"
  Jul  6 13:14:19.146: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9273" for this suite. @ 07/06/24 13:14:19.15
• [22.130 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 07/06/24 13:14:19.156
  Jul  6 13:14:19.156: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename downward-api @ 07/06/24 13:14:19.156
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:14:19.171
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:14:19.173
  STEP: Creating a pod to test downward API volume plugin @ 07/06/24 13:14:19.175
  E0706 13:14:19.872283      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:14:20.872364      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/06/24 13:14:21.189
  Jul  6 13:14:21.191: INFO: Trying to get logs from node ip-172-31-24-251 pod downwardapi-volume-897deb69-ffc0-4e00-a6b7-3c190571f121 container client-container: <nil>
  STEP: delete the pod @ 07/06/24 13:14:21.197
  Jul  6 13:14:21.210: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5852" for this suite. @ 07/06/24 13:14:21.214
• [2.064 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 07/06/24 13:14:21.22
  Jul  6 13:14:21.220: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename emptydir @ 07/06/24 13:14:21.22
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:14:21.235
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:14:21.236
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 07/06/24 13:14:21.238
  E0706 13:14:21.873212      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:14:22.873301      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/06/24 13:14:23.254
  Jul  6 13:14:23.257: INFO: Trying to get logs from node ip-172-31-24-251 pod pod-642ad06b-9981-47f8-9420-7cd6612c4623 container test-container: <nil>
  STEP: delete the pod @ 07/06/24 13:14:23.263
  Jul  6 13:14:23.275: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3690" for this suite. @ 07/06/24 13:14:23.278
• [2.062 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 07/06/24 13:14:23.282
  Jul  6 13:14:23.282: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename webhook @ 07/06/24 13:14:23.283
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:14:23.301
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:14:23.302
  STEP: Setting up server cert @ 07/06/24 13:14:23.326
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/06/24 13:14:23.57
  STEP: Deploying the webhook pod @ 07/06/24 13:14:23.579
  STEP: Wait for the deployment to be ready @ 07/06/24 13:14:23.591
  Jul  6 13:14:23.598: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0706 13:14:23.873746      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:14:24.873858      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/06/24 13:14:25.608
  STEP: Verifying the service has paired with the endpoint @ 07/06/24 13:14:25.618
  E0706 13:14:25.874910      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:14:26.618: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jul  6 13:14:26.626: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  E0706 13:14:26.875025      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-9666-crds.webhook.example.com via the AdmissionRegistration API @ 07/06/24 13:14:27.138
  STEP: Creating a custom resource that should be mutated by the webhook @ 07/06/24 13:14:27.151
  E0706 13:14:27.875655      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:14:28.875720      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:14:29.727: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4736" for this suite. @ 07/06/24 13:14:29.731
  STEP: Destroying namespace "webhook-markers-6491" for this suite. @ 07/06/24 13:14:29.739
• [6.465 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 07/06/24 13:14:29.747
  Jul  6 13:14:29.747: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename svcaccounts @ 07/06/24 13:14:29.748
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:14:29.761
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:14:29.763
  E0706 13:14:29.876304      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:14:30.876418      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 07/06/24 13:14:31.789
  Jul  6 13:14:31.789: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-4100 pod-service-account-cc490644-d0b4-4864-b3a0-c46af1441093 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 07/06/24 13:14:31.873
  Jul  6 13:14:31.873: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-4100 pod-service-account-cc490644-d0b4-4864-b3a0-c46af1441093 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  E0706 13:14:31.877437      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 07/06/24 13:14:31.951
  Jul  6 13:14:31.951: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-4100 pod-service-account-cc490644-d0b4-4864-b3a0-c46af1441093 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  Jul  6 13:14:32.045: INFO: Got root ca configmap in namespace "svcaccounts-4100"
  Jul  6 13:14:32.046: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4100" for this suite. @ 07/06/24 13:14:32.049
• [2.309 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 07/06/24 13:14:32.057
  Jul  6 13:14:32.057: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename namespaces @ 07/06/24 13:14:32.058
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:14:32.075
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:14:32.076
  STEP: Updating Namespace "namespaces-5947" @ 07/06/24 13:14:32.078
  Jul  6 13:14:32.085: INFO: Namespace "namespaces-5947" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"51a40ce1-432d-4eda-8cf7-3e2d518ce5c2", "kubernetes.io/metadata.name":"namespaces-5947", "namespaces-5947":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  Jul  6 13:14:32.085: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5947" for this suite. @ 07/06/24 13:14:32.088
• [0.037 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 07/06/24 13:14:32.094
  Jul  6 13:14:32.094: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename projected @ 07/06/24 13:14:32.094
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:14:32.108
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:14:32.11
  STEP: Creating configMap with name projected-configmap-test-volume-c748f6ce-4c63-4ab6-8b20-f5adbcbd016b @ 07/06/24 13:14:32.111
  STEP: Creating a pod to test consume configMaps @ 07/06/24 13:14:32.115
  E0706 13:14:32.877562      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:14:33.878375      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/06/24 13:14:34.131
  Jul  6 13:14:34.134: INFO: Trying to get logs from node ip-172-31-24-251 pod pod-projected-configmaps-0ca76740-7a13-4121-a1ff-9b458a17c64d container agnhost-container: <nil>
  STEP: delete the pod @ 07/06/24 13:14:34.14
  Jul  6 13:14:34.159: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8959" for this suite. @ 07/06/24 13:14:34.162
• [2.074 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 07/06/24 13:14:34.168
  Jul  6 13:14:34.168: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename field-validation @ 07/06/24 13:14:34.169
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:14:34.187
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:14:34.189
  Jul  6 13:14:34.191: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  E0706 13:14:34.878494      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:14:35.878892      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0706 13:14:36.728264      21 warnings.go:70] unknown field "alpha"
  W0706 13:14:36.728282      21 warnings.go:70] unknown field "beta"
  W0706 13:14:36.728285      21 warnings.go:70] unknown field "delta"
  W0706 13:14:36.728288      21 warnings.go:70] unknown field "epsilon"
  W0706 13:14:36.728290      21 warnings.go:70] unknown field "gamma"
  E0706 13:14:36.879251      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:14:37.268: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3055" for this suite. @ 07/06/24 13:14:37.272
• [3.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 07/06/24 13:14:37.279
  Jul  6 13:14:37.279: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename csistoragecapacity @ 07/06/24 13:14:37.279
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:14:37.295
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:14:37.297
  STEP: getting /apis @ 07/06/24 13:14:37.298
  STEP: getting /apis/storage.k8s.io @ 07/06/24 13:14:37.3
  STEP: getting /apis/storage.k8s.io/v1 @ 07/06/24 13:14:37.301
  STEP: creating @ 07/06/24 13:14:37.302
  STEP: watching @ 07/06/24 13:14:37.317
  Jul  6 13:14:37.317: INFO: starting watch
  STEP: getting @ 07/06/24 13:14:37.322
  STEP: listing in namespace @ 07/06/24 13:14:37.324
  STEP: listing across namespaces @ 07/06/24 13:14:37.327
  STEP: patching @ 07/06/24 13:14:37.329
  STEP: updating @ 07/06/24 13:14:37.334
  Jul  6 13:14:37.339: INFO: waiting for watch events with expected annotations in namespace
  Jul  6 13:14:37.339: INFO: waiting for watch events with expected annotations across namespace
  STEP: deleting @ 07/06/24 13:14:37.339
  STEP: deleting a collection @ 07/06/24 13:14:37.349
  Jul  6 13:14:37.364: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-5132" for this suite. @ 07/06/24 13:14:37.367
• [0.094 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 07/06/24 13:14:37.373
  Jul  6 13:14:37.373: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename controllerrevisions @ 07/06/24 13:14:37.373
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:14:37.388
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:14:37.389
  STEP: Creating DaemonSet "e2e-9gd4z-daemon-set" @ 07/06/24 13:14:37.407
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/06/24 13:14:37.411
  Jul  6 13:14:37.416: INFO: DaemonSet pods can't tolerate node ip-172-31-76-18 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul  6 13:14:37.416: INFO: DaemonSet pods can't tolerate node ip-172-31-9-125 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul  6 13:14:37.419: INFO: Number of nodes with available pods controlled by daemonset e2e-9gd4z-daemon-set: 0
  Jul  6 13:14:37.419: INFO: Node ip-172-31-24-251 is running 0 daemon pod, expected 1
  E0706 13:14:37.880031      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:14:38.415: INFO: DaemonSet pods can't tolerate node ip-172-31-76-18 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul  6 13:14:38.415: INFO: DaemonSet pods can't tolerate node ip-172-31-9-125 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul  6 13:14:38.419: INFO: Number of nodes with available pods controlled by daemonset e2e-9gd4z-daemon-set: 0
  Jul  6 13:14:38.419: INFO: Node ip-172-31-24-251 is running 0 daemon pod, expected 1
  E0706 13:14:38.880917      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:14:39.415: INFO: DaemonSet pods can't tolerate node ip-172-31-76-18 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul  6 13:14:39.416: INFO: DaemonSet pods can't tolerate node ip-172-31-9-125 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul  6 13:14:39.418: INFO: Number of nodes with available pods controlled by daemonset e2e-9gd4z-daemon-set: 3
  Jul  6 13:14:39.418: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset e2e-9gd4z-daemon-set
  STEP: Confirm DaemonSet "e2e-9gd4z-daemon-set" successfully created with "daemonset-name=e2e-9gd4z-daemon-set" label @ 07/06/24 13:14:39.421
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-9gd4z-daemon-set" @ 07/06/24 13:14:39.427
  Jul  6 13:14:39.430: INFO: Located ControllerRevision: "e2e-9gd4z-daemon-set-5485fdff6f"
  STEP: Patching ControllerRevision "e2e-9gd4z-daemon-set-5485fdff6f" @ 07/06/24 13:14:39.432
  Jul  6 13:14:39.438: INFO: e2e-9gd4z-daemon-set-5485fdff6f has been patched
  STEP: Create a new ControllerRevision @ 07/06/24 13:14:39.438
  Jul  6 13:14:39.444: INFO: Created ControllerRevision: e2e-9gd4z-daemon-set-5c97598bfc
  STEP: Confirm that there are two ControllerRevisions @ 07/06/24 13:14:39.444
  Jul  6 13:14:39.444: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jul  6 13:14:39.446: INFO: Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-9gd4z-daemon-set-5485fdff6f" @ 07/06/24 13:14:39.446
  STEP: Confirm that there is only one ControllerRevision @ 07/06/24 13:14:39.452
  Jul  6 13:14:39.452: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jul  6 13:14:39.454: INFO: Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-9gd4z-daemon-set-5c97598bfc" @ 07/06/24 13:14:39.456
  Jul  6 13:14:39.465: INFO: e2e-9gd4z-daemon-set-5c97598bfc has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 07/06/24 13:14:39.465
  W0706 13:14:39.474348      21 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 07/06/24 13:14:39.474
  Jul  6 13:14:39.474: INFO: Requesting list of ControllerRevisions to confirm quantity
  E0706 13:14:39.881633      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:14:40.474: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jul  6 13:14:40.478: INFO: Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-9gd4z-daemon-set-5c97598bfc=updated" @ 07/06/24 13:14:40.478
  STEP: Confirm that there is only one ControllerRevision @ 07/06/24 13:14:40.485
  Jul  6 13:14:40.485: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jul  6 13:14:40.487: INFO: Found 1 ControllerRevisions
  Jul  6 13:14:40.489: INFO: ControllerRevision "e2e-9gd4z-daemon-set-75747fb484" has revision 3
  STEP: Deleting DaemonSet "e2e-9gd4z-daemon-set" @ 07/06/24 13:14:40.492
  STEP: deleting DaemonSet.extensions e2e-9gd4z-daemon-set in namespace controllerrevisions-2455, will wait for the garbage collector to delete the pods @ 07/06/24 13:14:40.492
  Jul  6 13:14:40.551: INFO: Deleting DaemonSet.extensions e2e-9gd4z-daemon-set took: 6.492154ms
  Jul  6 13:14:40.652: INFO: Terminating DaemonSet.extensions e2e-9gd4z-daemon-set pods took: 100.807699ms
  E0706 13:14:40.882155      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:14:41.757: INFO: Number of nodes with available pods controlled by daemonset e2e-9gd4z-daemon-set: 0
  Jul  6 13:14:41.757: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-9gd4z-daemon-set
  Jul  6 13:14:41.759: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"28030"},"items":null}

  Jul  6 13:14:41.761: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"28030"},"items":null}

  Jul  6 13:14:41.774: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-2455" for this suite. @ 07/06/24 13:14:41.777
• [4.412 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1698
  STEP: Creating a kubernetes client @ 07/06/24 13:14:41.785
  Jul  6 13:14:41.785: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename kubectl @ 07/06/24 13:14:41.786
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:14:41.804
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:14:41.805
  STEP: creating Agnhost RC @ 07/06/24 13:14:41.807
  Jul  6 13:14:41.807: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-5440 create -f -'
  E0706 13:14:41.883126      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:14:41.883: INFO: stderr: ""
  Jul  6 13:14:41.883: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 07/06/24 13:14:41.883
  E0706 13:14:42.883751      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:14:42.887: INFO: Selector matched 1 pods for map[app:agnhost]
  Jul  6 13:14:42.887: INFO: Found 0 / 1
  E0706 13:14:43.883831      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:14:43.887: INFO: Selector matched 1 pods for map[app:agnhost]
  Jul  6 13:14:43.887: INFO: Found 1 / 1
  Jul  6 13:14:43.887: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 07/06/24 13:14:43.887
  Jul  6 13:14:43.890: INFO: Selector matched 1 pods for map[app:agnhost]
  Jul  6 13:14:43.890: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Jul  6 13:14:43.890: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-5440 patch pod agnhost-primary-5km2n -p {"metadata":{"annotations":{"x":"y"}}}'
  Jul  6 13:14:43.938: INFO: stderr: ""
  Jul  6 13:14:43.938: INFO: stdout: "pod/agnhost-primary-5km2n patched\n"
  STEP: checking annotations @ 07/06/24 13:14:43.938
  Jul  6 13:14:43.941: INFO: Selector matched 1 pods for map[app:agnhost]
  Jul  6 13:14:43.941: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Jul  6 13:14:43.941: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5440" for this suite. @ 07/06/24 13:14:43.945
• [2.164 seconds]
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:399
  STEP: Creating a kubernetes client @ 07/06/24 13:14:43.95
  Jul  6 13:14:43.950: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename kubectl @ 07/06/24 13:14:43.95
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:14:43.974
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:14:43.975
  STEP: creating all guestbook components @ 07/06/24 13:14:43.977
  Jul  6 13:14:43.977: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  Jul  6 13:14:43.977: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-4878 create -f -'
  Jul  6 13:14:44.054: INFO: stderr: ""
  Jul  6 13:14:44.054: INFO: stdout: "service/agnhost-replica created\n"
  Jul  6 13:14:44.054: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  Jul  6 13:14:44.054: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-4878 create -f -'
  Jul  6 13:14:44.140: INFO: stderr: ""
  Jul  6 13:14:44.140: INFO: stdout: "service/agnhost-primary created\n"
  Jul  6 13:14:44.140: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  Jul  6 13:14:44.140: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-4878 create -f -'
  Jul  6 13:14:44.222: INFO: stderr: ""
  Jul  6 13:14:44.222: INFO: stdout: "service/frontend created\n"
  Jul  6 13:14:44.222: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  Jul  6 13:14:44.222: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-4878 create -f -'
  Jul  6 13:14:44.289: INFO: stderr: ""
  Jul  6 13:14:44.289: INFO: stdout: "deployment.apps/frontend created\n"
  Jul  6 13:14:44.289: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Jul  6 13:14:44.289: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-4878 create -f -'
  Jul  6 13:14:44.349: INFO: stderr: ""
  Jul  6 13:14:44.349: INFO: stdout: "deployment.apps/agnhost-primary created\n"
  Jul  6 13:14:44.350: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Jul  6 13:14:44.350: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-4878 create -f -'
  Jul  6 13:14:44.407: INFO: stderr: ""
  Jul  6 13:14:44.407: INFO: stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 07/06/24 13:14:44.407
  Jul  6 13:14:44.407: INFO: Waiting for all frontend pods to be Running.
  E0706 13:14:44.886600      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:14:45.887033      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:14:46.887618      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:14:47.887720      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:14:48.887811      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:14:49.459: INFO: Waiting for frontend to serve content.
  Jul  6 13:14:49.469: INFO: Trying to add a new entry to the guestbook.
  Jul  6 13:14:49.480: INFO: Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 07/06/24 13:14:49.488
  Jul  6 13:14:49.488: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-4878 delete --grace-period=0 --force -f -'
  Jul  6 13:14:49.547: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jul  6 13:14:49.547: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 07/06/24 13:14:49.547
  Jul  6 13:14:49.547: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-4878 delete --grace-period=0 --force -f -'
  Jul  6 13:14:49.602: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jul  6 13:14:49.602: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 07/06/24 13:14:49.602
  Jul  6 13:14:49.603: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-4878 delete --grace-period=0 --force -f -'
  Jul  6 13:14:49.657: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jul  6 13:14:49.657: INFO: stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 07/06/24 13:14:49.657
  Jul  6 13:14:49.658: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-4878 delete --grace-period=0 --force -f -'
  Jul  6 13:14:49.699: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jul  6 13:14:49.700: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 07/06/24 13:14:49.7
  Jul  6 13:14:49.700: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-4878 delete --grace-period=0 --force -f -'
  Jul  6 13:14:49.761: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jul  6 13:14:49.761: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 07/06/24 13:14:49.762
  Jul  6 13:14:49.762: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-4878 delete --grace-period=0 --force -f -'
  Jul  6 13:14:49.833: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jul  6 13:14:49.833: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  Jul  6 13:14:49.833: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4878" for this suite. @ 07/06/24 13:14:49.84
• [5.897 seconds]
------------------------------
SSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:189
  STEP: Creating a kubernetes client @ 07/06/24 13:14:49.847
  Jul  6 13:14:49.847: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename var-expansion @ 07/06/24 13:14:49.848
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:14:49.863
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:14:49.864
  E0706 13:14:49.890027      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:14:50.890145      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:14:51.883: INFO: Deleting pod "var-expansion-27a89504-13ca-4f12-938f-a9971cdfe2d2" in namespace "var-expansion-8386"
  E0706 13:14:51.890927      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:14:51.891: INFO: Wait up to 5m0s for pod "var-expansion-27a89504-13ca-4f12-938f-a9971cdfe2d2" to be fully deleted
  E0706 13:14:52.891497      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:14:53.891698      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:14:53.898: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8386" for this suite. @ 07/06/24 13:14:53.901
• [4.062 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 07/06/24 13:14:53.909
  Jul  6 13:14:53.909: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename webhook @ 07/06/24 13:14:53.91
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:14:53.926
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:14:53.928
  STEP: Setting up server cert @ 07/06/24 13:14:53.949
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/06/24 13:14:54.119
  STEP: Deploying the webhook pod @ 07/06/24 13:14:54.126
  STEP: Wait for the deployment to be ready @ 07/06/24 13:14:54.138
  Jul  6 13:14:54.146: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0706 13:14:54.892676      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:14:55.892993      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/06/24 13:14:56.156
  STEP: Verifying the service has paired with the endpoint @ 07/06/24 13:14:56.166
  E0706 13:14:56.893090      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:14:57.167: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 07/06/24 13:14:57.173
  STEP: Creating a custom resource definition that should be denied by the webhook @ 07/06/24 13:14:57.185
  Jul  6 13:14:57.185: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  Jul  6 13:14:57.239: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6271" for this suite. @ 07/06/24 13:14:57.242
  STEP: Destroying namespace "webhook-markers-3600" for this suite. @ 07/06/24 13:14:57.249
• [3.346 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 07/06/24 13:14:57.256
  Jul  6 13:14:57.256: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename watch @ 07/06/24 13:14:57.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:14:57.272
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:14:57.274
  STEP: creating a watch on configmaps with label A @ 07/06/24 13:14:57.275
  STEP: creating a watch on configmaps with label B @ 07/06/24 13:14:57.276
  STEP: creating a watch on configmaps with label A or B @ 07/06/24 13:14:57.279
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 07/06/24 13:14:57.28
  Jul  6 13:14:57.285: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-346  8250d4df-310d-42c6-aa95-eec3b6fc38f1 28486 0 2024-07-06 13:14:57 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-07-06 13:14:57 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jul  6 13:14:57.285: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-346  8250d4df-310d-42c6-aa95-eec3b6fc38f1 28486 0 2024-07-06 13:14:57 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-07-06 13:14:57 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 07/06/24 13:14:57.285
  Jul  6 13:14:57.293: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-346  8250d4df-310d-42c6-aa95-eec3b6fc38f1 28487 0 2024-07-06 13:14:57 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-07-06 13:14:57 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jul  6 13:14:57.293: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-346  8250d4df-310d-42c6-aa95-eec3b6fc38f1 28487 0 2024-07-06 13:14:57 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-07-06 13:14:57 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 07/06/24 13:14:57.293
  Jul  6 13:14:57.299: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-346  8250d4df-310d-42c6-aa95-eec3b6fc38f1 28488 0 2024-07-06 13:14:57 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-07-06 13:14:57 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jul  6 13:14:57.299: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-346  8250d4df-310d-42c6-aa95-eec3b6fc38f1 28488 0 2024-07-06 13:14:57 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-07-06 13:14:57 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 07/06/24 13:14:57.299
  Jul  6 13:14:57.304: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-346  8250d4df-310d-42c6-aa95-eec3b6fc38f1 28489 0 2024-07-06 13:14:57 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-07-06 13:14:57 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jul  6 13:14:57.304: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-346  8250d4df-310d-42c6-aa95-eec3b6fc38f1 28489 0 2024-07-06 13:14:57 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-07-06 13:14:57 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 07/06/24 13:14:57.304
  Jul  6 13:14:57.308: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-346  44287f99-ac29-4cb6-989d-c81f5e8a180f 28490 0 2024-07-06 13:14:57 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-07-06 13:14:57 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jul  6 13:14:57.308: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-346  44287f99-ac29-4cb6-989d-c81f5e8a180f 28490 0 2024-07-06 13:14:57 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-07-06 13:14:57 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0706 13:14:57.893209      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:14:58.893357      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:14:59.893649      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:15:00.893913      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:15:01.894044      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:15:02.894148      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:15:03.894266      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:15:04.894537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:15:05.894965      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:15:06.895942      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 07/06/24 13:15:07.309
  Jul  6 13:15:07.317: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-346  44287f99-ac29-4cb6-989d-c81f5e8a180f 28540 0 2024-07-06 13:14:57 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-07-06 13:14:57 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jul  6 13:15:07.317: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-346  44287f99-ac29-4cb6-989d-c81f5e8a180f 28540 0 2024-07-06 13:14:57 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-07-06 13:14:57 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0706 13:15:07.896894      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:15:08.896991      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:15:09.897150      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:15:10.897272      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:15:11.897478      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:15:12.897704      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:15:13.897895      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:15:14.897974      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:15:15.898333      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:15:16.899347      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:15:17.318: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-346" for this suite. @ 07/06/24 13:15:17.322
• [20.073 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:344
  STEP: Creating a kubernetes client @ 07/06/24 13:15:17.329
  Jul  6 13:15:17.329: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename kubectl @ 07/06/24 13:15:17.329
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:15:17.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:15:17.348
  STEP: creating a replication controller @ 07/06/24 13:15:17.35
  Jul  6 13:15:17.350: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-4001 create -f -'
  Jul  6 13:15:17.426: INFO: stderr: ""
  Jul  6 13:15:17.426: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 07/06/24 13:15:17.426
  Jul  6 13:15:17.426: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-4001 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jul  6 13:15:17.468: INFO: stderr: ""
  Jul  6 13:15:17.468: INFO: stdout: "update-demo-nautilus-bs56j update-demo-nautilus-bzdmc "
  Jul  6 13:15:17.468: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-4001 get pods update-demo-nautilus-bs56j -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jul  6 13:15:17.505: INFO: stderr: ""
  Jul  6 13:15:17.505: INFO: stdout: ""
  Jul  6 13:15:17.505: INFO: update-demo-nautilus-bs56j is created but not running
  E0706 13:15:17.901392      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:15:18.901491      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:15:19.901568      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:15:20.902492      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:15:21.902580      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:15:22.506: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-4001 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jul  6 13:15:22.547: INFO: stderr: ""
  Jul  6 13:15:22.547: INFO: stdout: "update-demo-nautilus-bs56j update-demo-nautilus-bzdmc "
  Jul  6 13:15:22.547: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-4001 get pods update-demo-nautilus-bs56j -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jul  6 13:15:22.585: INFO: stderr: ""
  Jul  6 13:15:22.585: INFO: stdout: "true"
  Jul  6 13:15:22.585: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-4001 get pods update-demo-nautilus-bs56j -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jul  6 13:15:22.623: INFO: stderr: ""
  Jul  6 13:15:22.623: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jul  6 13:15:22.623: INFO: validating pod update-demo-nautilus-bs56j
  Jul  6 13:15:22.629: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jul  6 13:15:22.629: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jul  6 13:15:22.629: INFO: update-demo-nautilus-bs56j is verified up and running
  Jul  6 13:15:22.629: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-4001 get pods update-demo-nautilus-bzdmc -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jul  6 13:15:22.668: INFO: stderr: ""
  Jul  6 13:15:22.668: INFO: stdout: "true"
  Jul  6 13:15:22.668: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-4001 get pods update-demo-nautilus-bzdmc -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jul  6 13:15:22.708: INFO: stderr: ""
  Jul  6 13:15:22.708: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jul  6 13:15:22.708: INFO: validating pod update-demo-nautilus-bzdmc
  Jul  6 13:15:22.712: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jul  6 13:15:22.712: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jul  6 13:15:22.713: INFO: update-demo-nautilus-bzdmc is verified up and running
  STEP: using delete to clean up resources @ 07/06/24 13:15:22.713
  Jul  6 13:15:22.713: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-4001 delete --grace-period=0 --force -f -'
  Jul  6 13:15:22.755: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jul  6 13:15:22.755: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Jul  6 13:15:22.755: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-4001 get rc,svc -l name=update-demo --no-headers'
  Jul  6 13:15:22.799: INFO: stderr: "No resources found in kubectl-4001 namespace.\n"
  Jul  6 13:15:22.799: INFO: stdout: ""
  Jul  6 13:15:22.799: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-4001 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Jul  6 13:15:22.839: INFO: stderr: ""
  Jul  6 13:15:22.839: INFO: stdout: ""
  Jul  6 13:15:22.839: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4001" for this suite. @ 07/06/24 13:15:22.843
• [5.520 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:139
  STEP: Creating a kubernetes client @ 07/06/24 13:15:22.849
  Jul  6 13:15:22.849: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename configmap @ 07/06/24 13:15:22.85
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:15:22.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:15:22.868
  STEP: Creating configMap that has name configmap-test-emptyKey-c75e8f33-aab5-4f98-96ed-329ec452074e @ 07/06/24 13:15:22.869
  Jul  6 13:15:22.871: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6682" for this suite. @ 07/06/24 13:15:22.874
• [0.030 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:276
  STEP: Creating a kubernetes client @ 07/06/24 13:15:22.88
  Jul  6 13:15:22.880: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/06/24 13:15:22.88
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:15:22.892
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:15:22.894
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 07/06/24 13:15:22.896
  Jul  6 13:15:22.896: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  E0706 13:15:22.902702      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:15:23.903154      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:15:24.116: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  E0706 13:15:24.903238      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:15:25.903838      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:15:26.904801      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:15:27.905680      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:15:28.905839      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:15:29.051: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3297" for this suite. @ 07/06/24 13:15:29.057
• [6.183 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2214
  STEP: Creating a kubernetes client @ 07/06/24 13:15:29.063
  Jul  6 13:15:29.063: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename services @ 07/06/24 13:15:29.063
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:15:29.077
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:15:29.079
  STEP: creating service in namespace services-6667 @ 07/06/24 13:15:29.081
  STEP: creating service affinity-nodeport in namespace services-6667 @ 07/06/24 13:15:29.081
  STEP: creating replication controller affinity-nodeport in namespace services-6667 @ 07/06/24 13:15:29.095
  I0706 13:15:29.101705      21 runners.go:197] Created replication controller with name: affinity-nodeport, namespace: services-6667, replica count: 3
  E0706 13:15:29.906484      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:15:30.907520      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:15:31.907967      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0706 13:15:32.153328      21 runners.go:197] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jul  6 13:15:32.164: INFO: Creating new exec pod
  E0706 13:15:32.908080      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:15:33.908288      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:15:34.908734      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:15:35.184: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=services-6667 exec execpod-affinity292c9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  Jul  6 13:15:35.266: INFO: stderr: "+ nc -v -t -w 2 affinity-nodeport 80\n+ echo hostName\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  Jul  6 13:15:35.266: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul  6 13:15:35.266: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=services-6667 exec execpod-affinity292c9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.131 80'
  Jul  6 13:15:35.348: INFO: stderr: "+ nc -v -t -w 2 10.152.183.131 80\nConnection to 10.152.183.131 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Jul  6 13:15:35.348: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul  6 13:15:35.349: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=services-6667 exec execpod-affinity292c9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.90.155 30417'
  Jul  6 13:15:35.433: INFO: stderr: "+ nc -v -t -w 2 172.31.90.155 30417\n+ echo hostName\nConnection to 172.31.90.155 30417 port [tcp/*] succeeded!\n"
  Jul  6 13:15:35.433: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul  6 13:15:35.433: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=services-6667 exec execpod-affinity292c9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.24.251 30417'
  Jul  6 13:15:35.525: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.24.251 30417\nConnection to 172.31.24.251 30417 port [tcp/*] succeeded!\n"
  Jul  6 13:15:35.525: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul  6 13:15:35.525: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=services-6667 exec execpod-affinity292c9 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.24.251:30417/ ; done'
  Jul  6 13:15:35.647: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.24.251:30417/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.24.251:30417/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.24.251:30417/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.24.251:30417/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.24.251:30417/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.24.251:30417/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.24.251:30417/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.24.251:30417/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.24.251:30417/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.24.251:30417/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.24.251:30417/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.24.251:30417/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.24.251:30417/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.24.251:30417/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.24.251:30417/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.24.251:30417/\n"
  Jul  6 13:15:35.647: INFO: stdout: "\naffinity-nodeport-7cmn6\naffinity-nodeport-7cmn6\naffinity-nodeport-7cmn6\naffinity-nodeport-7cmn6\naffinity-nodeport-7cmn6\naffinity-nodeport-7cmn6\naffinity-nodeport-7cmn6\naffinity-nodeport-7cmn6\naffinity-nodeport-7cmn6\naffinity-nodeport-7cmn6\naffinity-nodeport-7cmn6\naffinity-nodeport-7cmn6\naffinity-nodeport-7cmn6\naffinity-nodeport-7cmn6\naffinity-nodeport-7cmn6\naffinity-nodeport-7cmn6"
  Jul  6 13:15:35.647: INFO: Received response from host: affinity-nodeport-7cmn6
  Jul  6 13:15:35.647: INFO: Received response from host: affinity-nodeport-7cmn6
  Jul  6 13:15:35.647: INFO: Received response from host: affinity-nodeport-7cmn6
  Jul  6 13:15:35.647: INFO: Received response from host: affinity-nodeport-7cmn6
  Jul  6 13:15:35.647: INFO: Received response from host: affinity-nodeport-7cmn6
  Jul  6 13:15:35.647: INFO: Received response from host: affinity-nodeport-7cmn6
  Jul  6 13:15:35.647: INFO: Received response from host: affinity-nodeport-7cmn6
  Jul  6 13:15:35.647: INFO: Received response from host: affinity-nodeport-7cmn6
  Jul  6 13:15:35.647: INFO: Received response from host: affinity-nodeport-7cmn6
  Jul  6 13:15:35.647: INFO: Received response from host: affinity-nodeport-7cmn6
  Jul  6 13:15:35.647: INFO: Received response from host: affinity-nodeport-7cmn6
  Jul  6 13:15:35.647: INFO: Received response from host: affinity-nodeport-7cmn6
  Jul  6 13:15:35.647: INFO: Received response from host: affinity-nodeport-7cmn6
  Jul  6 13:15:35.647: INFO: Received response from host: affinity-nodeport-7cmn6
  Jul  6 13:15:35.647: INFO: Received response from host: affinity-nodeport-7cmn6
  Jul  6 13:15:35.647: INFO: Received response from host: affinity-nodeport-7cmn6
  Jul  6 13:15:35.647: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-6667, will wait for the garbage collector to delete the pods @ 07/06/24 13:15:35.657
  Jul  6 13:15:35.719: INFO: Deleting ReplicationController affinity-nodeport took: 8.135615ms
  Jul  6 13:15:35.819: INFO: Terminating ReplicationController affinity-nodeport pods took: 100.269402ms
  E0706 13:15:35.909557      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:15:36.909893      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:15:37.910117      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:15:38.910887      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:15:39.039: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6667" for this suite. @ 07/06/24 13:15:39.042
• [9.986 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3338
  STEP: Creating a kubernetes client @ 07/06/24 13:15:39.049
  Jul  6 13:15:39.049: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename services @ 07/06/24 13:15:39.049
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:15:39.064
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:15:39.066
  STEP: creating a Service @ 07/06/24 13:15:39.071
  STEP: watching for the Service to be added @ 07/06/24 13:15:39.084
  Jul  6 13:15:39.085: INFO: Found Service test-service-ndvcd in namespace services-6832 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 30989}]
  Jul  6 13:15:39.085: INFO: Service test-service-ndvcd created
  STEP: Getting /status @ 07/06/24 13:15:39.085
  Jul  6 13:15:39.087: INFO: Service test-service-ndvcd has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 07/06/24 13:15:39.087
  STEP: watching for the Service to be patched @ 07/06/24 13:15:39.094
  Jul  6 13:15:39.094: INFO: observed Service test-service-ndvcd in namespace services-6832 with annotations: map[] & LoadBalancer: {[]}
  Jul  6 13:15:39.094: INFO: Found Service test-service-ndvcd in namespace services-6832 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  <nil> []}]}
  Jul  6 13:15:39.094: INFO: Service test-service-ndvcd has service status patched
  STEP: updating the ServiceStatus @ 07/06/24 13:15:39.095
  Jul  6 13:15:39.100: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 07/06/24 13:15:39.101
  Jul  6 13:15:39.102: INFO: Observed Service test-service-ndvcd in namespace services-6832 with annotations: map[] & Conditions: {[]}
  Jul  6 13:15:39.102: INFO: Observed event: &Service{ObjectMeta:{test-service-ndvcd  services-6832  6e6330c1-6390-4f12-a159-9b3ccd7200c2 28849 0 2024-07-06 13:15:39 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2024-07-06 13:15:39 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:allocateLoadBalancerNodePorts":{},"f:externalTrafficPolicy":{},"f:internalTrafficPolicy":{},"f:loadBalancerClass":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2024-07-06 13:15:39 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:30989,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.152.183.51,Type:LoadBalancer,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:Cluster,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.152.183.51],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:*true,LoadBalancerClass:*example.com/internal-vip,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,IPMode:nil,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  Jul  6 13:15:39.102: INFO: Found Service test-service-ndvcd in namespace services-6832 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Jul  6 13:15:39.102: INFO: Service test-service-ndvcd has service status updated
  STEP: patching the service @ 07/06/24 13:15:39.102
  STEP: watching for the Service to be patched @ 07/06/24 13:15:39.114
  Jul  6 13:15:39.116: INFO: observed Service test-service-ndvcd in namespace services-6832 with labels: map[test-service-static:true]
  Jul  6 13:15:39.116: INFO: observed Service test-service-ndvcd in namespace services-6832 with labels: map[test-service-static:true]
  Jul  6 13:15:39.116: INFO: observed Service test-service-ndvcd in namespace services-6832 with labels: map[test-service-static:true]
  Jul  6 13:15:39.116: INFO: Found Service test-service-ndvcd in namespace services-6832 with labels: map[test-service:patched test-service-static:true]
  Jul  6 13:15:39.116: INFO: Service test-service-ndvcd patched
  STEP: deleting the service @ 07/06/24 13:15:39.116
  STEP: watching for the Service to be deleted @ 07/06/24 13:15:39.137
  Jul  6 13:15:39.138: INFO: Observed event: ADDED
  Jul  6 13:15:39.138: INFO: Observed event: MODIFIED
  Jul  6 13:15:39.138: INFO: Observed event: MODIFIED
  Jul  6 13:15:39.138: INFO: Observed event: MODIFIED
  Jul  6 13:15:39.138: INFO: Found Service test-service-ndvcd in namespace services-6832 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  Jul  6 13:15:39.138: INFO: Service test-service-ndvcd deleted
  Jul  6 13:15:39.138: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6832" for this suite. @ 07/06/24 13:15:39.142
• [0.101 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 07/06/24 13:15:39.15
  Jul  6 13:15:39.150: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename projected @ 07/06/24 13:15:39.15
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:15:39.167
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:15:39.169
  STEP: Creating a pod to test downward API volume plugin @ 07/06/24 13:15:39.172
  E0706 13:15:39.911014      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:15:40.911097      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:15:41.911795      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:15:42.911870      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/06/24 13:15:43.195
  Jul  6 13:15:43.198: INFO: Trying to get logs from node ip-172-31-24-251 pod downwardapi-volume-ea344ec6-46b7-47d1-926c-922bb414e8c9 container client-container: <nil>
  STEP: delete the pod @ 07/06/24 13:15:43.204
  Jul  6 13:15:43.217: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1825" for this suite. @ 07/06/24 13:15:43.22
• [4.076 seconds]
------------------------------
SS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 07/06/24 13:15:43.226
  Jul  6 13:15:43.226: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename dns @ 07/06/24 13:15:43.226
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:15:43.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:15:43.243
  STEP: Creating a test externalName service @ 07/06/24 13:15:43.245
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-4006.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-4006.svc.cluster.local; sleep 1; done
   @ 07/06/24 13:15:43.25
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-4006.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-4006.svc.cluster.local; sleep 1; done
   @ 07/06/24 13:15:43.25
  STEP: creating a pod to probe DNS @ 07/06/24 13:15:43.25
  STEP: submitting the pod to kubernetes @ 07/06/24 13:15:43.25
  E0706 13:15:43.912729      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:15:44.912805      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/06/24 13:15:45.266
  STEP: looking for the results for each expected name from probers @ 07/06/24 13:15:45.269
  Jul  6 13:15:45.277: INFO: DNS probes using dns-test-55dbc308-f615-40b9-99c6-09cc842631df succeeded

  STEP: changing the externalName to bar.example.com @ 07/06/24 13:15:45.277
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-4006.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-4006.svc.cluster.local; sleep 1; done
   @ 07/06/24 13:15:45.285
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-4006.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-4006.svc.cluster.local; sleep 1; done
   @ 07/06/24 13:15:45.285
  STEP: creating a second pod to probe DNS @ 07/06/24 13:15:45.285
  STEP: submitting the pod to kubernetes @ 07/06/24 13:15:45.285
  E0706 13:15:45.913393      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:15:46.913515      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:15:47.914462      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:15:48.914565      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:15:49.915485      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:15:50.916511      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/06/24 13:15:51.305
  STEP: looking for the results for each expected name from probers @ 07/06/24 13:15:51.308
  Jul  6 13:15:51.315: INFO: DNS probes using dns-test-c6170433-e5c3-4fcb-abac-374813bfdec7 succeeded

  STEP: changing the service to type=ClusterIP @ 07/06/24 13:15:51.315
  W0706 13:15:51.328270      21 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-4006.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-4006.svc.cluster.local; sleep 1; done
   @ 07/06/24 13:15:51.328
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-4006.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-4006.svc.cluster.local; sleep 1; done
   @ 07/06/24 13:15:51.328
  STEP: creating a third pod to probe DNS @ 07/06/24 13:15:51.328
  STEP: submitting the pod to kubernetes @ 07/06/24 13:15:51.332
  E0706 13:15:51.916765      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:15:52.916891      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/06/24 13:15:53.345
  STEP: looking for the results for each expected name from probers @ 07/06/24 13:15:53.348
  Jul  6 13:15:53.358: INFO: DNS probes using dns-test-256b92a0-54d3-4312-8eeb-68ff1bb61b36 succeeded

  STEP: deleting the pod @ 07/06/24 13:15:53.358
  STEP: deleting the pod @ 07/06/24 13:15:53.369
  STEP: deleting the pod @ 07/06/24 13:15:53.382
  STEP: deleting the test externalName service @ 07/06/24 13:15:53.395
  Jul  6 13:15:53.410: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-4006" for this suite. @ 07/06/24 13:15:53.417
• [10.198 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 07/06/24 13:15:53.428
  Jul  6 13:15:53.429: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename events @ 07/06/24 13:15:53.432
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:15:53.452
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:15:53.454
  STEP: Create set of events @ 07/06/24 13:15:53.455
  Jul  6 13:15:53.461: INFO: created test-event-1
  Jul  6 13:15:53.464: INFO: created test-event-2
  Jul  6 13:15:53.467: INFO: created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 07/06/24 13:15:53.468
  STEP: delete collection of events @ 07/06/24 13:15:53.471
  Jul  6 13:15:53.471: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 07/06/24 13:15:53.492
  Jul  6 13:15:53.492: INFO: requesting list of events to confirm quantity
  Jul  6 13:15:53.494: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-6037" for this suite. @ 07/06/24 13:15:53.496
• [0.078 seconds]
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 07/06/24 13:15:53.503
  Jul  6 13:15:53.503: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename pods @ 07/06/24 13:15:53.503
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:15:53.517
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:15:53.519
  STEP: creating pod @ 07/06/24 13:15:53.52
  E0706 13:15:53.916959      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:15:54.917366      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:15:55.540: INFO: Pod pod-hostip-9c71bb2f-f15d-4d33-8b98-14b3f24f19f4 has hostIP: 172.31.24.251
  Jul  6 13:15:55.540: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5622" for this suite. @ 07/06/24 13:15:55.543
• [2.045 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 07/06/24 13:15:55.548
  Jul  6 13:15:55.548: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename webhook @ 07/06/24 13:15:55.549
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:15:55.615
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:15:55.617
  STEP: Setting up server cert @ 07/06/24 13:15:55.651
  E0706 13:15:55.917490      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/06/24 13:15:56.105
  STEP: Deploying the webhook pod @ 07/06/24 13:15:56.112
  STEP: Wait for the deployment to be ready @ 07/06/24 13:15:56.124
  Jul  6 13:15:56.130: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0706 13:15:56.917831      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:15:57.918250      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/06/24 13:15:58.14
  STEP: Verifying the service has paired with the endpoint @ 07/06/24 13:15:58.148
  E0706 13:15:58.918545      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:15:59.149: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 07/06/24 13:15:59.161
  STEP: create a pod that should be updated by the webhook @ 07/06/24 13:15:59.172
  Jul  6 13:15:59.223: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5416" for this suite. @ 07/06/24 13:15:59.229
  STEP: Destroying namespace "webhook-markers-9859" for this suite. @ 07/06/24 13:15:59.235
• [3.694 seconds]
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:669
  STEP: Creating a kubernetes client @ 07/06/24 13:15:59.242
  Jul  6 13:15:59.242: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename pv @ 07/06/24 13:15:59.242
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:15:59.257
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:15:59.259
  STEP: Creating initial PV and PVC @ 07/06/24 13:15:59.26
  Jul  6 13:15:59.261: INFO: Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-1978" @ 07/06/24 13:15:59.271
  STEP: Listing PVCs in namespace "pv-1978" @ 07/06/24 13:15:59.277
  STEP: Reading "pvc-bb7ps" Status @ 07/06/24 13:15:59.279
  STEP: Reading "pv-1978-6l25q" Status @ 07/06/24 13:15:59.283
  STEP: Patching "pvc-bb7ps" Status @ 07/06/24 13:15:59.287
  STEP: Patching "pv-1978-6l25q" Status @ 07/06/24 13:15:59.291
  STEP: Updating "pvc-bb7ps" Status @ 07/06/24 13:15:59.297
  STEP: Updating "pv-1978-6l25q" Status @ 07/06/24 13:15:59.304
  Jul  6 13:15:59.333: INFO: AfterEach: deleting 1 PVCs and 1 PVs...
  Jul  6 13:15:59.333: INFO: Deleting PersistentVolumeClaim "pvc-bb7ps"
  Jul  6 13:15:59.338: INFO: Deleting PersistentVolume "pv-1978-6l25q"
  Jul  6 13:15:59.344: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-1978" for this suite. @ 07/06/24 13:15:59.347
• [0.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:902
  STEP: Creating a kubernetes client @ 07/06/24 13:15:59.353
  Jul  6 13:15:59.353: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename statefulset @ 07/06/24 13:15:59.354
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:15:59.373
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:15:59.375
  STEP: Creating service test in namespace statefulset-1355 @ 07/06/24 13:15:59.376
  STEP: Creating statefulset ss in namespace statefulset-1355 @ 07/06/24 13:15:59.381
  Jul  6 13:15:59.390: INFO: Found 0 stateful pods, waiting for 1
  E0706 13:15:59.918617      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:16:00.918727      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:16:01.918820      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:16:02.919620      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:16:03.920188      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:16:04.920293      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:16:05.920385      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:16:06.920756      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:16:07.920846      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:16:08.921798      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:16:09.390: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 07/06/24 13:16:09.395
  STEP: updating a scale subresource @ 07/06/24 13:16:09.398
  STEP: verifying the statefulset Spec.Replicas was modified @ 07/06/24 13:16:09.403
  STEP: Patch a scale subresource @ 07/06/24 13:16:09.405
  STEP: verifying the statefulset Spec.Replicas was modified @ 07/06/24 13:16:09.413
  Jul  6 13:16:09.416: INFO: Deleting all statefulset in ns statefulset-1355
  Jul  6 13:16:09.419: INFO: Scaling statefulset ss to 0
  E0706 13:16:09.921877      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:16:10.922182      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:16:11.922283      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:16:12.922373      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:16:13.922543      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:16:14.922624      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:16:15.923058      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:16:16.923148      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:16:17.923602      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:16:18.923786      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:16:19.433: INFO: Waiting for statefulset status.replicas updated to 0
  Jul  6 13:16:19.436: INFO: Deleting statefulset ss
  Jul  6 13:16:19.448: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1355" for this suite. @ 07/06/24 13:16:19.453
• [20.104 seconds]
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 07/06/24 13:16:19.457
  Jul  6 13:16:19.457: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename projected @ 07/06/24 13:16:19.458
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:16:19.477
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:16:19.479
  STEP: Creating a pod to test downward API volume plugin @ 07/06/24 13:16:19.48
  E0706 13:16:19.924257      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:16:20.924354      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/06/24 13:16:21.495
  Jul  6 13:16:21.497: INFO: Trying to get logs from node ip-172-31-24-251 pod downwardapi-volume-76241d50-3a74-4a8f-b033-4452ee61e8ce container client-container: <nil>
  STEP: delete the pod @ 07/06/24 13:16:21.504
  Jul  6 13:16:21.518: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2291" for this suite. @ 07/06/24 13:16:21.521
• [2.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 07/06/24 13:16:21.528
  Jul  6 13:16:21.528: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename configmap @ 07/06/24 13:16:21.529
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:16:21.545
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:16:21.547
  STEP: Creating configMap with name configmap-test-volume-8bf7dde3-c243-4fd9-8e4a-221053016ea3 @ 07/06/24 13:16:21.548
  STEP: Creating a pod to test consume configMaps @ 07/06/24 13:16:21.552
  E0706 13:16:21.924487      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:16:22.925041      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:16:23.925165      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:16:24.925249      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/06/24 13:16:25.572
  Jul  6 13:16:25.576: INFO: Trying to get logs from node ip-172-31-24-251 pod pod-configmaps-cf92c6e0-9656-43da-b5c5-d5621dd92db2 container agnhost-container: <nil>
  STEP: delete the pod @ 07/06/24 13:16:25.583
  Jul  6 13:16:25.595: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2321" for this suite. @ 07/06/24 13:16:25.598
• [4.075 seconds]
------------------------------
SSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:135
  STEP: Creating a kubernetes client @ 07/06/24 13:16:25.604
  Jul  6 13:16:25.604: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename security-context @ 07/06/24 13:16:25.604
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:16:25.622
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:16:25.623
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 07/06/24 13:16:25.625
  E0706 13:16:25.925356      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:16:26.925596      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:16:27.925661      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:16:28.925762      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/06/24 13:16:29.642
  Jul  6 13:16:29.645: INFO: Trying to get logs from node ip-172-31-24-251 pod security-context-4c8e95e9-14a7-47ea-ab21-1c32faef8e7e container test-container: <nil>
  STEP: delete the pod @ 07/06/24 13:16:29.652
  Jul  6 13:16:29.668: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-5990" for this suite. @ 07/06/24 13:16:29.672
• [4.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 07/06/24 13:16:29.678
  Jul  6 13:16:29.678: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename disruption @ 07/06/24 13:16:29.679
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:16:29.697
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:16:29.699
  STEP: Waiting for the pdb to be processed @ 07/06/24 13:16:29.705
  E0706 13:16:29.926551      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:16:30.927530      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating PodDisruptionBudget status @ 07/06/24 13:16:31.708
  STEP: Waiting for all pods to be running @ 07/06/24 13:16:31.717
  Jul  6 13:16:31.719: INFO: running pods: 0 < 1
  E0706 13:16:31.927683      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:16:32.927747      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 07/06/24 13:16:33.72
  STEP: Waiting for the pdb to be processed @ 07/06/24 13:16:33.731
  STEP: Patching PodDisruptionBudget status @ 07/06/24 13:16:33.737
  STEP: Waiting for the pdb to be processed @ 07/06/24 13:16:33.745
  Jul  6 13:16:33.750: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-932" for this suite. @ 07/06/24 13:16:33.753
• [4.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 07/06/24 13:16:33.759
  Jul  6 13:16:33.759: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename pods @ 07/06/24 13:16:33.76
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:16:33.774
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:16:33.776
  Jul  6 13:16:33.778: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: creating the pod @ 07/06/24 13:16:33.778
  STEP: submitting the pod to kubernetes @ 07/06/24 13:16:33.778
  E0706 13:16:33.927851      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:16:34.927937      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:16:35.849: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-849" for this suite. @ 07/06/24 13:16:35.852
• [2.100 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 07/06/24 13:16:35.86
  Jul  6 13:16:35.860: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename projected @ 07/06/24 13:16:35.86
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:16:35.878
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:16:35.879
  STEP: Creating configMap with name projected-configmap-test-volume-map-04ecb79b-f6fc-44bb-ac85-9fb5f731fa6f @ 07/06/24 13:16:35.881
  STEP: Creating a pod to test consume configMaps @ 07/06/24 13:16:35.885
  E0706 13:16:35.928153      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:16:36.928230      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:16:37.929029      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:16:38.929242      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/06/24 13:16:39.905
  Jul  6 13:16:39.908: INFO: Trying to get logs from node ip-172-31-24-251 pod pod-projected-configmaps-77508a10-41f3-4eb9-b275-292221b2ff90 container agnhost-container: <nil>
  STEP: delete the pod @ 07/06/24 13:16:39.914
  Jul  6 13:16:39.928: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0706 13:16:39.929608      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "projected-1814" for this suite. @ 07/06/24 13:16:39.931
• [4.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 07/06/24 13:16:39.937
  Jul  6 13:16:39.937: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename replicaset @ 07/06/24 13:16:39.938
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:16:39.954
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:16:39.955
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 07/06/24 13:16:39.957
  E0706 13:16:40.929724      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:16:41.929801      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When a replicaset with a matching selector is created @ 07/06/24 13:16:41.972
  STEP: Then the orphan pod is adopted @ 07/06/24 13:16:41.976
  E0706 13:16:42.929910      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When the matched label of one of its pods change @ 07/06/24 13:16:42.983
  Jul  6 13:16:42.987: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 07/06/24 13:16:42.996
  E0706 13:16:43.930820      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:16:44.006: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7078" for this suite. @ 07/06/24 13:16:44.012
• [4.083 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 07/06/24 13:16:44.02
  Jul  6 13:16:44.020: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename emptydir @ 07/06/24 13:16:44.021
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:16:44.049
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:16:44.052
  STEP: Creating a pod to test emptydir volume type on node default medium @ 07/06/24 13:16:44.055
  E0706 13:16:44.931389      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:16:45.931522      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:16:46.931845      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:16:47.932095      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/06/24 13:16:48.086
  Jul  6 13:16:48.089: INFO: Trying to get logs from node ip-172-31-24-251 pod pod-8a9489c2-c914-4ddb-b6e2-b7397b3d74ea container test-container: <nil>
  STEP: delete the pod @ 07/06/24 13:16:48.094
  Jul  6 13:16:48.107: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9175" for this suite. @ 07/06/24 13:16:48.11
• [4.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 07/06/24 13:16:48.116
  Jul  6 13:16:48.116: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename webhook @ 07/06/24 13:16:48.117
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:16:48.133
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:16:48.135
  STEP: Setting up server cert @ 07/06/24 13:16:48.157
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/06/24 13:16:48.434
  STEP: Deploying the webhook pod @ 07/06/24 13:16:48.441
  STEP: Wait for the deployment to be ready @ 07/06/24 13:16:48.454
  Jul  6 13:16:48.461: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0706 13:16:48.933056      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:16:49.936448      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/06/24 13:16:50.471
  STEP: Verifying the service has paired with the endpoint @ 07/06/24 13:16:50.48
  E0706 13:16:50.937234      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:16:51.480: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jul  6 13:16:51.486: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  E0706 13:16:51.937980      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-9877-crds.webhook.example.com via the AdmissionRegistration API @ 07/06/24 13:16:51.997
  STEP: Creating a custom resource that should be mutated by the webhook @ 07/06/24 13:16:52.011
  E0706 13:16:52.938219      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:16:53.938330      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:16:54.605: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-725" for this suite. @ 07/06/24 13:16:54.61
  STEP: Destroying namespace "webhook-markers-2572" for this suite. @ 07/06/24 13:16:54.616
• [6.505 seconds]
------------------------------
SSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 07/06/24 13:16:54.621
  Jul  6 13:16:54.621: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename cronjob @ 07/06/24 13:16:54.622
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:16:54.637
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:16:54.638
  STEP: Creating a cronjob @ 07/06/24 13:16:54.64
  STEP: Ensuring more than one job is running at a time @ 07/06/24 13:16:54.646
  E0706 13:16:54.939252      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:16:55.939542      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:16:56.940080      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:16:57.940161      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:16:58.940979      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:16:59.941077      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:17:00.941687      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:17:01.941761      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:17:02.941861      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:17:03.942707      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:17:04.943155      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:17:05.943244      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:17:06.943318      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:17:07.943617      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:17:08.944375      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:17:09.944545      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:17:10.945254      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:17:11.945444      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:17:12.946516      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:17:13.946563      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:17:14.947320      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:17:15.947428      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:17:16.947950      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:17:17.948136      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:17:18.948917      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:17:19.949165      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:17:20.950146      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:17:21.950509      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:17:22.951238      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:17:23.951481      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:17:24.952119      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:17:25.952209      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:17:26.952512      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:17:27.952616      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:17:28.953534      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:17:29.953795      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:17:30.954827      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:17:31.954926      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:17:32.955118      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:17:33.955199      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:17:34.955575      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:17:35.956033      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:17:36.956690      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:17:37.956777      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:17:38.956876      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:17:39.957062      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:17:40.957623      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:17:41.957777      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:17:42.957883      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:17:43.957997      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:17:44.958623      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:17:45.959138      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:17:46.960020      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:17:47.960225      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:17:48.960336      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:17:49.960415      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:17:50.960910      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:17:51.961062      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:17:52.961922      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:17:53.962112      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:17:54.962479      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:17:55.963539      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:17:56.964472      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:17:57.964563      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:17:58.965328      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:17:59.965515      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 07/06/24 13:18:00.649
  STEP: Removing cronjob @ 07/06/24 13:18:00.653
  Jul  6 13:18:00.660: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-2120" for this suite. @ 07/06/24 13:18:00.663
• [66.050 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 07/06/24 13:18:00.671
  Jul  6 13:18:00.671: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename projected @ 07/06/24 13:18:00.672
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:18:00.695
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:18:00.697
  STEP: Creating configMap with name projected-configmap-test-volume-map-4e19b526-abc3-4ee0-a122-c9cae5d40827 @ 07/06/24 13:18:00.698
  STEP: Creating a pod to test consume configMaps @ 07/06/24 13:18:00.702
  E0706 13:18:00.965782      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:18:01.965994      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:18:02.966635      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:18:03.966729      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/06/24 13:18:04.721
  Jul  6 13:18:04.724: INFO: Trying to get logs from node ip-172-31-24-251 pod pod-projected-configmaps-1b1f44f8-1b0a-4623-92b3-a52b1a1a5cad container agnhost-container: <nil>
  STEP: delete the pod @ 07/06/24 13:18:04.731
  Jul  6 13:18:04.744: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9848" for this suite. @ 07/06/24 13:18:04.747
• [4.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 07/06/24 13:18:04.753
  Jul  6 13:18:04.753: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename downward-api @ 07/06/24 13:18:04.754
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:18:04.771
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:18:04.773
  STEP: Creating a pod to test downward API volume plugin @ 07/06/24 13:18:04.774
  E0706 13:18:04.966796      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:18:05.967328      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:18:06.967451      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:18:07.967519      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/06/24 13:18:08.796
  Jul  6 13:18:08.799: INFO: Trying to get logs from node ip-172-31-24-251 pod downwardapi-volume-2d1839c3-c66b-4206-a33f-40c690c7a8cb container client-container: <nil>
  STEP: delete the pod @ 07/06/24 13:18:08.816
  Jul  6 13:18:08.831: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8646" for this suite. @ 07/06/24 13:18:08.834
• [4.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 07/06/24 13:18:08.84
  Jul  6 13:18:08.840: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename deployment @ 07/06/24 13:18:08.841
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:18:08.858
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:18:08.86
  Jul  6 13:18:08.873: INFO: Pod name rollover-pod: Found 0 pods out of 1
  E0706 13:18:08.967708      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:18:09.967806      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:18:10.967889      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:18:11.968799      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:18:12.968891      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:18:13.877: INFO: Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/06/24 13:18:13.877
  Jul  6 13:18:13.877: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
  E0706 13:18:13.969340      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:18:14.969556      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:18:15.881: INFO: Creating deployment "test-rollover-deployment"
  Jul  6 13:18:15.889: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
  E0706 13:18:15.970217      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:18:16.970339      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:18:17.896: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
  Jul  6 13:18:17.900: INFO: Ensure that both replica sets have 1 created replica
  Jul  6 13:18:17.907: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  Jul  6 13:18:17.917: INFO: Updating deployment test-rollover-deployment
  Jul  6 13:18:17.917: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  E0706 13:18:17.970842      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:18:18.971720      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:18:19.925: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
  Jul  6 13:18:19.930: INFO: Make sure deployment "test-rollover-deployment" is complete
  Jul  6 13:18:19.936: INFO: all replica sets need to contain the pod-template-hash label
  Jul  6 13:18:19.936: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.July, 6, 13, 18, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 6, 13, 18, 15, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 6, 13, 18, 19, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 6, 13, 18, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0706 13:18:19.972413      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:18:20.973210      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:18:21.944: INFO: all replica sets need to contain the pod-template-hash label
  Jul  6 13:18:21.944: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.July, 6, 13, 18, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 6, 13, 18, 15, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 6, 13, 18, 19, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 6, 13, 18, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0706 13:18:21.973491      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:18:22.973675      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:18:23.944: INFO: all replica sets need to contain the pod-template-hash label
  Jul  6 13:18:23.945: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.July, 6, 13, 18, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 6, 13, 18, 15, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 6, 13, 18, 19, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 6, 13, 18, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0706 13:18:23.974032      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:18:24.974155      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:18:25.944: INFO: all replica sets need to contain the pod-template-hash label
  Jul  6 13:18:25.944: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.July, 6, 13, 18, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 6, 13, 18, 15, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 6, 13, 18, 19, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 6, 13, 18, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0706 13:18:25.974449      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:18:26.974552      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:18:27.945: INFO: all replica sets need to contain the pod-template-hash label
  Jul  6 13:18:27.945: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.July, 6, 13, 18, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 6, 13, 18, 15, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 6, 13, 18, 19, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 6, 13, 18, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0706 13:18:27.975409      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:18:28.975530      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:18:29.943: INFO: 
  Jul  6 13:18:29.943: INFO: Ensure that both old replica sets have no replicas
  Jul  6 13:18:29.952: INFO: Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=13) "deployment-51",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "83357728-9676-475c-b66d-10186a3921ae",
      ResourceVersion: (string) (len=5) "30275",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855868695,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855868697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855868709,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855868695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855868695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855868709,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855868695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-68774655d5\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jul  6 13:18:29.956: INFO: New ReplicaSet "test-rollover-deployment-68774655d5" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-68774655d5",
      GenerateName: (string) "",
      Namespace: (string) (len=13) "deployment-51",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7b28b10b-5fc2-4275-bc22-4f1e983fd638",
      ResourceVersion: (string) (len=5) "30265",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855868697,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "83357728-9676-475c-b66d-10186a3921ae",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855868697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 38 33 33 35 37 37  32 38 2d 39 36 37 36 2d  |\"83357728-9676-|
              00000120  34 37 35 63 2d 62 36 36  64 2d 31 30 31 38 36 61  |475c-b66d-10186a|
              00000130  33 39 32 31 61 65 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |3921ae\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855868709,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jul  6 13:18:29.957: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
  Jul  6 13:18:29.958: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=13) "deployment-51",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3b542eaa-c47e-4145-9f1f-ed0b20547d41",
      ResourceVersion: (string) (len=5) "30274",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855868688,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "83357728-9676-475c-b66d-10186a3921ae",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855868688,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855868709,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  38 33 33 35 37 37 32 38  2d 39 36 37 36 2d 34 37  |83357728-9676-47|
              000000c0  35 63 2d 62 36 36 64 2d  31 30 31 38 36 61 33 39  |5c-b66d-10186a39|
              000000d0  32 31 61 65 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |21ae\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855868709,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jul  6 13:18:29.958: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-664fc6c874",
      GenerateName: (string) "",
      Namespace: (string) (len=13) "deployment-51",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c4ff547a-7f9b-423e-a91c-bb66f1dfd0d3",
      ResourceVersion: (string) (len=5) "30222",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855868695,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "83357728-9676-475c-b66d-10186a3921ae",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855868697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 38 33 33 35 37 37  32 38 2d 39 36 37 36 2d  |\"83357728-9676-|
              00000120  34 37 35 63 2d 62 36 36  64 2d 31 30 31 38 36 61  |475c-b66d-10186a|
              00000130  33 39 32 31 61 65 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |3921ae\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855868697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jul  6 13:18:29.962: INFO: Pod "test-rollover-deployment-68774655d5-hrrp4" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-68774655d5-hrrp4",
      GenerateName: (string) (len=36) "test-rollover-deployment-68774655d5-",
      Namespace: (string) (len=13) "deployment-51",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1c8e0bf3-ea7f-47c7-a1f6-0cff76a8c8c4",
      ResourceVersion: (string) (len=5) "30242",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855868697,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-68774655d5",
          UID: (types.UID) (len=36) "7b28b10b-5fc2-4275-bc22-4f1e983fd638",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855868697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 62  32 38 62 31 30 62 2d 35  |d\":\"7b28b10b-5|
              00000090  66 63 32 2d 34 32 37 35  2d 62 63 32 32 2d 34 66  |fc2-4275-bc22-4f|
              000000a0  31 65 39 38 33 66 64 36  33 38 5c 22 7d 22 3a 7b  |1e983fd638\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855868699,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 31  32 2e 36 38 5c 22 7d 22  |2.168.112.68\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fjm86",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fjm86",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-9-199",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855868699,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855868697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855868699,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855868699,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855868697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.9.199",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.9.199"
        }
      },
      PodIP: (string) (len=14) "192.168.112.68",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.112.68"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855868697,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63855868698,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253",
          ContainerID: (string) (len=77) "containerd://e395ebc74f686e252fb837afc2dcb7c636e5efc39909038c7bd55cef26198306",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul  6 13:18:29.963: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-51" for this suite. @ 07/06/24 13:18:29.968
• [21.135 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 07/06/24 13:18:29.975
  Jul  6 13:18:29.975: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  E0706 13:18:29.975617      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Building a namespace api object, basename daemonsets @ 07/06/24 13:18:29.976
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:18:29.992
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:18:29.994
  STEP: Creating a simple DaemonSet "daemon-set" @ 07/06/24 13:18:30.011
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/06/24 13:18:30.015
  Jul  6 13:18:30.018: INFO: DaemonSet pods can't tolerate node ip-172-31-76-18 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul  6 13:18:30.018: INFO: DaemonSet pods can't tolerate node ip-172-31-9-125 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul  6 13:18:30.020: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul  6 13:18:30.020: INFO: Node ip-172-31-24-251 is running 0 daemon pod, expected 1
  E0706 13:18:30.976424      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:18:31.021: INFO: DaemonSet pods can't tolerate node ip-172-31-76-18 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul  6 13:18:31.021: INFO: DaemonSet pods can't tolerate node ip-172-31-9-125 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul  6 13:18:31.024: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul  6 13:18:31.024: INFO: Node ip-172-31-24-251 is running 0 daemon pod, expected 1
  E0706 13:18:31.977075      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:18:32.020: INFO: DaemonSet pods can't tolerate node ip-172-31-76-18 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul  6 13:18:32.020: INFO: DaemonSet pods can't tolerate node ip-172-31-9-125 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul  6 13:18:32.023: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jul  6 13:18:32.023: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 07/06/24 13:18:32.026
  Jul  6 13:18:32.039: INFO: DaemonSet pods can't tolerate node ip-172-31-76-18 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul  6 13:18:32.039: INFO: DaemonSet pods can't tolerate node ip-172-31-9-125 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul  6 13:18:32.043: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jul  6 13:18:32.043: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 07/06/24 13:18:32.043
  E0706 13:18:32.977141      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting DaemonSet "daemon-set" @ 07/06/24 13:18:33.049
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3227, will wait for the garbage collector to delete the pods @ 07/06/24 13:18:33.049
  Jul  6 13:18:33.108: INFO: Deleting DaemonSet.extensions daemon-set took: 5.449815ms
  Jul  6 13:18:33.209: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.432412ms
  E0706 13:18:33.977461      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:18:34.978511      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:18:35.112: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul  6 13:18:35.113: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jul  6 13:18:35.115: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"30415"},"items":null}

  Jul  6 13:18:35.118: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"30415"},"items":null}

  Jul  6 13:18:35.141: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3227" for this suite. @ 07/06/24 13:18:35.148
• [5.180 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 07/06/24 13:18:35.155
  Jul  6 13:18:35.155: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename secrets @ 07/06/24 13:18:35.155
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:18:35.171
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:18:35.173
  STEP: Creating secret with name secret-test-map-efad9f65-0c72-4d0d-9192-220edb6eda9c @ 07/06/24 13:18:35.175
  STEP: Creating a pod to test consume secrets @ 07/06/24 13:18:35.181
  E0706 13:18:35.979550      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:18:36.979654      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:18:37.979935      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:18:38.980010      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/06/24 13:18:39.205
  Jul  6 13:18:39.209: INFO: Trying to get logs from node ip-172-31-24-251 pod pod-secrets-05300638-5186-40eb-9351-211fb29257b7 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/06/24 13:18:39.216
  Jul  6 13:18:39.228: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5929" for this suite. @ 07/06/24 13:18:39.231
• [4.084 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 07/06/24 13:18:39.241
  Jul  6 13:18:39.241: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename projected @ 07/06/24 13:18:39.242
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:18:39.259
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:18:39.26
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-e2075a61-89a5-44d7-ac53-0d5d21e780c2 @ 07/06/24 13:18:39.265
  STEP: Creating the pod @ 07/06/24 13:18:39.27
  E0706 13:18:39.980130      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:18:40.980223      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-e2075a61-89a5-44d7-ac53-0d5d21e780c2 @ 07/06/24 13:18:41.295
  STEP: waiting to observe update in volume @ 07/06/24 13:18:41.299
  E0706 13:18:41.980636      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:18:42.980843      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:18:43.981762      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:18:44.981926      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:18:45.982034      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:18:46.982244      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:18:47.982541      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:18:48.982739      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:18:49.983610      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:18:50.984573      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:18:51.985162      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:18:52.985264      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:18:53.985504      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:18:54.985711      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:18:55.986522      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:18:56.986618      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:18:57.986814      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:18:58.986911      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:18:59.987592      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:19:00.988694      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:19:01.989291      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:19:02.989486      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:19:03.990126      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:19:04.990262      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:19:05.990433      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:19:06.990570      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:19:07.991114      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:19:08.991216      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:19:09.991294      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:19:10.991393      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:19:11.991478      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:19:12.991561      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:19:13.991602      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:19:14.992574      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:19:15.993160      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:19:16.993252      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:19:17.993336      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:19:18.993393      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:19:19.993498      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:19:20.993544      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:19:21.993979      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:19:22.994108      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:19:23.995055      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:19:24.995634      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:19:25.996217      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:19:26.996334      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:19:27.996462      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:19:28.996687      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:19:29.997601      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:19:30.997716      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:19:31.997967      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:19:32.998196      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:19:33.998595      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:19:34.998754      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:19:35.998846      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:19:36.998943      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:19:37.999775      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:19:38.999880      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:19:39.999932      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:19:41.000707      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:19:42.001408      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:19:43.001497      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:19:44.001595      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:19:45.001820      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:19:46.002843      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:19:47.002917      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:19:47.569: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6488" for this suite. @ 07/06/24 13:19:47.572
• [68.336 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 07/06/24 13:19:47.578
  Jul  6 13:19:47.578: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename webhook @ 07/06/24 13:19:47.578
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:19:47.597
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:19:47.599
  STEP: Setting up server cert @ 07/06/24 13:19:47.618
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/06/24 13:19:47.785
  STEP: Deploying the webhook pod @ 07/06/24 13:19:47.793
  STEP: Wait for the deployment to be ready @ 07/06/24 13:19:47.804
  Jul  6 13:19:47.811: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0706 13:19:48.003237      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:19:49.003510      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/06/24 13:19:49.821
  STEP: Verifying the service has paired with the endpoint @ 07/06/24 13:19:49.83
  E0706 13:19:50.003635      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:19:50.831: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jul  6 13:19:50.837: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  E0706 13:19:51.003720      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 07/06/24 13:19:51.347
  STEP: Creating a custom resource that should be denied by the webhook @ 07/06/24 13:19:51.359
  E0706 13:19:52.004011      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:19:53.004164      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 07/06/24 13:19:53.377
  STEP: Updating the custom resource with disallowed data should be denied @ 07/06/24 13:19:53.385
  STEP: Deleting the custom resource should be denied @ 07/06/24 13:19:53.393
  STEP: Remove the offending key and value from the custom resource data @ 07/06/24 13:19:53.4
  STEP: Deleting the updated custom resource should be successful @ 07/06/24 13:19:53.41
  Jul  6 13:19:53.973: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8630" for this suite. @ 07/06/24 13:19:53.978
  STEP: Destroying namespace "webhook-markers-6384" for this suite. @ 07/06/24 13:19:53.985
• [6.415 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 07/06/24 13:19:53.993
  Jul  6 13:19:53.993: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename dns @ 07/06/24 13:19:53.994
  E0706 13:19:54.004703      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:19:54.012
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:19:54.013
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-8081.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-8081.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 07/06/24 13:19:54.015
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-8081.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-8081.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 07/06/24 13:19:54.015
  STEP: creating a pod to probe /etc/hosts @ 07/06/24 13:19:54.015
  STEP: submitting the pod to kubernetes @ 07/06/24 13:19:54.015
  E0706 13:19:55.005663      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:19:56.005860      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/06/24 13:19:56.037
  STEP: looking for the results for each expected name from probers @ 07/06/24 13:19:56.041
  Jul  6 13:19:56.056: INFO: DNS probes using dns-8081/dns-test-27253307-4a96-4933-b74c-b63e97d92597 succeeded

  STEP: deleting the pod @ 07/06/24 13:19:56.056
  Jul  6 13:19:56.067: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8081" for this suite. @ 07/06/24 13:19:56.07
• [2.084 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 07/06/24 13:19:56.077
  Jul  6 13:19:56.077: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename webhook @ 07/06/24 13:19:56.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:19:56.096
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:19:56.098
  STEP: Setting up server cert @ 07/06/24 13:19:56.118
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/06/24 13:19:56.428
  STEP: Deploying the webhook pod @ 07/06/24 13:19:56.434
  STEP: Wait for the deployment to be ready @ 07/06/24 13:19:56.442
  Jul  6 13:19:56.450: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0706 13:19:57.006675      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:19:58.006771      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/06/24 13:19:58.46
  STEP: Verifying the service has paired with the endpoint @ 07/06/24 13:19:58.468
  E0706 13:19:59.007590      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:19:59.468: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jul  6 13:19:59.475: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-1557-crds.webhook.example.com via the AdmissionRegistration API @ 07/06/24 13:19:59.987
  STEP: Creating a custom resource while v1 is storage version @ 07/06/24 13:20:00.001
  E0706 13:20:00.007684      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:20:01.008604      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:20:02.008700      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 07/06/24 13:20:02.032
  STEP: Patching the custom resource while v2 is storage version @ 07/06/24 13:20:02.045
  Jul  6 13:20:02.629: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2778" for this suite. @ 07/06/24 13:20:02.634
  STEP: Destroying namespace "webhook-markers-6513" for this suite. @ 07/06/24 13:20:02.641
• [6.569 seconds]
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:447
  STEP: Creating a kubernetes client @ 07/06/24 13:20:02.647
  Jul  6 13:20:02.647: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename sched-pred @ 07/06/24 13:20:02.647
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:20:02.665
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:20:02.667
  Jul  6 13:20:02.668: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Jul  6 13:20:02.676: INFO: Waiting for terminating namespaces to be deleted...
  Jul  6 13:20:02.679: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-24-251 before test
  Jul  6 13:20:02.687: INFO: nginx-ingress-controller-kubernetes-worker-pn62c from ingress-nginx-kubernetes-worker started at 2024-07-06 12:10:53 +0000 UTC (1 container statuses recorded)
  Jul  6 13:20:02.687: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jul  6 13:20:02.687: INFO: calico-node-xcgv8 from kube-system started at 2024-07-06 12:10:33 +0000 UTC (1 container statuses recorded)
  Jul  6 13:20:02.687: INFO: 	Container calico-node ready: true, restart count 0
  Jul  6 13:20:02.687: INFO: sonobuoy from sonobuoy started at 2024-07-06 12:13:22 +0000 UTC (1 container statuses recorded)
  Jul  6 13:20:02.687: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Jul  6 13:20:02.687: INFO: sonobuoy-systemd-logs-daemon-set-ada2bb128210461e-nx2fj from sonobuoy started at 2024-07-06 12:13:24 +0000 UTC (2 container statuses recorded)
  Jul  6 13:20:02.687: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jul  6 13:20:02.687: INFO: 	Container systemd-logs ready: true, restart count 0
  Jul  6 13:20:02.687: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-9-199 before test
  Jul  6 13:20:02.690: INFO: nginx-ingress-controller-kubernetes-worker-sjnwc from ingress-nginx-kubernetes-worker started at 2024-07-06 12:04:14 +0000 UTC (1 container statuses recorded)
  Jul  6 13:20:02.690: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jul  6 13:20:02.690: INFO: calico-node-pfjxw from kube-system started at 2024-07-06 12:10:23 +0000 UTC (1 container statuses recorded)
  Jul  6 13:20:02.690: INFO: 	Container calico-node ready: true, restart count 0
  Jul  6 13:20:02.690: INFO: sonobuoy-e2e-job-aef6c266b67a4bc4 from sonobuoy started at 2024-07-06 12:13:24 +0000 UTC (2 container statuses recorded)
  Jul  6 13:20:02.690: INFO: 	Container e2e ready: true, restart count 0
  Jul  6 13:20:02.690: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jul  6 13:20:02.690: INFO: sonobuoy-systemd-logs-daemon-set-ada2bb128210461e-prx26 from sonobuoy started at 2024-07-06 12:13:24 +0000 UTC (2 container statuses recorded)
  Jul  6 13:20:02.691: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jul  6 13:20:02.691: INFO: 	Container systemd-logs ready: true, restart count 0
  Jul  6 13:20:02.691: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-90-155 before test
  Jul  6 13:20:02.694: INFO: nginx-ingress-controller-kubernetes-worker-j7txc from ingress-nginx-kubernetes-worker started at 2024-07-06 11:58:40 +0000 UTC (1 container statuses recorded)
  Jul  6 13:20:02.694: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jul  6 13:20:02.694: INFO: calico-node-wqvcf from kube-system started at 2024-07-06 12:11:25 +0000 UTC (1 container statuses recorded)
  Jul  6 13:20:02.694: INFO: 	Container calico-node ready: true, restart count 0
  Jul  6 13:20:02.694: INFO: coredns-bddfd76d7-bnkt2 from kube-system started at 2024-07-06 11:58:40 +0000 UTC (1 container statuses recorded)
  Jul  6 13:20:02.694: INFO: 	Container coredns ready: true, restart count 0
  Jul  6 13:20:02.694: INFO: kube-state-metrics-6f48cdd76-49lrw from kube-system started at 2024-07-06 11:58:40 +0000 UTC (1 container statuses recorded)
  Jul  6 13:20:02.694: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Jul  6 13:20:02.694: INFO: metrics-server-v0.6.3-69d7fbfdf8-vsjkb from kube-system started at 2024-07-06 11:58:40 +0000 UTC (2 container statuses recorded)
  Jul  6 13:20:02.694: INFO: 	Container metrics-server ready: true, restart count 0
  Jul  6 13:20:02.694: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Jul  6 13:20:02.694: INFO: dashboard-metrics-scraper-5dd7cb5fc-9ss52 from kubernetes-dashboard started at 2024-07-06 11:58:40 +0000 UTC (1 container statuses recorded)
  Jul  6 13:20:02.694: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Jul  6 13:20:02.694: INFO: kubernetes-dashboard-7b899cb9d9-fl6gc from kubernetes-dashboard started at 2024-07-06 11:58:40 +0000 UTC (1 container statuses recorded)
  Jul  6 13:20:02.694: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Jul  6 13:20:02.694: INFO: sonobuoy-systemd-logs-daemon-set-ada2bb128210461e-p2g2w from sonobuoy started at 2024-07-06 12:13:24 +0000 UTC (2 container statuses recorded)
  Jul  6 13:20:02.694: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jul  6 13:20:02.694: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 07/06/24 13:20:02.694
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.17dfa245a6a46165], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/5 nodes are available: 5 Preemption is not helpful for scheduling.] @ 07/06/24 13:20:02.717
  E0706 13:20:03.008778      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:20:03.715: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-859" for this suite. @ 07/06/24 13:20:03.718
• [1.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 07/06/24 13:20:03.725
  Jul  6 13:20:03.725: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/06/24 13:20:03.726
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:20:03.742
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:20:03.744
  Jul  6 13:20:03.745: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  E0706 13:20:04.009351      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:20:05.009376      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:20:06.010233      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:20:07.010439      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:20:08.011080      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:20:09.011835      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:20:09.929: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-1473" for this suite. @ 07/06/24 13:20:09.932
• [6.214 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 07/06/24 13:20:09.939
  Jul  6 13:20:09.939: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename webhook @ 07/06/24 13:20:09.94
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:20:09.956
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:20:09.957
  STEP: Setting up server cert @ 07/06/24 13:20:09.984
  E0706 13:20:10.012100      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/06/24 13:20:10.161
  STEP: Deploying the webhook pod @ 07/06/24 13:20:10.167
  STEP: Wait for the deployment to be ready @ 07/06/24 13:20:10.176
  Jul  6 13:20:10.183: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0706 13:20:11.013044      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:20:12.013135      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/06/24 13:20:12.197
  STEP: Verifying the service has paired with the endpoint @ 07/06/24 13:20:12.206
  E0706 13:20:13.014167      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:20:13.206: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 07/06/24 13:20:13.214
  STEP: Registering slow webhook via the AdmissionRegistration API @ 07/06/24 13:20:13.214
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 07/06/24 13:20:13.228
  E0706 13:20:14.015226      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 07/06/24 13:20:14.241
  STEP: Registering slow webhook via the AdmissionRegistration API @ 07/06/24 13:20:14.241
  E0706 13:20:15.015309      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is longer than webhook latency @ 07/06/24 13:20:15.266
  STEP: Registering slow webhook via the AdmissionRegistration API @ 07/06/24 13:20:15.266
  E0706 13:20:16.015565      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:20:17.015670      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:20:18.016359      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:20:19.016438      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:20:20.016925      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 07/06/24 13:20:20.295
  STEP: Registering slow webhook via the AdmissionRegistration API @ 07/06/24 13:20:20.295
  E0706 13:20:21.017350      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:20:22.017461      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:20:23.017618      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:20:24.017807      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:20:25.017908      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:20:25.367: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4704" for this suite. @ 07/06/24 13:20:25.371
  STEP: Destroying namespace "webhook-markers-4608" for this suite. @ 07/06/24 13:20:25.379
• [15.445 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 07/06/24 13:20:25.384
  Jul  6 13:20:25.384: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename configmap @ 07/06/24 13:20:25.385
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:20:25.402
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:20:25.404
  STEP: Creating configMap with name configmap-test-volume-99555e70-a9a7-474a-8d17-cf32c2c12df1 @ 07/06/24 13:20:25.405
  STEP: Creating a pod to test consume configMaps @ 07/06/24 13:20:25.41
  E0706 13:20:26.018784      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:20:27.018892      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:20:28.019096      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:20:29.019871      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/06/24 13:20:29.432
  Jul  6 13:20:29.435: INFO: Trying to get logs from node ip-172-31-24-251 pod pod-configmaps-2f4c0462-0fd9-44cd-b29c-f7e40f7c6257 container configmap-volume-test: <nil>
  STEP: delete the pod @ 07/06/24 13:20:29.44
  Jul  6 13:20:29.453: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9268" for this suite. @ 07/06/24 13:20:29.457
• [4.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:785
  STEP: Creating a kubernetes client @ 07/06/24 13:20:29.463
  Jul  6 13:20:29.463: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename services @ 07/06/24 13:20:29.464
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:20:29.48
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:20:29.482
  STEP: creating service endpoint-test2 in namespace services-7210 @ 07/06/24 13:20:29.486
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7210 to expose endpoints map[] @ 07/06/24 13:20:29.493
  Jul  6 13:20:29.497: INFO: Failed go get Endpoints object: endpoints "endpoint-test2" not found
  E0706 13:20:30.020740      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:20:30.505: INFO: successfully validated that service endpoint-test2 in namespace services-7210 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-7210 @ 07/06/24 13:20:30.505
  E0706 13:20:31.021753      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:20:32.021892      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7210 to expose endpoints map[pod1:[80]] @ 07/06/24 13:20:32.522
  Jul  6 13:20:32.531: INFO: successfully validated that service endpoint-test2 in namespace services-7210 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 07/06/24 13:20:32.531
  Jul  6 13:20:32.531: INFO: Creating new exec pod
  E0706 13:20:33.022262      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:20:34.022367      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:20:35.022492      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:20:35.546: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=services-7210 exec execpodwdv68 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Jul  6 13:20:35.634: INFO: stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Jul  6 13:20:35.635: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul  6 13:20:35.635: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=services-7210 exec execpodwdv68 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.116 80'
  Jul  6 13:20:35.725: INFO: stderr: "+ nc -v -t -w 2 10.152.183.116 80\nConnection to 10.152.183.116 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Jul  6 13:20:35.725: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-7210 @ 07/06/24 13:20:35.725
  E0706 13:20:36.023316      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:20:37.023492      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7210 to expose endpoints map[pod1:[80] pod2:[80]] @ 07/06/24 13:20:37.74
  Jul  6 13:20:37.751: INFO: successfully validated that service endpoint-test2 in namespace services-7210 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 07/06/24 13:20:37.751
  E0706 13:20:38.023695      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:20:38.751: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=services-7210 exec execpodwdv68 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Jul  6 13:20:38.842: INFO: stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Jul  6 13:20:38.842: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul  6 13:20:38.842: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=services-7210 exec execpodwdv68 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.116 80'
  Jul  6 13:20:38.930: INFO: stderr: "+ nc -v -t -w 2 10.152.183.116 80\n+ echo hostName\nConnection to 10.152.183.116 80 port [tcp/http] succeeded!\n"
  Jul  6 13:20:38.930: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-7210 @ 07/06/24 13:20:38.93
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7210 to expose endpoints map[pod2:[80]] @ 07/06/24 13:20:38.945
  Jul  6 13:20:38.958: INFO: successfully validated that service endpoint-test2 in namespace services-7210 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 07/06/24 13:20:38.958
  E0706 13:20:39.023920      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:20:39.959: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=services-7210 exec execpodwdv68 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  E0706 13:20:40.024041      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:20:40.043: INFO: stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Jul  6 13:20:40.043: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul  6 13:20:40.043: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=services-7210 exec execpodwdv68 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.116 80'
  Jul  6 13:20:40.122: INFO: stderr: "+ nc -v -t -w 2 10.152.183.116 80\n+ echo hostName\nConnection to 10.152.183.116 80 port [tcp/http] succeeded!\n"
  Jul  6 13:20:40.122: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-7210 @ 07/06/24 13:20:40.122
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7210 to expose endpoints map[] @ 07/06/24 13:20:40.132
  E0706 13:20:41.024138      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:20:41.149: INFO: successfully validated that service endpoint-test2 in namespace services-7210 exposes endpoints map[]
  Jul  6 13:20:41.163: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7210" for this suite. @ 07/06/24 13:20:41.167
• [11.709 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:641
  STEP: Creating a kubernetes client @ 07/06/24 13:20:41.173
  Jul  6 13:20:41.173: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename statefulset @ 07/06/24 13:20:41.174
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:20:41.189
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:20:41.19
  STEP: Creating service test in namespace statefulset-9003 @ 07/06/24 13:20:41.192
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 07/06/24 13:20:41.195
  STEP: Creating stateful set ss in namespace statefulset-9003 @ 07/06/24 13:20:41.198
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-9003 @ 07/06/24 13:20:41.203
  Jul  6 13:20:41.205: INFO: Found 0 stateful pods, waiting for 1
  E0706 13:20:42.024612      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:20:43.024840      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:20:44.024965      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:20:45.025029      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:20:46.025195      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:20:47.025401      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:20:48.025510      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:20:49.025699      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:20:50.025813      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:20:51.025897      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:20:51.209: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 07/06/24 13:20:51.209
  Jul  6 13:20:51.212: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=statefulset-9003 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jul  6 13:20:51.298: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jul  6 13:20:51.298: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jul  6 13:20:51.298: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jul  6 13:20:51.302: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0706 13:20:52.026683      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:20:53.026777      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:20:54.027609      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:20:55.027702      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:20:56.027802      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:20:57.027977      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:20:58.028152      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:20:59.028270      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:21:00.028764      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:21:01.029172      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:21:01.303: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Jul  6 13:21:01.303: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Jul  6 13:21:01.318: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.999999777s
  E0706 13:21:02.029386      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:21:02.322: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.997465182s
  E0706 13:21:03.030349      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:21:03.328: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.992435188s
  E0706 13:21:04.030556      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:21:04.332: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.987230451s
  E0706 13:21:05.031422      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:21:05.337: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.982156041s
  E0706 13:21:06.032450      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:21:06.342: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.978254873s
  E0706 13:21:07.032860      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:21:07.345: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.973849473s
  E0706 13:21:08.033262      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:21:08.350: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.970421892s
  E0706 13:21:09.033632      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:21:09.354: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.964995912s
  E0706 13:21:10.034576      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:21:10.358: INFO: Verifying statefulset ss doesn't scale past 1 for another 961.153462ms
  E0706 13:21:11.035356      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-9003 @ 07/06/24 13:21:11.359
  Jul  6 13:21:11.364: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=statefulset-9003 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jul  6 13:21:11.452: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jul  6 13:21:11.452: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jul  6 13:21:11.452: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jul  6 13:21:11.456: INFO: Found 1 stateful pods, waiting for 3
  E0706 13:21:12.036048      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:21:13.036252      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:21:14.036441      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:21:15.037086      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:21:16.037534      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:21:17.037621      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:21:18.037730      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:21:19.037824      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:21:20.038768      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:21:21.039023      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:21:21.456: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Jul  6 13:21:21.456: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Jul  6 13:21:21.456: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 07/06/24 13:21:21.456
  STEP: Scale down will halt with unhealthy stateful pod @ 07/06/24 13:21:21.456
  Jul  6 13:21:21.462: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=statefulset-9003 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jul  6 13:21:21.543: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jul  6 13:21:21.543: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jul  6 13:21:21.543: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jul  6 13:21:21.543: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=statefulset-9003 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jul  6 13:21:21.630: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jul  6 13:21:21.630: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jul  6 13:21:21.630: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jul  6 13:21:21.630: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=statefulset-9003 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jul  6 13:21:21.716: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jul  6 13:21:21.716: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jul  6 13:21:21.716: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jul  6 13:21:21.716: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Jul  6 13:21:21.720: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0706 13:21:22.039068      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:21:23.040132      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:21:24.040262      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:21:25.040372      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:21:26.040742      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:21:27.040852      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:21:28.040977      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:21:29.041188      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:21:30.041296      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:21:31.041397      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:21:31.723: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Jul  6 13:21:31.723: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Jul  6 13:21:31.723: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Jul  6 13:21:31.734: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999999785s
  E0706 13:21:32.041937      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:21:32.739: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.996375145s
  E0706 13:21:33.042519      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:21:33.743: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.992594298s
  E0706 13:21:34.043265      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:21:34.748: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.987925736s
  E0706 13:21:35.043375      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:21:35.751: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.983460308s
  E0706 13:21:36.043796      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:21:36.755: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.980504393s
  E0706 13:21:37.044870      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:21:37.759: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.976203873s
  E0706 13:21:38.045715      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:21:38.764: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.972437373s
  E0706 13:21:39.046738      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:21:39.768: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.967356116s
  E0706 13:21:40.047220      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:21:40.773: INFO: Verifying statefulset ss doesn't scale past 3 for another 962.647701ms
  E0706 13:21:41.047639      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-9003 @ 07/06/24 13:21:41.773
  Jul  6 13:21:41.777: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=statefulset-9003 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jul  6 13:21:41.859: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jul  6 13:21:41.859: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jul  6 13:21:41.859: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jul  6 13:21:41.859: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=statefulset-9003 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jul  6 13:21:41.940: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jul  6 13:21:41.940: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jul  6 13:21:41.940: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jul  6 13:21:41.940: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=statefulset-9003 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jul  6 13:21:42.025: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jul  6 13:21:42.025: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jul  6 13:21:42.025: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jul  6 13:21:42.025: INFO: Scaling statefulset ss to 0
  E0706 13:21:42.047642      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:21:43.047839      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:21:44.047960      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:21:45.048409      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:21:46.049336      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:21:47.049453      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:21:48.049708      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:21:49.050619      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:21:50.050708      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:21:51.051613      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 07/06/24 13:21:52.033
  Jul  6 13:21:52.033: INFO: Deleting all statefulset in ns statefulset-9003
  Jul  6 13:21:52.036: INFO: Scaling statefulset ss to 0
  Jul  6 13:21:52.047: INFO: Waiting for statefulset status.replicas updated to 0
  Jul  6 13:21:52.050: INFO: Deleting statefulset ss
  E0706 13:21:52.051618      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:21:52.061: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9003" for this suite. @ 07/06/24 13:21:52.063
• [70.896 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 07/06/24 13:21:52.07
  Jul  6 13:21:52.070: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename chunking @ 07/06/24 13:21:52.07
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:21:52.086
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:21:52.088
  STEP: creating a large number of resources @ 07/06/24 13:21:52.09
  E0706 13:21:53.052248      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0706 13:21:53.378116      21 request.go:697] Waited for 1.001999189s due to client-side throttling, not priority and fairness, request: POST:https://10.152.183.1:443/api/v1/namespaces/chunking-1013/podtemplates
  E0706 13:21:54.052637      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:21:55.053569      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:21:56.053924      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:21:57.054232      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:21:58.054494      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:21:59.055407      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:22:00.056496      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:22:01.057385      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:22:02.058281      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:22:03.059262      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:22:04.059874      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:22:05.060166      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:22:06.060386      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:22:07.060775      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:22:08.061406      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:22:09.061663      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving those results in paged fashion several times @ 07/06/24 13:22:09.775
  Jul  6 13:22:09.824: INFO: Retrieved 17/17 results with rv 32136 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxMzYsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  Jul  6 13:22:09.875: INFO: Retrieved 17/17 results with rv 32136 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxMzYsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  Jul  6 13:22:09.924: INFO: Retrieved 17/17 results with rv 32136 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxMzYsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  Jul  6 13:22:09.973: INFO: Retrieved 17/17 results with rv 32136 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxMzYsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  Jul  6 13:22:10.025: INFO: Retrieved 17/17 results with rv 32136 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxMzYsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  E0706 13:22:10.061750      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:22:10.074: INFO: Retrieved 17/17 results with rv 32136 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxMzYsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  Jul  6 13:22:10.124: INFO: Retrieved 17/17 results with rv 32136 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxMzYsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  Jul  6 13:22:10.175: INFO: Retrieved 17/17 results with rv 32136 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxMzYsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  Jul  6 13:22:10.224: INFO: Retrieved 17/17 results with rv 32136 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxMzYsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  Jul  6 13:22:10.274: INFO: Retrieved 17/17 results with rv 32136 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxMzYsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  Jul  6 13:22:10.327: INFO: Retrieved 17/17 results with rv 32136 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxMzYsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  Jul  6 13:22:10.375: INFO: Retrieved 17/17 results with rv 32136 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxMzYsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  Jul  6 13:22:10.424: INFO: Retrieved 17/17 results with rv 32136 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxMzYsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  Jul  6 13:22:10.475: INFO: Retrieved 17/17 results with rv 32136 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxMzYsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  Jul  6 13:22:10.524: INFO: Retrieved 17/17 results with rv 32136 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxMzYsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  Jul  6 13:22:10.574: INFO: Retrieved 17/17 results with rv 32136 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxMzYsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  Jul  6 13:22:10.625: INFO: Retrieved 17/17 results with rv 32136 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxMzYsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  Jul  6 13:22:10.674: INFO: Retrieved 17/17 results with rv 32136 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxMzYsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  Jul  6 13:22:10.724: INFO: Retrieved 17/17 results with rv 32136 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxMzYsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  Jul  6 13:22:10.775: INFO: Retrieved 17/17 results with rv 32136 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxMzYsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  Jul  6 13:22:10.824: INFO: Retrieved 17/17 results with rv 32136 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxMzYsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  Jul  6 13:22:10.874: INFO: Retrieved 17/17 results with rv 32136 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxMzYsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  Jul  6 13:22:10.925: INFO: Retrieved 17/17 results with rv 32136 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxMzYsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  Jul  6 13:22:10.973: INFO: Retrieved 9/17 results with rv 32136 and continue 
  Jul  6 13:22:11.024: INFO: Retrieved 17/17 results with rv 32138 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxMzgsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  E0706 13:22:11.062125      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:22:11.075: INFO: Retrieved 17/17 results with rv 32138 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxMzgsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  Jul  6 13:22:11.124: INFO: Retrieved 17/17 results with rv 32138 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxMzgsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  Jul  6 13:22:11.174: INFO: Retrieved 17/17 results with rv 32138 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxMzgsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  Jul  6 13:22:11.225: INFO: Retrieved 17/17 results with rv 32138 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxMzgsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  Jul  6 13:22:11.274: INFO: Retrieved 17/17 results with rv 32138 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxMzgsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  Jul  6 13:22:11.323: INFO: Retrieved 17/17 results with rv 32138 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxMzgsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  Jul  6 13:22:11.375: INFO: Retrieved 17/17 results with rv 32138 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxMzgsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  Jul  6 13:22:11.423: INFO: Retrieved 17/17 results with rv 32138 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxMzgsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  Jul  6 13:22:11.474: INFO: Retrieved 17/17 results with rv 32138 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxMzgsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  Jul  6 13:22:11.525: INFO: Retrieved 17/17 results with rv 32138 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxMzgsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  Jul  6 13:22:11.574: INFO: Retrieved 17/17 results with rv 32138 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxMzgsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  Jul  6 13:22:11.624: INFO: Retrieved 17/17 results with rv 32138 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxMzgsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  Jul  6 13:22:11.675: INFO: Retrieved 17/17 results with rv 32138 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxMzgsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  Jul  6 13:22:11.724: INFO: Retrieved 17/17 results with rv 32138 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxMzgsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  Jul  6 13:22:11.774: INFO: Retrieved 17/17 results with rv 32138 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxMzgsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  Jul  6 13:22:11.825: INFO: Retrieved 17/17 results with rv 32138 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxMzgsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  Jul  6 13:22:11.874: INFO: Retrieved 17/17 results with rv 32138 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxMzgsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  Jul  6 13:22:11.924: INFO: Retrieved 17/17 results with rv 32138 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxMzgsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  Jul  6 13:22:11.975: INFO: Retrieved 17/17 results with rv 32138 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxMzgsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  Jul  6 13:22:12.024: INFO: Retrieved 17/17 results with rv 32138 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxMzgsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  E0706 13:22:12.062560      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:22:12.073: INFO: Retrieved 17/17 results with rv 32138 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxMzgsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  Jul  6 13:22:12.125: INFO: Retrieved 17/17 results with rv 32138 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxMzgsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  Jul  6 13:22:12.174: INFO: Retrieved 9/17 results with rv 32138 and continue 
  Jul  6 13:22:12.224: INFO: Retrieved 17/17 results with rv 32142 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxNDIsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  Jul  6 13:22:12.275: INFO: Retrieved 17/17 results with rv 32142 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxNDIsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  Jul  6 13:22:12.324: INFO: Retrieved 17/17 results with rv 32142 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxNDIsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  Jul  6 13:22:12.374: INFO: Retrieved 17/17 results with rv 32142 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxNDIsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  Jul  6 13:22:12.424: INFO: Retrieved 17/17 results with rv 32142 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxNDIsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  Jul  6 13:22:12.474: INFO: Retrieved 17/17 results with rv 32142 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxNDIsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  Jul  6 13:22:12.523: INFO: Retrieved 17/17 results with rv 32142 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxNDIsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  Jul  6 13:22:12.575: INFO: Retrieved 17/17 results with rv 32142 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxNDIsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  Jul  6 13:22:12.624: INFO: Retrieved 17/17 results with rv 32142 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxNDIsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  Jul  6 13:22:12.674: INFO: Retrieved 17/17 results with rv 32142 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxNDIsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  Jul  6 13:22:12.725: INFO: Retrieved 17/17 results with rv 32142 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxNDIsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  Jul  6 13:22:12.776: INFO: Retrieved 17/17 results with rv 32142 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxNDIsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  Jul  6 13:22:12.823: INFO: Retrieved 17/17 results with rv 32142 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxNDIsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  Jul  6 13:22:12.875: INFO: Retrieved 17/17 results with rv 32142 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxNDIsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  Jul  6 13:22:12.925: INFO: Retrieved 17/17 results with rv 32142 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxNDIsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  Jul  6 13:22:12.973: INFO: Retrieved 17/17 results with rv 32142 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxNDIsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  Jul  6 13:22:13.025: INFO: Retrieved 17/17 results with rv 32142 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxNDIsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  E0706 13:22:13.063500      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:22:13.074: INFO: Retrieved 17/17 results with rv 32142 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxNDIsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  Jul  6 13:22:13.123: INFO: Retrieved 17/17 results with rv 32142 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxNDIsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  Jul  6 13:22:13.175: INFO: Retrieved 17/17 results with rv 32142 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxNDIsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  Jul  6 13:22:13.225: INFO: Retrieved 17/17 results with rv 32142 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxNDIsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  Jul  6 13:22:13.273: INFO: Retrieved 17/17 results with rv 32142 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxNDIsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  Jul  6 13:22:13.325: INFO: Retrieved 17/17 results with rv 32142 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxNDIsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  Jul  6 13:22:13.375: INFO: Retrieved 9/17 results with rv 32142 and continue 
  STEP: retrieving those results all at once @ 07/06/24 13:22:13.376
  Jul  6 13:22:13.429: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-1013" for this suite. @ 07/06/24 13:22:13.475
• [21.458 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 07/06/24 13:22:13.528
  Jul  6 13:22:13.528: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename dns @ 07/06/24 13:22:13.528
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:22:13.546
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:22:13.547
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 07/06/24 13:22:13.549
  Jul  6 13:22:13.558: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-1906  7c6c596b-22ef-4455-b029-fb7f0757af9a 32153 0 2024-07-06 13:22:13 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2024-07-06 13:22:13 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-qqngg,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.47,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-qqngg,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  E0706 13:22:14.064430      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:22:15.064844      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS suffix list is configured on pod... @ 07/06/24 13:22:15.566
  Jul  6 13:22:15.566: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-1906 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul  6 13:22:15.566: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  Jul  6 13:22:15.566: INFO: ExecWithOptions: Clientset creation
  Jul  6 13:22:15.567: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-1906/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 07/06/24 13:22:15.62
  Jul  6 13:22:15.620: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-1906 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul  6 13:22:15.620: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  Jul  6 13:22:15.621: INFO: ExecWithOptions: Clientset creation
  Jul  6 13:22:15.621: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-1906/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jul  6 13:22:15.675: INFO: Deleting pod test-dns-nameservers...
  Jul  6 13:22:15.689: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1906" for this suite. @ 07/06/24 13:22:15.692
• [2.171 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 07/06/24 13:22:15.699
  Jul  6 13:22:15.699: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename projected @ 07/06/24 13:22:15.7
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:22:15.714
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:22:15.716
  STEP: Creating configMap with name cm-test-opt-del-c4a7854a-48ad-49d0-930b-4b954bd6dfe0 @ 07/06/24 13:22:15.721
  STEP: Creating configMap with name cm-test-opt-upd-d14638e2-0765-491e-b61c-464c4f95ca0f @ 07/06/24 13:22:15.724
  STEP: Creating the pod @ 07/06/24 13:22:15.727
  E0706 13:22:16.064941      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:22:17.065160      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-c4a7854a-48ad-49d0-930b-4b954bd6dfe0 @ 07/06/24 13:22:17.766
  STEP: Updating configmap cm-test-opt-upd-d14638e2-0765-491e-b61c-464c4f95ca0f @ 07/06/24 13:22:17.773
  STEP: Creating configMap with name cm-test-opt-create-636450a3-6166-4cae-abdf-25ce6113d1d9 @ 07/06/24 13:22:17.776
  STEP: waiting to observe update in volume @ 07/06/24 13:22:17.78
  E0706 13:22:18.066054      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:22:19.066253      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:22:20.066627      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:22:21.067623      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:22:22.067755      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:22:23.067829      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:22:24.068522      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:22:25.068944      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:22:26.069798      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:22:27.069900      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:22:28.070484      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:22:29.070571      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:22:30.071576      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:22:31.072392      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:22:32.072936      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:22:33.073927      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:22:34.074749      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:22:35.075419      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:22:36.075482      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:22:37.075661      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:22:38.076645      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:22:39.076736      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:22:40.077628      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:22:41.077930      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:22:42.078859      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:22:43.078957      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:22:44.079816      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:22:45.080291      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:22:46.081364      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:22:47.081455      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:22:48.081952      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:22:49.082141      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:22:50.082594      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:22:51.083617      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:22:52.084566      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:22:53.084757      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:22:54.085470      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:22:55.085829      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:22:56.086216      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:22:57.086267      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:22:58.087024      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:22:59.087705      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:23:00.088638      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:23:01.089115      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:23:02.090040      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:23:03.090440      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:23:04.091149      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:23:05.092092      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:23:06.092936      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:23:07.093032      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:23:08.093929      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:23:09.094010      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:23:10.095045      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:23:11.095398      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:23:12.095777      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:23:13.095890      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:23:14.096628      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:23:15.097368      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:23:16.098160      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:23:17.098371      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:23:18.098597      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:23:19.099616      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:23:20.100127      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:23:21.100458      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:23:22.064: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7146" for this suite. @ 07/06/24 13:23:22.067
• [66.372 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1053
  STEP: Creating a kubernetes client @ 07/06/24 13:23:22.072
  Jul  6 13:23:22.072: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename kubectl @ 07/06/24 13:23:22.072
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:23:22.089
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:23:22.09
  STEP: create deployment with httpd image @ 07/06/24 13:23:22.093
  Jul  6 13:23:22.093: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-277 create -f -'
  E0706 13:23:22.100892      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:23:22.206: INFO: stderr: ""
  Jul  6 13:23:22.206: INFO: stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 07/06/24 13:23:22.206
  Jul  6 13:23:22.206: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-277 diff -f -'
  Jul  6 13:23:22.337: INFO: rc: 1
  Jul  6 13:23:22.338: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-277 delete -f -'
  Jul  6 13:23:22.405: INFO: stderr: ""
  Jul  6 13:23:22.405: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  Jul  6 13:23:22.405: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-277" for this suite. @ 07/06/24 13:23:22.408
• [0.342 seconds]
------------------------------
SSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:134
  STEP: Creating a kubernetes client @ 07/06/24 13:23:22.414
  Jul  6 13:23:22.414: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename kubelet-test @ 07/06/24 13:23:22.415
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:23:22.43
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:23:22.432
  Jul  6 13:23:22.451: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-20" for this suite. @ 07/06/24 13:23:22.455
• [0.046 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 07/06/24 13:23:22.46
  Jul  6 13:23:22.460: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename configmap @ 07/06/24 13:23:22.46
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:23:22.478
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:23:22.48
  STEP: Creating configMap with name configmap-test-upd-7754e150-780f-4b1f-8fa9-6eb86bbb82d1 @ 07/06/24 13:23:22.485
  STEP: Creating the pod @ 07/06/24 13:23:22.488
  E0706 13:23:23.101020      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:23:24.101142      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for pod with text data @ 07/06/24 13:23:24.505
  STEP: Waiting for pod with binary data @ 07/06/24 13:23:24.512
  Jul  6 13:23:24.524: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-529" for this suite. @ 07/06/24 13:23:24.529
• [2.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:391
  STEP: Creating a kubernetes client @ 07/06/24 13:23:24.537
  Jul  6 13:23:24.537: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/06/24 13:23:24.537
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:23:24.554
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:23:24.557
  STEP: set up a multi version CRD @ 07/06/24 13:23:24.56
  Jul  6 13:23:24.561: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  E0706 13:23:25.101469      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:23:26.102209      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:23:27.102862      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: rename a version @ 07/06/24 13:23:27.599
  STEP: check the new version name is served @ 07/06/24 13:23:27.609
  E0706 13:23:28.103635      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the old version name is removed @ 07/06/24 13:23:28.357
  STEP: check the other version is not changed @ 07/06/24 13:23:28.947
  E0706 13:23:29.104255      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:23:30.104444      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:23:31.105424      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:23:31.348: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5631" for this suite. @ 07/06/24 13:23:31.355
• [6.824 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 07/06/24 13:23:31.361
  Jul  6 13:23:31.361: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename gc @ 07/06/24 13:23:31.361
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:23:31.374
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:23:31.378
  Jul  6 13:23:31.416: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"2f6568de-a4f9-4318-a822-f93989dcb97a", Controller:(*bool)(0xc004fa5e06), BlockOwnerDeletion:(*bool)(0xc004fa5e07)}}
  Jul  6 13:23:31.423: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"05830310-6e61-4f3b-8afa-21d0401ef896", Controller:(*bool)(0xc00065e19e), BlockOwnerDeletion:(*bool)(0xc00065e19f)}}
  Jul  6 13:23:31.444: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"403a3b77-6f12-4cde-af76-e430769a61fc", Controller:(*bool)(0xc003be1b9a), BlockOwnerDeletion:(*bool)(0xc003be1b9b)}}
  E0706 13:23:32.105711      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:23:33.105934      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:23:34.106212      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:23:35.106547      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:23:36.106667      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:23:36.459: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9263" for this suite. @ 07/06/24 13:23:36.462
• [5.107 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 07/06/24 13:23:36.468
  Jul  6 13:23:36.468: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename hostport @ 07/06/24 13:23:36.468
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:23:36.484
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:23:36.486
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 07/06/24 13:23:36.493
  E0706 13:23:37.106769      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:23:38.106842      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.31.24.251 on the node which pod1 resides and expect scheduled @ 07/06/24 13:23:38.508
  E0706 13:23:39.106958      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:23:40.107675      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.31.24.251 but use UDP protocol on the node which pod2 resides @ 07/06/24 13:23:40.525
  E0706 13:23:41.108461      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:23:42.108649      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:23:43.108761      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:23:44.108849      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:23:45.109743      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:23:46.109842      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:23:47.110835      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:23:48.111041      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:23:49.111195      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:23:50.111293      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:23:51.111408      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:23:52.111500      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:23:53.111584      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:23:54.111672      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 07/06/24 13:23:54.576
  Jul  6 13:23:54.576: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.31.24.251 http://127.0.0.1:54323/hostname] Namespace:hostport-730 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul  6 13:23:54.576: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  Jul  6 13:23:54.577: INFO: ExecWithOptions: Clientset creation
  Jul  6 13:23:54.577: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-730/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.31.24.251+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.24.251, port: 54323 @ 07/06/24 13:23:54.626
  Jul  6 13:23:54.626: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.31.24.251:54323/hostname] Namespace:hostport-730 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul  6 13:23:54.626: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  Jul  6 13:23:54.626: INFO: ExecWithOptions: Clientset creation
  Jul  6 13:23:54.626: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-730/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.31.24.251%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.24.251, port: 54323 UDP @ 07/06/24 13:23:54.674
  Jul  6 13:23:54.674: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.31.24.251 54323] Namespace:hostport-730 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul  6 13:23:54.674: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  Jul  6 13:23:54.675: INFO: ExecWithOptions: Clientset creation
  Jul  6 13:23:54.675: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-730/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.31.24.251+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  E0706 13:23:55.112534      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:23:56.113198      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:23:57.113575      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:23:58.114517      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:23:59.115547      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:23:59.719: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-730" for this suite. @ 07/06/24 13:23:59.724
• [23.262 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 07/06/24 13:23:59.73
  Jul  6 13:23:59.730: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename downward-api @ 07/06/24 13:23:59.731
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:23:59.743
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:23:59.746
  STEP: Creating a pod to test downward API volume plugin @ 07/06/24 13:23:59.748
  E0706 13:24:00.115695      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:24:01.116734      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:24:02.117772      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:24:03.117892      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/06/24 13:24:03.772
  Jul  6 13:24:03.775: INFO: Trying to get logs from node ip-172-31-9-199 pod downwardapi-volume-f05647a6-3d7a-4c9d-b893-7909155125ae container client-container: <nil>
  STEP: delete the pod @ 07/06/24 13:24:03.792
  Jul  6 13:24:03.807: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2157" for this suite. @ 07/06/24 13:24:03.81
• [4.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 07/06/24 13:24:03.817
  Jul  6 13:24:03.817: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename runtimeclass @ 07/06/24 13:24:03.817
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:24:03.83
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:24:03.832
  Jul  6 13:24:03.839: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-4831" for this suite. @ 07/06/24 13:24:03.842
• [0.032 seconds]
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 07/06/24 13:24:03.849
  Jul  6 13:24:03.849: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename downward-api @ 07/06/24 13:24:03.849
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:24:03.863
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:24:03.865
  STEP: Creating the pod @ 07/06/24 13:24:03.868
  E0706 13:24:04.118872      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:24:05.119814      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:24:06.119879      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:24:06.406: INFO: Successfully updated pod "labelsupdateb64b90de-0267-4477-9456-4c11b7b83a08"
  E0706 13:24:07.119980      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:24:08.120074      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:24:09.120514      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:24:10.120747      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:24:10.430: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-256" for this suite. @ 07/06/24 13:24:10.435
• [6.593 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 07/06/24 13:24:10.442
  Jul  6 13:24:10.442: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename proxy @ 07/06/24 13:24:10.443
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:24:10.458
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:24:10.46
  Jul  6 13:24:10.462: INFO: Creating pod...
  E0706 13:24:11.121673      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:24:12.121773      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:24:12.475: INFO: Creating service...
  Jul  6 13:24:12.488: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3798/pods/agnhost/proxy?method=DELETE
  Jul  6 13:24:12.495: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Jul  6 13:24:12.495: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3798/pods/agnhost/proxy?method=OPTIONS
  Jul  6 13:24:12.498: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Jul  6 13:24:12.498: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3798/pods/agnhost/proxy?method=PATCH
  Jul  6 13:24:12.501: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Jul  6 13:24:12.501: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3798/pods/agnhost/proxy?method=POST
  Jul  6 13:24:12.504: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Jul  6 13:24:12.504: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3798/pods/agnhost/proxy?method=PUT
  Jul  6 13:24:12.508: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Jul  6 13:24:12.508: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3798/services/e2e-proxy-test-service/proxy?method=DELETE
  Jul  6 13:24:12.513: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Jul  6 13:24:12.513: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3798/services/e2e-proxy-test-service/proxy?method=OPTIONS
  Jul  6 13:24:12.517: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Jul  6 13:24:12.517: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3798/services/e2e-proxy-test-service/proxy?method=PATCH
  Jul  6 13:24:12.522: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Jul  6 13:24:12.522: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3798/services/e2e-proxy-test-service/proxy?method=POST
  Jul  6 13:24:12.527: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Jul  6 13:24:12.528: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3798/services/e2e-proxy-test-service/proxy?method=PUT
  Jul  6 13:24:12.532: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Jul  6 13:24:12.532: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3798/pods/agnhost/proxy?method=GET
  Jul  6 13:24:12.534: INFO: http.Client request:GET StatusCode:301
  Jul  6 13:24:12.534: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3798/services/e2e-proxy-test-service/proxy?method=GET
  Jul  6 13:24:12.539: INFO: http.Client request:GET StatusCode:301
  Jul  6 13:24:12.539: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3798/pods/agnhost/proxy?method=HEAD
  Jul  6 13:24:12.541: INFO: http.Client request:HEAD StatusCode:301
  Jul  6 13:24:12.541: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3798/services/e2e-proxy-test-service/proxy?method=HEAD
  Jul  6 13:24:12.545: INFO: http.Client request:HEAD StatusCode:301
  Jul  6 13:24:12.545: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-3798" for this suite. @ 07/06/24 13:24:12.549
• [2.111 seconds]
------------------------------
S
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 07/06/24 13:24:12.553
  Jul  6 13:24:12.553: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename dns @ 07/06/24 13:24:12.554
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:24:12.567
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:24:12.57
  STEP: Creating a test headless service @ 07/06/24 13:24:12.573
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1095.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-1095.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1095.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-1095.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-1095.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-1095.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-1095.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-1095.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-1095.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-1095.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-1095.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-1095.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 29.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.29_udp@PTR;check="$$(dig +tcp +noall +answer +search 29.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.29_tcp@PTR;sleep 1; done
   @ 07/06/24 13:24:12.59
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1095.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-1095.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1095.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-1095.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-1095.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-1095.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-1095.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-1095.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-1095.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-1095.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-1095.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-1095.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 29.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.29_udp@PTR;check="$$(dig +tcp +noall +answer +search 29.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.29_tcp@PTR;sleep 1; done
   @ 07/06/24 13:24:12.59
  STEP: creating a pod to probe DNS @ 07/06/24 13:24:12.59
  STEP: submitting the pod to kubernetes @ 07/06/24 13:24:12.59
  E0706 13:24:13.121870      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:24:14.122020      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/06/24 13:24:14.61
  STEP: looking for the results for each expected name from probers @ 07/06/24 13:24:14.614
  Jul  6 13:24:14.618: INFO: Unable to read wheezy_udp@dns-test-service.dns-1095.svc.cluster.local from pod dns-1095/dns-test-7315b170-7edb-40dc-a3b9-7d7d1cda26d7: the server could not find the requested resource (get pods dns-test-7315b170-7edb-40dc-a3b9-7d7d1cda26d7)
  Jul  6 13:24:14.621: INFO: Unable to read wheezy_tcp@dns-test-service.dns-1095.svc.cluster.local from pod dns-1095/dns-test-7315b170-7edb-40dc-a3b9-7d7d1cda26d7: the server could not find the requested resource (get pods dns-test-7315b170-7edb-40dc-a3b9-7d7d1cda26d7)
  Jul  6 13:24:14.625: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-1095.svc.cluster.local from pod dns-1095/dns-test-7315b170-7edb-40dc-a3b9-7d7d1cda26d7: the server could not find the requested resource (get pods dns-test-7315b170-7edb-40dc-a3b9-7d7d1cda26d7)
  Jul  6 13:24:14.629: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-1095.svc.cluster.local from pod dns-1095/dns-test-7315b170-7edb-40dc-a3b9-7d7d1cda26d7: the server could not find the requested resource (get pods dns-test-7315b170-7edb-40dc-a3b9-7d7d1cda26d7)
  Jul  6 13:24:14.645: INFO: Unable to read jessie_udp@dns-test-service.dns-1095.svc.cluster.local from pod dns-1095/dns-test-7315b170-7edb-40dc-a3b9-7d7d1cda26d7: the server could not find the requested resource (get pods dns-test-7315b170-7edb-40dc-a3b9-7d7d1cda26d7)
  Jul  6 13:24:14.649: INFO: Unable to read jessie_tcp@dns-test-service.dns-1095.svc.cluster.local from pod dns-1095/dns-test-7315b170-7edb-40dc-a3b9-7d7d1cda26d7: the server could not find the requested resource (get pods dns-test-7315b170-7edb-40dc-a3b9-7d7d1cda26d7)
  Jul  6 13:24:14.652: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-1095.svc.cluster.local from pod dns-1095/dns-test-7315b170-7edb-40dc-a3b9-7d7d1cda26d7: the server could not find the requested resource (get pods dns-test-7315b170-7edb-40dc-a3b9-7d7d1cda26d7)
  Jul  6 13:24:14.656: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-1095.svc.cluster.local from pod dns-1095/dns-test-7315b170-7edb-40dc-a3b9-7d7d1cda26d7: the server could not find the requested resource (get pods dns-test-7315b170-7edb-40dc-a3b9-7d7d1cda26d7)
  Jul  6 13:24:14.669: INFO: Lookups using dns-1095/dns-test-7315b170-7edb-40dc-a3b9-7d7d1cda26d7 failed for: [wheezy_udp@dns-test-service.dns-1095.svc.cluster.local wheezy_tcp@dns-test-service.dns-1095.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-1095.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-1095.svc.cluster.local jessie_udp@dns-test-service.dns-1095.svc.cluster.local jessie_tcp@dns-test-service.dns-1095.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-1095.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-1095.svc.cluster.local]

  Jul  6 13:24:14.680: INFO: Pod client logs for webserver: 
  Jul  6 13:24:14.686: INFO: Pod client logs for querier: 
  Jul  6 13:24:14.691: INFO: Pod client logs for jessie-querier: 
  E0706 13:24:15.123073      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:24:16.123172      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:24:17.123259      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:24:18.123350      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:24:19.124266      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:24:19.671: INFO: DNS probes using dns-1095/dns-test-7315b170-7edb-40dc-a3b9-7d7d1cda26d7 succeeded

  STEP: deleting the pod @ 07/06/24 13:24:19.671
  STEP: deleting the test service @ 07/06/24 13:24:19.684
  STEP: deleting the test headless service @ 07/06/24 13:24:19.71
  Jul  6 13:24:19.724: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1095" for this suite. @ 07/06/24 13:24:19.727
• [7.179 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 07/06/24 13:24:19.732
  Jul  6 13:24:19.732: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename projected @ 07/06/24 13:24:19.733
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:24:19.746
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:24:19.749
  STEP: Creating configMap with name projected-configmap-test-volume-e599ce51-92d9-41f1-bab9-6c54b70e3e39 @ 07/06/24 13:24:19.751
  STEP: Creating a pod to test consume configMaps @ 07/06/24 13:24:19.756
  E0706 13:24:20.124363      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:24:21.124529      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:24:22.125161      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:24:23.125280      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/06/24 13:24:23.776
  Jul  6 13:24:23.779: INFO: Trying to get logs from node ip-172-31-24-251 pod pod-projected-configmaps-7cbb89d4-a17b-45d2-87ad-dcdddf70a89f container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 07/06/24 13:24:23.785
  Jul  6 13:24:23.798: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6882" for this suite. @ 07/06/24 13:24:23.802
• [4.074 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 07/06/24 13:24:23.807
  Jul  6 13:24:23.807: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename emptydir-wrapper @ 07/06/24 13:24:23.807
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:24:23.82
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:24:23.825
  STEP: Creating 50 configmaps @ 07/06/24 13:24:23.827
  STEP: Creating RC which spawns configmap-volume pods @ 07/06/24 13:24:24.061
  E0706 13:24:24.125676      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:24:24.218: INFO: Pod name wrapped-volume-race-a9e18928-9ecb-413e-a6f8-cba053942346: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 07/06/24 13:24:24.218
  E0706 13:24:25.126636      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:24:26.126664      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating RC which spawns configmap-volume pods @ 07/06/24 13:24:26.246
  Jul  6 13:24:26.257: INFO: Pod name wrapped-volume-race-95600643-0fe2-4e01-b623-5e1f278a3c86: Found 0 pods out of 5
  E0706 13:24:27.127174      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:24:28.127628      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:24:29.127687      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:24:30.127806      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:24:31.128757      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:24:31.262: INFO: Pod name wrapped-volume-race-95600643-0fe2-4e01-b623-5e1f278a3c86: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 07/06/24 13:24:31.262
  STEP: Creating RC which spawns configmap-volume pods @ 07/06/24 13:24:31.282
  Jul  6 13:24:31.295: INFO: Pod name wrapped-volume-race-c3d9f09e-27a6-443d-aaef-fec9b7c04d8d: Found 0 pods out of 5
  E0706 13:24:32.128880      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:24:33.128979      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:24:34.129179      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:24:35.129645      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:24:36.129800      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:24:36.300: INFO: Pod name wrapped-volume-race-c3d9f09e-27a6-443d-aaef-fec9b7c04d8d: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 07/06/24 13:24:36.3
  STEP: deleting ReplicationController wrapped-volume-race-c3d9f09e-27a6-443d-aaef-fec9b7c04d8d in namespace emptydir-wrapper-6053, will wait for the garbage collector to delete the pods @ 07/06/24 13:24:36.316
  Jul  6 13:24:36.376: INFO: Deleting ReplicationController wrapped-volume-race-c3d9f09e-27a6-443d-aaef-fec9b7c04d8d took: 5.581423ms
  Jul  6 13:24:36.476: INFO: Terminating ReplicationController wrapped-volume-race-c3d9f09e-27a6-443d-aaef-fec9b7c04d8d pods took: 100.559001ms
  E0706 13:24:37.129979      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:24:38.130562      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-95600643-0fe2-4e01-b623-5e1f278a3c86 in namespace emptydir-wrapper-6053, will wait for the garbage collector to delete the pods @ 07/06/24 13:24:38.177
  Jul  6 13:24:38.239: INFO: Deleting ReplicationController wrapped-volume-race-95600643-0fe2-4e01-b623-5e1f278a3c86 took: 5.89993ms
  Jul  6 13:24:38.339: INFO: Terminating ReplicationController wrapped-volume-race-95600643-0fe2-4e01-b623-5e1f278a3c86 pods took: 100.215289ms
  E0706 13:24:39.131218      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-a9e18928-9ecb-413e-a6f8-cba053942346 in namespace emptydir-wrapper-6053, will wait for the garbage collector to delete the pods @ 07/06/24 13:24:39.942
  Jul  6 13:24:40.002: INFO: Deleting ReplicationController wrapped-volume-race-a9e18928-9ecb-413e-a6f8-cba053942346 took: 4.97152ms
  Jul  6 13:24:40.102: INFO: Terminating ReplicationController wrapped-volume-race-a9e18928-9ecb-413e-a6f8-cba053942346 pods took: 100.099854ms
  E0706 13:24:40.131352      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:24:41.132185      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 07/06/24 13:24:42.003
  E0706 13:24:42.133052      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:24:42.275: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-6053" for this suite. @ 07/06/24 13:24:42.278
• [18.476 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:488
  STEP: Creating a kubernetes client @ 07/06/24 13:24:42.283
  Jul  6 13:24:42.283: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename security-context-test @ 07/06/24 13:24:42.283
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:24:42.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:24:42.301
  E0706 13:24:43.133223      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:24:44.133294      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:24:44.317: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-1127" for this suite. @ 07/06/24 13:24:44.321
• [2.045 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 07/06/24 13:24:44.329
  Jul  6 13:24:44.329: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename prestop @ 07/06/24 13:24:44.329
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:24:44.34
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:24:44.343
  STEP: Creating server pod server in namespace prestop-3163 @ 07/06/24 13:24:44.346
  STEP: Waiting for pods to come up. @ 07/06/24 13:24:44.354
  E0706 13:24:45.133588      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:24:46.134238      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating tester pod tester in namespace prestop-3163 @ 07/06/24 13:24:46.365
  E0706 13:24:47.134558      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:24:48.134651      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting pre-stop pod @ 07/06/24 13:24:48.379
  E0706 13:24:49.134744      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:24:50.134840      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:24:51.134942      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:24:52.135028      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:24:53.135145      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:24:53.393: INFO: Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 07/06/24 13:24:53.395
  Jul  6 13:24:53.408: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-3163" for this suite. @ 07/06/24 13:24:53.413
• [9.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 07/06/24 13:24:53.421
  Jul  6 13:24:53.421: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename webhook @ 07/06/24 13:24:53.421
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:24:53.434
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:24:53.438
  STEP: Setting up server cert @ 07/06/24 13:24:53.459
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/06/24 13:24:54.064
  STEP: Deploying the webhook pod @ 07/06/24 13:24:54.071
  STEP: Wait for the deployment to be ready @ 07/06/24 13:24:54.083
  Jul  6 13:24:54.089: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0706 13:24:54.135577      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:24:55.135842      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/06/24 13:24:56.1
  STEP: Verifying the service has paired with the endpoint @ 07/06/24 13:24:56.111
  E0706 13:24:56.136901      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:24:57.111: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 07/06/24 13:24:57.119
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 07/06/24 13:24:57.134
  E0706 13:24:57.137772      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a configMap that should not be mutated @ 07/06/24 13:24:57.14
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 07/06/24 13:24:57.15
  STEP: Creating a configMap that should be mutated @ 07/06/24 13:24:57.157
  Jul  6 13:24:57.216: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2941" for this suite. @ 07/06/24 13:24:57.219
  STEP: Destroying namespace "webhook-markers-8309" for this suite. @ 07/06/24 13:24:57.228
• [3.813 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 07/06/24 13:24:57.235
  Jul  6 13:24:57.235: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename configmap @ 07/06/24 13:24:57.236
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:24:57.248
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:24:57.25
  STEP: Creating configMap with name configmap-test-volume-689570ad-79ea-4652-92fe-c3b354d207fb @ 07/06/24 13:24:57.253
  STEP: Creating a pod to test consume configMaps @ 07/06/24 13:24:57.259
  E0706 13:24:58.138457      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:24:59.138663      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/06/24 13:24:59.273
  Jul  6 13:24:59.277: INFO: Trying to get logs from node ip-172-31-24-251 pod pod-configmaps-050893aa-4ef4-480b-af7b-19fc063c7b49 container agnhost-container: <nil>
  STEP: delete the pod @ 07/06/24 13:24:59.282
  Jul  6 13:24:59.299: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7230" for this suite. @ 07/06/24 13:24:59.307
• [2.079 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:808
  STEP: Creating a kubernetes client @ 07/06/24 13:24:59.314
  Jul  6 13:24:59.314: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename resourcequota @ 07/06/24 13:24:59.315
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:24:59.334
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:24:59.342
  STEP: Creating a ResourceQuota with best effort scope @ 07/06/24 13:24:59.348
  STEP: Ensuring ResourceQuota status is calculated @ 07/06/24 13:24:59.355
  E0706 13:25:00.138788      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:25:01.138835      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not best effort scope @ 07/06/24 13:25:01.358
  STEP: Ensuring ResourceQuota status is calculated @ 07/06/24 13:25:01.363
  E0706 13:25:02.138925      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:25:03.139622      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a best-effort pod @ 07/06/24 13:25:03.37
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 07/06/24 13:25:03.382
  E0706 13:25:04.140669      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:25:05.140882      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 07/06/24 13:25:05.386
  E0706 13:25:06.141372      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:25:07.141482      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 07/06/24 13:25:07.391
  STEP: Ensuring resource quota status released the pod usage @ 07/06/24 13:25:07.402
  E0706 13:25:08.142111      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:25:09.142231      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a not best-effort pod @ 07/06/24 13:25:09.406
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 07/06/24 13:25:09.417
  E0706 13:25:10.142544      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:25:11.142636      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 07/06/24 13:25:11.421
  E0706 13:25:12.142723      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:25:13.142818      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 07/06/24 13:25:13.425
  STEP: Ensuring resource quota status released the pod usage @ 07/06/24 13:25:13.437
  E0706 13:25:14.143279      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:25:15.143560      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:25:15.441: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1670" for this suite. @ 07/06/24 13:25:15.444
• [16.137 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1538
  STEP: Creating a kubernetes client @ 07/06/24 13:25:15.451
  Jul  6 13:25:15.451: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename kubectl @ 07/06/24 13:25:15.451
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:25:15.463
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:25:15.466
  STEP: creating Agnhost RC @ 07/06/24 13:25:15.468
  Jul  6 13:25:15.469: INFO: namespace kubectl-6614
  Jul  6 13:25:15.469: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-6614 create -f -'
  Jul  6 13:25:15.561: INFO: stderr: ""
  Jul  6 13:25:15.561: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 07/06/24 13:25:15.561
  E0706 13:25:16.143889      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:25:16.565: INFO: Selector matched 1 pods for map[app:agnhost]
  Jul  6 13:25:16.565: INFO: Found 0 / 1
  E0706 13:25:17.144238      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:25:17.566: INFO: Selector matched 1 pods for map[app:agnhost]
  Jul  6 13:25:17.566: INFO: Found 1 / 1
  Jul  6 13:25:17.566: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Jul  6 13:25:17.571: INFO: Selector matched 1 pods for map[app:agnhost]
  Jul  6 13:25:17.571: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Jul  6 13:25:17.571: INFO: wait on agnhost-primary startup in kubectl-6614 
  Jul  6 13:25:17.571: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-6614 logs agnhost-primary-2q7h4 agnhost-primary'
  Jul  6 13:25:17.622: INFO: stderr: ""
  Jul  6 13:25:17.622: INFO: stdout: "Paused\n"
  STEP: exposing RC @ 07/06/24 13:25:17.623
  Jul  6 13:25:17.623: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-6614 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  Jul  6 13:25:17.677: INFO: stderr: ""
  Jul  6 13:25:17.677: INFO: stdout: "service/rm2 exposed\n"
  Jul  6 13:25:17.682: INFO: Service rm2 in namespace kubectl-6614 found.
  E0706 13:25:18.145058      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:25:19.145210      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: exposing service @ 07/06/24 13:25:19.689
  Jul  6 13:25:19.689: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-6614 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  Jul  6 13:25:19.742: INFO: stderr: ""
  Jul  6 13:25:19.742: INFO: stdout: "service/rm3 exposed\n"
  Jul  6 13:25:19.748: INFO: Service rm3 in namespace kubectl-6614 found.
  E0706 13:25:20.146241      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:25:21.146573      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:25:21.755: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6614" for this suite. @ 07/06/24 13:25:21.758
• [6.312 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 07/06/24 13:25:21.763
  Jul  6 13:25:21.763: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename emptydir @ 07/06/24 13:25:21.764
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:25:21.777
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:25:21.78
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 07/06/24 13:25:21.783
  E0706 13:25:22.146727      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:25:23.146794      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:25:24.147035      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:25:25.147418      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/06/24 13:25:25.804
  Jul  6 13:25:25.806: INFO: Trying to get logs from node ip-172-31-9-199 pod pod-9d9b7a66-1e62-4d29-8ac7-9934903ec8db container test-container: <nil>
  STEP: delete the pod @ 07/06/24 13:25:25.811
  Jul  6 13:25:25.827: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2876" for this suite. @ 07/06/24 13:25:25.83
• [4.073 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:324
  STEP: Creating a kubernetes client @ 07/06/24 13:25:25.837
  Jul  6 13:25:25.837: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename cronjob @ 07/06/24 13:25:25.837
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:25:25.852
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:25:25.854
  STEP: Creating a cronjob @ 07/06/24 13:25:25.857
  STEP: creating @ 07/06/24 13:25:25.857
  STEP: getting @ 07/06/24 13:25:25.863
  STEP: listing @ 07/06/24 13:25:25.865
  STEP: watching @ 07/06/24 13:25:25.868
  Jul  6 13:25:25.868: INFO: starting watch
  STEP: cluster-wide listing @ 07/06/24 13:25:25.869
  STEP: cluster-wide watching @ 07/06/24 13:25:25.871
  Jul  6 13:25:25.871: INFO: starting watch
  STEP: patching @ 07/06/24 13:25:25.872
  STEP: updating @ 07/06/24 13:25:25.877
  Jul  6 13:25:25.887: INFO: waiting for watch events with expected annotations
  Jul  6 13:25:25.887: INFO: saw patched and updated annotations
  STEP: patching /status @ 07/06/24 13:25:25.887
  STEP: updating /status @ 07/06/24 13:25:25.893
  STEP: get /status @ 07/06/24 13:25:25.899
  STEP: deleting @ 07/06/24 13:25:25.901
  STEP: deleting a collection @ 07/06/24 13:25:25.915
  Jul  6 13:25:25.927: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-9554" for this suite. @ 07/06/24 13:25:25.93
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:155
  STEP: Creating a kubernetes client @ 07/06/24 13:25:25.938
  Jul  6 13:25:25.938: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename secrets @ 07/06/24 13:25:25.938
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:25:25.95
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:25:25.952
  STEP: creating a secret @ 07/06/24 13:25:25.957
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 07/06/24 13:25:25.961
  STEP: patching the secret @ 07/06/24 13:25:25.964
  STEP: deleting the secret using a LabelSelector @ 07/06/24 13:25:25.97
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 07/06/24 13:25:25.977
  Jul  6 13:25:25.980: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6198" for this suite. @ 07/06/24 13:25:25.983
• [0.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:153
  STEP: Creating a kubernetes client @ 07/06/24 13:25:25.991
  Jul  6 13:25:25.991: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/06/24 13:25:25.991
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:25:26.003
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:25:26.005
  Jul  6 13:25:26.008: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  E0706 13:25:26.148207      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:25:27.148654      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 07/06/24 13:25:27.271
  Jul  6 13:25:27.271: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=crd-publish-openapi-8477 --namespace=crd-publish-openapi-8477 create -f -'
  E0706 13:25:28.148857      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:25:29.148923      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:25:29.336: INFO: stderr: ""
  Jul  6 13:25:29.336: INFO: stdout: "e2e-test-crd-publish-openapi-2977-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Jul  6 13:25:29.336: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=crd-publish-openapi-8477 --namespace=crd-publish-openapi-8477 delete e2e-test-crd-publish-openapi-2977-crds test-cr'
  Jul  6 13:25:29.383: INFO: stderr: ""
  Jul  6 13:25:29.383: INFO: stdout: "e2e-test-crd-publish-openapi-2977-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  Jul  6 13:25:29.383: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=crd-publish-openapi-8477 --namespace=crd-publish-openapi-8477 apply -f -'
  Jul  6 13:25:29.433: INFO: stderr: ""
  Jul  6 13:25:29.433: INFO: stdout: "e2e-test-crd-publish-openapi-2977-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Jul  6 13:25:29.433: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=crd-publish-openapi-8477 --namespace=crd-publish-openapi-8477 delete e2e-test-crd-publish-openapi-2977-crds test-cr'
  Jul  6 13:25:29.478: INFO: stderr: ""
  Jul  6 13:25:29.478: INFO: stdout: "e2e-test-crd-publish-openapi-2977-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 07/06/24 13:25:29.478
  Jul  6 13:25:29.478: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=crd-publish-openapi-8477 explain e2e-test-crd-publish-openapi-2977-crds'
  Jul  6 13:25:29.515: INFO: stderr: ""
  Jul  6 13:25:29.515: INFO: stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-2977-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  E0706 13:25:30.149525      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:25:30.723: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8477" for this suite. @ 07/06/24 13:25:30.73
• [4.745 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 07/06/24 13:25:30.736
  Jul  6 13:25:30.736: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename projected @ 07/06/24 13:25:30.737
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:25:30.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:25:30.756
  STEP: Creating a pod to test downward API volume plugin @ 07/06/24 13:25:30.76
  E0706 13:25:31.150430      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:25:32.150665      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:25:33.151222      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:25:34.152163      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/06/24 13:25:34.784
  Jul  6 13:25:34.788: INFO: Trying to get logs from node ip-172-31-24-251 pod downwardapi-volume-147f1ac0-8642-42e4-82ba-9e4894e8981d container client-container: <nil>
  STEP: delete the pod @ 07/06/24 13:25:34.794
  Jul  6 13:25:34.815: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3420" for this suite. @ 07/06/24 13:25:34.819
• [4.089 seconds]
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 07/06/24 13:25:34.826
  Jul  6 13:25:34.826: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename field-validation @ 07/06/24 13:25:34.826
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:25:34.84
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:25:34.842
  STEP: apply creating a deployment @ 07/06/24 13:25:34.847
  Jul  6 13:25:34.859: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7395" for this suite. @ 07/06/24 13:25:34.862
• [0.042 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 07/06/24 13:25:34.868
  Jul  6 13:25:34.868: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename taint-single-pod @ 07/06/24 13:25:34.868
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:25:34.879
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:25:34.881
  Jul  6 13:25:34.884: INFO: Waiting up to 1m0s for all nodes to be ready
  E0706 13:25:35.152809      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:25:36.153216      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:25:37.153699      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:25:38.153828      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:25:39.154608      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:25:40.154656      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:25:41.154861      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:25:42.154860      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:25:43.155338      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:25:44.155516      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:25:45.155741      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:25:46.156737      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:25:47.156809      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:25:48.157003      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:25:49.157974      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:25:50.158083      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:25:51.158965      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:25:52.159616      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:25:53.160053      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:25:54.160227      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:25:55.160569      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:25:56.161564      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:25:57.161766      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:25:58.161968      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:25:59.163004      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:26:00.163096      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:26:01.163138      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:26:02.163856      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:26:03.163892      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:26:04.163978      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:26:05.164079      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:26:06.164173      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:26:07.164652      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:26:08.164756      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:26:09.165705      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:26:10.165799      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:26:11.166219      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:26:12.166934      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:26:13.167630      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:26:14.167726      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:26:15.168136      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:26:16.168268      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:26:17.169237      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:26:18.169934      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:26:19.170044      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:26:20.170227      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:26:21.170795      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:26:22.170884      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:26:23.171598      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:26:24.172616      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:26:25.172923      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:26:26.173023      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:26:27.173635      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:26:28.173694      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:26:29.173928      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:26:30.174089      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:26:31.174653      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:26:32.175587      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:26:33.176124      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:26:34.176275      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:26:34.885: INFO: Waiting for terminating namespaces to be deleted...
  Jul  6 13:26:34.889: INFO: Starting informer...
  STEP: Starting pod... @ 07/06/24 13:26:34.889
  Jul  6 13:26:35.101: INFO: Pod is running on ip-172-31-24-251. Tainting Node
  STEP: Trying to apply a taint on the Node @ 07/06/24 13:26:35.101
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 07/06/24 13:26:35.112
  STEP: Waiting short time to make sure Pod is queued for deletion @ 07/06/24 13:26:35.115
  Jul  6 13:26:35.115: INFO: Pod wasn't evicted. Proceeding
  Jul  6 13:26:35.115: INFO: Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 07/06/24 13:26:35.125
  STEP: Waiting some time to make sure that toleration time passed. @ 07/06/24 13:26:35.132
  E0706 13:26:35.177149      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:26:36.177646      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:26:37.178599      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:26:38.178684      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:26:39.178798      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:26:40.178885      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:26:41.179134      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:26:42.179224      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:26:43.179341      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:26:44.179526      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:26:45.179901      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:26:46.180004      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:26:47.180412      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:26:48.180478      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:26:49.180647      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:26:50.180830      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:26:51.181045      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:26:52.181233      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:26:53.181432      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:26:54.181535      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:26:55.181897      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:26:56.181994      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:26:57.182080      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:26:58.182169      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:26:59.182245      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:27:00.182254      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:27:01.182550      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:27:02.183598      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:27:03.183751      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:27:04.183942      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:27:05.184911      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:27:06.185418      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:27:07.186333      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:27:08.186555      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:27:09.186658      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:27:10.186740      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:27:11.187674      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:27:12.187782      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:27:13.188079      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:27:14.188175      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:27:15.188573      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:27:16.189550      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:27:17.189647      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:27:18.189881      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:27:19.190073      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:27:20.190486      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:27:21.190548      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:27:22.191624      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:27:23.191714      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:27:24.192465      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:27:25.192715      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:27:26.192822      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:27:27.193234      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:27:28.193418      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:27:29.193592      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:27:30.193797      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:27:31.194043      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:27:32.194203      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:27:33.195072      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:27:34.195660      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:27:35.196507      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:27:36.196620      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:27:37.196826      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:27:38.197025      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:27:39.197142      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:27:40.197343      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:27:41.197424      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:27:42.197682      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:27:43.197943      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:27:44.198048      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:27:45.198392      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:27:46.198528      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:27:47.198631      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:27:48.199591      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:27:49.200643      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:27:50.133: INFO: Pod wasn't evicted. Test successful
  Jul  6 13:27:50.133: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-4511" for this suite. @ 07/06/24 13:27:50.139
• [135.278 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:453
  STEP: Creating a kubernetes client @ 07/06/24 13:27:50.146
  Jul  6 13:27:50.146: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename resourcequota @ 07/06/24 13:27:50.146
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:27:50.159
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:27:50.163
  STEP: Counting existing ResourceQuota @ 07/06/24 13:27:50.165
  E0706 13:27:50.201569      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:27:51.202335      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:27:52.202642      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:27:53.203023      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:27:54.203389      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 07/06/24 13:27:55.168
  STEP: Ensuring resource quota status is calculated @ 07/06/24 13:27:55.173
  E0706 13:27:55.203798      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:27:56.204753      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicaSet @ 07/06/24 13:27:57.178
  STEP: Ensuring resource quota status captures replicaset creation @ 07/06/24 13:27:57.188
  E0706 13:27:57.204860      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:27:58.204991      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicaSet @ 07/06/24 13:27:59.192
  STEP: Ensuring resource quota status released usage @ 07/06/24 13:27:59.197
  E0706 13:27:59.205736      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:28:00.206136      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:28:01.203: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0706 13:28:01.206366      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "resourcequota-5768" for this suite. @ 07/06/24 13:28:01.207
• [11.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 07/06/24 13:28:01.216
  Jul  6 13:28:01.216: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename emptydir @ 07/06/24 13:28:01.216
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:28:01.23
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:28:01.232
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 07/06/24 13:28:01.234
  E0706 13:28:02.206560      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:28:03.206656      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:28:04.206767      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:28:05.206862      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/06/24 13:28:05.253
  Jul  6 13:28:05.259: INFO: Trying to get logs from node ip-172-31-24-251 pod pod-e3a9b818-d376-4af8-bce2-3cc3f922e243 container test-container: <nil>
  STEP: delete the pod @ 07/06/24 13:28:05.271
  Jul  6 13:28:05.285: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9076" for this suite. @ 07/06/24 13:28:05.29
• [4.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:228
  STEP: Creating a kubernetes client @ 07/06/24 13:28:05.297
  Jul  6 13:28:05.297: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename var-expansion @ 07/06/24 13:28:05.297
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:28:05.311
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:28:05.314
  STEP: creating the pod with failed condition @ 07/06/24 13:28:05.316
  E0706 13:28:06.207618      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:28:07.207720      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:28:08.207815      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:28:09.207937      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:28:10.208840      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:28:11.208923      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:28:12.209172      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:28:13.209391      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:28:14.209530      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:28:15.209848      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:28:16.210776      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:28:17.210869      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:28:18.211605      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:28:19.211712      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:28:20.211895      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:28:21.212003      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:28:22.212559      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:28:23.212737      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:28:24.212836      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:28:25.213810      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:28:26.214626      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:28:27.214706      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:28:28.214809      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:28:29.214894      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:28:30.215631      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:28:31.215731      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:28:32.216492      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:28:33.216744      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:28:34.216684      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:28:35.216929      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:28:36.217328      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:28:37.217630      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:28:38.217717      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:28:39.218048      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:28:40.218139      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:28:41.218534      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:28:42.218682      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:28:43.218780      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:28:44.219633      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:28:45.219943      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:28:46.220693      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:28:47.220925      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:28:48.221244      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:28:49.221301      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:28:50.222212      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:28:51.222521      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:28:52.223721      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:28:53.224404      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:28:54.225225      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:28:55.225530      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:28:56.226455      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:28:57.226540      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:28:58.227621      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:28:59.227716      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:29:00.228508      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:29:01.228602      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:29:02.229051      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:29:03.229126      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:29:04.229217      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:29:05.230033      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:29:06.230741      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:29:07.231591      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:29:08.231896      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:29:09.232107      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:29:10.232140      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:29:11.232315      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:29:12.232490      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:29:13.232683      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:29:14.232883      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:29:15.232967      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:29:16.233928      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:29:17.234022      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:29:18.234457      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:29:19.234550      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:29:20.235606      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:29:21.235796      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:29:22.235888      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:29:23.236092      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:29:24.236173      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:29:25.237215      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:29:26.237664      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:29:27.237947      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:29:28.238052      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:29:29.238264      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:29:30.239265      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:29:31.239403      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:29:32.240199      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:29:33.240385      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:29:34.241081      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:29:35.241629      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:29:36.241764      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:29:37.242535      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:29:38.243594      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:29:39.243757      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:29:40.243835      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:29:41.244079      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:29:42.244182      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:29:43.244491      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:29:44.244591      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:29:45.245443      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:29:46.245641      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:29:47.245748      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:29:48.245861      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:29:49.245951      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:29:50.246923      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:29:51.247033      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:29:52.247628      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:29:53.247728      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:29:54.248667      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:29:55.249175      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:29:56.249384      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:29:57.250260      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:29:58.250537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:29:59.251604      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:30:00.252272      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:30:01.253260      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:30:02.253344      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:30:03.253443      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:30:04.254492      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:30:05.254850      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating the pod @ 07/06/24 13:30:05.327
  Jul  6 13:30:05.840: INFO: Successfully updated pod "var-expansion-b1b95568-694b-4000-a695-58874ffc088a"
  STEP: waiting for pod running @ 07/06/24 13:30:05.84
  E0706 13:30:06.254973      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:30:07.255115      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 07/06/24 13:30:07.848
  Jul  6 13:30:07.848: INFO: Deleting pod "var-expansion-b1b95568-694b-4000-a695-58874ffc088a" in namespace "var-expansion-1076"
  Jul  6 13:30:07.855: INFO: Wait up to 5m0s for pod "var-expansion-b1b95568-694b-4000-a695-58874ffc088a" to be fully deleted
  E0706 13:30:08.255351      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:30:09.256200      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:30:10.256905      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:30:11.257046      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:30:12.257079      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:30:13.257201      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:30:14.257695      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:30:15.257938      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:30:16.258062      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:30:17.258255      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:30:18.258962      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:30:19.259071      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:30:20.259122      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:30:21.259194      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:30:22.259621      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:30:23.259711      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:30:24.260329      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:30:25.260987      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:30:26.261643      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:30:27.261722      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:30:28.261786      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:30:29.262190      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:30:30.263061      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:30:31.263480      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:30:32.263584      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:30:33.263925      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:30:34.264517      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:30:35.264945      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:30:36.265976      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:30:37.266085      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:30:38.267010      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:30:39.267104      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:30:39.928: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1076" for this suite. @ 07/06/24 13:30:39.931
• [154.639 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:300
  STEP: Creating a kubernetes client @ 07/06/24 13:30:39.936
  Jul  6 13:30:39.936: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename var-expansion @ 07/06/24 13:30:39.937
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:30:39.952
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:30:39.955
  STEP: creating the pod @ 07/06/24 13:30:39.957
  STEP: waiting for pod running @ 07/06/24 13:30:39.965
  E0706 13:30:40.268078      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:30:41.268223      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 07/06/24 13:30:41.976
  Jul  6 13:30:41.979: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-6358 PodName:var-expansion-4305d5f1-eb6b-4827-aad8-0333881115e6 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul  6 13:30:41.979: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  Jul  6 13:30:41.980: INFO: ExecWithOptions: Clientset creation
  Jul  6 13:30:41.980: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-6358/pods/var-expansion-4305d5f1-eb6b-4827-aad8-0333881115e6/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 07/06/24 13:30:42.025
  Jul  6 13:30:42.029: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-6358 PodName:var-expansion-4305d5f1-eb6b-4827-aad8-0333881115e6 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul  6 13:30:42.029: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  Jul  6 13:30:42.030: INFO: ExecWithOptions: Clientset creation
  Jul  6 13:30:42.030: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-6358/pods/var-expansion-4305d5f1-eb6b-4827-aad8-0333881115e6/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 07/06/24 13:30:42.071
  E0706 13:30:42.269200      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:30:42.582: INFO: Successfully updated pod "var-expansion-4305d5f1-eb6b-4827-aad8-0333881115e6"
  STEP: waiting for annotated pod running @ 07/06/24 13:30:42.582
  STEP: deleting the pod gracefully @ 07/06/24 13:30:42.585
  Jul  6 13:30:42.585: INFO: Deleting pod "var-expansion-4305d5f1-eb6b-4827-aad8-0333881115e6" in namespace "var-expansion-6358"
  Jul  6 13:30:42.593: INFO: Wait up to 5m0s for pod "var-expansion-4305d5f1-eb6b-4827-aad8-0333881115e6" to be fully deleted
  E0706 13:30:43.270129      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:30:44.270335      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:30:45.270441      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:30:46.270549      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:30:47.271077      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:30:48.271590      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:30:49.272469      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:30:50.272560      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:30:51.273546      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:30:52.277463      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:30:53.278273      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:30:54.278355      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:30:55.278996      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:30:56.279628      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:30:57.280642      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:30:58.280725      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:30:59.280907      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:31:00.281294      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:31:01.281319      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:31:02.281483      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:31:03.282376      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:31:04.282545      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:31:05.283636      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:31:06.283699      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:31:07.283803      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:31:08.283872      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:31:09.283976      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:31:10.284171      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:31:11.284384      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:31:12.284884      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:31:13.285908      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:31:14.286018      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:31:14.663: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6358" for this suite. @ 07/06/24 13:31:14.666
• [34.735 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 07/06/24 13:31:14.671
  Jul  6 13:31:14.671: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename daemonsets @ 07/06/24 13:31:14.672
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:31:14.685
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:31:14.689
  STEP: Creating simple DaemonSet "daemon-set" @ 07/06/24 13:31:14.707
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/06/24 13:31:14.717
  Jul  6 13:31:14.721: INFO: DaemonSet pods can't tolerate node ip-172-31-76-18 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul  6 13:31:14.721: INFO: DaemonSet pods can't tolerate node ip-172-31-9-125 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul  6 13:31:14.729: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul  6 13:31:14.729: INFO: Node ip-172-31-24-251 is running 0 daemon pod, expected 1
  E0706 13:31:15.286585      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:31:15.722: INFO: DaemonSet pods can't tolerate node ip-172-31-76-18 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul  6 13:31:15.722: INFO: DaemonSet pods can't tolerate node ip-172-31-9-125 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul  6 13:31:15.724: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jul  6 13:31:15.724: INFO: Node ip-172-31-90-155 is running 0 daemon pod, expected 1
  E0706 13:31:16.287351      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:31:16.721: INFO: DaemonSet pods can't tolerate node ip-172-31-76-18 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul  6 13:31:16.721: INFO: DaemonSet pods can't tolerate node ip-172-31-9-125 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul  6 13:31:16.724: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jul  6 13:31:16.724: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 07/06/24 13:31:16.728
  STEP: DeleteCollection of the DaemonSets @ 07/06/24 13:31:16.731
  STEP: Verify that ReplicaSets have been deleted @ 07/06/24 13:31:16.738
  Jul  6 13:31:16.751: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"35424"},"items":null}

  Jul  6 13:31:16.755: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"35427"},"items":[{"metadata":{"name":"daemon-set-2f4mr","generateName":"daemon-set-","namespace":"daemonsets-4504","uid":"3cfe6705-0822-4d71-a56c-04d649ed762f","resourceVersion":"35427","creationTimestamp":"2024-07-06T13:31:14Z","deletionTimestamp":"2024-07-06T13:31:46Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"e7aa545c-d9c4-4abb-9717-d40874f27156","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-07-06T13:31:14Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"e7aa545c-d9c4-4abb-9717-d40874f27156\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-07-06T13:31:16Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.204.115\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-2slkv","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-2slkv","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-90-155","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-90-155"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-06T13:31:16Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-06T13:31:14Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-06T13:31:16Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-06T13:31:16Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-06T13:31:14Z"}],"hostIP":"172.31.90.155","hostIPs":[{"ip":"172.31.90.155"}],"podIP":"192.168.204.115","podIPs":[{"ip":"192.168.204.115"}],"startTime":"2024-07-06T13:31:14Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-07-06T13:31:15Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://6ccc999c963eb33e04a6af84625e4818d731420fd748aabb6061992745569e57","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-6t9fp","generateName":"daemon-set-","namespace":"daemonsets-4504","uid":"38c1e99f-0225-4fad-952a-ec8e01694bf6","resourceVersion":"35425","creationTimestamp":"2024-07-06T13:31:14Z","deletionTimestamp":"2024-07-06T13:31:46Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"e7aa545c-d9c4-4abb-9717-d40874f27156","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-07-06T13:31:14Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"e7aa545c-d9c4-4abb-9717-d40874f27156\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-07-06T13:31:15Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.112.91\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-jqjzp","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-jqjzp","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-9-199","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-9-199"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-06T13:31:15Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-06T13:31:14Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-06T13:31:15Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-06T13:31:15Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-06T13:31:14Z"}],"hostIP":"172.31.9.199","hostIPs":[{"ip":"172.31.9.199"}],"podIP":"192.168.112.91","podIPs":[{"ip":"192.168.112.91"}],"startTime":"2024-07-06T13:31:14Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-07-06T13:31:15Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://9d70089b75f2ceadc4a100a667173b10dd197ac26266d1aa4d32f5f0fbfb1c2e","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-fpssl","generateName":"daemon-set-","namespace":"daemonsets-4504","uid":"cbd34abc-9f7f-4f64-96b2-dc697df32204","resourceVersion":"35419","creationTimestamp":"2024-07-06T13:31:14Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"e7aa545c-d9c4-4abb-9717-d40874f27156","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-07-06T13:31:14Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"e7aa545c-d9c4-4abb-9717-d40874f27156\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-07-06T13:31:15Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.140.41\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-9ppx9","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-9ppx9","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-24-251","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-24-251"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-06T13:31:15Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-06T13:31:14Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-06T13:31:15Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-06T13:31:15Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-06T13:31:14Z"}],"hostIP":"172.31.24.251","hostIPs":[{"ip":"172.31.24.251"}],"podIP":"192.168.140.41","podIPs":[{"ip":"192.168.140.41"}],"startTime":"2024-07-06T13:31:14Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-07-06T13:31:15Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://d92a12894e605cefc41974badf4e301f8d6d59bc48390a09bd0aecdccd4c5e7c","started":true}],"qosClass":"BestEffort"}}]}

  Jul  6 13:31:16.769: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4504" for this suite. @ 07/06/24 13:31:16.773
• [2.107 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1416
  STEP: Creating a kubernetes client @ 07/06/24 13:31:16.779
  Jul  6 13:31:16.779: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename services @ 07/06/24 13:31:16.779
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:31:16.792
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:31:16.798
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-8586 @ 07/06/24 13:31:16.8
  STEP: changing the ExternalName service to type=ClusterIP @ 07/06/24 13:31:16.806
  STEP: creating replication controller externalname-service in namespace services-8586 @ 07/06/24 13:31:16.818
  I0706 13:31:16.828593      21 runners.go:197] Created replication controller with name: externalname-service, namespace: services-8586, replica count: 2
  E0706 13:31:17.287712      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:31:18.288474      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:31:19.288559      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0706 13:31:19.880387      21 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jul  6 13:31:19.880: INFO: Creating new exec pod
  E0706 13:31:20.289126      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:31:21.289537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:31:22.290131      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:31:22.895: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=services-8586 exec execpodrf5ms -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Jul  6 13:31:22.987: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Jul  6 13:31:22.987: INFO: stdout: "externalname-service-6rzxw"
  Jul  6 13:31:22.987: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=services-8586 exec execpodrf5ms -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.160 80'
  Jul  6 13:31:23.072: INFO: stderr: "+ nc -v -t -w 2 10.152.183.160 80\nConnection to 10.152.183.160 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Jul  6 13:31:23.073: INFO: stdout: ""
  E0706 13:31:23.290309      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:31:23.988: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=services-8586 exec execpodrf5ms -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.160 80'
  Jul  6 13:31:24.068: INFO: stderr: "+ nc -v -t -w 2 10.152.183.160 80\nConnection to 10.152.183.160 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Jul  6 13:31:24.069: INFO: stdout: ""
  E0706 13:31:24.290377      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:31:24.988: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=services-8586 exec execpodrf5ms -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.160 80'
  Jul  6 13:31:25.070: INFO: stderr: "+ nc -v -t -w 2 10.152.183.160 80\n+ echo hostName\nConnection to 10.152.183.160 80 port [tcp/http] succeeded!\n"
  Jul  6 13:31:25.070: INFO: stdout: "externalname-service-6rzxw"
  Jul  6 13:31:25.070: INFO: Cleaning up the ExternalName to ClusterIP test service
  Jul  6 13:31:25.086: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8586" for this suite. @ 07/06/24 13:31:25.091
• [8.316 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:214
  STEP: Creating a kubernetes client @ 07/06/24 13:31:25.096
  Jul  6 13:31:25.096: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 07/06/24 13:31:25.096
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:31:25.113
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:31:25.115
  STEP: create the container to handle the HTTPGet hook request. @ 07/06/24 13:31:25.12
  E0706 13:31:25.291164      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:31:26.291238      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 07/06/24 13:31:27.14
  E0706 13:31:27.292050      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:31:28.292152      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 07/06/24 13:31:29.156
  E0706 13:31:29.292961      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:31:30.293031      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:31:31.293556      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:31:32.293667      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 07/06/24 13:31:33.173
  Jul  6 13:31:33.189: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-8575" for this suite. @ 07/06/24 13:31:33.192
• [8.103 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:655
  STEP: Creating a kubernetes client @ 07/06/24 13:31:33.199
  Jul  6 13:31:33.199: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename job @ 07/06/24 13:31:33.2
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:31:33.213
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:31:33.216
  STEP: Creating a job @ 07/06/24 13:31:33.218
  STEP: Ensuring active pods == parallelism @ 07/06/24 13:31:33.223
  E0706 13:31:33.294153      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:31:34.294233      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Orphaning one of the Job's Pods @ 07/06/24 13:31:35.229
  E0706 13:31:35.295268      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:31:35.747: INFO: Successfully updated pod "adopt-release-h7h5w"
  STEP: Checking that the Job readopts the Pod @ 07/06/24 13:31:35.747
  E0706 13:31:36.295377      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:31:37.295550      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing the labels from the Job's Pod @ 07/06/24 13:31:37.754
  Jul  6 13:31:38.266: INFO: Successfully updated pod "adopt-release-h7h5w"
  STEP: Checking that the Job releases the Pod @ 07/06/24 13:31:38.266
  E0706 13:31:38.296209      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:31:39.296450      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:31:40.274: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6214" for this suite. @ 07/06/24 13:31:40.277
• [7.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 07/06/24 13:31:40.286
  Jul  6 13:31:40.286: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename gc @ 07/06/24 13:31:40.287
  E0706 13:31:40.297183      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:31:40.3
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:31:40.303
  STEP: create the rc @ 07/06/24 13:31:40.306
  W0706 13:31:40.309983      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0706 13:31:41.297303      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:31:42.297406      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:31:43.297626      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:31:44.297707      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:31:45.298453      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 07/06/24 13:31:45.314
  STEP: wait for all pods to be garbage collected @ 07/06/24 13:31:45.321
  E0706 13:31:46.298867      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:31:47.298944      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:31:48.299042      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:31:49.299143      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:31:50.299243      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 07/06/24 13:31:50.329
  W0706 13:31:50.333599      21 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Jul  6 13:31:50.333: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jul  6 13:31:50.333: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7126" for this suite. @ 07/06/24 13:31:50.337
• [10.060 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 07/06/24 13:31:50.346
  Jul  6 13:31:50.346: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename projected @ 07/06/24 13:31:50.346
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:31:50.362
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:31:50.364
  STEP: Creating configMap with name configmap-projected-all-test-volume-6c298ae0-b753-4ff3-b342-d49a4a3188df @ 07/06/24 13:31:50.366
  STEP: Creating secret with name secret-projected-all-test-volume-d04069ee-e9c8-4979-a8b2-3dcf72dfecd6 @ 07/06/24 13:31:50.369
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 07/06/24 13:31:50.373
  E0706 13:31:51.299775      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:31:52.299873      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:31:53.299994      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:31:54.300108      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/06/24 13:31:54.392
  Jul  6 13:31:54.395: INFO: Trying to get logs from node ip-172-31-24-251 pod projected-volume-86855f8e-ff01-4dfe-b31d-0ca2652df512 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 07/06/24 13:31:54.401
  Jul  6 13:31:54.416: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-666" for this suite. @ 07/06/24 13:31:54.42
• [4.081 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 07/06/24 13:31:54.427
  Jul  6 13:31:54.427: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename init-container @ 07/06/24 13:31:54.428
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:31:54.439
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:31:54.442
  STEP: creating the pod @ 07/06/24 13:31:54.444
  Jul  6 13:31:54.444: INFO: PodSpec: initContainers in spec.initContainers
  E0706 13:31:55.300859      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:31:56.300916      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:31:57.301032      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:31:57.895: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5783" for this suite. @ 07/06/24 13:31:57.898
• [3.478 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2177
  STEP: Creating a kubernetes client @ 07/06/24 13:31:57.905
  Jul  6 13:31:57.905: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename services @ 07/06/24 13:31:57.906
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:31:57.922
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:31:57.924
  STEP: creating service in namespace services-6183 @ 07/06/24 13:31:57.926
  STEP: creating service affinity-clusterip in namespace services-6183 @ 07/06/24 13:31:57.926
  STEP: creating replication controller affinity-clusterip in namespace services-6183 @ 07/06/24 13:31:57.934
  I0706 13:31:57.941061      21 runners.go:197] Created replication controller with name: affinity-clusterip, namespace: services-6183, replica count: 3
  E0706 13:31:58.301804      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:31:59.302609      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:32:00.302724      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0706 13:32:00.992505      21 runners.go:197] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jul  6 13:32:00.999: INFO: Creating new exec pod
  E0706 13:32:01.303612      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:32:02.303690      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:32:03.303813      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:32:04.016: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=services-6183 exec execpod-affinity78qgn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  Jul  6 13:32:04.102: INFO: stderr: "+ nc -v -t -w 2 affinity-clusterip 80\n+ echo hostName\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  Jul  6 13:32:04.102: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul  6 13:32:04.102: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=services-6183 exec execpod-affinity78qgn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.219 80'
  Jul  6 13:32:04.185: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.219 80\nConnection to 10.152.183.219 80 port [tcp/http] succeeded!\n"
  Jul  6 13:32:04.185: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul  6 13:32:04.185: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=services-6183 exec execpod-affinity78qgn -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.219:80/ ; done'
  Jul  6 13:32:04.302: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.219:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.219:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.219:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.219:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.219:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.219:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.219:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.219:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.219:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.219:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.219:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.219:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.219:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.219:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.219:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.219:80/\n"
  Jul  6 13:32:04.302: INFO: stdout: "\naffinity-clusterip-sml28\naffinity-clusterip-sml28\naffinity-clusterip-sml28\naffinity-clusterip-sml28\naffinity-clusterip-sml28\naffinity-clusterip-sml28\naffinity-clusterip-sml28\naffinity-clusterip-sml28\naffinity-clusterip-sml28\naffinity-clusterip-sml28\naffinity-clusterip-sml28\naffinity-clusterip-sml28\naffinity-clusterip-sml28\naffinity-clusterip-sml28\naffinity-clusterip-sml28\naffinity-clusterip-sml28"
  Jul  6 13:32:04.302: INFO: Received response from host: affinity-clusterip-sml28
  Jul  6 13:32:04.302: INFO: Received response from host: affinity-clusterip-sml28
  Jul  6 13:32:04.302: INFO: Received response from host: affinity-clusterip-sml28
  Jul  6 13:32:04.302: INFO: Received response from host: affinity-clusterip-sml28
  Jul  6 13:32:04.302: INFO: Received response from host: affinity-clusterip-sml28
  Jul  6 13:32:04.302: INFO: Received response from host: affinity-clusterip-sml28
  Jul  6 13:32:04.302: INFO: Received response from host: affinity-clusterip-sml28
  Jul  6 13:32:04.302: INFO: Received response from host: affinity-clusterip-sml28
  Jul  6 13:32:04.302: INFO: Received response from host: affinity-clusterip-sml28
  Jul  6 13:32:04.302: INFO: Received response from host: affinity-clusterip-sml28
  Jul  6 13:32:04.302: INFO: Received response from host: affinity-clusterip-sml28
  Jul  6 13:32:04.302: INFO: Received response from host: affinity-clusterip-sml28
  Jul  6 13:32:04.302: INFO: Received response from host: affinity-clusterip-sml28
  Jul  6 13:32:04.302: INFO: Received response from host: affinity-clusterip-sml28
  Jul  6 13:32:04.302: INFO: Received response from host: affinity-clusterip-sml28
  Jul  6 13:32:04.302: INFO: Received response from host: affinity-clusterip-sml28
  Jul  6 13:32:04.302: INFO: Cleaning up the exec pod
  E0706 13:32:04.304739      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController affinity-clusterip in namespace services-6183, will wait for the garbage collector to delete the pods @ 07/06/24 13:32:04.316
  Jul  6 13:32:04.376: INFO: Deleting ReplicationController affinity-clusterip took: 7.234131ms
  Jul  6 13:32:04.477: INFO: Terminating ReplicationController affinity-clusterip pods took: 100.633251ms
  E0706 13:32:05.305027      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:32:06.305526      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:32:07.306021      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:32:07.595: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6183" for this suite. @ 07/06/24 13:32:07.597
• [9.700 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:430
  STEP: Creating a kubernetes client @ 07/06/24 13:32:07.608
  Jul  6 13:32:07.608: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename pv @ 07/06/24 13:32:07.609
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:32:07.624
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:32:07.627
  STEP: Creating initial PV and PVC @ 07/06/24 13:32:07.629
  Jul  6 13:32:07.629: INFO: Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-8502" @ 07/06/24 13:32:07.643
  STEP: Listing PVCs in namespace "pv-8502" @ 07/06/24 13:32:07.647
  STEP: Patching the PV "pv-8502-jfs4q" @ 07/06/24 13:32:07.65
  STEP: Patching the PVC "pvc-cdb2k" @ 07/06/24 13:32:07.66
  STEP: Getting PV "pv-8502-jfs4q" @ 07/06/24 13:32:07.667
  STEP: Getting PVC "pvc-cdb2k" @ 07/06/24 13:32:07.669
  STEP: Deleting PVC "pvc-cdb2k" @ 07/06/24 13:32:07.672
  STEP: Confirm deletion of PVC "pvc-cdb2k" @ 07/06/24 13:32:07.679
  E0706 13:32:08.306364      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:32:09.306550      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-8502-jfs4q" @ 07/06/24 13:32:09.687
  STEP: Confirm deletion of PV "pv-8502-jfs4q" @ 07/06/24 13:32:09.694
  E0706 13:32:10.306642      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:32:11.306737      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating another PV & PVC @ 07/06/24 13:32:11.7
  Jul  6 13:32:11.700: INFO: Creating a PV followed by a PVC
  STEP: Updating the PV "pv-8502-8z7x9" @ 07/06/24 13:32:11.713
  STEP: Updating the PVC "pvc-cpjfh" @ 07/06/24 13:32:11.72
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-cpjfh=updated" @ 07/06/24 13:32:11.73
  STEP: Deleting PVC "pvc-cpjfh" via DeleteCollection @ 07/06/24 13:32:11.734
  STEP: Confirm deletion of PVC "pvc-cpjfh" @ 07/06/24 13:32:11.748
  E0706 13:32:12.306833      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:32:13.306935      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-8502-8z7x9" via DeleteCollection @ 07/06/24 13:32:13.755
  STEP: Confirm deletion of PV "pv-8502-8z7x9" @ 07/06/24 13:32:13.763
  E0706 13:32:14.307367      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:32:15.307599      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:32:15.769: INFO: AfterEach: deleting 1 PVCs and 1 PVs...
  Jul  6 13:32:15.769: INFO: Deleting PersistentVolumeClaim "pvc-cpjfh"
  Jul  6 13:32:15.771: INFO: Deleting PersistentVolume "pv-8502-8z7x9"
  Jul  6 13:32:15.775: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-8502" for this suite. @ 07/06/24 13:32:15.779
• [8.179 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 07/06/24 13:32:15.787
  Jul  6 13:32:15.787: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename secrets @ 07/06/24 13:32:15.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:32:15.801
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:32:15.805
  STEP: Creating secret with name secret-test-7e27f1da-690c-4c3b-a97a-b773df9a08e2 @ 07/06/24 13:32:15.807
  STEP: Creating a pod to test consume secrets @ 07/06/24 13:32:15.812
  E0706 13:32:16.308608      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:32:17.308788      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:32:18.308877      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:32:19.309188      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:32:20.309418      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:32:21.309473      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/06/24 13:32:21.835
  Jul  6 13:32:21.838: INFO: Trying to get logs from node ip-172-31-24-251 pod pod-secrets-2ebc7cbc-ff48-4f7e-8a8e-0be6ea7df71a container secret-volume-test: <nil>
  STEP: delete the pod @ 07/06/24 13:32:21.845
  Jul  6 13:32:21.865: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2067" for this suite. @ 07/06/24 13:32:21.869
• [6.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 07/06/24 13:32:21.876
  Jul  6 13:32:21.876: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename secrets @ 07/06/24 13:32:21.876
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:32:21.889
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:32:21.893
  STEP: Creating secret with name secret-test-e99b74e6-58b7-4d8d-a580-17431943a6a6 @ 07/06/24 13:32:21.914
  STEP: Creating a pod to test consume secrets @ 07/06/24 13:32:21.919
  E0706 13:32:22.309591      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:32:23.309684      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:32:24.310241      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:32:25.311159      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/06/24 13:32:25.941
  Jul  6 13:32:25.945: INFO: Trying to get logs from node ip-172-31-24-251 pod pod-secrets-70d641a7-5c6d-432b-af0b-669a61e509e2 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/06/24 13:32:25.951
  Jul  6 13:32:25.963: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5579" for this suite. @ 07/06/24 13:32:25.968
  STEP: Destroying namespace "secret-namespace-7349" for this suite. @ 07/06/24 13:32:25.975
• [4.105 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 07/06/24 13:32:25.981
  Jul  6 13:32:25.981: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename container-probe @ 07/06/24 13:32:25.982
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:32:25.994
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:32:25.998
  STEP: Creating pod test-grpc-9e3032e4-1c7c-410c-a75a-68908a228cce in namespace container-probe-5567 @ 07/06/24 13:32:26
  E0706 13:32:26.311599      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:32:27.311671      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/06/24 13:32:28.016
  Jul  6 13:32:28.019: INFO: Initial restart count of pod test-grpc-9e3032e4-1c7c-410c-a75a-68908a228cce is 0
  Jul  6 13:32:28.021: INFO: Get pod test-grpc-9e3032e4-1c7c-410c-a75a-68908a228cce in namespace container-probe-5567
  E0706 13:32:28.312138      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:32:29.312817      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:32:30.028: INFO: Get pod test-grpc-9e3032e4-1c7c-410c-a75a-68908a228cce in namespace container-probe-5567
  E0706 13:32:30.313497      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:32:31.313954      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:32:32.031: INFO: Get pod test-grpc-9e3032e4-1c7c-410c-a75a-68908a228cce in namespace container-probe-5567
  E0706 13:32:32.314936      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:32:33.315293      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:32:34.035: INFO: Get pod test-grpc-9e3032e4-1c7c-410c-a75a-68908a228cce in namespace container-probe-5567
  E0706 13:32:34.315646      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:32:35.316026      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:32:36.040: INFO: Get pod test-grpc-9e3032e4-1c7c-410c-a75a-68908a228cce in namespace container-probe-5567
  E0706 13:32:36.316258      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:32:37.316361      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:32:38.045: INFO: Get pod test-grpc-9e3032e4-1c7c-410c-a75a-68908a228cce in namespace container-probe-5567
  E0706 13:32:38.317102      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:32:39.317187      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:32:40.050: INFO: Get pod test-grpc-9e3032e4-1c7c-410c-a75a-68908a228cce in namespace container-probe-5567
  E0706 13:32:40.317309      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:32:41.317803      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:32:42.054: INFO: Get pod test-grpc-9e3032e4-1c7c-410c-a75a-68908a228cce in namespace container-probe-5567
  E0706 13:32:42.318436      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:32:43.318553      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:32:44.058: INFO: Get pod test-grpc-9e3032e4-1c7c-410c-a75a-68908a228cce in namespace container-probe-5567
  E0706 13:32:44.319024      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:32:45.319282      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:32:46.062: INFO: Get pod test-grpc-9e3032e4-1c7c-410c-a75a-68908a228cce in namespace container-probe-5567
  E0706 13:32:46.320095      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:32:47.320295      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:32:48.067: INFO: Get pod test-grpc-9e3032e4-1c7c-410c-a75a-68908a228cce in namespace container-probe-5567
  E0706 13:32:48.321242      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:32:49.322102      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:32:50.071: INFO: Get pod test-grpc-9e3032e4-1c7c-410c-a75a-68908a228cce in namespace container-probe-5567
  E0706 13:32:50.322806      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:32:51.322923      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:32:52.074: INFO: Get pod test-grpc-9e3032e4-1c7c-410c-a75a-68908a228cce in namespace container-probe-5567
  E0706 13:32:52.323219      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:32:53.323326      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:32:54.080: INFO: Get pod test-grpc-9e3032e4-1c7c-410c-a75a-68908a228cce in namespace container-probe-5567
  E0706 13:32:54.323410      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:32:55.323512      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:32:56.084: INFO: Get pod test-grpc-9e3032e4-1c7c-410c-a75a-68908a228cce in namespace container-probe-5567
  E0706 13:32:56.324550      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:32:57.324714      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:32:58.088: INFO: Get pod test-grpc-9e3032e4-1c7c-410c-a75a-68908a228cce in namespace container-probe-5567
  E0706 13:32:58.325506      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:32:59.325629      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:33:00.095: INFO: Get pod test-grpc-9e3032e4-1c7c-410c-a75a-68908a228cce in namespace container-probe-5567
  E0706 13:33:00.325892      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:33:01.326322      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:33:02.099: INFO: Get pod test-grpc-9e3032e4-1c7c-410c-a75a-68908a228cce in namespace container-probe-5567
  E0706 13:33:02.326758      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:33:03.326858      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:33:04.104: INFO: Get pod test-grpc-9e3032e4-1c7c-410c-a75a-68908a228cce in namespace container-probe-5567
  E0706 13:33:04.327371      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:33:05.327469      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:33:06.107: INFO: Get pod test-grpc-9e3032e4-1c7c-410c-a75a-68908a228cce in namespace container-probe-5567
  E0706 13:33:06.327559      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:33:07.328001      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:33:08.110: INFO: Get pod test-grpc-9e3032e4-1c7c-410c-a75a-68908a228cce in namespace container-probe-5567
  E0706 13:33:08.328079      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:33:09.328271      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:33:10.115: INFO: Get pod test-grpc-9e3032e4-1c7c-410c-a75a-68908a228cce in namespace container-probe-5567
  E0706 13:33:10.328313      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:33:11.328638      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:33:12.120: INFO: Get pod test-grpc-9e3032e4-1c7c-410c-a75a-68908a228cce in namespace container-probe-5567
  E0706 13:33:12.329294      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:33:13.330037      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:33:14.125: INFO: Get pod test-grpc-9e3032e4-1c7c-410c-a75a-68908a228cce in namespace container-probe-5567
  E0706 13:33:14.330854      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:33:15.330946      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:33:16.128: INFO: Get pod test-grpc-9e3032e4-1c7c-410c-a75a-68908a228cce in namespace container-probe-5567
  E0706 13:33:16.331235      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:33:17.331330      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:33:18.134: INFO: Get pod test-grpc-9e3032e4-1c7c-410c-a75a-68908a228cce in namespace container-probe-5567
  E0706 13:33:18.331575      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:33:19.332069      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:33:20.138: INFO: Get pod test-grpc-9e3032e4-1c7c-410c-a75a-68908a228cce in namespace container-probe-5567
  E0706 13:33:20.333015      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:33:21.333140      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:33:22.142: INFO: Get pod test-grpc-9e3032e4-1c7c-410c-a75a-68908a228cce in namespace container-probe-5567
  E0706 13:33:22.333664      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:33:23.333738      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:33:24.146: INFO: Get pod test-grpc-9e3032e4-1c7c-410c-a75a-68908a228cce in namespace container-probe-5567
  E0706 13:33:24.334247      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:33:25.335201      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:33:26.150: INFO: Get pod test-grpc-9e3032e4-1c7c-410c-a75a-68908a228cce in namespace container-probe-5567
  E0706 13:33:26.335599      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:33:27.335686      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:33:28.156: INFO: Get pod test-grpc-9e3032e4-1c7c-410c-a75a-68908a228cce in namespace container-probe-5567
  E0706 13:33:28.335878      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:33:29.335973      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:33:30.160: INFO: Get pod test-grpc-9e3032e4-1c7c-410c-a75a-68908a228cce in namespace container-probe-5567
  E0706 13:33:30.336909      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:33:31.337298      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:33:32.165: INFO: Get pod test-grpc-9e3032e4-1c7c-410c-a75a-68908a228cce in namespace container-probe-5567
  Jul  6 13:33:32.165: INFO: Restart count of pod container-probe-5567/test-grpc-9e3032e4-1c7c-410c-a75a-68908a228cce is now 1 (1m4.146500679s elapsed)
  STEP: deleting the pod @ 07/06/24 13:33:32.166
  Jul  6 13:33:32.179: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5567" for this suite. @ 07/06/24 13:33:32.182
• [66.206 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 07/06/24 13:33:32.187
  Jul  6 13:33:32.187: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename daemonsets @ 07/06/24 13:33:32.188
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:33:32.203
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:33:32.205
  Jul  6 13:33:32.226: INFO: Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/06/24 13:33:32.23
  Jul  6 13:33:32.236: INFO: DaemonSet pods can't tolerate node ip-172-31-76-18 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul  6 13:33:32.236: INFO: DaemonSet pods can't tolerate node ip-172-31-9-125 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul  6 13:33:32.238: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul  6 13:33:32.238: INFO: Node ip-172-31-24-251 is running 0 daemon pod, expected 1
  E0706 13:33:32.337744      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:33:33.236: INFO: DaemonSet pods can't tolerate node ip-172-31-76-18 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul  6 13:33:33.236: INFO: DaemonSet pods can't tolerate node ip-172-31-9-125 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul  6 13:33:33.240: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jul  6 13:33:33.240: INFO: Node ip-172-31-9-199 is running 0 daemon pod, expected 1
  E0706 13:33:33.338301      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:33:34.235: INFO: DaemonSet pods can't tolerate node ip-172-31-76-18 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul  6 13:33:34.235: INFO: DaemonSet pods can't tolerate node ip-172-31-9-125 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul  6 13:33:34.238: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jul  6 13:33:34.238: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 07/06/24 13:33:34.25
  STEP: Check that daemon pods images are updated. @ 07/06/24 13:33:34.26
  Jul  6 13:33:34.263: INFO: Wrong image for pod: daemon-set-8gp6k. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jul  6 13:33:34.263: INFO: Wrong image for pod: daemon-set-db7tt. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jul  6 13:33:34.263: INFO: Wrong image for pod: daemon-set-xpq44. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jul  6 13:33:34.269: INFO: DaemonSet pods can't tolerate node ip-172-31-76-18 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul  6 13:33:34.269: INFO: DaemonSet pods can't tolerate node ip-172-31-9-125 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0706 13:33:34.338542      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:33:35.264: INFO: Wrong image for pod: daemon-set-8gp6k. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jul  6 13:33:35.264: INFO: Wrong image for pod: daemon-set-db7tt. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jul  6 13:33:35.264: INFO: Pod daemon-set-p7649 is not available
  Jul  6 13:33:35.268: INFO: DaemonSet pods can't tolerate node ip-172-31-76-18 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul  6 13:33:35.268: INFO: DaemonSet pods can't tolerate node ip-172-31-9-125 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0706 13:33:35.338856      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:33:36.264: INFO: Wrong image for pod: daemon-set-db7tt. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jul  6 13:33:36.264: INFO: Pod daemon-set-sssh5 is not available
  Jul  6 13:33:36.268: INFO: DaemonSet pods can't tolerate node ip-172-31-76-18 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul  6 13:33:36.268: INFO: DaemonSet pods can't tolerate node ip-172-31-9-125 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0706 13:33:36.339319      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:33:37.263: INFO: Pod daemon-set-q5x62 is not available
  Jul  6 13:33:37.266: INFO: DaemonSet pods can't tolerate node ip-172-31-76-18 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul  6 13:33:37.266: INFO: DaemonSet pods can't tolerate node ip-172-31-9-125 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Check that daemon pods are still running on every node of the cluster. @ 07/06/24 13:33:37.266
  Jul  6 13:33:37.269: INFO: DaemonSet pods can't tolerate node ip-172-31-76-18 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul  6 13:33:37.269: INFO: DaemonSet pods can't tolerate node ip-172-31-9-125 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul  6 13:33:37.273: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jul  6 13:33:37.273: INFO: Node ip-172-31-9-199 is running 0 daemon pod, expected 1
  E0706 13:33:37.340195      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:33:38.270: INFO: DaemonSet pods can't tolerate node ip-172-31-76-18 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul  6 13:33:38.270: INFO: DaemonSet pods can't tolerate node ip-172-31-9-125 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul  6 13:33:38.273: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jul  6 13:33:38.273: INFO: Node ip-172-31-9-199 is running 0 daemon pod, expected 1
  E0706 13:33:38.340710      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:33:39.272: INFO: DaemonSet pods can't tolerate node ip-172-31-76-18 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul  6 13:33:39.272: INFO: DaemonSet pods can't tolerate node ip-172-31-9-125 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul  6 13:33:39.276: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jul  6 13:33:39.276: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 07/06/24 13:33:39.288
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8891, will wait for the garbage collector to delete the pods @ 07/06/24 13:33:39.288
  E0706 13:33:39.340743      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:33:39.348: INFO: Deleting DaemonSet.extensions daemon-set took: 5.6839ms
  Jul  6 13:33:39.448: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.37106ms
  E0706 13:33:40.341234      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:33:41.341542      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:33:41.752: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul  6 13:33:41.752: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jul  6 13:33:41.755: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"36647"},"items":null}

  Jul  6 13:33:41.759: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"36647"},"items":null}

  Jul  6 13:33:41.771: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8891" for this suite. @ 07/06/24 13:33:41.775
• [9.595 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 07/06/24 13:33:41.782
  Jul  6 13:33:41.782: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename csiinlinevolumes @ 07/06/24 13:33:41.783
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:33:41.794
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:33:41.799
  STEP: creating @ 07/06/24 13:33:41.801
  STEP: getting @ 07/06/24 13:33:41.819
  STEP: listing in namespace @ 07/06/24 13:33:41.823
  STEP: patching @ 07/06/24 13:33:41.826
  STEP: deleting @ 07/06/24 13:33:41.833
  Jul  6 13:33:41.852: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-2444" for this suite. @ 07/06/24 13:33:41.855
• [0.079 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 07/06/24 13:33:41.861
  Jul  6 13:33:41.861: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename pods @ 07/06/24 13:33:41.861
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:33:41.872
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:33:41.875
  STEP: creating the pod @ 07/06/24 13:33:41.877
  STEP: submitting the pod to kubernetes @ 07/06/24 13:33:41.877
  W0706 13:33:41.885730      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  E0706 13:33:42.342475      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:33:43.342556      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 07/06/24 13:33:43.895
  STEP: updating the pod @ 07/06/24 13:33:43.899
  E0706 13:33:44.343174      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:33:44.408: INFO: Successfully updated pod "pod-update-activedeadlineseconds-179393e1-0566-44af-a9de-2839426891d5"
  E0706 13:33:45.343610      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:33:46.343875      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:33:47.344907      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:33:48.344919      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:33:48.420: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6105" for this suite. @ 07/06/24 13:33:48.424
• [6.568 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:136
  STEP: Creating a kubernetes client @ 07/06/24 13:33:48.43
  Jul  6 13:33:48.430: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 07/06/24 13:33:48.43
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:33:48.443
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:33:48.446
  STEP: create the container to handle the HTTPGet hook request. @ 07/06/24 13:33:48.451
  E0706 13:33:49.345289      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:33:50.345381      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 07/06/24 13:33:50.473
  E0706 13:33:51.345445      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:33:52.345640      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 07/06/24 13:33:52.49
  STEP: delete the pod with lifecycle hook @ 07/06/24 13:33:52.504
  E0706 13:33:53.345718      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:33:54.345934      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:33:54.517: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-7753" for this suite. @ 07/06/24 13:33:54.522
• [6.098 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 07/06/24 13:33:54.528
  Jul  6 13:33:54.528: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename field-validation @ 07/06/24 13:33:54.529
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:33:54.54
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:33:54.543
  Jul  6 13:33:54.545: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  W0706 13:33:54.546347      21 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc0051ae8a0 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E0706 13:33:55.346545      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:33:56.346610      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0706 13:33:57.079822      21 warnings.go:70] unknown field "alpha"
  W0706 13:33:57.079839      21 warnings.go:70] unknown field "beta"
  W0706 13:33:57.079842      21 warnings.go:70] unknown field "delta"
  W0706 13:33:57.079845      21 warnings.go:70] unknown field "epsilon"
  W0706 13:33:57.079848      21 warnings.go:70] unknown field "gamma"
  E0706 13:33:57.346736      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:33:57.617: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8776" for this suite. @ 07/06/24 13:33:57.62
• [3.098 seconds]
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 07/06/24 13:33:57.626
  Jul  6 13:33:57.626: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename certificates @ 07/06/24 13:33:57.627
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:33:57.642
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:33:57.644
  STEP: getting /apis @ 07/06/24 13:33:57.998
  STEP: getting /apis/certificates.k8s.io @ 07/06/24 13:33:58.001
  STEP: getting /apis/certificates.k8s.io/v1 @ 07/06/24 13:33:58.002
  STEP: creating @ 07/06/24 13:33:58.003
  STEP: getting @ 07/06/24 13:33:58.02
  STEP: listing @ 07/06/24 13:33:58.022
  STEP: watching @ 07/06/24 13:33:58.024
  Jul  6 13:33:58.024: INFO: starting watch
  STEP: patching @ 07/06/24 13:33:58.025
  STEP: updating @ 07/06/24 13:33:58.031
  Jul  6 13:33:58.036: INFO: waiting for watch events with expected annotations
  Jul  6 13:33:58.036: INFO: saw patched and updated annotations
  STEP: getting /approval @ 07/06/24 13:33:58.036
  STEP: patching /approval @ 07/06/24 13:33:58.039
  STEP: updating /approval @ 07/06/24 13:33:58.044
  STEP: getting /status @ 07/06/24 13:33:58.05
  STEP: patching /status @ 07/06/24 13:33:58.053
  STEP: updating /status @ 07/06/24 13:33:58.06
  STEP: deleting @ 07/06/24 13:33:58.066
  STEP: deleting a collection @ 07/06/24 13:33:58.076
  Jul  6 13:33:58.089: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-8732" for this suite. @ 07/06/24 13:33:58.092
• [0.472 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 07/06/24 13:33:58.098
  Jul  6 13:33:58.098: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename webhook @ 07/06/24 13:33:58.098
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:33:58.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:33:58.114
  STEP: Setting up server cert @ 07/06/24 13:33:58.133
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/06/24 13:33:58.287
  STEP: Deploying the webhook pod @ 07/06/24 13:33:58.293
  STEP: Wait for the deployment to be ready @ 07/06/24 13:33:58.305
  Jul  6 13:33:58.318: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0706 13:33:58.347345      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:33:59.347441      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/06/24 13:34:00.329
  STEP: Verifying the service has paired with the endpoint @ 07/06/24 13:34:00.341
  E0706 13:34:00.347989      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:34:01.342: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  E0706 13:34:01.348344      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Listing all of the created validation webhooks @ 07/06/24 13:34:01.411
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/06/24 13:34:01.432
  STEP: Deleting the collection of validation webhooks @ 07/06/24 13:34:01.455
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/06/24 13:34:01.501
  Jul  6 13:34:01.551: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5826" for this suite. @ 07/06/24 13:34:01.557
  STEP: Destroying namespace "webhook-markers-1485" for this suite. @ 07/06/24 13:34:01.565
• [3.472 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 07/06/24 13:34:01.571
  Jul  6 13:34:01.571: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename csi-storageclass @ 07/06/24 13:34:01.571
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:34:01.586
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:34:01.589
  STEP: Creating a StorageClass @ 07/06/24 13:34:01.591
  STEP: Get StorageClass "e2e-dw42r" @ 07/06/24 13:34:01.595
  STEP: Patching the StorageClass "e2e-dw42r" @ 07/06/24 13:34:01.597
  STEP: Delete StorageClass "e2e-dw42r" @ 07/06/24 13:34:01.605
  STEP: Confirm deletion of StorageClass "e2e-dw42r" @ 07/06/24 13:34:01.612
  STEP: Create a replacement StorageClass @ 07/06/24 13:34:01.616
  STEP: Updating StorageClass "e2e-v2-nsr2h" @ 07/06/24 13:34:01.623
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-nsr2h=updated" @ 07/06/24 13:34:01.631
  STEP: Deleting StorageClass "e2e-v2-nsr2h" via DeleteCollection @ 07/06/24 13:34:01.637
  STEP: Confirm deletion of StorageClass "e2e-v2-nsr2h" @ 07/06/24 13:34:01.649
  Jul  6 13:34:01.652: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-1934" for this suite. @ 07/06/24 13:34:01.655
• [0.090 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:531
  STEP: Creating a kubernetes client @ 07/06/24 13:34:01.66
  Jul  6 13:34:01.660: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename svcaccounts @ 07/06/24 13:34:01.661
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:34:01.679
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:34:01.681
  Jul  6 13:34:01.695: INFO: created pod
  E0706 13:34:02.349481      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:34:03.349684      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:34:04.350746      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:34:05.351015      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/06/24 13:34:05.709
  E0706 13:34:06.351133      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:34:07.351228      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:34:08.351327      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:34:09.351422      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:34:10.351652      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:34:11.351756      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:34:12.351853      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:34:13.352003      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:34:14.353067      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:34:15.353164      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:34:16.353264      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:34:17.353762      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:34:18.353961      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:34:19.354157      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:34:20.354395      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:34:21.354522      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:34:22.354625      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:34:23.355155      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:34:24.355243      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:34:25.356309      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:34:26.356406      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:34:27.356529      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:34:28.357415      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:34:29.357711      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:34:30.357878      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:34:31.357978      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:34:32.358268      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:34:33.358423      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:34:34.358570      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:34:35.359008      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:34:35.710: INFO: polling logs
  Jul  6 13:34:35.723: INFO: Pod logs: 
  I0706 13:34:02.322020       1 log.go:245] OK: Got token
  I0706 13:34:02.322061       1 log.go:245] validating with in-cluster discovery
  I0706 13:34:02.322281       1 log.go:245] OK: got issuer https://kubernetes.default.svc
  I0706 13:34:02.322314       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-6062:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0004127f0), NotBefore:(*jwt.NumericDate)(0xc0004128d8), IssuedAt:(*jwt.NumericDate)(0xc000412800), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-6062", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"36fafc4e-b9f9-4661-90ab-d22888ac25ca"}}}
  I0706 13:34:02.329012       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
  I0706 13:34:02.332947       1 log.go:245] OK: Validated signature on JWT
  I0706 13:34:02.333024       1 log.go:245] OK: Got valid claims from token!
  I0706 13:34:02.333052       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-6062:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0003c3320), NotBefore:(*jwt.NumericDate)(0xc0003c3348), IssuedAt:(*jwt.NumericDate)(0xc0003c3328), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-6062", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"36fafc4e-b9f9-4661-90ab-d22888ac25ca"}}}

  Jul  6 13:34:35.723: INFO: completed pod
  Jul  6 13:34:35.730: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6062" for this suite. @ 07/06/24 13:34:35.734
• [34.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 07/06/24 13:34:35.74
  Jul  6 13:34:35.740: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename pod-network-test @ 07/06/24 13:34:35.741
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:34:35.754
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:34:35.757
  STEP: Performing setup for networking test in namespace pod-network-test-1497 @ 07/06/24 13:34:35.759
  STEP: creating a selector @ 07/06/24 13:34:35.759
  STEP: Creating the service pods in kubernetes @ 07/06/24 13:34:35.759
  Jul  6 13:34:35.759: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0706 13:34:36.359136      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:34:37.359238      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:34:38.359305      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:34:39.359560      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:34:40.359829      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:34:41.359923      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:34:42.360711      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:34:43.360918      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:34:44.361085      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:34:45.362059      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:34:46.362679      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:34:47.363581      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 07/06/24 13:34:47.837
  E0706 13:34:48.364392      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:34:49.364552      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:34:49.853: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Jul  6 13:34:49.853: INFO: Breadth first check of 192.168.140.15 on host 172.31.24.251...
  Jul  6 13:34:49.855: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.140.13:9080/dial?request=hostname&protocol=udp&host=192.168.140.15&port=8081&tries=1'] Namespace:pod-network-test-1497 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul  6 13:34:49.855: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  Jul  6 13:34:49.856: INFO: ExecWithOptions: Clientset creation
  Jul  6 13:34:49.856: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-1497/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.140.13%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.140.15%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jul  6 13:34:49.902: INFO: Waiting for responses: map[]
  Jul  6 13:34:49.902: INFO: reached 192.168.140.15 after 0/1 tries
  Jul  6 13:34:49.902: INFO: Breadth first check of 192.168.112.101 on host 172.31.9.199...
  Jul  6 13:34:49.905: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.140.13:9080/dial?request=hostname&protocol=udp&host=192.168.112.101&port=8081&tries=1'] Namespace:pod-network-test-1497 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul  6 13:34:49.905: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  Jul  6 13:34:49.905: INFO: ExecWithOptions: Clientset creation
  Jul  6 13:34:49.905: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-1497/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.140.13%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.112.101%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jul  6 13:34:49.950: INFO: Waiting for responses: map[]
  Jul  6 13:34:49.950: INFO: reached 192.168.112.101 after 0/1 tries
  Jul  6 13:34:49.950: INFO: Breadth first check of 192.168.204.91 on host 172.31.90.155...
  Jul  6 13:34:49.953: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.140.13:9080/dial?request=hostname&protocol=udp&host=192.168.204.91&port=8081&tries=1'] Namespace:pod-network-test-1497 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul  6 13:34:49.953: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  Jul  6 13:34:49.953: INFO: ExecWithOptions: Clientset creation
  Jul  6 13:34:49.953: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-1497/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.140.13%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.204.91%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jul  6 13:34:50.002: INFO: Waiting for responses: map[]
  Jul  6 13:34:50.002: INFO: reached 192.168.204.91 after 0/1 tries
  Jul  6 13:34:50.002: INFO: Going to retry 0 out of 3 pods....
  Jul  6 13:34:50.002: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-1497" for this suite. @ 07/06/24 13:34:50.006
• [14.272 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 07/06/24 13:34:50.013
  Jul  6 13:34:50.013: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename container-runtime @ 07/06/24 13:34:50.013
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:34:50.028
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:34:50.03
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 07/06/24 13:34:50.045
  E0706 13:34:50.364718      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:34:51.364785      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:34:52.365308      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:34:53.365954      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:34:54.366046      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:34:55.368411      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:34:56.369065      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:34:57.369610      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:34:58.369715      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:34:59.369852      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:35:00.370337      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:35:01.370549      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:35:02.370662      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:35:03.370772      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:35:04.370851      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:35:05.371627      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:35:06.371934      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:35:07.372649      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 07/06/24 13:35:08.117
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 07/06/24 13:35:08.12
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 07/06/24 13:35:08.126
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 07/06/24 13:35:08.126
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 07/06/24 13:35:08.144
  E0706 13:35:08.373598      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:35:09.374438      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 07/06/24 13:35:10.158
  E0706 13:35:10.374953      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:35:11.375563      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 07/06/24 13:35:12.167
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 07/06/24 13:35:12.173
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 07/06/24 13:35:12.173
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 07/06/24 13:35:12.196
  E0706 13:35:12.376347      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 07/06/24 13:35:13.201
  E0706 13:35:13.377318      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:35:14.378381      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 07/06/24 13:35:15.214
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 07/06/24 13:35:15.22
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 07/06/24 13:35:15.22
  Jul  6 13:35:15.244: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4971" for this suite. @ 07/06/24 13:35:15.247
• [25.240 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 07/06/24 13:35:15.254
  Jul  6 13:35:15.254: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename replication-controller @ 07/06/24 13:35:15.254
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:35:15.267
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:35:15.272
  Jul  6 13:35:15.277: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
  E0706 13:35:15.379159      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 07/06/24 13:35:16.293
  STEP: Checking rc "condition-test" has the desired failure condition set @ 07/06/24 13:35:16.3
  E0706 13:35:16.379609      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 07/06/24 13:35:17.305
  Jul  6 13:35:17.314: INFO: Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 07/06/24 13:35:17.314
  E0706 13:35:17.380140      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:35:18.322: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-2083" for this suite. @ 07/06/24 13:35:18.325
• [3.081 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 07/06/24 13:35:18.334
  Jul  6 13:35:18.334: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename emptydir @ 07/06/24 13:35:18.335
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:35:18.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:35:18.348
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 07/06/24 13:35:18.351
  E0706 13:35:18.380396      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:35:19.380559      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/06/24 13:35:20.369
  Jul  6 13:35:20.371: INFO: Trying to get logs from node ip-172-31-24-251 pod pod-7bd19afe-ecca-4c27-a568-69cae1ccabbe container test-container: <nil>
  E0706 13:35:20.380756      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod @ 07/06/24 13:35:20.381
  Jul  6 13:35:20.397: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1118" for this suite. @ 07/06/24 13:35:20.4
• [2.071 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 07/06/24 13:35:20.405
  Jul  6 13:35:20.405: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename emptydir @ 07/06/24 13:35:20.405
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:35:20.42
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:35:20.424
  STEP: Creating Pod @ 07/06/24 13:35:20.426
  E0706 13:35:21.381009      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:35:22.381082      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 07/06/24 13:35:22.444
  Jul  6 13:35:22.444: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-622 PodName:pod-sharedvolume-21c505fd-bb09-4192-8940-f1584a5cc0a0 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul  6 13:35:22.444: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  Jul  6 13:35:22.444: INFO: ExecWithOptions: Clientset creation
  Jul  6 13:35:22.444: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/emptydir-622/pods/pod-sharedvolume-21c505fd-bb09-4192-8940-f1584a5cc0a0/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  Jul  6 13:35:22.496: INFO: Exec stderr: ""
  Jul  6 13:35:22.496: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-622" for this suite. @ 07/06/24 13:35:22.499
• [2.101 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 07/06/24 13:35:22.506
  Jul  6 13:35:22.506: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename limitrange @ 07/06/24 13:35:22.506
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:35:22.519
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:35:22.522
  STEP: Creating a LimitRange @ 07/06/24 13:35:22.524
  STEP: Setting up watch @ 07/06/24 13:35:22.524
  STEP: Submitting a LimitRange @ 07/06/24 13:35:22.628
  STEP: Verifying LimitRange creation was observed @ 07/06/24 13:35:22.632
  STEP: Fetching the LimitRange to ensure it has proper values @ 07/06/24 13:35:22.633
  Jul  6 13:35:22.637: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Jul  6 13:35:22.637: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 07/06/24 13:35:22.637
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 07/06/24 13:35:22.643
  Jul  6 13:35:22.646: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Jul  6 13:35:22.646: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 07/06/24 13:35:22.646
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 07/06/24 13:35:22.653
  Jul  6 13:35:22.656: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  Jul  6 13:35:22.656: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 07/06/24 13:35:22.656
  STEP: Failing to create a Pod with more than max resources @ 07/06/24 13:35:22.657
  STEP: Updating a LimitRange @ 07/06/24 13:35:22.659
  STEP: Verifying LimitRange updating is effective @ 07/06/24 13:35:22.663
  E0706 13:35:23.385928      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:35:24.385997      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 07/06/24 13:35:24.666
  STEP: Failing to create a Pod with more than max resources @ 07/06/24 13:35:24.672
  STEP: Deleting a LimitRange @ 07/06/24 13:35:24.675
  STEP: Verifying the LimitRange was deleted @ 07/06/24 13:35:24.684
  E0706 13:35:25.386294      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:35:26.386551      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:35:27.386589      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:35:28.387598      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:35:29.387679      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:35:29.688: INFO: limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 07/06/24 13:35:29.688
  Jul  6 13:35:29.697: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-5456" for this suite. @ 07/06/24 13:35:29.7
• [7.202 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:558
  STEP: Creating a kubernetes client @ 07/06/24 13:35:29.708
  Jul  6 13:35:29.708: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename ingress @ 07/06/24 13:35:29.708
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:35:29.723
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:35:29.726
  STEP: getting /apis @ 07/06/24 13:35:29.729
  STEP: getting /apis/networking.k8s.io @ 07/06/24 13:35:29.731
  STEP: getting /apis/networking.k8s.iov1 @ 07/06/24 13:35:29.732
  STEP: creating @ 07/06/24 13:35:29.733
  STEP: getting @ 07/06/24 13:35:29.753
  STEP: listing @ 07/06/24 13:35:29.758
  STEP: watching @ 07/06/24 13:35:29.763
  Jul  6 13:35:29.763: INFO: starting watch
  STEP: cluster-wide listing @ 07/06/24 13:35:29.764
  STEP: cluster-wide watching @ 07/06/24 13:35:29.766
  Jul  6 13:35:29.766: INFO: starting watch
  STEP: patching @ 07/06/24 13:35:29.767
  STEP: updating @ 07/06/24 13:35:29.773
  Jul  6 13:35:29.781: INFO: waiting for watch events with expected annotations
  Jul  6 13:35:29.782: INFO: saw patched and updated annotations
  STEP: patching /status @ 07/06/24 13:35:29.782
  STEP: updating /status @ 07/06/24 13:35:29.788
  STEP: get /status @ 07/06/24 13:35:29.796
  STEP: deleting @ 07/06/24 13:35:29.799
  STEP: deleting a collection @ 07/06/24 13:35:29.822
  Jul  6 13:35:29.842: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-3696" for this suite. @ 07/06/24 13:35:29.85
• [0.152 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 07/06/24 13:35:29.861
  Jul  6 13:35:29.861: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename projected @ 07/06/24 13:35:29.862
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:35:29.874
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:35:29.877
  STEP: Creating configMap with name projected-configmap-test-volume-84323190-2ee6-4592-951e-9354e58a6a49 @ 07/06/24 13:35:29.88
  STEP: Creating a pod to test consume configMaps @ 07/06/24 13:35:29.883
  E0706 13:35:30.388296      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:35:31.388470      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:35:32.389158      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:35:33.389232      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/06/24 13:35:33.902
  Jul  6 13:35:33.904: INFO: Trying to get logs from node ip-172-31-24-251 pod pod-projected-configmaps-a369e34c-4156-4fa0-b41d-3b500c5c50db container agnhost-container: <nil>
  STEP: delete the pod @ 07/06/24 13:35:33.912
  Jul  6 13:35:33.928: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5158" for this suite. @ 07/06/24 13:35:33.931
• [4.076 seconds]
------------------------------
SSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 07/06/24 13:35:33.938
  Jul  6 13:35:33.938: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename containers @ 07/06/24 13:35:33.939
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:35:33.952
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:35:33.955
  STEP: Creating a pod to test override arguments @ 07/06/24 13:35:33.957
  E0706 13:35:34.390251      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:35:35.390513      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:35:36.390609      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:35:37.391652      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/06/24 13:35:37.976
  Jul  6 13:35:37.979: INFO: Trying to get logs from node ip-172-31-24-251 pod client-containers-ad9ca064-95a2-432e-aa54-a931ffce0a46 container agnhost-container: <nil>
  STEP: delete the pod @ 07/06/24 13:35:37.987
  Jul  6 13:35:38.003: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-2128" for this suite. @ 07/06/24 13:35:38.006
• [4.073 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 07/06/24 13:35:38.011
  Jul  6 13:35:38.011: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename replicaset @ 07/06/24 13:35:38.012
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:35:38.026
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:35:38.029
  Jul  6 13:35:38.031: INFO: Creating ReplicaSet my-hostname-basic-dcd2f857-8722-4c46-b542-040468952f45
  Jul  6 13:35:38.041: INFO: Pod name my-hostname-basic-dcd2f857-8722-4c46-b542-040468952f45: Found 0 pods out of 1
  E0706 13:35:38.391950      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:35:39.391983      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:35:40.392100      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:35:41.392184      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:35:42.392263      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:35:43.045: INFO: Pod name my-hostname-basic-dcd2f857-8722-4c46-b542-040468952f45: Found 1 pods out of 1
  Jul  6 13:35:43.045: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-dcd2f857-8722-4c46-b542-040468952f45" is running
  Jul  6 13:35:43.050: INFO: Pod "my-hostname-basic-dcd2f857-8722-4c46-b542-040468952f45-zhwvx" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-06 13:35:39 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-06 13:35:38 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-06 13:35:39 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-06 13:35:39 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-06 13:35:38 +0000 UTC Reason: Message:}])
  Jul  6 13:35:43.050: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 07/06/24 13:35:43.05
  Jul  6 13:35:43.060: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7497" for this suite. @ 07/06/24 13:35:43.064
• [5.059 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:95
  STEP: Creating a kubernetes client @ 07/06/24 13:35:43.071
  Jul  6 13:35:43.071: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename var-expansion @ 07/06/24 13:35:43.071
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:35:43.087
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:35:43.09
  STEP: Creating a pod to test substitution in container's args @ 07/06/24 13:35:43.093
  E0706 13:35:43.392682      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:35:44.392738      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/06/24 13:35:45.106
  Jul  6 13:35:45.110: INFO: Trying to get logs from node ip-172-31-9-199 pod var-expansion-103f7616-76a5-4ae6-9545-f6d97e42f56a container dapi-container: <nil>
  STEP: delete the pod @ 07/06/24 13:35:45.124
  Jul  6 13:35:45.137: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9314" for this suite. @ 07/06/24 13:35:45.139
• [2.075 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 07/06/24 13:35:45.146
  Jul  6 13:35:45.146: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename projected @ 07/06/24 13:35:45.146
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:35:45.158
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:35:45.16
  STEP: Creating projection with secret that has name projected-secret-test-map-35a01260-efe8-4bab-842f-5281d733428d @ 07/06/24 13:35:45.162
  STEP: Creating a pod to test consume secrets @ 07/06/24 13:35:45.167
  E0706 13:35:45.393023      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:35:46.393267      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:35:47.394000      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:35:48.394070      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/06/24 13:35:49.184
  Jul  6 13:35:49.187: INFO: Trying to get logs from node ip-172-31-24-251 pod pod-projected-secrets-4ef43298-7668-4196-9748-280d90f7d016 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 07/06/24 13:35:49.194
  Jul  6 13:35:49.208: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5429" for this suite. @ 07/06/24 13:35:49.211
• [4.071 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:357
  STEP: Creating a kubernetes client @ 07/06/24 13:35:49.217
  Jul  6 13:35:49.217: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/06/24 13:35:49.217
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:35:49.229
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:35:49.231
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 07/06/24 13:35:49.234
  Jul  6 13:35:49.234: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  E0706 13:35:49.395115      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:35:50.395394      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:35:50.468: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  E0706 13:35:51.396051      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:35:52.396084      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:35:53.396891      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:35:54.396897      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:35:55.343: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6544" for this suite. @ 07/06/24 13:35:55.349
• [6.138 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 07/06/24 13:35:55.356
  Jul  6 13:35:55.356: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename pods @ 07/06/24 13:35:55.356
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:35:55.372
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:35:55.374
  Jul  6 13:35:55.377: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: creating the pod @ 07/06/24 13:35:55.377
  STEP: submitting the pod to kubernetes @ 07/06/24 13:35:55.377
  E0706 13:35:55.397454      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:35:56.397670      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:35:57.397689      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:35:57.408: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1875" for this suite. @ 07/06/24 13:35:57.412
• [2.064 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 07/06/24 13:35:57.419
  Jul  6 13:35:57.419: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename taint-multiple-pods @ 07/06/24 13:35:57.42
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:35:57.436
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:35:57.439
  Jul  6 13:35:57.441: INFO: Waiting up to 1m0s for all nodes to be ready
  E0706 13:35:58.397856      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:35:59.397975      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:36:00.398174      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:36:01.398561      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:36:02.398639      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:36:03.399368      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:36:04.399569      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:36:05.399900      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:36:06.400119      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:36:07.400208      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:36:08.400303      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:36:09.400429      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:36:10.400911      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:36:11.401129      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:36:12.401343      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:36:13.401537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:36:14.402473      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:36:15.402536      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:36:16.402612      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:36:17.403626      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:36:18.403785      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:36:19.403762      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:36:20.404185      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:36:21.404357      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:36:22.405377      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:36:23.406330      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:36:24.406837      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:36:25.407590      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:36:26.408554      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:36:27.408837      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:36:28.408943      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:36:29.409136      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:36:30.409599      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:36:31.409893      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:36:32.409984      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:36:33.410166      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:36:34.410532      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:36:35.411600      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:36:36.412143      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:36:37.412265      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:36:38.412662      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:36:39.412771      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:36:40.412832      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:36:41.412923      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:36:42.413036      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:36:43.413160      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:36:44.413513      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:36:45.414594      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:36:46.414674      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:36:47.415607      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:36:48.415695      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:36:49.415872      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:36:50.416212      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:36:51.416601      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:36:52.416692      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:36:53.416904      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:36:54.417050      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:36:55.417081      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:36:56.417194      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:36:57.417510      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:36:57.442: INFO: Waiting for terminating namespaces to be deleted...
  Jul  6 13:36:57.446: INFO: Starting informer...
  STEP: Starting pods... @ 07/06/24 13:36:57.446
  Jul  6 13:36:57.662: INFO: Pod1 is running on ip-172-31-24-251. Tainting Node
  E0706 13:36:58.417642      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:36:59.417734      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:36:59.880: INFO: Pod2 is running on ip-172-31-24-251. Tainting Node
  STEP: Trying to apply a taint on the Node @ 07/06/24 13:36:59.88
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 07/06/24 13:36:59.89
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 07/06/24 13:36:59.895
  E0706 13:37:00.418053      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:37:01.418439      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:37:02.418564      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:37:03.419612      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:37:04.419704      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:37:05.306: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
  E0706 13:37:05.420789      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:37:06.421071      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:37:07.421257      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:37:08.421364      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:37:09.421481      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:37:10.421958      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:37:11.422036      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:37:12.422216      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:37:13.422319      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:37:14.422389      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:37:15.422602      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:37:16.423596      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:37:17.423766      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:37:18.423955      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:37:19.424047      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:37:20.424219      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:37:21.424300      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:37:22.424648      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:37:23.424894      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:37:24.425965      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:37:25.340: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 07/06/24 13:37:25.349
  Jul  6 13:37:25.352: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-9950" for this suite. @ 07/06/24 13:37:25.356
• [87.946 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 07/06/24 13:37:25.365
  Jul  6 13:37:25.365: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename runtimeclass @ 07/06/24 13:37:25.366
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:37:25.388
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:37:25.393
  E0706 13:37:25.426291      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:37:26.426575      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:37:27.422: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5294" for this suite. @ 07/06/24 13:37:27.424
  E0706 13:37:27.426827      21 retrywatcher.go:129] "Watch failed" err="context canceled"
• [2.064 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 07/06/24 13:37:27.429
  Jul  6 13:37:27.429: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename secrets @ 07/06/24 13:37:27.43
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:37:27.442
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:37:27.445
  STEP: Creating secret with name s-test-opt-del-45f62d1e-1886-47c0-9d53-a13808d7b0fb @ 07/06/24 13:37:27.451
  STEP: Creating secret with name s-test-opt-upd-74f60c99-ad6c-4ec9-afb2-a63c2d7a4be4 @ 07/06/24 13:37:27.456
  STEP: Creating the pod @ 07/06/24 13:37:27.459
  E0706 13:37:28.427408      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:37:29.427491      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-45f62d1e-1886-47c0-9d53-a13808d7b0fb @ 07/06/24 13:37:29.505
  STEP: Updating secret s-test-opt-upd-74f60c99-ad6c-4ec9-afb2-a63c2d7a4be4 @ 07/06/24 13:37:29.51
  STEP: Creating secret with name s-test-opt-create-7597de8b-434f-4b5d-97c7-561db9d800c0 @ 07/06/24 13:37:29.514
  STEP: waiting to observe update in volume @ 07/06/24 13:37:29.518
  E0706 13:37:30.428142      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:37:31.428251      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:37:32.428381      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:37:33.428446      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:37:34.429035      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:37:35.429951      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:37:36.431002      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:37:37.431081      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:37:38.431186      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:37:39.431929      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:37:40.432020      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:37:41.432919      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:37:42.433032      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:37:43.434019      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:37:44.434377      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:37:45.435166      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:37:46.435620      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:37:47.435953      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:37:48.436146      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:37:49.436242      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:37:50.436362      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:37:51.436453      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:37:52.436620      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:37:53.436817      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:37:54.437263      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:37:55.438199      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:37:56.439134      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:37:57.439229      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:37:58.439349      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:37:59.439664      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:38:00.439917      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:38:01.440016      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:38:02.440103      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:38:03.440187      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:38:04.440288      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:38:05.441177      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:38:06.441259      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:38:07.441432      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:38:08.441510      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:38:09.441590      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:38:10.442426      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:38:11.442550      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:38:12.442655      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:38:13.442740      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:38:14.443064      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:38:15.443168      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:38:16.443344      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:38:17.443462      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:38:18.443647      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:38:19.444358      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:38:20.445407      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:38:21.445970      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:38:22.447038      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:38:23.447134      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:38:24.447514      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:38:25.447804      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:38:26.448022      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:38:27.448121      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:38:28.448520      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:38:29.448736      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:38:30.448777      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:38:31.448856      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:38:32.449443      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:38:33.449535      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:38:34.450255      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:38:35.450387      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:38:36.450599      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:38:37.451635      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:38:38.452593      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:38:39.452762      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:38:40.452880      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:38:41.453191      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:38:42.453706      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:38:43.453843      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:38:44.454754      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:38:45.455211      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:38:46.455317      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:38:47.455446      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:38:47.843: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3746" for this suite. @ 07/06/24 13:38:47.847
• [80.424 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 07/06/24 13:38:47.854
  Jul  6 13:38:47.854: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename configmap @ 07/06/24 13:38:47.854
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:38:47.868
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:38:47.871
  STEP: Creating configMap with name configmap-test-volume-map-a3fcbaff-5e23-48f0-85b9-debec539b5ea @ 07/06/24 13:38:47.873
  STEP: Creating a pod to test consume configMaps @ 07/06/24 13:38:47.881
  E0706 13:38:48.456462      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:38:49.456965      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:38:50.457379      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:38:51.457598      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/06/24 13:38:51.9
  Jul  6 13:38:51.904: INFO: Trying to get logs from node ip-172-31-9-199 pod pod-configmaps-6e18c382-0ddf-40fd-818a-0bc7331f796e container agnhost-container: <nil>
  STEP: delete the pod @ 07/06/24 13:38:51.914
  Jul  6 13:38:51.928: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2117" for this suite. @ 07/06/24 13:38:51.932
• [4.084 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 07/06/24 13:38:51.938
  Jul  6 13:38:51.938: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename kubectl-logs @ 07/06/24 13:38:51.939
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:38:51.953
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:38:51.955
  STEP: creating an pod @ 07/06/24 13:38:51.958
  Jul  6 13:38:51.958: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-logs-9262 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.47 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  Jul  6 13:38:52.007: INFO: stderr: ""
  Jul  6 13:38:52.007: INFO: stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 07/06/24 13:38:52.007
  Jul  6 13:38:52.007: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  E0706 13:38:52.459520      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:38:53.459601      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:38:54.018: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 07/06/24 13:38:54.018
  Jul  6 13:38:54.019: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-logs-9262 logs logs-generator logs-generator'
  Jul  6 13:38:54.067: INFO: stderr: ""
  Jul  6 13:38:54.067: INFO: stdout: "I0706 13:38:52.548983       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/kube-system/pods/mpz 473\nI0706 13:38:52.749070       1 logs_generator.go:76] 1 GET /api/v1/namespaces/default/pods/9q2 475\nI0706 13:38:52.949628       1 logs_generator.go:76] 2 POST /api/v1/namespaces/ns/pods/7lfb 306\nI0706 13:38:53.149920       1 logs_generator.go:76] 3 POST /api/v1/namespaces/kube-system/pods/97vg 522\nI0706 13:38:53.349150       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/default/pods/gmcg 549\nI0706 13:38:53.549624       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/kube-system/pods/zs6 413\nI0706 13:38:53.749805       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/ns/pods/vqh 514\nI0706 13:38:53.949051       1 logs_generator.go:76] 7 GET /api/v1/namespaces/ns/pods/86s 491\n"
  STEP: limiting log lines @ 07/06/24 13:38:54.067
  Jul  6 13:38:54.068: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-logs-9262 logs logs-generator logs-generator --tail=1'
  Jul  6 13:38:54.109: INFO: stderr: ""
  Jul  6 13:38:54.109: INFO: stdout: "I0706 13:38:53.949051       1 logs_generator.go:76] 7 GET /api/v1/namespaces/ns/pods/86s 491\n"
  Jul  6 13:38:54.110: INFO: got output "I0706 13:38:53.949051       1 logs_generator.go:76] 7 GET /api/v1/namespaces/ns/pods/86s 491\n"
  STEP: limiting log bytes @ 07/06/24 13:38:54.11
  Jul  6 13:38:54.110: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-logs-9262 logs logs-generator logs-generator --limit-bytes=1'
  Jul  6 13:38:54.153: INFO: stderr: ""
  Jul  6 13:38:54.153: INFO: stdout: "I"
  Jul  6 13:38:54.153: INFO: got output "I"
  STEP: exposing timestamps @ 07/06/24 13:38:54.153
  Jul  6 13:38:54.153: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-logs-9262 logs logs-generator logs-generator --tail=1 --timestamps'
  Jul  6 13:38:54.203: INFO: stderr: ""
  Jul  6 13:38:54.203: INFO: stdout: "2024-07-06T13:38:54.149458918Z I0706 13:38:54.149378       1 logs_generator.go:76] 8 GET /api/v1/namespaces/default/pods/482 323\n"
  Jul  6 13:38:54.203: INFO: got output "2024-07-06T13:38:54.149458918Z I0706 13:38:54.149378       1 logs_generator.go:76] 8 GET /api/v1/namespaces/default/pods/482 323\n"
  STEP: restricting to a time range @ 07/06/24 13:38:54.203
  E0706 13:38:54.460288      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:38:55.461175      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:38:56.461576      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:38:56.705: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-logs-9262 logs logs-generator logs-generator --since=1s'
  Jul  6 13:38:56.753: INFO: stderr: ""
  Jul  6 13:38:56.753: INFO: stdout: "I0706 13:38:55.949105       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/default/pods/tnm9 423\nI0706 13:38:56.149416       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/ns/pods/fm47 244\nI0706 13:38:56.349756       1 logs_generator.go:76] 19 POST /api/v1/namespaces/kube-system/pods/ntw 321\nI0706 13:38:56.549008       1 logs_generator.go:76] 20 POST /api/v1/namespaces/default/pods/b6h 578\nI0706 13:38:56.749302       1 logs_generator.go:76] 21 GET /api/v1/namespaces/ns/pods/kft 300\n"
  Jul  6 13:38:56.753: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-logs-9262 logs logs-generator logs-generator --since=24h'
  Jul  6 13:38:56.801: INFO: stderr: ""
  Jul  6 13:38:56.801: INFO: stdout: "I0706 13:38:52.548983       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/kube-system/pods/mpz 473\nI0706 13:38:52.749070       1 logs_generator.go:76] 1 GET /api/v1/namespaces/default/pods/9q2 475\nI0706 13:38:52.949628       1 logs_generator.go:76] 2 POST /api/v1/namespaces/ns/pods/7lfb 306\nI0706 13:38:53.149920       1 logs_generator.go:76] 3 POST /api/v1/namespaces/kube-system/pods/97vg 522\nI0706 13:38:53.349150       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/default/pods/gmcg 549\nI0706 13:38:53.549624       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/kube-system/pods/zs6 413\nI0706 13:38:53.749805       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/ns/pods/vqh 514\nI0706 13:38:53.949051       1 logs_generator.go:76] 7 GET /api/v1/namespaces/ns/pods/86s 491\nI0706 13:38:54.149378       1 logs_generator.go:76] 8 GET /api/v1/namespaces/default/pods/482 323\nI0706 13:38:54.349685       1 logs_generator.go:76] 9 POST /api/v1/namespaces/kube-system/pods/vv42 394\nI0706 13:38:54.550124       1 logs_generator.go:76] 10 GET /api/v1/namespaces/default/pods/vk2v 570\nI0706 13:38:54.749427       1 logs_generator.go:76] 11 POST /api/v1/namespaces/ns/pods/d6l5 573\nI0706 13:38:54.949718       1 logs_generator.go:76] 12 GET /api/v1/namespaces/default/pods/b5v 413\nI0706 13:38:55.149901       1 logs_generator.go:76] 13 POST /api/v1/namespaces/default/pods/w8v 356\nI0706 13:38:55.349128       1 logs_generator.go:76] 14 PUT /api/v1/namespaces/default/pods/hcxh 412\nI0706 13:38:55.549425       1 logs_generator.go:76] 15 PUT /api/v1/namespaces/default/pods/s89 509\nI0706 13:38:55.749747       1 logs_generator.go:76] 16 GET /api/v1/namespaces/default/pods/8t9 209\nI0706 13:38:55.949105       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/default/pods/tnm9 423\nI0706 13:38:56.149416       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/ns/pods/fm47 244\nI0706 13:38:56.349756       1 logs_generator.go:76] 19 POST /api/v1/namespaces/kube-system/pods/ntw 321\nI0706 13:38:56.549008       1 logs_generator.go:76] 20 POST /api/v1/namespaces/default/pods/b6h 578\nI0706 13:38:56.749302       1 logs_generator.go:76] 21 GET /api/v1/namespaces/ns/pods/kft 300\n"
  Jul  6 13:38:56.801: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-logs-9262 delete pod logs-generator'
  E0706 13:38:57.461807      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:38:57.475: INFO: stderr: ""
  Jul  6 13:38:57.475: INFO: stdout: "pod \"logs-generator\" deleted\n"
  Jul  6 13:38:57.475: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-9262" for this suite. @ 07/06/24 13:38:57.479
• [5.548 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:349
  STEP: Creating a kubernetes client @ 07/06/24 13:38:57.487
  Jul  6 13:38:57.487: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename disruption @ 07/06/24 13:38:57.487
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:38:57.5
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:38:57.503
  STEP: Creating a pdb that targets all three pods in a test replica set @ 07/06/24 13:38:57.507
  STEP: Waiting for the pdb to be processed @ 07/06/24 13:38:57.512
  E0706 13:38:58.462550      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:38:59.462639      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: First trying to evict a pod which shouldn't be evictable @ 07/06/24 13:38:59.52
  STEP: Waiting for all pods to be running @ 07/06/24 13:38:59.52
  Jul  6 13:38:59.524: INFO: pods: 0 < 3
  E0706 13:39:00.463609      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:39:01.463710      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 07/06/24 13:39:01.527
  STEP: Updating the pdb to allow a pod to be evicted @ 07/06/24 13:39:01.534
  STEP: Waiting for the pdb to be processed @ 07/06/24 13:39:01.544
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 07/06/24 13:39:01.548
  STEP: Waiting for all pods to be running @ 07/06/24 13:39:01.548
  STEP: Waiting for the pdb to observed all healthy pods @ 07/06/24 13:39:01.552
  STEP: Patching the pdb to disallow a pod to be evicted @ 07/06/24 13:39:01.575
  STEP: Waiting for the pdb to be processed @ 07/06/24 13:39:01.602
  E0706 13:39:02.464441      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:39:03.464559      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 07/06/24 13:39:03.605
  STEP: locating a running pod @ 07/06/24 13:39:03.609
  STEP: Deleting the pdb to allow a pod to be evicted @ 07/06/24 13:39:03.617
  STEP: Waiting for the pdb to be deleted @ 07/06/24 13:39:03.622
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 07/06/24 13:39:03.625
  STEP: Waiting for all pods to be running @ 07/06/24 13:39:03.625
  Jul  6 13:39:03.644: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-9582" for this suite. @ 07/06/24 13:39:03.651
• [6.178 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 07/06/24 13:39:03.666
  Jul  6 13:39:03.666: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename watch @ 07/06/24 13:39:03.666
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:39:03.679
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:39:03.685
  STEP: getting a starting resourceVersion @ 07/06/24 13:39:03.687
  STEP: starting a background goroutine to produce watch events @ 07/06/24 13:39:03.691
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 07/06/24 13:39:03.691
  E0706 13:39:04.465389      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:39:05.466468      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:39:06.466667      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:39:06.471: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2182" for this suite. @ 07/06/24 13:39:06.521
• [2.907 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:793
  STEP: Creating a kubernetes client @ 07/06/24 13:39:06.573
  Jul  6 13:39:06.573: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename statefulset @ 07/06/24 13:39:06.574
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:39:06.586
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:39:06.588
  STEP: Creating service test in namespace statefulset-4083 @ 07/06/24 13:39:06.591
  STEP: Looking for a node to schedule stateful set and pod @ 07/06/24 13:39:06.596
  STEP: Creating pod with conflicting port in namespace statefulset-4083 @ 07/06/24 13:39:06.601
  STEP: Waiting until pod test-pod will start running in namespace statefulset-4083 @ 07/06/24 13:39:06.609
  E0706 13:39:07.466793      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:39:08.466870      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating statefulset with conflicting port in namespace statefulset-4083 @ 07/06/24 13:39:08.618
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-4083 @ 07/06/24 13:39:08.622
  Jul  6 13:39:08.639: INFO: Observed stateful pod in namespace: statefulset-4083, name: ss-0, uid: 19d2d87d-075e-41f3-8a5a-30f52159bdbc, status phase: Pending. Waiting for statefulset controller to delete.
  Jul  6 13:39:08.657: INFO: Observed stateful pod in namespace: statefulset-4083, name: ss-0, uid: 19d2d87d-075e-41f3-8a5a-30f52159bdbc, status phase: Failed. Waiting for statefulset controller to delete.
  Jul  6 13:39:08.676: INFO: Observed stateful pod in namespace: statefulset-4083, name: ss-0, uid: 19d2d87d-075e-41f3-8a5a-30f52159bdbc, status phase: Failed. Waiting for statefulset controller to delete.
  Jul  6 13:39:08.677: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-4083
  STEP: Removing pod with conflicting port in namespace statefulset-4083 @ 07/06/24 13:39:08.678
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-4083 and will be in running state @ 07/06/24 13:39:08.774
  E0706 13:39:09.467761      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:39:10.467849      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:39:10.785: INFO: Deleting all statefulset in ns statefulset-4083
  Jul  6 13:39:10.787: INFO: Scaling statefulset ss to 0
  E0706 13:39:11.468016      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:39:12.468063      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:39:13.469031      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:39:14.469781      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:39:15.470727      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:39:16.471503      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:39:17.471617      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:39:18.471850      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:39:19.472019      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:39:20.472118      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:39:20.801: INFO: Waiting for statefulset status.replicas updated to 0
  Jul  6 13:39:20.804: INFO: Deleting statefulset ss
  Jul  6 13:39:20.817: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4083" for this suite. @ 07/06/24 13:39:20.819
• [14.252 seconds]
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:269
  STEP: Creating a kubernetes client @ 07/06/24 13:39:20.825
  Jul  6 13:39:20.825: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename downward-api @ 07/06/24 13:39:20.826
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:39:20.837
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:39:20.839
  STEP: Creating a pod to test downward api env vars @ 07/06/24 13:39:20.843
  E0706 13:39:21.472227      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:39:22.472351      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/06/24 13:39:22.858
  Jul  6 13:39:22.862: INFO: Trying to get logs from node ip-172-31-24-251 pod downward-api-0d594ec0-93b7-49ca-8aa0-2fda537436a3 container dapi-container: <nil>
  STEP: delete the pod @ 07/06/24 13:39:22.868
  Jul  6 13:39:22.881: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7232" for this suite. @ 07/06/24 13:39:22.883
• [2.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 07/06/24 13:39:22.889
  Jul  6 13:39:22.889: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename configmap @ 07/06/24 13:39:22.89
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:39:22.904
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:39:22.907
  STEP: Creating configMap with name configmap-test-volume-map-832ef7b8-c61d-463a-95d7-c0b0437f178f @ 07/06/24 13:39:22.91
  STEP: Creating a pod to test consume configMaps @ 07/06/24 13:39:22.913
  E0706 13:39:23.472409      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:39:24.472744      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:39:25.473704      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:39:26.473924      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/06/24 13:39:26.933
  Jul  6 13:39:26.935: INFO: Trying to get logs from node ip-172-31-24-251 pod pod-configmaps-9c759bd9-bfee-4602-81ca-e7046692d00a container agnhost-container: <nil>
  STEP: delete the pod @ 07/06/24 13:39:26.941
  Jul  6 13:39:26.956: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2151" for this suite. @ 07/06/24 13:39:26.959
• [4.076 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 07/06/24 13:39:26.965
  Jul  6 13:39:26.965: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename projected @ 07/06/24 13:39:26.966
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:39:26.979
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:39:26.985
  STEP: Creating projection with secret that has name projected-secret-test-075fcc7a-44d5-4687-9788-93700067199b @ 07/06/24 13:39:26.987
  STEP: Creating a pod to test consume secrets @ 07/06/24 13:39:26.991
  E0706 13:39:27.474016      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:39:28.474115      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:39:29.474561      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:39:30.474614      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/06/24 13:39:31.011
  Jul  6 13:39:31.014: INFO: Trying to get logs from node ip-172-31-24-251 pod pod-projected-secrets-e92a3891-cb18-4d97-bde1-04c3d5ed1c94 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 07/06/24 13:39:31.02
  Jul  6 13:39:31.036: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-962" for this suite. @ 07/06/24 13:39:31.039
• [4.080 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 07/06/24 13:39:31.045
  Jul  6 13:39:31.045: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename podtemplate @ 07/06/24 13:39:31.045
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:39:31.058
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:39:31.061
  STEP: Create a pod template @ 07/06/24 13:39:31.067
  STEP: Replace a pod template @ 07/06/24 13:39:31.072
  Jul  6 13:39:31.079: INFO: Found updated podtemplate annotation: "true"

  Jul  6 13:39:31.079: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-1353" for this suite. @ 07/06/24 13:39:31.083
• [0.044 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 07/06/24 13:39:31.09
  Jul  6 13:39:31.090: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename gc @ 07/06/24 13:39:31.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:39:31.103
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:39:31.105
  STEP: create the rc1 @ 07/06/24 13:39:31.156
  STEP: create the rc2 @ 07/06/24 13:39:31.161
  E0706 13:39:31.475081      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:39:32.475240      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:39:33.475969      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:39:34.476844      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:39:35.479291      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:39:36.480974      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 07/06/24 13:39:37.169
  E0706 13:39:37.481616      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc simpletest-rc-to-be-deleted @ 07/06/24 13:39:37.557
  STEP: wait for the rc to be deleted @ 07/06/24 13:39:37.564
  E0706 13:39:38.481744      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:39:39.481856      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:39:40.482423      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:39:41.482585      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:39:42.483608      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:39:42.581: INFO: 68 pods remaining
  Jul  6 13:39:42.581: INFO: 68 pods has nil DeletionTimestamp
  Jul  6 13:39:42.581: INFO: 
  E0706 13:39:43.483710      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:39:44.483801      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:39:45.483985      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:39:46.483986      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:39:47.484072      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 07/06/24 13:39:47.575
  W0706 13:39:47.579689      21 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Jul  6 13:39:47.579: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jul  6 13:39:47.579: INFO: Deleting pod "simpletest-rc-to-be-deleted-2745f" in namespace "gc-4476"
  Jul  6 13:39:47.590: INFO: Deleting pod "simpletest-rc-to-be-deleted-2f7rl" in namespace "gc-4476"
  Jul  6 13:39:47.603: INFO: Deleting pod "simpletest-rc-to-be-deleted-4m2fv" in namespace "gc-4476"
  Jul  6 13:39:47.613: INFO: Deleting pod "simpletest-rc-to-be-deleted-4mv96" in namespace "gc-4476"
  Jul  6 13:39:47.624: INFO: Deleting pod "simpletest-rc-to-be-deleted-5428c" in namespace "gc-4476"
  Jul  6 13:39:47.639: INFO: Deleting pod "simpletest-rc-to-be-deleted-5ckfk" in namespace "gc-4476"
  Jul  6 13:39:47.648: INFO: Deleting pod "simpletest-rc-to-be-deleted-5d8zq" in namespace "gc-4476"
  Jul  6 13:39:47.660: INFO: Deleting pod "simpletest-rc-to-be-deleted-5vs4r" in namespace "gc-4476"
  Jul  6 13:39:47.675: INFO: Deleting pod "simpletest-rc-to-be-deleted-5xp9h" in namespace "gc-4476"
  Jul  6 13:39:47.688: INFO: Deleting pod "simpletest-rc-to-be-deleted-6p6zn" in namespace "gc-4476"
  Jul  6 13:39:47.699: INFO: Deleting pod "simpletest-rc-to-be-deleted-7kv7w" in namespace "gc-4476"
  Jul  6 13:39:47.712: INFO: Deleting pod "simpletest-rc-to-be-deleted-7lbdw" in namespace "gc-4476"
  Jul  6 13:39:47.726: INFO: Deleting pod "simpletest-rc-to-be-deleted-7tgqq" in namespace "gc-4476"
  Jul  6 13:39:47.739: INFO: Deleting pod "simpletest-rc-to-be-deleted-8fz2z" in namespace "gc-4476"
  Jul  6 13:39:47.755: INFO: Deleting pod "simpletest-rc-to-be-deleted-8qxbl" in namespace "gc-4476"
  Jul  6 13:39:47.765: INFO: Deleting pod "simpletest-rc-to-be-deleted-95klw" in namespace "gc-4476"
  Jul  6 13:39:47.777: INFO: Deleting pod "simpletest-rc-to-be-deleted-9mfbc" in namespace "gc-4476"
  Jul  6 13:39:47.789: INFO: Deleting pod "simpletest-rc-to-be-deleted-9shln" in namespace "gc-4476"
  Jul  6 13:39:47.805: INFO: Deleting pod "simpletest-rc-to-be-deleted-9vxxb" in namespace "gc-4476"
  Jul  6 13:39:47.819: INFO: Deleting pod "simpletest-rc-to-be-deleted-b2z48" in namespace "gc-4476"
  Jul  6 13:39:47.829: INFO: Deleting pod "simpletest-rc-to-be-deleted-bhv88" in namespace "gc-4476"
  Jul  6 13:39:47.842: INFO: Deleting pod "simpletest-rc-to-be-deleted-c2xj6" in namespace "gc-4476"
  Jul  6 13:39:47.854: INFO: Deleting pod "simpletest-rc-to-be-deleted-cbdxb" in namespace "gc-4476"
  Jul  6 13:39:47.868: INFO: Deleting pod "simpletest-rc-to-be-deleted-cnkvn" in namespace "gc-4476"
  Jul  6 13:39:47.880: INFO: Deleting pod "simpletest-rc-to-be-deleted-cvsrw" in namespace "gc-4476"
  Jul  6 13:39:47.894: INFO: Deleting pod "simpletest-rc-to-be-deleted-dmvv8" in namespace "gc-4476"
  Jul  6 13:39:47.912: INFO: Deleting pod "simpletest-rc-to-be-deleted-dp964" in namespace "gc-4476"
  Jul  6 13:39:47.929: INFO: Deleting pod "simpletest-rc-to-be-deleted-dtwbd" in namespace "gc-4476"
  Jul  6 13:39:47.942: INFO: Deleting pod "simpletest-rc-to-be-deleted-fnwgs" in namespace "gc-4476"
  Jul  6 13:39:47.959: INFO: Deleting pod "simpletest-rc-to-be-deleted-fwk8l" in namespace "gc-4476"
  Jul  6 13:39:47.983: INFO: Deleting pod "simpletest-rc-to-be-deleted-g4vft" in namespace "gc-4476"
  Jul  6 13:39:47.996: INFO: Deleting pod "simpletest-rc-to-be-deleted-g59m2" in namespace "gc-4476"
  Jul  6 13:39:48.010: INFO: Deleting pod "simpletest-rc-to-be-deleted-gh76j" in namespace "gc-4476"
  Jul  6 13:39:48.027: INFO: Deleting pod "simpletest-rc-to-be-deleted-gk9g6" in namespace "gc-4476"
  Jul  6 13:39:48.042: INFO: Deleting pod "simpletest-rc-to-be-deleted-gp92x" in namespace "gc-4476"
  Jul  6 13:39:48.050: INFO: Deleting pod "simpletest-rc-to-be-deleted-gvth5" in namespace "gc-4476"
  Jul  6 13:39:48.069: INFO: Deleting pod "simpletest-rc-to-be-deleted-h9dgr" in namespace "gc-4476"
  Jul  6 13:39:48.085: INFO: Deleting pod "simpletest-rc-to-be-deleted-hbxnh" in namespace "gc-4476"
  Jul  6 13:39:48.097: INFO: Deleting pod "simpletest-rc-to-be-deleted-j86c9" in namespace "gc-4476"
  Jul  6 13:39:48.112: INFO: Deleting pod "simpletest-rc-to-be-deleted-jdl5k" in namespace "gc-4476"
  Jul  6 13:39:48.124: INFO: Deleting pod "simpletest-rc-to-be-deleted-jfxc4" in namespace "gc-4476"
  Jul  6 13:39:48.139: INFO: Deleting pod "simpletest-rc-to-be-deleted-jtpws" in namespace "gc-4476"
  Jul  6 13:39:48.153: INFO: Deleting pod "simpletest-rc-to-be-deleted-jwfh4" in namespace "gc-4476"
  Jul  6 13:39:48.166: INFO: Deleting pod "simpletest-rc-to-be-deleted-k5bpf" in namespace "gc-4476"
  Jul  6 13:39:48.179: INFO: Deleting pod "simpletest-rc-to-be-deleted-k89x8" in namespace "gc-4476"
  Jul  6 13:39:48.197: INFO: Deleting pod "simpletest-rc-to-be-deleted-khv2q" in namespace "gc-4476"
  Jul  6 13:39:48.212: INFO: Deleting pod "simpletest-rc-to-be-deleted-kk4xg" in namespace "gc-4476"
  Jul  6 13:39:48.231: INFO: Deleting pod "simpletest-rc-to-be-deleted-kmglb" in namespace "gc-4476"
  Jul  6 13:39:48.245: INFO: Deleting pod "simpletest-rc-to-be-deleted-kmkwq" in namespace "gc-4476"
  Jul  6 13:39:48.259: INFO: Deleting pod "simpletest-rc-to-be-deleted-lgzjw" in namespace "gc-4476"
  Jul  6 13:39:48.273: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4476" for this suite. @ 07/06/24 13:39:48.28
• [17.199 seconds]
------------------------------
SSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:170
  STEP: Creating a kubernetes client @ 07/06/24 13:39:48.289
  Jul  6 13:39:48.289: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename security-context @ 07/06/24 13:39:48.29
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:39:48.307
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:39:48.312
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 07/06/24 13:39:48.316
  E0706 13:39:48.484701      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:39:49.485384      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:39:50.486342      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:39:51.486545      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/06/24 13:39:52.346
  Jul  6 13:39:52.350: INFO: Trying to get logs from node ip-172-31-24-251 pod security-context-349c5d0d-bb0a-4abb-beb2-961cd447ed99 container test-container: <nil>
  STEP: delete the pod @ 07/06/24 13:39:52.355
  Jul  6 13:39:52.369: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-9784" for this suite. @ 07/06/24 13:39:52.371
• [4.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 07/06/24 13:39:52.377
  Jul  6 13:39:52.377: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename projected @ 07/06/24 13:39:52.377
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:39:52.391
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:39:52.394
  STEP: Creating a pod to test downward API volume plugin @ 07/06/24 13:39:52.396
  E0706 13:39:52.487523      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:39:53.487667      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:39:54.488501      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:39:55.488653      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/06/24 13:39:56.417
  Jul  6 13:39:56.420: INFO: Trying to get logs from node ip-172-31-24-251 pod downwardapi-volume-38a03428-e789-4f98-8960-7021596c64f8 container client-container: <nil>
  STEP: delete the pod @ 07/06/24 13:39:56.426
  Jul  6 13:39:56.442: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7836" for this suite. @ 07/06/24 13:39:56.445
• [4.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 07/06/24 13:39:56.45
  Jul  6 13:39:56.450: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename container-probe @ 07/06/24 13:39:56.451
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:39:56.466
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:39:56.469
  STEP: Creating pod liveness-6b05e48f-e83b-45ae-b83a-db3daa8cbe5e in namespace container-probe-8414 @ 07/06/24 13:39:56.471
  E0706 13:39:56.488861      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:39:57.489022      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/06/24 13:39:58.486
  Jul  6 13:39:58.488: INFO: Initial restart count of pod liveness-6b05e48f-e83b-45ae-b83a-db3daa8cbe5e is 0
  E0706 13:39:58.489116      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:39:58.492: INFO: Get pod liveness-6b05e48f-e83b-45ae-b83a-db3daa8cbe5e in namespace container-probe-8414
  E0706 13:39:59.489694      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:40:00.489779      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:40:00.496: INFO: Get pod liveness-6b05e48f-e83b-45ae-b83a-db3daa8cbe5e in namespace container-probe-8414
  E0706 13:40:01.490029      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:40:02.490132      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:40:02.500: INFO: Get pod liveness-6b05e48f-e83b-45ae-b83a-db3daa8cbe5e in namespace container-probe-8414
  E0706 13:40:03.490560      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:40:04.490672      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:40:04.504: INFO: Get pod liveness-6b05e48f-e83b-45ae-b83a-db3daa8cbe5e in namespace container-probe-8414
  E0706 13:40:05.490974      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:40:06.491515      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:40:06.509: INFO: Get pod liveness-6b05e48f-e83b-45ae-b83a-db3daa8cbe5e in namespace container-probe-8414
  E0706 13:40:07.491636      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:40:08.492366      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:40:08.513: INFO: Get pod liveness-6b05e48f-e83b-45ae-b83a-db3daa8cbe5e in namespace container-probe-8414
  E0706 13:40:09.493191      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:40:10.494261      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:40:10.516: INFO: Get pod liveness-6b05e48f-e83b-45ae-b83a-db3daa8cbe5e in namespace container-probe-8414
  E0706 13:40:11.494634      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:40:12.495102      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:40:12.520: INFO: Get pod liveness-6b05e48f-e83b-45ae-b83a-db3daa8cbe5e in namespace container-probe-8414
  E0706 13:40:13.495197      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:40:14.495628      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:40:14.524: INFO: Get pod liveness-6b05e48f-e83b-45ae-b83a-db3daa8cbe5e in namespace container-probe-8414
  E0706 13:40:15.496239      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:40:16.496408      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:40:16.529: INFO: Get pod liveness-6b05e48f-e83b-45ae-b83a-db3daa8cbe5e in namespace container-probe-8414
  E0706 13:40:17.496519      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:40:18.496620      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:40:18.533: INFO: Get pod liveness-6b05e48f-e83b-45ae-b83a-db3daa8cbe5e in namespace container-probe-8414
  Jul  6 13:40:18.533: INFO: Restart count of pod container-probe-8414/liveness-6b05e48f-e83b-45ae-b83a-db3daa8cbe5e is now 1 (20.044579454s elapsed)
  STEP: deleting the pod @ 07/06/24 13:40:18.533
  Jul  6 13:40:18.548: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8414" for this suite. @ 07/06/24 13:40:18.551
• [22.105 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 07/06/24 13:40:18.555
  Jul  6 13:40:18.555: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename projected @ 07/06/24 13:40:18.556
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:40:18.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:40:18.574
  STEP: Creating projection with secret that has name projected-secret-test-map-cc77db8d-b10f-464a-9617-b92f1460ed5f @ 07/06/24 13:40:18.576
  STEP: Creating a pod to test consume secrets @ 07/06/24 13:40:18.58
  E0706 13:40:19.497615      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:40:20.497952      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/06/24 13:40:20.599
  Jul  6 13:40:20.602: INFO: Trying to get logs from node ip-172-31-24-251 pod pod-projected-secrets-8d22763a-c83a-430d-8e9d-b9ef0060d8c5 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 07/06/24 13:40:20.607
  Jul  6 13:40:20.624: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2266" for this suite. @ 07/06/24 13:40:20.628
• [2.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 07/06/24 13:40:20.635
  Jul  6 13:40:20.635: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename namespaces @ 07/06/24 13:40:20.635
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:40:20.648
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:40:20.65
  STEP: creating a Namespace @ 07/06/24 13:40:20.653
  STEP: patching the Namespace @ 07/06/24 13:40:20.668
  STEP: get the Namespace and ensuring it has the label @ 07/06/24 13:40:20.674
  Jul  6 13:40:20.677: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-324" for this suite. @ 07/06/24 13:40:20.68
  STEP: Destroying namespace "nspatchtest-b9af3388-70c1-4976-8adb-d4c1e2834915-1028" for this suite. @ 07/06/24 13:40:20.687
• [0.056 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:96
  STEP: Creating a kubernetes client @ 07/06/24 13:40:20.692
  Jul  6 13:40:20.692: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename secrets @ 07/06/24 13:40:20.693
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:40:20.704
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:40:20.707
  STEP: creating secret secrets-167/secret-test-3611c1fd-3b7a-40ae-a43c-d72ce7fa1e23 @ 07/06/24 13:40:20.711
  STEP: Creating a pod to test consume secrets @ 07/06/24 13:40:20.714
  E0706 13:40:21.498047      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:40:22.498251      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:40:23.498552      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:40:24.499656      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/06/24 13:40:24.732
  Jul  6 13:40:24.736: INFO: Trying to get logs from node ip-172-31-24-251 pod pod-configmaps-82a544aa-6d95-4f61-a78a-3a802baa47bc container env-test: <nil>
  STEP: delete the pod @ 07/06/24 13:40:24.742
  Jul  6 13:40:24.755: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-167" for this suite. @ 07/06/24 13:40:24.759
• [4.072 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 07/06/24 13:40:24.764
  Jul  6 13:40:24.764: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename namespaces @ 07/06/24 13:40:24.765
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:40:24.777
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:40:24.78
  STEP: Creating a test namespace @ 07/06/24 13:40:24.782
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:40:24.794
  STEP: Creating a service in the namespace @ 07/06/24 13:40:24.796
  STEP: Deleting the namespace @ 07/06/24 13:40:24.809
  STEP: Waiting for the namespace to be removed. @ 07/06/24 13:40:24.816
  E0706 13:40:25.500255      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:40:26.500301      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:40:27.500538      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:40:28.500654      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:40:29.500732      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:40:30.500791      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 07/06/24 13:40:30.822
  STEP: Verifying there is no service in the namespace @ 07/06/24 13:40:30.842
  Jul  6 13:40:30.847: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7268" for this suite. @ 07/06/24 13:40:30.851
  STEP: Destroying namespace "nsdeletetest-5275" for this suite. @ 07/06/24 13:40:30.858
  Jul  6 13:40:30.861: INFO: Namespace nsdeletetest-5275 was already deleted
  STEP: Destroying namespace "nsdeletetest-6983" for this suite. @ 07/06/24 13:40:30.861
• [6.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 07/06/24 13:40:30.869
  Jul  6 13:40:30.869: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename projected @ 07/06/24 13:40:30.87
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:40:30.888
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:40:30.895
  STEP: Creating a pod to test downward API volume plugin @ 07/06/24 13:40:30.898
  E0706 13:40:31.501483      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:40:32.502264      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:40:33.502974      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:40:34.503266      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/06/24 13:40:34.924
  Jul  6 13:40:34.928: INFO: Trying to get logs from node ip-172-31-24-251 pod downwardapi-volume-abae36d2-045d-4c1c-862f-7d147b3e4139 container client-container: <nil>
  STEP: delete the pod @ 07/06/24 13:40:34.934
  Jul  6 13:40:34.949: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5325" for this suite. @ 07/06/24 13:40:34.952
• [4.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 07/06/24 13:40:34.96
  Jul  6 13:40:34.960: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename webhook @ 07/06/24 13:40:34.96
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:40:34.97
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:40:34.973
  STEP: Setting up server cert @ 07/06/24 13:40:34.994
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/06/24 13:40:35.263
  STEP: Deploying the webhook pod @ 07/06/24 13:40:35.273
  STEP: Wait for the deployment to be ready @ 07/06/24 13:40:35.284
  Jul  6 13:40:35.290: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0706 13:40:35.504234      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:40:36.504441      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/06/24 13:40:37.301
  STEP: Verifying the service has paired with the endpoint @ 07/06/24 13:40:37.31
  E0706 13:40:37.505168      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:40:38.311: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 07/06/24 13:40:38.319
  STEP: create a pod @ 07/06/24 13:40:38.331
  E0706 13:40:38.505502      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:40:39.505589      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 07/06/24 13:40:40.347
  Jul  6 13:40:40.347: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=webhook-6812 attach --namespace=webhook-6812 to-be-attached-pod -i -c=container1'
  Jul  6 13:40:40.396: INFO: rc: 1
  Jul  6 13:40:40.448: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6812" for this suite. @ 07/06/24 13:40:40.453
  STEP: Destroying namespace "webhook-markers-444" for this suite. @ 07/06/24 13:40:40.46
• [5.504 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 07/06/24 13:40:40.464
  Jul  6 13:40:40.464: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename projected @ 07/06/24 13:40:40.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:40:40.476
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:40:40.479
  STEP: Creating a pod to test downward API volume plugin @ 07/06/24 13:40:40.481
  E0706 13:40:40.505890      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:40:41.506049      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:40:42.506191      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:40:43.506521      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:40:44.506848      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/06/24 13:40:44.507
  Jul  6 13:40:44.509: INFO: Trying to get logs from node ip-172-31-24-251 pod downwardapi-volume-fd039090-75d3-40c7-9fd5-6f5eadc4977e container client-container: <nil>
  STEP: delete the pod @ 07/06/24 13:40:44.515
  Jul  6 13:40:44.531: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-783" for this suite. @ 07/06/24 13:40:44.535
• [4.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:357
  STEP: Creating a kubernetes client @ 07/06/24 13:40:44.541
  Jul  6 13:40:44.541: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename kubectl @ 07/06/24 13:40:44.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:40:44.554
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:40:44.557
  STEP: creating a replication controller @ 07/06/24 13:40:44.559
  Jul  6 13:40:44.559: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-2198 create -f -'
  Jul  6 13:40:44.638: INFO: stderr: ""
  Jul  6 13:40:44.638: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 07/06/24 13:40:44.638
  Jul  6 13:40:44.638: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-2198 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jul  6 13:40:44.681: INFO: stderr: ""
  Jul  6 13:40:44.681: INFO: stdout: "update-demo-nautilus-phbmq update-demo-nautilus-s6hkn "
  Jul  6 13:40:44.681: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-2198 get pods update-demo-nautilus-phbmq -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jul  6 13:40:44.721: INFO: stderr: ""
  Jul  6 13:40:44.721: INFO: stdout: ""
  Jul  6 13:40:44.721: INFO: update-demo-nautilus-phbmq is created but not running
  E0706 13:40:45.507609      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:40:46.507797      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:40:47.507894      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:40:48.508057      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:40:49.508137      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:40:49.722: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-2198 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jul  6 13:40:49.764: INFO: stderr: ""
  Jul  6 13:40:49.764: INFO: stdout: "update-demo-nautilus-phbmq update-demo-nautilus-s6hkn "
  Jul  6 13:40:49.764: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-2198 get pods update-demo-nautilus-phbmq -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jul  6 13:40:49.804: INFO: stderr: ""
  Jul  6 13:40:49.804: INFO: stdout: "true"
  Jul  6 13:40:49.805: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-2198 get pods update-demo-nautilus-phbmq -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jul  6 13:40:49.845: INFO: stderr: ""
  Jul  6 13:40:49.845: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jul  6 13:40:49.845: INFO: validating pod update-demo-nautilus-phbmq
  Jul  6 13:40:49.850: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jul  6 13:40:49.850: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jul  6 13:40:49.850: INFO: update-demo-nautilus-phbmq is verified up and running
  Jul  6 13:40:49.850: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-2198 get pods update-demo-nautilus-s6hkn -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jul  6 13:40:49.887: INFO: stderr: ""
  Jul  6 13:40:49.887: INFO: stdout: "true"
  Jul  6 13:40:49.887: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-2198 get pods update-demo-nautilus-s6hkn -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jul  6 13:40:49.927: INFO: stderr: ""
  Jul  6 13:40:49.927: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jul  6 13:40:49.927: INFO: validating pod update-demo-nautilus-s6hkn
  Jul  6 13:40:49.931: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jul  6 13:40:49.931: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jul  6 13:40:49.931: INFO: update-demo-nautilus-s6hkn is verified up and running
  STEP: scaling down the replication controller @ 07/06/24 13:40:49.931
  Jul  6 13:40:49.932: INFO: scanned /root for discovery docs: <nil>
  Jul  6 13:40:49.932: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-2198 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E0706 13:40:50.508243      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:40:50.988: INFO: stderr: ""
  Jul  6 13:40:50.988: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 07/06/24 13:40:50.988
  Jul  6 13:40:50.988: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-2198 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jul  6 13:40:51.059: INFO: stderr: ""
  Jul  6 13:40:51.060: INFO: stdout: "update-demo-nautilus-s6hkn "
  Jul  6 13:40:51.060: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-2198 get pods update-demo-nautilus-s6hkn -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jul  6 13:40:51.137: INFO: stderr: ""
  Jul  6 13:40:51.137: INFO: stdout: "true"
  Jul  6 13:40:51.137: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-2198 get pods update-demo-nautilus-s6hkn -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jul  6 13:40:51.208: INFO: stderr: ""
  Jul  6 13:40:51.208: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jul  6 13:40:51.208: INFO: validating pod update-demo-nautilus-s6hkn
  Jul  6 13:40:51.212: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jul  6 13:40:51.212: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jul  6 13:40:51.212: INFO: update-demo-nautilus-s6hkn is verified up and running
  STEP: scaling up the replication controller @ 07/06/24 13:40:51.212
  Jul  6 13:40:51.213: INFO: scanned /root for discovery docs: <nil>
  Jul  6 13:40:51.213: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-2198 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E0706 13:40:51.509291      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:40:52.291: INFO: stderr: ""
  Jul  6 13:40:52.291: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 07/06/24 13:40:52.291
  Jul  6 13:40:52.291: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-2198 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jul  6 13:40:52.333: INFO: stderr: ""
  Jul  6 13:40:52.333: INFO: stdout: "update-demo-nautilus-jcmrx update-demo-nautilus-s6hkn "
  Jul  6 13:40:52.333: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-2198 get pods update-demo-nautilus-jcmrx -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jul  6 13:40:52.371: INFO: stderr: ""
  Jul  6 13:40:52.371: INFO: stdout: ""
  Jul  6 13:40:52.371: INFO: update-demo-nautilus-jcmrx is created but not running
  E0706 13:40:52.510258      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:40:53.510341      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:40:54.510540      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:40:55.510979      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:40:56.511068      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:40:57.372: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-2198 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jul  6 13:40:57.414: INFO: stderr: ""
  Jul  6 13:40:57.414: INFO: stdout: "update-demo-nautilus-jcmrx update-demo-nautilus-s6hkn "
  Jul  6 13:40:57.414: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-2198 get pods update-demo-nautilus-jcmrx -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jul  6 13:40:57.452: INFO: stderr: ""
  Jul  6 13:40:57.452: INFO: stdout: "true"
  Jul  6 13:40:57.452: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-2198 get pods update-demo-nautilus-jcmrx -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jul  6 13:40:57.491: INFO: stderr: ""
  Jul  6 13:40:57.491: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jul  6 13:40:57.491: INFO: validating pod update-demo-nautilus-jcmrx
  Jul  6 13:40:57.496: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jul  6 13:40:57.496: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jul  6 13:40:57.496: INFO: update-demo-nautilus-jcmrx is verified up and running
  Jul  6 13:40:57.496: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-2198 get pods update-demo-nautilus-s6hkn -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  E0706 13:40:57.511512      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:40:57.536: INFO: stderr: ""
  Jul  6 13:40:57.536: INFO: stdout: "true"
  Jul  6 13:40:57.536: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-2198 get pods update-demo-nautilus-s6hkn -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jul  6 13:40:57.574: INFO: stderr: ""
  Jul  6 13:40:57.574: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jul  6 13:40:57.574: INFO: validating pod update-demo-nautilus-s6hkn
  Jul  6 13:40:57.579: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jul  6 13:40:57.579: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jul  6 13:40:57.579: INFO: update-demo-nautilus-s6hkn is verified up and running
  STEP: using delete to clean up resources @ 07/06/24 13:40:57.579
  Jul  6 13:40:57.579: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-2198 delete --grace-period=0 --force -f -'
  Jul  6 13:40:57.621: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jul  6 13:40:57.621: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Jul  6 13:40:57.621: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-2198 get rc,svc -l name=update-demo --no-headers'
  Jul  6 13:40:57.677: INFO: stderr: "No resources found in kubectl-2198 namespace.\n"
  Jul  6 13:40:57.677: INFO: stdout: ""
  Jul  6 13:40:57.677: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-2198 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Jul  6 13:40:57.739: INFO: stderr: ""
  Jul  6 13:40:57.739: INFO: stdout: ""
  Jul  6 13:40:57.739: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2198" for this suite. @ 07/06/24 13:40:57.744
• [13.209 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 07/06/24 13:40:57.75
  Jul  6 13:40:57.750: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename webhook @ 07/06/24 13:40:57.751
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:40:57.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:40:57.777
  STEP: Setting up server cert @ 07/06/24 13:40:57.809
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/06/24 13:40:57.961
  STEP: Deploying the webhook pod @ 07/06/24 13:40:57.967
  STEP: Wait for the deployment to be ready @ 07/06/24 13:40:57.98
  Jul  6 13:40:57.993: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0706 13:40:58.512547      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:40:59.512644      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/06/24 13:41:00.004
  STEP: Verifying the service has paired with the endpoint @ 07/06/24 13:41:00.014
  E0706 13:41:00.512735      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:41:01.014: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 07/06/24 13:41:01.022
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/06/24 13:41:01.034
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 07/06/24 13:41:01.039
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/06/24 13:41:01.049
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 07/06/24 13:41:01.06
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/06/24 13:41:01.065
  Jul  6 13:41:01.106: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9935" for this suite. @ 07/06/24 13:41:01.11
  STEP: Destroying namespace "webhook-markers-3156" for this suite. @ 07/06/24 13:41:01.117
• [3.373 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1632
  STEP: Creating a kubernetes client @ 07/06/24 13:41:01.124
  Jul  6 13:41:01.124: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename kubectl @ 07/06/24 13:41:01.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:41:01.144
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:41:01.147
  STEP: creating the pod @ 07/06/24 13:41:01.151
  Jul  6 13:41:01.151: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-2540 create -f -'
  Jul  6 13:41:01.234: INFO: stderr: ""
  Jul  6 13:41:01.234: INFO: stdout: "pod/pause created\n"
  E0706 13:41:01.513273      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:41:02.513821      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 07/06/24 13:41:03.247
  Jul  6 13:41:03.247: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-2540 label pods pause testing-label=testing-label-value'
  Jul  6 13:41:03.294: INFO: stderr: ""
  Jul  6 13:41:03.294: INFO: stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 07/06/24 13:41:03.294
  Jul  6 13:41:03.294: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-2540 get pod pause -L testing-label'
  Jul  6 13:41:03.339: INFO: stderr: ""
  Jul  6 13:41:03.339: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 07/06/24 13:41:03.339
  Jul  6 13:41:03.339: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-2540 label pods pause testing-label-'
  Jul  6 13:41:03.434: INFO: stderr: ""
  Jul  6 13:41:03.434: INFO: stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 07/06/24 13:41:03.434
  Jul  6 13:41:03.435: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-2540 get pod pause -L testing-label'
  Jul  6 13:41:03.477: INFO: stderr: ""
  Jul  6 13:41:03.477: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 07/06/24 13:41:03.477
  Jul  6 13:41:03.477: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-2540 delete --grace-period=0 --force -f -'
  E0706 13:41:03.514237      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:41:03.524: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jul  6 13:41:03.524: INFO: stdout: "pod \"pause\" force deleted\n"
  Jul  6 13:41:03.524: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-2540 get rc,svc -l name=pause --no-headers'
  Jul  6 13:41:03.568: INFO: stderr: "No resources found in kubectl-2540 namespace.\n"
  Jul  6 13:41:03.568: INFO: stdout: ""
  Jul  6 13:41:03.568: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-2540 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Jul  6 13:41:03.604: INFO: stderr: ""
  Jul  6 13:41:03.604: INFO: stdout: ""
  Jul  6 13:41:03.604: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2540" for this suite. @ 07/06/24 13:41:03.609
• [2.492 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 07/06/24 13:41:03.616
  Jul  6 13:41:03.616: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename downward-api @ 07/06/24 13:41:03.617
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:41:03.627
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:41:03.629
  STEP: Creating a pod to test downward API volume plugin @ 07/06/24 13:41:03.632
  E0706 13:41:04.515225      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:41:05.515337      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/06/24 13:41:05.649
  Jul  6 13:41:05.653: INFO: Trying to get logs from node ip-172-31-24-251 pod downwardapi-volume-d5d0b9f6-833c-45c2-a75e-a64337d3af5f container client-container: <nil>
  STEP: delete the pod @ 07/06/24 13:41:05.658
  Jul  6 13:41:05.671: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7235" for this suite. @ 07/06/24 13:41:05.674
• [2.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 07/06/24 13:41:05.679
  Jul  6 13:41:05.679: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename proxy @ 07/06/24 13:41:05.68
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:41:05.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:41:05.695
  Jul  6 13:41:05.698: INFO: Creating pod...
  E0706 13:41:06.515548      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:41:07.516426      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:41:07.711: INFO: Creating service...
  Jul  6 13:41:07.725: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8912/pods/agnhost/proxy/some/path/with/DELETE
  Jul  6 13:41:07.732: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Jul  6 13:41:07.732: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8912/pods/agnhost/proxy/some/path/with/GET
  Jul  6 13:41:07.735: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Jul  6 13:41:07.735: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8912/pods/agnhost/proxy/some/path/with/HEAD
  Jul  6 13:41:07.737: INFO: http.Client request:HEAD | StatusCode:200
  Jul  6 13:41:07.737: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8912/pods/agnhost/proxy/some/path/with/OPTIONS
  Jul  6 13:41:07.741: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Jul  6 13:41:07.741: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8912/pods/agnhost/proxy/some/path/with/PATCH
  Jul  6 13:41:07.745: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Jul  6 13:41:07.745: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8912/pods/agnhost/proxy/some/path/with/POST
  Jul  6 13:41:07.748: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Jul  6 13:41:07.748: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8912/pods/agnhost/proxy/some/path/with/PUT
  Jul  6 13:41:07.751: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Jul  6 13:41:07.751: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8912/services/test-service/proxy/some/path/with/DELETE
  Jul  6 13:41:07.755: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Jul  6 13:41:07.755: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8912/services/test-service/proxy/some/path/with/GET
  Jul  6 13:41:07.760: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Jul  6 13:41:07.760: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8912/services/test-service/proxy/some/path/with/HEAD
  Jul  6 13:41:07.767: INFO: http.Client request:HEAD | StatusCode:200
  Jul  6 13:41:07.767: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8912/services/test-service/proxy/some/path/with/OPTIONS
  Jul  6 13:41:07.771: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Jul  6 13:41:07.771: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8912/services/test-service/proxy/some/path/with/PATCH
  Jul  6 13:41:07.776: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Jul  6 13:41:07.776: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8912/services/test-service/proxy/some/path/with/POST
  Jul  6 13:41:07.781: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Jul  6 13:41:07.781: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8912/services/test-service/proxy/some/path/with/PUT
  Jul  6 13:41:07.785: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Jul  6 13:41:07.785: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-8912" for this suite. @ 07/06/24 13:41:07.789
• [2.117 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:442
  STEP: Creating a kubernetes client @ 07/06/24 13:41:07.796
  Jul  6 13:41:07.796: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/06/24 13:41:07.797
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:41:07.81
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:41:07.813
  STEP: set up a multi version CRD @ 07/06/24 13:41:07.816
  Jul  6 13:41:07.816: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  E0706 13:41:08.516886      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:41:09.517373      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:41:10.518125      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mark a version not serverd @ 07/06/24 13:41:10.862
  STEP: check the unserved version gets removed @ 07/06/24 13:41:10.875
  E0706 13:41:11.518170      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 07/06/24 13:41:11.573
  E0706 13:41:12.519085      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:41:13.520065      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:41:14.103: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6095" for this suite. @ 07/06/24 13:41:14.109
• [6.320 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:236
  STEP: Creating a kubernetes client @ 07/06/24 13:41:14.117
  Jul  6 13:41:14.117: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/06/24 13:41:14.117
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:41:14.133
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:41:14.135
  Jul  6 13:41:14.139: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  E0706 13:41:14.520395      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 07/06/24 13:41:15.413
  Jul  6 13:41:15.413: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=crd-publish-openapi-3278 --namespace=crd-publish-openapi-3278 create -f -'
  E0706 13:41:15.521305      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:41:16.521485      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:41:17.479: INFO: stderr: ""
  Jul  6 13:41:17.479: INFO: stdout: "e2e-test-crd-publish-openapi-2762-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Jul  6 13:41:17.479: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=crd-publish-openapi-3278 --namespace=crd-publish-openapi-3278 delete e2e-test-crd-publish-openapi-2762-crds test-cr'
  E0706 13:41:17.522501      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:41:17.536: INFO: stderr: ""
  Jul  6 13:41:17.536: INFO: stdout: "e2e-test-crd-publish-openapi-2762-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  Jul  6 13:41:17.536: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=crd-publish-openapi-3278 --namespace=crd-publish-openapi-3278 apply -f -'
  Jul  6 13:41:17.584: INFO: stderr: ""
  Jul  6 13:41:17.584: INFO: stdout: "e2e-test-crd-publish-openapi-2762-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Jul  6 13:41:17.584: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=crd-publish-openapi-3278 --namespace=crd-publish-openapi-3278 delete e2e-test-crd-publish-openapi-2762-crds test-cr'
  Jul  6 13:41:17.628: INFO: stderr: ""
  Jul  6 13:41:17.628: INFO: stdout: "e2e-test-crd-publish-openapi-2762-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 07/06/24 13:41:17.628
  Jul  6 13:41:17.628: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=crd-publish-openapi-3278 explain e2e-test-crd-publish-openapi-2762-crds'
  Jul  6 13:41:17.664: INFO: stderr: ""
  Jul  6 13:41:17.664: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-2762-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0706 13:41:18.523439      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:41:18.862: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3278" for this suite. @ 07/06/24 13:41:18.869
• [4.760 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:47
  STEP: Creating a kubernetes client @ 07/06/24 13:41:18.877
  Jul  6 13:41:18.877: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename var-expansion @ 07/06/24 13:41:18.877
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:41:18.891
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:41:18.894
  STEP: Creating a pod to test env composition @ 07/06/24 13:41:18.896
  E0706 13:41:19.523880      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:41:20.524059      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:41:21.524154      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:41:22.524934      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/06/24 13:41:22.919
  Jul  6 13:41:22.922: INFO: Trying to get logs from node ip-172-31-24-251 pod var-expansion-339a8cef-cf51-4a74-b72c-ace917f81107 container dapi-container: <nil>
  STEP: delete the pod @ 07/06/24 13:41:22.928
  Jul  6 13:41:22.942: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5317" for this suite. @ 07/06/24 13:41:22.945
• [4.076 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 07/06/24 13:41:22.953
  Jul  6 13:41:22.953: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename podtemplate @ 07/06/24 13:41:22.953
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:41:22.965
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:41:22.969
  Jul  6 13:41:22.995: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-927" for this suite. @ 07/06/24 13:41:22.998
• [0.051 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:170
  STEP: Creating a kubernetes client @ 07/06/24 13:41:23.004
  Jul  6 13:41:23.004: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename configmap @ 07/06/24 13:41:23.004
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:41:23.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:41:23.02
  STEP: creating a ConfigMap @ 07/06/24 13:41:23.022
  STEP: fetching the ConfigMap @ 07/06/24 13:41:23.028
  STEP: patching the ConfigMap @ 07/06/24 13:41:23.03
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 07/06/24 13:41:23.034
  STEP: deleting the ConfigMap by collection with a label selector @ 07/06/24 13:41:23.038
  STEP: listing all ConfigMaps in test namespace @ 07/06/24 13:41:23.045
  Jul  6 13:41:23.047: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9261" for this suite. @ 07/06/24 13:41:23.049
• [0.052 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 07/06/24 13:41:23.056
  Jul  6 13:41:23.056: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename watch @ 07/06/24 13:41:23.057
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:41:23.068
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:41:23.071
  STEP: creating a watch on configmaps @ 07/06/24 13:41:23.073
  STEP: creating a new configmap @ 07/06/24 13:41:23.074
  STEP: modifying the configmap once @ 07/06/24 13:41:23.079
  STEP: closing the watch once it receives two notifications @ 07/06/24 13:41:23.086
  Jul  6 13:41:23.086: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-4300  af258fc6-938c-4371-b21d-2d620e6403ac 42667 0 2024-07-06 13:41:23 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-07-06 13:41:23 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jul  6 13:41:23.086: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-4300  af258fc6-938c-4371-b21d-2d620e6403ac 42668 0 2024-07-06 13:41:23 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-07-06 13:41:23 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 07/06/24 13:41:23.086
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 07/06/24 13:41:23.093
  STEP: deleting the configmap @ 07/06/24 13:41:23.094
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 07/06/24 13:41:23.099
  Jul  6 13:41:23.099: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-4300  af258fc6-938c-4371-b21d-2d620e6403ac 42669 0 2024-07-06 13:41:23 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-07-06 13:41:23 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jul  6 13:41:23.100: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-4300  af258fc6-938c-4371-b21d-2d620e6403ac 42670 0 2024-07-06 13:41:23 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-07-06 13:41:23 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jul  6 13:41:23.100: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-4300" for this suite. @ 07/06/24 13:41:23.104
• [0.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 07/06/24 13:41:23.114
  Jul  6 13:41:23.114: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename secrets @ 07/06/24 13:41:23.115
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:41:23.126
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:41:23.128
  Jul  6 13:41:23.166: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3865" for this suite. @ 07/06/24 13:41:23.169
• [0.060 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 07/06/24 13:41:23.175
  Jul  6 13:41:23.175: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename pods @ 07/06/24 13:41:23.175
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:41:23.187
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:41:23.19
  STEP: creating the pod @ 07/06/24 13:41:23.195
  STEP: submitting the pod to kubernetes @ 07/06/24 13:41:23.195
  STEP: verifying QOS class is set on the pod @ 07/06/24 13:41:23.202
  Jul  6 13:41:23.206: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5926" for this suite. @ 07/06/24 13:41:23.209
• [0.041 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 07/06/24 13:41:23.215
  Jul  6 13:41:23.215: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename container-probe @ 07/06/24 13:41:23.216
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:41:23.23
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:41:23.232
  STEP: Creating pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244 @ 07/06/24 13:41:23.235
  E0706 13:41:23.525235      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:41:24.525430      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/06/24 13:41:25.251
  Jul  6 13:41:25.254: INFO: Initial restart count of pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd is 0
  Jul  6 13:41:25.257: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:41:25.525552      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:41:26.525640      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:41:27.262: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:41:27.526685      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:41:28.526790      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:41:29.266: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:41:29.527837      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:41:30.527995      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:41:31.270: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:41:31.528069      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:41:32.528147      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:41:33.274: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:41:33.528579      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:41:34.528791      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:41:35.280: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:41:35.529423      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:41:36.529507      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:41:37.284: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:41:37.530124      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:41:38.530321      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:41:39.288: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:41:39.530356      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:41:40.530854      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:41:41.294: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:41:41.531124      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:41:42.532197      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:41:43.299: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:41:43.533092      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:41:44.533768      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:41:45.303: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:41:45.534776      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:41:46.534872      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:41:47.307: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:41:47.535428      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:41:48.535595      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:41:49.312: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:41:49.536199      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:41:50.536497      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:41:51.316: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:41:51.537203      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:41:52.537501      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:41:53.320: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:41:53.537969      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:41:54.538154      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:41:55.326: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:41:55.538254      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:41:56.538530      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:41:57.329: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:41:57.539183      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:41:58.539309      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:41:59.333: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:41:59.540061      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:42:00.540336      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:42:01.338: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:42:01.541090      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:42:02.541200      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:42:03.344: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:42:03.542166      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:42:04.543127      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:42:05.349: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:42:05.543381      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:42:06.543476      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:42:07.352: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:42:07.543952      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:42:08.544140      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:42:09.358: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:42:09.544551      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:42:10.544784      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:42:11.362: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:42:11.545498      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:42:12.545759      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:42:13.370: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:42:13.546718      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:42:14.547599      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:42:15.374: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:42:15.548317      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:42:16.548633      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:42:17.379: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:42:17.549618      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:42:18.549691      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:42:19.383: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:42:19.549785      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:42:20.550056      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:42:21.387: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:42:21.550529      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:42:22.550602      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:42:23.399: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:42:23.551634      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:42:24.551962      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:42:25.403: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:42:25.552494      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:42:26.552552      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:42:27.407: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:42:27.553171      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:42:28.553263      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:42:29.411: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:42:29.554020      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:42:30.554126      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:42:31.415: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:42:31.554992      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:42:32.555617      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:42:33.421: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:42:33.556505      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:42:34.556714      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:42:35.425: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:42:35.557169      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:42:36.557259      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:42:37.430: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:42:37.557532      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:42:38.557781      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:42:39.435: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:42:39.558390      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:42:40.558559      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:42:41.438: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:42:41.559122      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:42:42.559219      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:42:43.442: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:42:43.559750      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:42:44.559857      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:42:45.445: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:42:45.560489      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:42:46.560633      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:42:47.450: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:42:47.560926      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:42:48.561138      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:42:49.455: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:42:49.561389      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:42:50.561549      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:42:51.458: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:42:51.561929      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:42:52.562992      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:42:53.464: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:42:53.563215      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:42:54.563616      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:42:55.469: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:42:55.564366      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:42:56.564973      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:42:57.472: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:42:57.565584      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:42:58.565783      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:42:59.479: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:42:59.566228      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:43:00.566354      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:43:01.483: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:43:01.567252      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:43:02.567725      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:43:03.487: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:43:03.568042      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:43:04.568192      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:43:05.491: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:43:05.568684      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:43:06.569047      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:43:07.495: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:43:07.569787      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:43:08.569907      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:43:09.500: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:43:09.570826      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:43:10.570921      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:43:11.504: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:43:11.571781      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:43:12.571894      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:43:13.509: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:43:13.572902      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:43:14.573006      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:43:15.513: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:43:15.573744      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:43:16.573846      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:43:17.517: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:43:17.574237      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:43:18.574345      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:43:19.524: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:43:19.574547      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:43:20.574559      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:43:21.529: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:43:21.575471      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:43:22.575651      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:43:23.534: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:43:23.576129      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:43:24.576284      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:43:25.539: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:43:25.576325      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:43:26.576629      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:43:27.543: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:43:27.576883      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:43:28.576987      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:43:29.548: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:43:29.577723      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:43:30.578449      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:43:31.552: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:43:31.578782      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:43:32.578896      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:43:33.556: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:43:33.579533      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:43:34.579646      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:43:35.561: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:43:35.580166      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:43:36.580472      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:43:37.566: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:43:37.581327      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:43:38.581525      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:43:39.570: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:43:39.581576      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:43:40.582104      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:43:41.575: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:43:41.582718      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:43:42.582841      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:43:43.580: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:43:43.583763      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:43:44.584020      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:43:45.584095      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:43:45.584: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:43:46.584641      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:43:47.584831      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:43:47.588: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:43:48.585359      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:43:49.585550      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:43:49.593: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:43:50.585775      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:43:51.586051      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:43:51.598: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:43:52.586150      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:43:53.586187      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:43:53.602: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:43:54.586242      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:43:55.586570      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:43:55.607: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:43:56.587526      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:43:57.587704      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:43:57.611: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:43:58.588326      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:43:59.588447      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:43:59.614: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:44:00.588722      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:44:01.589073      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:44:01.620: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:44:02.590009      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:44:03.590114      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:44:03.623: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:44:04.590559      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:44:05.590660      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:44:05.628: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:44:06.590897      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:44:07.591182      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:44:07.633: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:44:08.591642      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:44:09.591886      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:44:09.637: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:44:10.592335      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:44:11.592431      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:44:11.643: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:44:12.592518      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:44:13.593253      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:44:13.647: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:44:14.593346      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:44:15.594313      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:44:15.652: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:44:16.595061      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:44:17.595615      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:44:17.656: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:44:18.596273      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:44:19.596425      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:44:19.661: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:44:20.596500      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:44:21.596852      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:44:21.665: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:44:22.597462      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:44:23.597738      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:44:23.670: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:44:24.598554      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:44:25.598659      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:44:25.674: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:44:26.599151      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:44:27.599416      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:44:27.679: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:44:28.600108      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:44:29.601082      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:44:29.684: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:44:30.602034      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:44:31.602118      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:44:31.689: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:44:32.602277      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:44:33.602356      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:44:33.693: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:44:34.603334      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:44:35.603487      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:44:35.698: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:44:36.603713      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:44:37.603884      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:44:37.702: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:44:38.604550      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:44:39.605373      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:44:39.706: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:44:40.606277      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:44:41.606368      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:44:41.712: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:44:42.606556      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:44:43.606647      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:44:43.716: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:44:44.607617      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:44:45.607998      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:44:45.721: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:44:46.608995      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:44:47.609165      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:44:47.726: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:44:48.610136      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:44:49.610346      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:44:49.730: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:44:50.611224      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:44:51.611679      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:44:51.734: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:44:52.612043      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:44:53.612139      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:44:53.738: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:44:54.612263      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:44:55.613304      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:44:55.743: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:44:56.613865      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:44:57.614055      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:44:57.748: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:44:58.614091      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:44:59.614204      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:44:59.751: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:45:00.614284      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:45:01.614366      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:45:01.757: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:45:02.614553      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:45:03.614633      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:45:03.762: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:45:04.614934      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:45:05.615420      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:45:05.767: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:45:06.615491      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:45:07.615678      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:45:07.771: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:45:08.616697      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:45:09.616834      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:45:09.775: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:45:10.617305      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:45:11.617416      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:45:11.780: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:45:12.617514      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:45:13.617583      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:45:13.784: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:45:14.618114      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:45:15.619066      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:45:15.787: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:45:16.619649      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:45:17.619727      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:45:17.791: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:45:18.620048      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:45:19.620586      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:45:19.797: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:45:20.621343      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:45:21.621415      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:45:21.801: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:45:22.621604      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:45:23.621824      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:45:23.806: INFO: Get pod test-grpc-8542ba1f-3be0-4356-bb6b-4e211ce298cd in namespace container-probe-6244
  E0706 13:45:24.622521      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:45:25.623039      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 07/06/24 13:45:25.807
  Jul  6 13:45:25.822: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6244" for this suite. @ 07/06/24 13:45:25.826
• [242.619 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 07/06/24 13:45:25.835
  Jul  6 13:45:25.835: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename webhook @ 07/06/24 13:45:25.835
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:45:25.849
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:45:25.852
  STEP: Setting up server cert @ 07/06/24 13:45:25.872
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/06/24 13:45:26.106
  STEP: Deploying the webhook pod @ 07/06/24 13:45:26.114
  STEP: Wait for the deployment to be ready @ 07/06/24 13:45:26.124
  Jul  6 13:45:26.132: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0706 13:45:26.623156      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:45:27.623624      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/06/24 13:45:28.143
  STEP: Verifying the service has paired with the endpoint @ 07/06/24 13:45:28.152
  E0706 13:45:28.624584      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:45:29.152: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 07/06/24 13:45:29.16
  STEP: create a configmap that should be updated by the webhook @ 07/06/24 13:45:29.173
  Jul  6 13:45:29.223: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7365" for this suite. @ 07/06/24 13:45:29.227
  STEP: Destroying namespace "webhook-markers-3235" for this suite. @ 07/06/24 13:45:29.234
• [3.405 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:103
  STEP: Creating a kubernetes client @ 07/06/24 13:45:29.24
  Jul  6 13:45:29.240: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename resourcequota @ 07/06/24 13:45:29.24
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:45:29.252
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:45:29.255
  STEP: Counting existing ResourceQuota @ 07/06/24 13:45:29.257
  E0706 13:45:29.625393      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:45:30.625988      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:45:31.626630      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:45:32.627328      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:45:33.627360      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 07/06/24 13:45:34.261
  STEP: Ensuring resource quota status is calculated @ 07/06/24 13:45:34.267
  E0706 13:45:34.627567      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:45:35.627963      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Service @ 07/06/24 13:45:36.27
  STEP: Creating a NodePort Service @ 07/06/24 13:45:36.286
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 07/06/24 13:45:36.307
  STEP: Ensuring resource quota status captures service creation @ 07/06/24 13:45:36.326
  E0706 13:45:36.628895      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:45:37.629055      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting Services @ 07/06/24 13:45:38.329
  STEP: Ensuring resource quota status released usage @ 07/06/24 13:45:38.364
  E0706 13:45:38.629295      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:45:39.629283      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:45:40.369: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8565" for this suite. @ 07/06/24 13:45:40.372
• [11.139 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 07/06/24 13:45:40.379
  Jul  6 13:45:40.379: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename replicaset @ 07/06/24 13:45:40.379
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:45:40.392
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:45:40.395
  STEP: Create a Replicaset @ 07/06/24 13:45:40.401
  STEP: Verify that the required pods have come up. @ 07/06/24 13:45:40.407
  Jul  6 13:45:40.410: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0706 13:45:40.629518      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:45:41.629744      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:45:42.629847      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:45:43.629932      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:45:44.630030      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:45:45.414: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/06/24 13:45:45.414
  STEP: Getting /status @ 07/06/24 13:45:45.414
  Jul  6 13:45:45.418: INFO: Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 07/06/24 13:45:45.418
  Jul  6 13:45:45.427: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 07/06/24 13:45:45.427
  Jul  6 13:45:45.429: INFO: Observed &ReplicaSet event: ADDED
  Jul  6 13:45:45.429: INFO: Observed &ReplicaSet event: MODIFIED
  Jul  6 13:45:45.429: INFO: Observed &ReplicaSet event: MODIFIED
  Jul  6 13:45:45.429: INFO: Observed &ReplicaSet event: MODIFIED
  Jul  6 13:45:45.429: INFO: Found replicaset test-rs in namespace replicaset-2358 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Jul  6 13:45:45.429: INFO: Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 07/06/24 13:45:45.429
  Jul  6 13:45:45.429: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Jul  6 13:45:45.435: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 07/06/24 13:45:45.435
  Jul  6 13:45:45.437: INFO: Observed &ReplicaSet event: ADDED
  Jul  6 13:45:45.437: INFO: Observed &ReplicaSet event: MODIFIED
  Jul  6 13:45:45.437: INFO: Observed &ReplicaSet event: MODIFIED
  Jul  6 13:45:45.437: INFO: Observed &ReplicaSet event: MODIFIED
  Jul  6 13:45:45.437: INFO: Observed replicaset test-rs in namespace replicaset-2358 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jul  6 13:45:45.437: INFO: Observed &ReplicaSet event: MODIFIED
  Jul  6 13:45:45.437: INFO: Found replicaset test-rs in namespace replicaset-2358 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  Jul  6 13:45:45.437: INFO: Replicaset test-rs has a patched status
  Jul  6 13:45:45.437: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2358" for this suite. @ 07/06/24 13:45:45.44
• [5.068 seconds]
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:177
  STEP: Creating a kubernetes client @ 07/06/24 13:45:45.447
  Jul  6 13:45:45.447: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename crd-webhook @ 07/06/24 13:45:45.447
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:45:45.459
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:45:45.463
  STEP: Setting up server cert @ 07/06/24 13:45:45.465
  E0706 13:45:45.630759      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 07/06/24 13:45:45.821
  STEP: Deploying the custom resource conversion webhook pod @ 07/06/24 13:45:45.825
  STEP: Wait for the deployment to be ready @ 07/06/24 13:45:45.838
  Jul  6 13:45:45.854: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0706 13:45:46.631261      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:45:47.631343      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/06/24 13:45:47.864
  STEP: Verifying the service has paired with the endpoint @ 07/06/24 13:45:47.876
  E0706 13:45:48.632243      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:45:48.876: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Jul  6 13:45:48.885: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  E0706 13:45:49.632795      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:45:50.633015      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 07/06/24 13:45:51.433
  STEP: Create a v2 custom resource @ 07/06/24 13:45:51.448
  STEP: List CRs in v1 @ 07/06/24 13:45:51.473
  STEP: List CRs in v2 @ 07/06/24 13:45:51.476
  E0706 13:45:51.633791      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:45:52.030: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-6065" for this suite. @ 07/06/24 13:45:52.033
• [6.595 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 07/06/24 13:45:52.042
  Jul  6 13:45:52.042: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename gc @ 07/06/24 13:45:52.043
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:45:52.057
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:45:52.059
  STEP: create the deployment @ 07/06/24 13:45:52.062
  W0706 13:45:52.067765      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 07/06/24 13:45:52.067
  STEP: delete the deployment @ 07/06/24 13:45:52.574
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 07/06/24 13:45:52.581
  E0706 13:45:52.634215      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 07/06/24 13:45:53.095
  W0706 13:45:53.100875      21 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Jul  6 13:45:53.100: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jul  6 13:45:53.101: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-629" for this suite. @ 07/06/24 13:45:53.103
• [1.067 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 07/06/24 13:45:53.11
  Jul  6 13:45:53.110: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename replication-controller @ 07/06/24 13:45:53.111
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:45:53.124
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:45:53.127
  STEP: Given a ReplicationController is created @ 07/06/24 13:45:53.129
  STEP: When the matched label of one of its pods change @ 07/06/24 13:45:53.134
  Jul  6 13:45:53.137: INFO: Pod name pod-release: Found 0 pods out of 1
  E0706 13:45:53.634893      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:45:54.634988      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:45:55.635242      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:45:56.635346      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:45:57.635408      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:45:58.141: INFO: Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 07/06/24 13:45:58.153
  E0706 13:45:58.635597      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:45:59.171: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-4704" for this suite. @ 07/06/24 13:45:59.175
• [6.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 07/06/24 13:45:59.184
  Jul  6 13:45:59.184: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename apf @ 07/06/24 13:45:59.184
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:45:59.247
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:45:59.249
  STEP: getting /apis @ 07/06/24 13:45:59.251
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 07/06/24 13:45:59.254
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 07/06/24 13:45:59.255
  STEP: creating @ 07/06/24 13:45:59.256
  STEP: getting @ 07/06/24 13:45:59.277
  STEP: listing @ 07/06/24 13:45:59.283
  STEP: watching @ 07/06/24 13:45:59.286
  Jul  6 13:45:59.286: INFO: starting watch
  STEP: patching @ 07/06/24 13:45:59.287
  STEP: updating @ 07/06/24 13:45:59.291
  Jul  6 13:45:59.299: INFO: waiting for watch events with expected annotations
  STEP: getting /status @ 07/06/24 13:45:59.299
  STEP: patching /status @ 07/06/24 13:45:59.301
  STEP: updating /status @ 07/06/24 13:45:59.307
  STEP: deleting @ 07/06/24 13:45:59.318
  STEP: deleting a collection @ 07/06/24 13:45:59.328
  Jul  6 13:45:59.349: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-5480" for this suite. @ 07/06/24 13:45:59.351
• [0.175 seconds]
------------------------------
S
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:47
  STEP: Creating a kubernetes client @ 07/06/24 13:45:59.359
  Jul  6 13:45:59.359: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename secrets @ 07/06/24 13:45:59.36
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:45:59.371
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:45:59.373
  STEP: Creating secret with name secret-test-049acb72-ef76-4d91-ac67-ba537c657aa2 @ 07/06/24 13:45:59.376
  STEP: Creating a pod to test consume secrets @ 07/06/24 13:45:59.38
  E0706 13:45:59.635630      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:46:00.636712      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:46:01.637404      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:46:02.637641      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/06/24 13:46:03.401
  Jul  6 13:46:03.405: INFO: Trying to get logs from node ip-172-31-24-251 pod pod-secrets-fd46a2a7-52dd-45bc-bd3a-2e3bcae70f4e container secret-env-test: <nil>
  STEP: delete the pod @ 07/06/24 13:46:03.42
  Jul  6 13:46:03.437: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9156" for this suite. @ 07/06/24 13:46:03.44
• [4.088 seconds]
------------------------------
SSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 07/06/24 13:46:03.447
  Jul  6 13:46:03.447: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename podtemplate @ 07/06/24 13:46:03.448
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:46:03.461
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:46:03.463
  STEP: Create set of pod templates @ 07/06/24 13:46:03.466
  Jul  6 13:46:03.471: INFO: created test-podtemplate-1
  Jul  6 13:46:03.475: INFO: created test-podtemplate-2
  Jul  6 13:46:03.478: INFO: created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 07/06/24 13:46:03.478
  STEP: delete collection of pod templates @ 07/06/24 13:46:03.481
  Jul  6 13:46:03.481: INFO: requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 07/06/24 13:46:03.497
  Jul  6 13:46:03.497: INFO: requesting list of pod templates to confirm quantity
  Jul  6 13:46:03.499: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-6581" for this suite. @ 07/06/24 13:46:03.502
• [0.061 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 07/06/24 13:46:03.508
  Jul  6 13:46:03.508: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename runtimeclass @ 07/06/24 13:46:03.508
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:46:03.521
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:46:03.524
  STEP: Deleting RuntimeClass runtimeclass-2033-delete-me @ 07/06/24 13:46:03.534
  STEP: Waiting for the RuntimeClass to disappear @ 07/06/24 13:46:03.54
  Jul  6 13:46:03.549: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-2033" for this suite. @ 07/06/24 13:46:03.554
• [0.054 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 07/06/24 13:46:03.562
  Jul  6 13:46:03.562: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename emptydir @ 07/06/24 13:46:03.563
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:46:03.578
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:46:03.581
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 07/06/24 13:46:03.585
  E0706 13:46:03.638374      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:46:04.638551      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:46:05.639601      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:46:06.640519      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/06/24 13:46:07.606
  Jul  6 13:46:07.609: INFO: Trying to get logs from node ip-172-31-24-251 pod pod-6e38374c-5a71-4676-a7e5-ae6a918dcc0b container test-container: <nil>
  STEP: delete the pod @ 07/06/24 13:46:07.615
  Jul  6 13:46:07.631: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5765" for this suite. @ 07/06/24 13:46:07.634
  E0706 13:46:07.640496      21 retrywatcher.go:129] "Watch failed" err="context canceled"
• [4.079 seconds]
------------------------------
SSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:109
  STEP: Creating a kubernetes client @ 07/06/24 13:46:07.641
  Jul  6 13:46:07.641: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename kubelet-test @ 07/06/24 13:46:07.642
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:46:07.657
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:46:07.659
  E0706 13:46:08.641380      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:46:09.641617      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:46:10.641830      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:46:11.642810      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:46:11.680: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4861" for this suite. @ 07/06/24 13:46:11.685
• [4.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 07/06/24 13:46:11.692
  Jul  6 13:46:11.692: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename field-validation @ 07/06/24 13:46:11.693
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:46:11.706
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:46:11.709
  Jul  6 13:46:11.711: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  E0706 13:46:12.643729      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:46:13.644009      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0706 13:46:14.246801      21 warnings.go:70] unknown field "alpha"
  W0706 13:46:14.246820      21 warnings.go:70] unknown field "beta"
  W0706 13:46:14.246823      21 warnings.go:70] unknown field "delta"
  W0706 13:46:14.246827      21 warnings.go:70] unknown field "epsilon"
  W0706 13:46:14.246829      21 warnings.go:70] unknown field "gamma"
  E0706 13:46:14.644767      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:46:14.783: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2408" for this suite. @ 07/06/24 13:46:14.786
• [3.101 seconds]
------------------------------
SSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 07/06/24 13:46:14.794
  Jul  6 13:46:14.794: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename dns @ 07/06/24 13:46:14.794
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:46:14.808
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:46:14.811
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 07/06/24 13:46:14.814
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 07/06/24 13:46:14.814
  STEP: creating a pod to probe DNS @ 07/06/24 13:46:14.814
  STEP: submitting the pod to kubernetes @ 07/06/24 13:46:14.814
  E0706 13:46:15.645251      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:46:16.645472      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/06/24 13:46:16.833
  STEP: looking for the results for each expected name from probers @ 07/06/24 13:46:16.836
  Jul  6 13:46:16.850: INFO: DNS probes using dns-7918/dns-test-3680a002-60a5-4e25-b07a-001641413a6b succeeded

  STEP: deleting the pod @ 07/06/24 13:46:16.85
  Jul  6 13:46:16.862: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7918" for this suite. @ 07/06/24 13:46:16.866
• [2.077 seconds]
------------------------------
SS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 07/06/24 13:46:16.87
  Jul  6 13:46:16.870: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename init-container @ 07/06/24 13:46:16.871
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:46:16.884
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:46:16.888
  STEP: creating the pod @ 07/06/24 13:46:16.89
  Jul  6 13:46:16.890: INFO: PodSpec: initContainers in spec.initContainers
  E0706 13:46:17.645652      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:46:18.645955      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:46:19.646543      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:46:20.646695      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:46:21.646805      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:46:22.647696      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:46:23.647907      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:46:24.648022      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:46:25.648565      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:46:26.648785      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:46:27.649122      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:46:28.649333      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:46:29.650089      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:46:30.650463      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:46:31.650576      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:46:32.651618      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:46:33.651753      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:46:34.652083      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:46:35.652222      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:46:36.652535      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:46:37.652634      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:46:38.653411      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:46:39.653593      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:46:40.653646      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:46:41.653812      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:46:42.654801      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:46:43.654910      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:46:44.655668      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:46:45.656019      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:46:46.656727      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:46:47.656827      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:46:48.656973      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:46:49.657779      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:46:50.658881      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:46:51.659618      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:46:52.659716      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:46:53.659936      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:46:54.660134      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:46:55.660456      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:46:56.660718      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:46:57.660784      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:46:58.660978      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:46:59.661128      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:47:00.661169      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:47:01.661303      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:47:02.662389      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:47:03.662538      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:47:03.998: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-439aedbe-d6c0-4565-88ca-498e105464a6", GenerateName:"", Namespace:"init-container-3969", SelfLink:"", UID:"a597da5d-fb0a-48e2-9e9d-69a82701788b", ResourceVersion:"44062", Generation:0, CreationTimestamp:time.Date(2024, time.July, 6, 13, 46, 16, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"890764026"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 13, 46, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e53950), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 6, 13, 47, 3, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e539b0), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-zhb5g", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc0014f56a0), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-zhb5g", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-zhb5g", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-zhb5g", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc005d1a2c8), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ip-172-31-24-251", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc000324460), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc005d1a350)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc005d1a370)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc005d1a378), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc005d1a37c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc0056b1ad0), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.July, 6, 13, 46, 17, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.July, 6, 13, 46, 16, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.July, 6, 13, 46, 16, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.July, 6, 13, 46, 16, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.July, 6, 13, 46, 16, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.31.24.251", HostIPs:[]v1.HostIP{v1.HostIP{IP:"172.31.24.251"}}, PodIP:"192.168.140.34", PodIPs:[]v1.PodIP{v1.PodIP{IP:"192.168.140.34"}}, StartTime:time.Date(2024, time.July, 6, 13, 46, 16, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0003245b0)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0003251f0)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://2dc223aa561387d6863d53984771b4ccfb98c1b09ac8b0d15da48cd93d166144", Started:(*bool)(0xc005d1a41f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0014f5720), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc005d1a425), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0014f5700), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc005d1a3f4), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  Jul  6 13:47:03.998: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-3969" for this suite. @ 07/06/24 13:47:04.003
• [47.139 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:611
  STEP: Creating a kubernetes client @ 07/06/24 13:47:04.01
  Jul  6 13:47:04.010: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename security-context-test @ 07/06/24 13:47:04.01
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:47:04.024
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:47:04.027
  E0706 13:47:04.663214      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:47:05.663657      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:47:06.664019      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:47:07.664069      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:47:08.059: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-3528" for this suite. @ 07/06/24 13:47:08.063
• [4.060 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1399
  STEP: Creating a kubernetes client @ 07/06/24 13:47:08.071
  Jul  6 13:47:08.071: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename kubectl @ 07/06/24 13:47:08.071
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:47:08.083
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:47:08.085
  Jul  6 13:47:08.088: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-9407 create -f -'
  Jul  6 13:47:08.169: INFO: stderr: ""
  Jul  6 13:47:08.169: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  Jul  6 13:47:08.169: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-9407 create -f -'
  Jul  6 13:47:08.250: INFO: stderr: ""
  Jul  6 13:47:08.250: INFO: stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 07/06/24 13:47:08.25
  E0706 13:47:08.664918      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:47:09.255: INFO: Selector matched 1 pods for map[app:agnhost]
  Jul  6 13:47:09.255: INFO: Found 1 / 1
  Jul  6 13:47:09.255: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Jul  6 13:47:09.258: INFO: Selector matched 1 pods for map[app:agnhost]
  Jul  6 13:47:09.258: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Jul  6 13:47:09.258: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-9407 describe pod agnhost-primary-xgj49'
  Jul  6 13:47:09.305: INFO: stderr: ""
  Jul  6 13:47:09.305: INFO: stdout: "Name:             agnhost-primary-xgj49\nNamespace:        kubectl-9407\nPriority:         0\nService Account:  default\nNode:             ip-172-31-9-199/172.31.9.199\nStart Time:       Sat, 06 Jul 2024 13:47:08 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               192.168.112.121\nIPs:\n  IP:           192.168.112.121\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://8444a6ea6082f5611eba5f95a9fb3f00c024f3d7930e32ab361a8b5ccc0e3847\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.47\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Sat, 06 Jul 2024 13:47:08 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-6hcck (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-6hcck:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-9407/agnhost-primary-xgj49 to ip-172-31-9-199\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.47\" already present on machine\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  Jul  6 13:47:09.305: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-9407 describe rc agnhost-primary'
  Jul  6 13:47:09.362: INFO: stderr: ""
  Jul  6 13:47:09.362: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-9407\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.47\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  1s    replication-controller  Created pod: agnhost-primary-xgj49\n"
  Jul  6 13:47:09.362: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-9407 describe service agnhost-primary'
  Jul  6 13:47:09.409: INFO: stderr: ""
  Jul  6 13:47:09.409: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-9407\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.152.183.18\nIPs:               10.152.183.18\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         192.168.112.121:6379\nSession Affinity:  None\nEvents:            <none>\n"
  Jul  6 13:47:09.413: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-9407 describe node ip-172-31-24-251'
  Jul  6 13:47:09.472: INFO: stderr: ""
  Jul  6 13:47:09.472: INFO: stdout: "Name:               ip-172-31-24-251\nRoles:              <none>\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    juju-application=kubernetes-worker\n                    juju-charm=kubernetes-worker\n                    juju.io/cloud=ec2\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ip-172-31-24-251\n                    kubernetes.io/os=linux\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Sat, 06 Jul 2024 12:10:20 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  ip-172-31-24-251\n  AcquireTime:     <unset>\n  RenewTime:       Sat, 06 Jul 2024 13:47:01 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Sat, 06 Jul 2024 12:11:01 +0000   Sat, 06 Jul 2024 12:11:01 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Sat, 06 Jul 2024 13:46:12 +0000   Sat, 06 Jul 2024 12:10:20 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Sat, 06 Jul 2024 13:46:12 +0000   Sat, 06 Jul 2024 12:10:20 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Sat, 06 Jul 2024 13:46:12 +0000   Sat, 06 Jul 2024 12:10:20 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Sat, 06 Jul 2024 13:46:12 +0000   Sat, 06 Jul 2024 12:10:53 +0000   KubeletReady                 kubelet is posting ready status. AppArmor enabled\nAddresses:\n  InternalIP:  172.31.24.251\n  Hostname:    ip-172-31-24-251\nCapacity:\n  cpu:                  2\n  ephemeral-storage:    16069568Ki\n  example.com/fakecpu:  1k\n  hugepages-1Gi:        0\n  hugepages-2Mi:        0\n  memory:               7958128Ki\n  pods:                 110\nAllocatable:\n  cpu:                  2\n  ephemeral-storage:    14809713845\n  example.com/fakecpu:  1k\n  hugepages-1Gi:        0\n  hugepages-2Mi:        0\n  memory:               7855728Ki\n  pods:                 110\nSystem Info:\n  Machine ID:                      ec223f2e6ca88f4f8cf95c4237967ff0\n  System UUID:                     ec223f2e-6ca8-8f4f-8cf9-5c4237967ff0\n  Boot ID:                         dc355e36-c296-4ede-b25e-19ee9bbc3796\n  Kernel Version:                  6.5.0-1022-aws\n  OS Image:                        Ubuntu 22.04.4 LTS\n  Operating System:                linux\n  Architecture:                    amd64\n  Container Runtime Version:       containerd://1.6.8\n  Kubelet Version:                 v1.29.6\n  Kube-Proxy Version:              v1.29.6\nNon-terminated Pods:               (5 in total)\n  Namespace                        Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                        ----                                                       ------------  ----------  ---------------  -------------  ---\n  ingress-nginx-kubernetes-worker  nginx-ingress-controller-kubernetes-worker-r6krr           0 (0%)        0 (0%)      0 (0%)           0 (0%)         9m44s\n  init-container-3969              pod-init-439aedbe-d6c0-4565-88ca-498e105464a6              100m (5%)     100m (5%)   0 (0%)           0 (0%)         53s\n  kube-system                      calico-node-xcgv8                                          250m (12%)    0 (0%)      0 (0%)           0 (0%)         96m\n  sonobuoy                         sonobuoy                                                   0 (0%)        0 (0%)      0 (0%)           0 (0%)         93m\n  sonobuoy                         sonobuoy-systemd-logs-daemon-set-ada2bb128210461e-nx2fj    0 (0%)        0 (0%)      0 (0%)           0 (0%)         93m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource             Requests    Limits\n  --------             --------    ------\n  cpu                  350m (17%)  100m (5%)\n  memory               0 (0%)      0 (0%)\n  ephemeral-storage    0 (0%)      0 (0%)\n  hugepages-1Gi        0 (0%)      0 (0%)\n  hugepages-2Mi        0 (0%)      0 (0%)\n  example.com/fakecpu  0           0\nEvents:                <none>\n"
  Jul  6 13:47:09.472: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-9407 describe namespace kubectl-9407'
  Jul  6 13:47:09.519: INFO: stderr: ""
  Jul  6 13:47:09.519: INFO: stdout: "Name:         kubectl-9407\nLabels:       e2e-framework=kubectl\n              e2e-run=51a40ce1-432d-4eda-8cf7-3e2d518ce5c2\n              kubernetes.io/metadata.name=kubectl-9407\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  Jul  6 13:47:09.519: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9407" for this suite. @ 07/06/24 13:47:09.522
• [1.457 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 07/06/24 13:47:09.528
  Jul  6 13:47:09.528: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename daemonsets @ 07/06/24 13:47:09.528
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:47:09.541
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:47:09.544
  Jul  6 13:47:09.564: INFO: Create a RollingUpdate DaemonSet
  Jul  6 13:47:09.570: INFO: Check that daemon pods launch on every node of the cluster
  Jul  6 13:47:09.572: INFO: DaemonSet pods can't tolerate node ip-172-31-76-18 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul  6 13:47:09.572: INFO: DaemonSet pods can't tolerate node ip-172-31-9-125 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul  6 13:47:09.575: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul  6 13:47:09.575: INFO: Node ip-172-31-24-251 is running 0 daemon pod, expected 1
  E0706 13:47:09.665760      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:47:10.575: INFO: DaemonSet pods can't tolerate node ip-172-31-76-18 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul  6 13:47:10.575: INFO: DaemonSet pods can't tolerate node ip-172-31-9-125 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul  6 13:47:10.577: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul  6 13:47:10.577: INFO: Node ip-172-31-24-251 is running 0 daemon pod, expected 1
  E0706 13:47:10.666273      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:47:11.573: INFO: DaemonSet pods can't tolerate node ip-172-31-76-18 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul  6 13:47:11.573: INFO: DaemonSet pods can't tolerate node ip-172-31-9-125 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul  6 13:47:11.577: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jul  6 13:47:11.577: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  Jul  6 13:47:11.577: INFO: Update the DaemonSet to trigger a rollout
  Jul  6 13:47:11.585: INFO: Updating DaemonSet daemon-set
  E0706 13:47:11.666322      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:47:12.596: INFO: Roll back the DaemonSet before rollout is complete
  Jul  6 13:47:12.605: INFO: Updating DaemonSet daemon-set
  Jul  6 13:47:12.605: INFO: Make sure DaemonSet rollback is complete
  Jul  6 13:47:12.612: INFO: Wrong image for pod: daemon-set-7jmwx. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  Jul  6 13:47:12.612: INFO: Pod daemon-set-7jmwx is not available
  Jul  6 13:47:12.619: INFO: DaemonSet pods can't tolerate node ip-172-31-76-18 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul  6 13:47:12.619: INFO: DaemonSet pods can't tolerate node ip-172-31-9-125 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0706 13:47:12.666394      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:47:13.613: INFO: DaemonSet pods can't tolerate node ip-172-31-76-18 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul  6 13:47:13.613: INFO: DaemonSet pods can't tolerate node ip-172-31-9-125 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0706 13:47:13.666424      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:47:14.609: INFO: Pod daemon-set-c72kc is not available
  Jul  6 13:47:14.612: INFO: DaemonSet pods can't tolerate node ip-172-31-76-18 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul  6 13:47:14.612: INFO: DaemonSet pods can't tolerate node ip-172-31-9-125 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Deleting DaemonSet "daemon-set" @ 07/06/24 13:47:14.623
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4768, will wait for the garbage collector to delete the pods @ 07/06/24 13:47:14.623
  E0706 13:47:14.667257      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:47:14.686: INFO: Deleting DaemonSet.extensions daemon-set took: 6.412597ms
  Jul  6 13:47:14.787: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.616754ms
  E0706 13:47:15.667739      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:47:16.092: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul  6 13:47:16.092: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jul  6 13:47:16.095: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"44326"},"items":null}

  Jul  6 13:47:16.097: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"44326"},"items":null}

  Jul  6 13:47:16.108: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4768" for this suite. @ 07/06/24 13:47:16.11
• [6.588 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 07/06/24 13:47:16.116
  Jul  6 13:47:16.116: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename projected @ 07/06/24 13:47:16.116
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:47:16.129
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:47:16.133
  STEP: Creating projection with secret that has name projected-secret-test-8828c8c3-70c0-4984-b87f-c994f16ce747 @ 07/06/24 13:47:16.136
  STEP: Creating a pod to test consume secrets @ 07/06/24 13:47:16.139
  E0706 13:47:16.668490      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:47:17.668599      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:47:18.668805      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:47:19.669017      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/06/24 13:47:20.161
  Jul  6 13:47:20.164: INFO: Trying to get logs from node ip-172-31-24-251 pod pod-projected-secrets-e8ebc4f6-cc9f-4a85-b04e-750591a9a179 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 07/06/24 13:47:20.17
  Jul  6 13:47:20.184: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3198" for this suite. @ 07/06/24 13:47:20.188
• [4.078 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 07/06/24 13:47:20.194
  Jul  6 13:47:20.194: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename field-validation @ 07/06/24 13:47:20.195
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:47:20.207
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:47:20.211
  Jul  6 13:47:20.214: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  E0706 13:47:20.669855      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:47:21.669921      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:47:22.670838      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:47:23.290: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8424" for this suite. @ 07/06/24 13:47:23.293
• [3.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 07/06/24 13:47:23.301
  Jul  6 13:47:23.301: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename emptydir @ 07/06/24 13:47:23.302
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:47:23.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:47:23.32
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 07/06/24 13:47:23.322
  E0706 13:47:23.670932      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:47:24.671031      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/06/24 13:47:25.339
  Jul  6 13:47:25.342: INFO: Trying to get logs from node ip-172-31-24-251 pod pod-80276a6b-174f-46b2-977b-8e70b1a1d26a container test-container: <nil>
  STEP: delete the pod @ 07/06/24 13:47:25.349
  Jul  6 13:47:25.364: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9500" for this suite. @ 07/06/24 13:47:25.367
• [2.073 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 07/06/24 13:47:25.374
  Jul  6 13:47:25.374: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename endpointslice @ 07/06/24 13:47:25.375
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:47:25.388
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:47:25.391
  E0706 13:47:25.671257      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:47:26.671375      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:47:27.672036      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:47:28.673027      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:47:29.673129      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 07/06/24 13:47:30.472
  E0706 13:47:30.673209      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:47:31.673290      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:47:32.673384      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:47:33.673613      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:47:34.673813      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing matching pods with named port @ 07/06/24 13:47:35.481
  E0706 13:47:35.674637      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:47:36.674671      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:47:37.674753      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:47:38.674852      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:47:39.674976      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 07/06/24 13:47:40.488
  E0706 13:47:40.675599      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:47:41.675794      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:47:42.675987      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:47:43.676293      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:47:44.676464      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: recreating EndpointSlices after they've been deleted @ 07/06/24 13:47:45.495
  Jul  6 13:47:45.513: INFO: EndpointSlice for Service endpointslice-2064/example-named-port not found
  E0706 13:47:45.677394      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:47:46.677444      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:47:47.677531      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:47:48.677642      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:47:49.677891      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:47:50.678960      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:47:51.679057      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:47:52.679153      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:47:53.679628      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:47:54.679836      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:47:55.519: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-2064" for this suite. @ 07/06/24 13:47:55.522
• [30.154 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 07/06/24 13:47:55.529
  Jul  6 13:47:55.529: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename apf @ 07/06/24 13:47:55.53
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:47:55.544
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:47:55.547
  STEP: getting /apis @ 07/06/24 13:47:55.549
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 07/06/24 13:47:55.552
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 07/06/24 13:47:55.552
  STEP: creating @ 07/06/24 13:47:55.553
  STEP: getting @ 07/06/24 13:47:55.568
  STEP: listing @ 07/06/24 13:47:55.57
  STEP: watching @ 07/06/24 13:47:55.574
  Jul  6 13:47:55.574: INFO: starting watch
  STEP: patching @ 07/06/24 13:47:55.574
  STEP: updating @ 07/06/24 13:47:55.58
  Jul  6 13:47:55.587: INFO: waiting for watch events with expected annotations
  STEP: getting /status @ 07/06/24 13:47:55.587
  STEP: patching /status @ 07/06/24 13:47:55.59
  STEP: updating /status @ 07/06/24 13:47:55.593
  STEP: deleting @ 07/06/24 13:47:55.602
  STEP: deleting a collection @ 07/06/24 13:47:55.614
  Jul  6 13:47:55.633: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-4054" for this suite. @ 07/06/24 13:47:55.637
• [0.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 07/06/24 13:47:55.643
  Jul  6 13:47:55.643: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/06/24 13:47:55.644
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:47:55.656
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:47:55.658
  Jul  6 13:47:55.661: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  E0706 13:47:55.680820      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:47:56.205: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-4820" for this suite. @ 07/06/24 13:47:56.211
• [0.576 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 07/06/24 13:47:56.22
  Jul  6 13:47:56.220: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename runtimeclass @ 07/06/24 13:47:56.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:47:56.235
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:47:56.239
  Jul  6 13:47:56.268: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8543" for this suite. @ 07/06/24 13:47:56.274
• [0.060 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 07/06/24 13:47:56.281
  Jul  6 13:47:56.281: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename container-probe @ 07/06/24 13:47:56.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:47:56.293
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:47:56.295
  STEP: Creating pod busybox-e20e0c79-84a9-4b66-8c13-ec615f2eec22 in namespace container-probe-4170 @ 07/06/24 13:47:56.298
  E0706 13:47:56.680988      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:47:57.681222      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/06/24 13:47:58.312
  Jul  6 13:47:58.316: INFO: Initial restart count of pod busybox-e20e0c79-84a9-4b66-8c13-ec615f2eec22 is 0
  Jul  6 13:47:58.318: INFO: Get pod busybox-e20e0c79-84a9-4b66-8c13-ec615f2eec22 in namespace container-probe-4170
  E0706 13:47:58.682239      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:47:59.682313      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:48:00.322: INFO: Get pod busybox-e20e0c79-84a9-4b66-8c13-ec615f2eec22 in namespace container-probe-4170
  E0706 13:48:00.683214      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:48:01.683325      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:48:02.326: INFO: Get pod busybox-e20e0c79-84a9-4b66-8c13-ec615f2eec22 in namespace container-probe-4170
  E0706 13:48:02.683616      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:48:03.683813      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:48:04.330: INFO: Get pod busybox-e20e0c79-84a9-4b66-8c13-ec615f2eec22 in namespace container-probe-4170
  E0706 13:48:04.683847      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:48:05.684155      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:48:06.335: INFO: Get pod busybox-e20e0c79-84a9-4b66-8c13-ec615f2eec22 in namespace container-probe-4170
  E0706 13:48:06.685161      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:48:07.685430      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:48:08.340: INFO: Get pod busybox-e20e0c79-84a9-4b66-8c13-ec615f2eec22 in namespace container-probe-4170
  E0706 13:48:08.686063      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:48:09.686280      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:48:10.344: INFO: Get pod busybox-e20e0c79-84a9-4b66-8c13-ec615f2eec22 in namespace container-probe-4170
  E0706 13:48:10.687152      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:48:11.687252      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:48:12.348: INFO: Get pod busybox-e20e0c79-84a9-4b66-8c13-ec615f2eec22 in namespace container-probe-4170
  E0706 13:48:12.687393      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:48:13.687478      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:48:14.352: INFO: Get pod busybox-e20e0c79-84a9-4b66-8c13-ec615f2eec22 in namespace container-probe-4170
  E0706 13:48:14.687715      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:48:15.688177      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:48:16.355: INFO: Get pod busybox-e20e0c79-84a9-4b66-8c13-ec615f2eec22 in namespace container-probe-4170
  E0706 13:48:16.689258      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:48:17.689356      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:48:18.359: INFO: Get pod busybox-e20e0c79-84a9-4b66-8c13-ec615f2eec22 in namespace container-probe-4170
  E0706 13:48:18.689449      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:48:19.689881      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:48:20.362: INFO: Get pod busybox-e20e0c79-84a9-4b66-8c13-ec615f2eec22 in namespace container-probe-4170
  E0706 13:48:20.690470      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:48:21.690563      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:48:22.367: INFO: Get pod busybox-e20e0c79-84a9-4b66-8c13-ec615f2eec22 in namespace container-probe-4170
  E0706 13:48:22.691239      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:48:23.691327      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:48:24.371: INFO: Get pod busybox-e20e0c79-84a9-4b66-8c13-ec615f2eec22 in namespace container-probe-4170
  E0706 13:48:24.691995      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:48:25.692224      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:48:26.375: INFO: Get pod busybox-e20e0c79-84a9-4b66-8c13-ec615f2eec22 in namespace container-probe-4170
  E0706 13:48:26.692694      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:48:27.692781      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:48:28.378: INFO: Get pod busybox-e20e0c79-84a9-4b66-8c13-ec615f2eec22 in namespace container-probe-4170
  E0706 13:48:28.693771      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:48:29.693830      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:48:30.383: INFO: Get pod busybox-e20e0c79-84a9-4b66-8c13-ec615f2eec22 in namespace container-probe-4170
  E0706 13:48:30.694758      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:48:31.694860      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:48:32.386: INFO: Get pod busybox-e20e0c79-84a9-4b66-8c13-ec615f2eec22 in namespace container-probe-4170
  E0706 13:48:32.694962      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:48:33.695055      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:48:34.390: INFO: Get pod busybox-e20e0c79-84a9-4b66-8c13-ec615f2eec22 in namespace container-probe-4170
  E0706 13:48:34.695712      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:48:35.695967      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:48:36.395: INFO: Get pod busybox-e20e0c79-84a9-4b66-8c13-ec615f2eec22 in namespace container-probe-4170
  E0706 13:48:36.696596      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:48:37.696779      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:48:38.400: INFO: Get pod busybox-e20e0c79-84a9-4b66-8c13-ec615f2eec22 in namespace container-probe-4170
  E0706 13:48:38.697528      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:48:39.697627      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:48:40.403: INFO: Get pod busybox-e20e0c79-84a9-4b66-8c13-ec615f2eec22 in namespace container-probe-4170
  E0706 13:48:40.698094      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:48:41.698180      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:48:42.407: INFO: Get pod busybox-e20e0c79-84a9-4b66-8c13-ec615f2eec22 in namespace container-probe-4170
  E0706 13:48:42.698279      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:48:43.698444      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:48:44.411: INFO: Get pod busybox-e20e0c79-84a9-4b66-8c13-ec615f2eec22 in namespace container-probe-4170
  E0706 13:48:44.699205      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:48:45.699442      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:48:46.415: INFO: Get pod busybox-e20e0c79-84a9-4b66-8c13-ec615f2eec22 in namespace container-probe-4170
  E0706 13:48:46.699593      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:48:47.699697      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:48:48.419: INFO: Get pod busybox-e20e0c79-84a9-4b66-8c13-ec615f2eec22 in namespace container-probe-4170
  Jul  6 13:48:48.419: INFO: Restart count of pod container-probe-4170/busybox-e20e0c79-84a9-4b66-8c13-ec615f2eec22 is now 1 (50.103385802s elapsed)
  STEP: deleting the pod @ 07/06/24 13:48:48.419
  Jul  6 13:48:48.433: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4170" for this suite. @ 07/06/24 13:48:48.437
• [52.161 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 07/06/24 13:48:48.443
  Jul  6 13:48:48.443: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 07/06/24 13:48:48.443
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:48:48.455
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:48:48.459
  STEP: creating a target pod @ 07/06/24 13:48:48.461
  E0706 13:48:48.700166      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:48:49.700277      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 07/06/24 13:48:50.48
  E0706 13:48:50.701138      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:48:51.701215      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 07/06/24 13:48:52.497
  Jul  6 13:48:52.497: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-3482 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul  6 13:48:52.497: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  Jul  6 13:48:52.497: INFO: ExecWithOptions: Clientset creation
  Jul  6 13:48:52.497: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-3482/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Jul  6 13:48:52.551: INFO: Exec stderr: ""
  Jul  6 13:48:52.558: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-3482" for this suite. @ 07/06/24 13:48:52.561
• [4.126 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:397
  STEP: Creating a kubernetes client @ 07/06/24 13:48:52.569
  Jul  6 13:48:52.569: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename resourcequota @ 07/06/24 13:48:52.569
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:48:52.581
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:48:52.584
  STEP: Counting existing ResourceQuota @ 07/06/24 13:48:52.586
  E0706 13:48:52.701763      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:48:53.702464      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:48:54.702881      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:48:55.703541      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:48:56.704435      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 07/06/24 13:48:57.589
  STEP: Ensuring resource quota status is calculated @ 07/06/24 13:48:57.595
  E0706 13:48:57.705014      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:48:58.705947      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicationController @ 07/06/24 13:48:59.599
  STEP: Ensuring resource quota status captures replication controller creation @ 07/06/24 13:48:59.61
  E0706 13:48:59.706505      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:49:00.706739      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicationController @ 07/06/24 13:49:01.615
  STEP: Ensuring resource quota status released usage @ 07/06/24 13:49:01.623
  E0706 13:49:01.707736      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:49:02.707834      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:49:03.626: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3097" for this suite. @ 07/06/24 13:49:03.631
• [11.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1493
  STEP: Creating a kubernetes client @ 07/06/24 13:49:03.638
  Jul  6 13:49:03.638: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename services @ 07/06/24 13:49:03.638
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:49:03.652
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:49:03.657
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-1250 @ 07/06/24 13:49:03.659
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 07/06/24 13:49:03.668
  STEP: creating service externalsvc in namespace services-1250 @ 07/06/24 13:49:03.668
  STEP: creating replication controller externalsvc in namespace services-1250 @ 07/06/24 13:49:03.685
  I0706 13:49:03.694603      21 runners.go:197] Created replication controller with name: externalsvc, namespace: services-1250, replica count: 2
  E0706 13:49:03.708633      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:49:04.709265      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:49:05.710262      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:49:06.710390      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0706 13:49:06.745664      21 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 07/06/24 13:49:06.749
  Jul  6 13:49:06.766: INFO: Creating new exec pod
  E0706 13:49:07.710587      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:49:08.710613      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:49:08.781: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=services-1250 exec execpodvlfj5 -- /bin/sh -x -c nslookup clusterip-service.services-1250.svc.cluster.local'
  Jul  6 13:49:08.895: INFO: stderr: "+ nslookup clusterip-service.services-1250.svc.cluster.local\n"
  Jul  6 13:49:08.895: INFO: stdout: "Server:\t\t10.152.183.97\nAddress:\t10.152.183.97#53\n\nclusterip-service.services-1250.svc.cluster.local\tcanonical name = externalsvc.services-1250.svc.cluster.local.\nName:\texternalsvc.services-1250.svc.cluster.local\nAddress: 10.152.183.24\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-1250, will wait for the garbage collector to delete the pods @ 07/06/24 13:49:08.895
  Jul  6 13:49:08.957: INFO: Deleting ReplicationController externalsvc took: 8.466331ms
  Jul  6 13:49:09.058: INFO: Terminating ReplicationController externalsvc pods took: 101.106928ms
  E0706 13:49:09.710875      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:49:10.711202      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:49:11.574: INFO: Cleaning up the ClusterIP to ExternalName test service
  Jul  6 13:49:11.588: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1250" for this suite. @ 07/06/24 13:49:11.591
• [7.959 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 07/06/24 13:49:11.597
  Jul  6 13:49:11.597: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename projected @ 07/06/24 13:49:11.598
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:49:11.613
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:49:11.617
  STEP: Creating a pod to test downward API volume plugin @ 07/06/24 13:49:11.619
  E0706 13:49:11.711924      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:49:12.712107      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:49:13.712856      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:49:14.713735      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/06/24 13:49:15.639
  Jul  6 13:49:15.643: INFO: Trying to get logs from node ip-172-31-24-251 pod downwardapi-volume-c5b7f5a3-4511-439b-b7d5-32d97cca5a51 container client-container: <nil>
  STEP: delete the pod @ 07/06/24 13:49:15.648
  Jul  6 13:49:15.662: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7680" for this suite. @ 07/06/24 13:49:15.666
• [4.076 seconds]
------------------------------
SSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:962
  STEP: Creating a kubernetes client @ 07/06/24 13:49:15.673
  Jul  6 13:49:15.673: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename statefulset @ 07/06/24 13:49:15.673
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:49:15.687
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:49:15.689
  STEP: Creating service test in namespace statefulset-1107 @ 07/06/24 13:49:15.692
  Jul  6 13:49:15.709: INFO: Found 0 stateful pods, waiting for 1
  E0706 13:49:15.713908      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:49:16.714456      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:49:17.714603      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:49:18.714687      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:49:19.714789      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:49:20.715190      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:49:21.715258      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:49:22.715612      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:49:23.715788      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:49:24.715962      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:49:25.709: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 07/06/24 13:49:25.715
  E0706 13:49:25.716514      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0706 13:49:25.721818      21 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  Jul  6 13:49:25.730: INFO: Found 1 stateful pods, waiting for 2
  E0706 13:49:26.716687      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:49:27.716769      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:49:28.716867      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:49:29.716990      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:49:30.717315      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:49:31.717415      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:49:32.717517      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:49:33.717720      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:49:34.717934      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:49:35.718288      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:49:35.729: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Jul  6 13:49:35.729: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 07/06/24 13:49:35.734
  STEP: Delete all of the StatefulSets @ 07/06/24 13:49:35.738
  STEP: Verify that StatefulSets have been deleted @ 07/06/24 13:49:35.747
  Jul  6 13:49:35.749: INFO: Deleting all statefulset in ns statefulset-1107
  Jul  6 13:49:35.768: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1107" for this suite. @ 07/06/24 13:49:35.773
• [20.108 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 07/06/24 13:49:35.781
  Jul  6 13:49:35.781: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename container-runtime @ 07/06/24 13:49:35.782
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:49:35.805
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:49:35.808
  STEP: create the container @ 07/06/24 13:49:35.811
  W0706 13:49:35.819405      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 07/06/24 13:49:35.819
  E0706 13:49:36.718549      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:49:37.718641      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:49:38.719707      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 07/06/24 13:49:38.839
  STEP: the container should be terminated @ 07/06/24 13:49:38.842
  STEP: the termination message should be set @ 07/06/24 13:49:38.842
  Jul  6 13:49:38.842: INFO: Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 07/06/24 13:49:38.842
  Jul  6 13:49:38.857: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3244" for this suite. @ 07/06/24 13:49:38.861
• [3.086 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 07/06/24 13:49:38.868
  Jul  6 13:49:38.868: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename emptydir @ 07/06/24 13:49:38.868
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:49:38.879
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:49:38.881
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 07/06/24 13:49:38.884
  E0706 13:49:39.720650      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:49:40.720734      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:49:41.720831      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:49:42.720916      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/06/24 13:49:42.905
  Jul  6 13:49:42.908: INFO: Trying to get logs from node ip-172-31-24-251 pod pod-f2bb6b81-7a50-4675-8aa7-e60bb2be45a4 container test-container: <nil>
  STEP: delete the pod @ 07/06/24 13:49:42.915
  Jul  6 13:49:42.935: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2943" for this suite. @ 07/06/24 13:49:42.942
• [4.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 07/06/24 13:49:42.95
  Jul  6 13:49:42.950: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 07/06/24 13:49:42.951
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:49:42.968
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:49:42.971
  STEP: creating a target pod @ 07/06/24 13:49:42.979
  E0706 13:49:43.721222      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:49:44.721282      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:49:45.722363      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:49:46.722555      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 07/06/24 13:49:47.012
  E0706 13:49:47.723619      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:49:48.723811      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 07/06/24 13:49:49.026
  Jul  6 13:49:49.026: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-6738 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul  6 13:49:49.026: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  Jul  6 13:49:49.026: INFO: ExecWithOptions: Clientset creation
  Jul  6 13:49:49.026: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-6738/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Jul  6 13:49:49.068: INFO: Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 07/06/24 13:49:49.074
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 07/06/24 13:49:49.077
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 07/06/24 13:49:49.087
  Jul  6 13:49:49.090: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-6738" for this suite. @ 07/06/24 13:49:49.093
• [6.149 seconds]
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 07/06/24 13:49:49.099
  Jul  6 13:49:49.099: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename tables @ 07/06/24 13:49:49.1
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:49:49.114
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:49:49.117
  Jul  6 13:49:49.122: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-956" for this suite. @ 07/06/24 13:49:49.124
• [0.029 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:708
  STEP: Creating a kubernetes client @ 07/06/24 13:49:49.129
  Jul  6 13:49:49.129: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename sched-pred @ 07/06/24 13:49:49.13
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:49:49.146
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:49:49.148
  Jul  6 13:49:49.150: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Jul  6 13:49:49.157: INFO: Waiting for terminating namespaces to be deleted...
  Jul  6 13:49:49.159: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-24-251 before test
  Jul  6 13:49:49.164: INFO: ephemeral-containers-target-pod from ephemeral-containers-test-6738 started at 2024-07-06 13:49:42 +0000 UTC (1 container statuses recorded)
  Jul  6 13:49:49.164: INFO: 	Container test-container-1 ready: true, restart count 0
  Jul  6 13:49:49.164: INFO: nginx-ingress-controller-kubernetes-worker-r6krr from ingress-nginx-kubernetes-worker started at 2024-07-06 13:37:25 +0000 UTC (1 container statuses recorded)
  Jul  6 13:49:49.164: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jul  6 13:49:49.164: INFO: calico-node-xcgv8 from kube-system started at 2024-07-06 12:10:33 +0000 UTC (1 container statuses recorded)
  Jul  6 13:49:49.164: INFO: 	Container calico-node ready: true, restart count 0
  Jul  6 13:49:49.164: INFO: sonobuoy from sonobuoy started at 2024-07-06 12:13:22 +0000 UTC (1 container statuses recorded)
  Jul  6 13:49:49.164: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Jul  6 13:49:49.164: INFO: sonobuoy-systemd-logs-daemon-set-ada2bb128210461e-nx2fj from sonobuoy started at 2024-07-06 12:13:24 +0000 UTC (2 container statuses recorded)
  Jul  6 13:49:49.164: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jul  6 13:49:49.164: INFO: 	Container systemd-logs ready: true, restart count 0
  Jul  6 13:49:49.164: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-9-199 before test
  Jul  6 13:49:49.169: INFO: nginx-ingress-controller-kubernetes-worker-sjnwc from ingress-nginx-kubernetes-worker started at 2024-07-06 12:04:14 +0000 UTC (1 container statuses recorded)
  Jul  6 13:49:49.169: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jul  6 13:49:49.169: INFO: calico-node-pfjxw from kube-system started at 2024-07-06 12:10:23 +0000 UTC (1 container statuses recorded)
  Jul  6 13:49:49.169: INFO: 	Container calico-node ready: true, restart count 0
  Jul  6 13:49:49.169: INFO: sonobuoy-e2e-job-aef6c266b67a4bc4 from sonobuoy started at 2024-07-06 12:13:24 +0000 UTC (2 container statuses recorded)
  Jul  6 13:49:49.169: INFO: 	Container e2e ready: true, restart count 0
  Jul  6 13:49:49.169: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jul  6 13:49:49.169: INFO: sonobuoy-systemd-logs-daemon-set-ada2bb128210461e-prx26 from sonobuoy started at 2024-07-06 12:13:24 +0000 UTC (2 container statuses recorded)
  Jul  6 13:49:49.169: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jul  6 13:49:49.169: INFO: 	Container systemd-logs ready: true, restart count 0
  Jul  6 13:49:49.169: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-90-155 before test
  Jul  6 13:49:49.173: INFO: nginx-ingress-controller-kubernetes-worker-j7txc from ingress-nginx-kubernetes-worker started at 2024-07-06 11:58:40 +0000 UTC (1 container statuses recorded)
  Jul  6 13:49:49.173: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jul  6 13:49:49.173: INFO: calico-node-wqvcf from kube-system started at 2024-07-06 12:11:25 +0000 UTC (1 container statuses recorded)
  Jul  6 13:49:49.173: INFO: 	Container calico-node ready: true, restart count 0
  Jul  6 13:49:49.173: INFO: coredns-bddfd76d7-bnkt2 from kube-system started at 2024-07-06 11:58:40 +0000 UTC (1 container statuses recorded)
  Jul  6 13:49:49.173: INFO: 	Container coredns ready: true, restart count 0
  Jul  6 13:49:49.173: INFO: kube-state-metrics-6f48cdd76-49lrw from kube-system started at 2024-07-06 11:58:40 +0000 UTC (1 container statuses recorded)
  Jul  6 13:49:49.173: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Jul  6 13:49:49.173: INFO: metrics-server-v0.6.3-69d7fbfdf8-vsjkb from kube-system started at 2024-07-06 11:58:40 +0000 UTC (2 container statuses recorded)
  Jul  6 13:49:49.173: INFO: 	Container metrics-server ready: true, restart count 0
  Jul  6 13:49:49.173: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Jul  6 13:49:49.173: INFO: dashboard-metrics-scraper-5dd7cb5fc-9ss52 from kubernetes-dashboard started at 2024-07-06 11:58:40 +0000 UTC (1 container statuses recorded)
  Jul  6 13:49:49.173: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Jul  6 13:49:49.173: INFO: kubernetes-dashboard-7b899cb9d9-fl6gc from kubernetes-dashboard started at 2024-07-06 11:58:40 +0000 UTC (1 container statuses recorded)
  Jul  6 13:49:49.173: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Jul  6 13:49:49.173: INFO: sonobuoy-systemd-logs-daemon-set-ada2bb128210461e-p2g2w from sonobuoy started at 2024-07-06 12:13:24 +0000 UTC (2 container statuses recorded)
  Jul  6 13:49:49.173: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jul  6 13:49:49.173: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 07/06/24 13:49:49.173
  E0706 13:49:49.723932      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:49:50.724297      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 07/06/24 13:49:51.194
  STEP: Trying to apply a random label on the found node. @ 07/06/24 13:49:51.209
  STEP: verifying the node has the label kubernetes.io/e2e-2258a2eb-2062-461b-b774-4d3c3ebfdfb1 95 @ 07/06/24 13:49:51.216
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 07/06/24 13:49:51.22
  E0706 13:49:51.724859      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:49:52.725130      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.31.9.199 on the node which pod4 resides and expect not scheduled @ 07/06/24 13:49:53.239
  E0706 13:49:53.725769      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:49:54.726040      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:49:55.726903      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:49:56.727618      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:49:57.728509      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:49:58.728605      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:49:59.729194      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:50:00.729276      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:50:01.729339      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:50:02.729539      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:50:03.730295      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:50:04.730522      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:50:05.731365      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:50:06.732274      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:50:07.732837      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:50:08.732901      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:50:09.733101      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:50:10.733330      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:50:11.734034      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:50:12.734124      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:50:13.734232      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:50:14.735000      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:50:15.735862      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:50:16.735945      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:50:17.736731      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:50:18.737347      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:50:19.738127      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:50:20.738157      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:50:21.738306      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:50:22.738381      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:50:23.738559      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:50:24.739638      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:50:25.739739      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:50:26.740235      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:50:27.740882      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:50:28.740987      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:50:29.741579      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:50:30.741675      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:50:31.741769      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:50:32.742015      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:50:33.742610      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:50:34.742696      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:50:35.743621      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:50:36.743716      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:50:37.743923      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:50:38.744131      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:50:39.744205      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:50:40.744491      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:50:41.745230      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:50:42.745435      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:50:43.745656      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:50:44.745846      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:50:45.746688      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:50:46.746786      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:50:47.747329      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:50:48.747652      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:50:49.747751      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:50:50.748794      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:50:51.749040      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:50:52.749201      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:50:53.749331      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:50:54.749409      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:50:55.750132      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:50:56.750504      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:50:57.751315      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:50:58.751347      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:50:59.751373      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:51:00.752332      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:51:01.752892      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:51:02.752977      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:51:03.753725      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:51:04.753834      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:51:05.754312      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:51:06.754838      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:51:07.755737      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:51:08.755892      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:51:09.756640      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:51:10.756766      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:51:11.757383      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:51:12.757598      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:51:13.758114      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:51:14.758370      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:51:15.758756      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:51:16.758853      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:51:17.758934      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:51:18.759665      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:51:19.759832      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:51:20.760273      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:51:21.760814      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:51:22.761248      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:51:23.761622      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:51:24.761696      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:51:25.762321      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:51:26.762449      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:51:27.762526      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:51:28.763590      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:51:29.763741      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:51:30.764787      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:51:31.764852      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:51:32.765042      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:51:33.765797      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:51:34.765912      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:51:35.766301      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:51:36.766419      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:51:37.767317      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:51:38.767411      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:51:39.768124      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:51:40.768249      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:51:41.768398      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:51:42.768606      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:51:43.769162      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:51:44.769401      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:51:45.770163      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:51:46.770283      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:51:47.770808      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:51:48.771594      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:51:49.772663      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:51:50.772741      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:51:51.773132      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:51:52.773224      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:51:53.774138      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:51:54.774442      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:51:55.775446      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:51:56.775671      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:51:57.776161      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:51:58.776343      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:51:59.777031      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:52:00.777364      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:52:01.778186      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:52:02.778259      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:52:03.778700      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:52:04.778791      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:52:05.779147      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:52:06.779250      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:52:07.780174      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:52:08.780364      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:52:09.780959      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:52:10.781338      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:52:11.781940      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:52:12.782037      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:52:13.782244      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:52:14.782431      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:52:15.783445      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:52:16.783518      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:52:17.784163      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:52:18.784334      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:52:19.785082      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:52:20.785415      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:52:21.786084      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:52:22.786177      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:52:23.787005      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:52:24.787113      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:52:25.787180      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:52:26.787272      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:52:27.787865      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:52:28.788039      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:52:29.788635      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:52:30.788761      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:52:31.789277      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:52:32.789452      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:52:33.789868      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:52:34.790065      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:52:35.790757      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:52:36.790846      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:52:37.791598      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:52:38.791695      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:52:39.792566      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:52:40.792674      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:52:41.793420      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:52:42.793514      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:52:43.794214      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:52:44.794430      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:52:45.794537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:52:46.795602      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:52:47.796306      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:52:48.796430      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:52:49.797047      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:52:50.797379      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:52:51.798174      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:52:52.798360      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:52:53.798518      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:52:54.798618      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:52:55.798876      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:52:56.799583      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:52:57.800029      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:52:58.800220      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:52:59.800836      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:53:00.801437      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:53:01.802167      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:53:02.802255      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:53:03.803200      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:53:04.803325      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:53:05.804341      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:53:06.804461      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:53:07.805072      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:53:08.805317      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:53:09.805950      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:53:10.806654      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:53:11.807608      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:53:12.807976      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:53:13.807868      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:53:14.808099      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:53:15.808859      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:53:16.809571      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:53:17.810527      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:53:18.811605      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:53:19.812497      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:53:20.813307      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:53:21.814309      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:53:22.815154      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:53:23.815200      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:53:24.815735      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:53:25.816135      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:53:26.816342      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:53:27.816931      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:53:28.817416      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:53:29.818468      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:53:30.818859      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:53:31.819533      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:53:32.819816      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:53:33.820246      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:53:34.821316      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:53:35.821495      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:53:36.821957      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:53:37.822164      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:53:38.823211      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:53:39.823444      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:53:40.823665      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:53:41.823941      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:53:42.824033      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:53:43.824637      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:53:44.824742      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:53:45.824847      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:53:46.824961      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:53:47.825461      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:53:48.825568      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:53:49.825828      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:53:50.826284      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:53:51.827142      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:53:52.827258      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:53:53.827544      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:53:54.827660      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:53:55.827675      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:53:56.827845      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:53:57.828807      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:53:58.828992      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:53:59.829233      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:54:00.829333      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:54:01.829465      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:54:02.829615      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:54:03.830418      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:54:04.830537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:54:05.831182      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:54:06.831442      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:54:07.832168      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:54:08.833209      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:54:09.833892      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:54:10.834112      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:54:11.835115      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:54:12.835228      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:54:13.835935      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:54:14.836896      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:54:15.837130      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:54:16.837318      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:54:17.837592      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:54:18.837696      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:54:19.837826      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:54:20.838569      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:54:21.839598      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:54:22.840000      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:54:23.840163      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:54:24.840950      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:54:25.841416      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:54:26.842147      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:54:27.842273      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:54:28.842756      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:54:29.842848      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:54:30.843449      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:54:31.843534      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:54:32.843628      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:54:33.843718      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:54:34.843820      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:54:35.844440      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:54:36.844523      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:54:37.844730      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:54:38.845262      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:54:39.845560      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:54:40.846521      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:54:41.846567      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:54:42.846680      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:54:43.847668      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:54:44.847773      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:54:45.848232      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:54:46.848311      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:54:47.848480      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:54:48.848574      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:54:49.848668      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:54:50.849434      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:54:51.849741      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:54:52.849886      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-2258a2eb-2062-461b-b774-4d3c3ebfdfb1 off the node ip-172-31-9-199 @ 07/06/24 13:54:53.247
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-2258a2eb-2062-461b-b774-4d3c3ebfdfb1 @ 07/06/24 13:54:53.259
  Jul  6 13:54:53.268: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-1338" for this suite. @ 07/06/24 13:54:53.272
• [304.150 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 07/06/24 13:54:53.28
  Jul  6 13:54:53.280: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename ingressclass @ 07/06/24 13:54:53.28
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:54:53.303
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:54:53.305
  STEP: getting /apis @ 07/06/24 13:54:53.31
  STEP: getting /apis/networking.k8s.io @ 07/06/24 13:54:53.313
  STEP: getting /apis/networking.k8s.iov1 @ 07/06/24 13:54:53.316
  STEP: creating @ 07/06/24 13:54:53.318
  STEP: getting @ 07/06/24 13:54:53.336
  STEP: listing @ 07/06/24 13:54:53.34
  STEP: watching @ 07/06/24 13:54:53.343
  Jul  6 13:54:53.343: INFO: starting watch
  STEP: patching @ 07/06/24 13:54:53.344
  STEP: updating @ 07/06/24 13:54:53.35
  Jul  6 13:54:53.359: INFO: waiting for watch events with expected annotations
  Jul  6 13:54:53.359: INFO: saw patched and updated annotations
  STEP: deleting @ 07/06/24 13:54:53.359
  STEP: deleting a collection @ 07/06/24 13:54:53.381
  Jul  6 13:54:53.399: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-9985" for this suite. @ 07/06/24 13:54:53.405
• [0.138 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 07/06/24 13:54:53.418
  Jul  6 13:54:53.418: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename endpointslice @ 07/06/24 13:54:53.418
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:54:53.432
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:54:53.435
  Jul  6 13:54:53.446: INFO: Endpoints addresses: [172.31.76.18 172.31.9.125] , ports: [6443]
  Jul  6 13:54:53.446: INFO: EndpointSlices addresses: [172.31.76.18 172.31.9.125] , ports: [6443]
  Jul  6 13:54:53.446: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-9347" for this suite. @ 07/06/24 13:54:53.449
• [0.038 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 07/06/24 13:54:53.456
  Jul  6 13:54:53.456: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename replication-controller @ 07/06/24 13:54:53.457
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:54:53.469
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:54:53.472
  STEP: Creating ReplicationController "e2e-rc-z6q6j" @ 07/06/24 13:54:53.474
  Jul  6 13:54:53.480: INFO: Get Replication Controller "e2e-rc-z6q6j" to confirm replicas
  E0706 13:54:53.850396      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:54:54.481: INFO: Get Replication Controller "e2e-rc-z6q6j" to confirm replicas
  Jul  6 13:54:54.485: INFO: Found 1 replicas for "e2e-rc-z6q6j" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-z6q6j" @ 07/06/24 13:54:54.485
  STEP: Updating a scale subresource @ 07/06/24 13:54:54.488
  STEP: Verifying replicas where modified for replication controller "e2e-rc-z6q6j" @ 07/06/24 13:54:54.492
  Jul  6 13:54:54.492: INFO: Get Replication Controller "e2e-rc-z6q6j" to confirm replicas
  E0706 13:54:54.850614      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:54:55.492: INFO: Get Replication Controller "e2e-rc-z6q6j" to confirm replicas
  Jul  6 13:54:55.496: INFO: Found 2 replicas for "e2e-rc-z6q6j" replication controller
  Jul  6 13:54:55.496: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-6883" for this suite. @ 07/06/24 13:54:55.499
• [2.047 seconds]
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:627
  STEP: Creating a kubernetes client @ 07/06/24 13:54:55.504
  Jul  6 13:54:55.504: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename job @ 07/06/24 13:54:55.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:54:55.519
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:54:55.522
  STEP: Creating a job @ 07/06/24 13:54:55.524
  STEP: Ensuring active pods == parallelism @ 07/06/24 13:54:55.53
  E0706 13:54:55.850684      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:54:56.850769      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete a job @ 07/06/24 13:54:57.534
  STEP: deleting Job.batch foo in namespace job-5521, will wait for the garbage collector to delete the pods @ 07/06/24 13:54:57.534
  Jul  6 13:54:57.597: INFO: Deleting Job.batch foo took: 9.059728ms
  Jul  6 13:54:57.698: INFO: Terminating Job.batch foo pods took: 100.72197ms
  E0706 13:54:57.851794      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:54:58.852669      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring job was deleted @ 07/06/24 13:54:58.898
  Jul  6 13:54:58.903: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5521" for this suite. @ 07/06/24 13:54:58.905
• [3.407 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 07/06/24 13:54:58.912
  Jul  6 13:54:58.912: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename subpath @ 07/06/24 13:54:58.912
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:54:58.925
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:54:58.928
  STEP: Setting up data @ 07/06/24 13:54:58.931
  STEP: Creating pod pod-subpath-test-projected-jc7l @ 07/06/24 13:54:58.94
  STEP: Creating a pod to test atomic-volume-subpath @ 07/06/24 13:54:58.94
  E0706 13:54:59.852908      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:55:00.853459      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:55:01.853918      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:55:02.854130      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:55:03.854552      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:55:04.854628      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:55:05.855417      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:55:06.855519      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:55:07.855674      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:55:08.855709      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:55:09.856717      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:55:10.856807      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:55:11.857433      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:55:12.858245      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:55:13.858133      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:55:14.858328      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:55:15.858383      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:55:16.858524      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:55:17.859347      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:55:18.859440      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:55:19.860104      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:55:20.860203      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/06/24 13:55:21.001
  Jul  6 13:55:21.004: INFO: Trying to get logs from node ip-172-31-24-251 pod pod-subpath-test-projected-jc7l container test-container-subpath-projected-jc7l: <nil>
  STEP: delete the pod @ 07/06/24 13:55:21.021
  STEP: Deleting pod pod-subpath-test-projected-jc7l @ 07/06/24 13:55:21.039
  Jul  6 13:55:21.039: INFO: Deleting pod "pod-subpath-test-projected-jc7l" in namespace "subpath-5950"
  Jul  6 13:55:21.043: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-5950" for this suite. @ 07/06/24 13:55:21.046
• [22.140 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:309
  STEP: Creating a kubernetes client @ 07/06/24 13:55:21.052
  Jul  6 13:55:21.052: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/06/24 13:55:21.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:55:21.067
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:55:21.069
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 07/06/24 13:55:21.071
  Jul  6 13:55:21.071: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  E0706 13:55:21.860781      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:55:22.861005      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:55:23.861767      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:55:24.862552      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:55:25.863466      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 07/06/24 13:55:26.059
  Jul  6 13:55:26.060: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  E0706 13:55:26.863613      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:55:27.322: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  E0706 13:55:27.864128      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:55:28.865118      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:55:29.865592      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:55:30.866217      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:55:31.866359      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:55:32.196: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2564" for this suite. @ 07/06/24 13:55:32.201
• [11.154 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3129
  STEP: Creating a kubernetes client @ 07/06/24 13:55:32.207
  Jul  6 13:55:32.207: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename services @ 07/06/24 13:55:32.208
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:55:32.224
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:55:32.227
  STEP: fetching services @ 07/06/24 13:55:32.229
  Jul  6 13:55:32.231: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7471" for this suite. @ 07/06/24 13:55:32.235
• [0.033 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 07/06/24 13:55:32.24
  Jul  6 13:55:32.240: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename webhook @ 07/06/24 13:55:32.241
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:55:32.256
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:55:32.258
  STEP: Setting up server cert @ 07/06/24 13:55:32.277
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/06/24 13:55:32.386
  STEP: Deploying the webhook pod @ 07/06/24 13:55:32.392
  STEP: Wait for the deployment to be ready @ 07/06/24 13:55:32.406
  Jul  6 13:55:32.414: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0706 13:55:32.866995      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:55:33.867805      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/06/24 13:55:34.426
  STEP: Verifying the service has paired with the endpoint @ 07/06/24 13:55:34.438
  E0706 13:55:34.868077      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:55:35.439: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 07/06/24 13:55:35.447
  STEP: create a namespace for the webhook @ 07/06/24 13:55:35.459
  STEP: create a configmap should be unconditionally rejected by the webhook @ 07/06/24 13:55:35.481
  Jul  6 13:55:35.551: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2024" for this suite. @ 07/06/24 13:55:35.558
  STEP: Destroying namespace "webhook-markers-4200" for this suite. @ 07/06/24 13:55:35.566
  STEP: Destroying namespace "fail-closed-namespace-6473" for this suite. @ 07/06/24 13:55:35.57
• [3.336 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1731
  STEP: Creating a kubernetes client @ 07/06/24 13:55:35.577
  Jul  6 13:55:35.577: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename kubectl @ 07/06/24 13:55:35.578
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:55:35.59
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:55:35.592
  Jul  6 13:55:35.595: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-2873 version'
  Jul  6 13:55:35.628: INFO: stderr: ""
  Jul  6 13:55:35.628: INFO: stdout: "Client Version: v1.29.6\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.29.6\n"
  Jul  6 13:55:35.628: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2873" for this suite. @ 07/06/24 13:55:35.632
• [0.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:349
  STEP: Creating a kubernetes client @ 07/06/24 13:55:35.638
  Jul  6 13:55:35.638: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename security-context-test @ 07/06/24 13:55:35.639
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:55:35.65
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:55:35.652
  E0706 13:55:35.868222      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:55:36.868377      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:55:37.868915      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:55:38.868997      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:55:39.723: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-9837" for this suite. @ 07/06/24 13:55:39.726
• [4.095 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 07/06/24 13:55:39.734
  Jul  6 13:55:39.734: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename subpath @ 07/06/24 13:55:39.734
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:55:39.747
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:55:39.75
  STEP: Setting up data @ 07/06/24 13:55:39.752
  STEP: Creating pod pod-subpath-test-configmap-qpgf @ 07/06/24 13:55:39.76
  STEP: Creating a pod to test atomic-volume-subpath @ 07/06/24 13:55:39.76
  E0706 13:55:39.869512      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:55:40.869916      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:55:41.870382      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:55:42.870562      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:55:43.870862      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:55:44.870928      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:55:45.871045      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:55:46.871134      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:55:47.872126      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:55:48.872202      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:55:49.872833      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:55:50.873738      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:55:51.874275      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:55:52.874837      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:55:53.875177      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:55:54.876216      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:55:55.876309      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:55:56.876924      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:55:57.877973      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:55:58.878516      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:55:59.878552      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:56:00.879352      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:56:01.879834      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:56:02.880668      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/06/24 13:56:03.823
  Jul  6 13:56:03.827: INFO: Trying to get logs from node ip-172-31-24-251 pod pod-subpath-test-configmap-qpgf container test-container-subpath-configmap-qpgf: <nil>
  STEP: delete the pod @ 07/06/24 13:56:03.833
  STEP: Deleting pod pod-subpath-test-configmap-qpgf @ 07/06/24 13:56:03.845
  Jul  6 13:56:03.845: INFO: Deleting pod "pod-subpath-test-configmap-qpgf" in namespace "subpath-8885"
  Jul  6 13:56:03.849: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-8885" for this suite. @ 07/06/24 13:56:03.852
• [24.125 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 07/06/24 13:56:03.859
  Jul  6 13:56:03.859: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename namespaces @ 07/06/24 13:56:03.86
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:56:03.875
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:56:03.878
  STEP: Creating a test namespace @ 07/06/24 13:56:03.88
  E0706 13:56:03.881174      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:56:03.891
  STEP: Creating a pod in the namespace @ 07/06/24 13:56:03.894
  STEP: Waiting for the pod to have running status @ 07/06/24 13:56:03.902
  E0706 13:56:04.881334      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:56:05.882320      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the namespace @ 07/06/24 13:56:05.913
  STEP: Waiting for the namespace to be removed. @ 07/06/24 13:56:05.921
  E0706 13:56:06.883199      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:56:07.883273      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:56:08.883430      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:56:09.883585      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:56:10.883698      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:56:11.883792      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:56:12.883839      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:56:13.884080      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:56:14.884164      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:56:15.884638      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:56:16.884732      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 07/06/24 13:56:16.925
  STEP: Verifying there are no pods in the namespace @ 07/06/24 13:56:16.939
  Jul  6 13:56:16.943: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2373" for this suite. @ 07/06/24 13:56:16.947
  STEP: Destroying namespace "nsdeletetest-1933" for this suite. @ 07/06/24 13:56:16.953
  Jul  6 13:56:16.956: INFO: Namespace nsdeletetest-1933 was already deleted
  STEP: Destroying namespace "nsdeletetest-4706" for this suite. @ 07/06/24 13:56:16.956
• [13.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 07/06/24 13:56:16.962
  Jul  6 13:56:16.962: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename emptydir-wrapper @ 07/06/24 13:56:16.963
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:56:16.976
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:56:16.979
  E0706 13:56:17.884823      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:56:18.884961      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Cleaning up the secret @ 07/06/24 13:56:19.01
  STEP: Cleaning up the configmap @ 07/06/24 13:56:19.016
  STEP: Cleaning up the pod @ 07/06/24 13:56:19.021
  Jul  6 13:56:19.036: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-1269" for this suite. @ 07/06/24 13:56:19.04
• [2.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 07/06/24 13:56:19.046
  Jul  6 13:56:19.046: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename secrets @ 07/06/24 13:56:19.046
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:56:19.062
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:56:19.068
  STEP: Creating secret with name secret-test-ce55ed01-2a44-4afe-a237-26899a600c2a @ 07/06/24 13:56:19.07
  STEP: Creating a pod to test consume secrets @ 07/06/24 13:56:19.074
  E0706 13:56:19.885912      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:56:20.886375      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/06/24 13:56:21.092
  Jul  6 13:56:21.095: INFO: Trying to get logs from node ip-172-31-24-251 pod pod-secrets-42052acf-b58e-46f3-97f9-7c514c8d8a3c container secret-volume-test: <nil>
  STEP: delete the pod @ 07/06/24 13:56:21.1
  Jul  6 13:56:21.119: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3468" for this suite. @ 07/06/24 13:56:21.121
• [2.081 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 07/06/24 13:56:21.127
  Jul  6 13:56:21.127: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename pod-network-test @ 07/06/24 13:56:21.128
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:56:21.141
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:56:21.144
  STEP: Performing setup for networking test in namespace pod-network-test-2446 @ 07/06/24 13:56:21.146
  STEP: creating a selector @ 07/06/24 13:56:21.146
  STEP: Creating the service pods in kubernetes @ 07/06/24 13:56:21.146
  Jul  6 13:56:21.146: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0706 13:56:21.887041      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:56:22.887641      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:56:23.887734      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:56:24.887827      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:56:25.887924      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:56:26.888102      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:56:27.888210      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:56:28.888693      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:56:29.888780      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:56:30.888866      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:56:31.888972      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:56:32.889190      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 07/06/24 13:56:33.224
  E0706 13:56:33.889329      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:56:34.889530      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:56:35.263: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Jul  6 13:56:35.263: INFO: Going to poll 192.168.140.47 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Jul  6 13:56:35.266: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.140.47:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-2446 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul  6 13:56:35.266: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  Jul  6 13:56:35.267: INFO: ExecWithOptions: Clientset creation
  Jul  6 13:56:35.267: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-2446/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.140.47%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jul  6 13:56:35.314: INFO: Found all 1 expected endpoints: [netserver-0]
  Jul  6 13:56:35.314: INFO: Going to poll 192.168.112.101 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Jul  6 13:56:35.318: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.112.101:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-2446 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul  6 13:56:35.318: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  Jul  6 13:56:35.318: INFO: ExecWithOptions: Clientset creation
  Jul  6 13:56:35.318: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-2446/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.112.101%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jul  6 13:56:35.367: INFO: Found all 1 expected endpoints: [netserver-1]
  Jul  6 13:56:35.367: INFO: Going to poll 192.168.204.101 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Jul  6 13:56:35.369: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.204.101:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-2446 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul  6 13:56:35.369: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  Jul  6 13:56:35.370: INFO: ExecWithOptions: Clientset creation
  Jul  6 13:56:35.370: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-2446/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.204.101%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jul  6 13:56:35.414: INFO: Found all 1 expected endpoints: [netserver-2]
  Jul  6 13:56:35.414: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-2446" for this suite. @ 07/06/24 13:56:35.419
• [14.298 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 07/06/24 13:56:35.426
  Jul  6 13:56:35.426: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename deployment @ 07/06/24 13:56:35.427
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:56:35.44
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:56:35.445
  Jul  6 13:56:35.454: INFO: Pod name cleanup-pod: Found 0 pods out of 1
  E0706 13:56:35.890294      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:56:36.890535      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:56:37.891607      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:56:38.891798      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:56:39.891897      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:56:40.459: INFO: Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/06/24 13:56:40.459
  Jul  6 13:56:40.459: INFO: Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 07/06/24 13:56:40.468
  Jul  6 13:56:40.484: INFO: Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2467",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "22cb92cf-8aad-4e76-8603-f2c07fdc66bc",
      ResourceVersion: (string) (len=5) "46949",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855871000,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855871000,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jul  6 13:56:40.493: INFO: New ReplicaSet "test-cleanup-deployment-7bc75bbdf6" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-7bc75bbdf6",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2467",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f69d1d64-bcec-4a73-af9b-24b51369c2aa",
      ResourceVersion: (string) (len=5) "46952",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855871000,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "22cb92cf-8aad-4e76-8603-f2c07fdc66bc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855871000,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 32 63 62 39 32  63 66 2d 38 61 61 64 2d  |\"22cb92cf-8aad-|
              00000120  34 65 37 36 2d 38 36 30  33 2d 66 32 63 30 37 66  |4e76-8603-f2c07f|
              00000130  64 63 36 36 62 63 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |dc66bc\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 0,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jul  6 13:56:40.493: INFO: All old ReplicaSets of Deployment "test-cleanup-deployment":
  Jul  6 13:56:40.493: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2467",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0be3b566-1917-45e2-8526-c2e215da8858",
      ResourceVersion: (string) (len=5) "46950",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855870995,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "22cb92cf-8aad-4e76-8603-f2c07fdc66bc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855870995,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855870996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855871000,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 32 32 63 62 39 32 63  |"uid\":\"22cb92c|
              00000040  66 2d 38 61 61 64 2d 34  65 37 36 2d 38 36 30 33  |f-8aad-4e76-8603|
              00000050  2d 66 32 63 30 37 66 64  63 36 36 62 63 5c 22 7d  |-f2c07fdc66bc\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jul  6 13:56:40.502: INFO: Pod "test-cleanup-controller-7vrvr" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-7vrvr",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-2467",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2a0c0fed-83c0-427d-ae6e-cf64b3aad1d6",
      ResourceVersion: (string) (len=5) "46938",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855870995,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "0be3b566-1917-45e2-8526-c2e215da8858",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855870995,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  30 62 65 33 62 35 36 36  |uid\":\"0be3b566|
              00000080  2d 31 39 31 37 2d 34 35  65 32 2d 38 35 32 36 2d  |-1917-45e2-8526-|
              00000090  63 32 65 32 31 35 64 61  38 38 35 38 5c 22 7d 22  |c2e215da8858\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855870996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 31  32 2e 37 38 5c 22 7d 22  |2.168.112.78\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kcd6p",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kcd6p",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-9-199",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855870996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855870995,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855870996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855870996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855870995,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.9.199",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.9.199"
        }
      },
      PodIP: (string) (len=14) "192.168.112.78",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.112.78"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855870995,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63855870996,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://8ebbc38300bdad4586ce59c2ccee9c4c44e19e3c87e1359b819b3ef29411ba54",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul  6 13:56:40.505: INFO: Pod "test-cleanup-deployment-7bc75bbdf6-rlxs4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-cleanup-deployment-7bc75bbdf6-rlxs4",
      GenerateName: (string) (len=35) "test-cleanup-deployment-7bc75bbdf6-",
      Namespace: (string) (len=15) "deployment-2467",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8d778563-ea07-424d-bab2-f311fcda050a",
      ResourceVersion: (string) (len=5) "46954",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855871000,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-cleanup-deployment-7bc75bbdf6",
          UID: (types.UID) (len=36) "f69d1d64-bcec-4a73-af9b-24b51369c2aa",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855871000,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 36  39 64 31 64 36 34 2d 62  |d\":\"f69d1d64-b|
              00000090  63 65 63 2d 34 61 37 33  2d 61 66 39 62 2d 32 34  |cec-4a73-af9b-24|
              000000a0  62 35 31 33 36 39 63 32  61 61 5c 22 7d 22 3a 7b  |b51369c2aa\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kvlc9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kvlc9",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul  6 13:56:40.506: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2467" for this suite. @ 07/06/24 13:56:40.51
• [5.091 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 07/06/24 13:56:40.518
  Jul  6 13:56:40.518: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename secrets @ 07/06/24 13:56:40.518
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:56:40.535
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:56:40.538
  STEP: Creating secret with name secret-test-map-a55dc2bc-e92f-4e37-bdb3-303220677517 @ 07/06/24 13:56:40.54
  STEP: Creating a pod to test consume secrets @ 07/06/24 13:56:40.545
  E0706 13:56:40.891982      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:56:41.892099      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:56:42.892940      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:56:43.893120      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/06/24 13:56:44.564
  Jul  6 13:56:44.568: INFO: Trying to get logs from node ip-172-31-24-251 pod pod-secrets-6d38fcf3-69c5-4ab0-9085-28f9f164e76c container secret-volume-test: <nil>
  STEP: delete the pod @ 07/06/24 13:56:44.573
  Jul  6 13:56:44.587: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5281" for this suite. @ 07/06/24 13:56:44.591
• [4.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:163
  STEP: Creating a kubernetes client @ 07/06/24 13:56:44.602
  Jul  6 13:56:44.602: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename svcaccounts @ 07/06/24 13:56:44.602
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:56:44.615
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:56:44.618
  Jul  6 13:56:44.641: INFO: created pod pod-service-account-defaultsa
  Jul  6 13:56:44.641: INFO: pod pod-service-account-defaultsa service account token volume mount: true
  Jul  6 13:56:44.645: INFO: created pod pod-service-account-mountsa
  Jul  6 13:56:44.645: INFO: pod pod-service-account-mountsa service account token volume mount: true
  Jul  6 13:56:44.652: INFO: created pod pod-service-account-nomountsa
  Jul  6 13:56:44.652: INFO: pod pod-service-account-nomountsa service account token volume mount: false
  Jul  6 13:56:44.663: INFO: created pod pod-service-account-defaultsa-mountspec
  Jul  6 13:56:44.663: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  Jul  6 13:56:44.668: INFO: created pod pod-service-account-mountsa-mountspec
  Jul  6 13:56:44.668: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
  Jul  6 13:56:44.676: INFO: created pod pod-service-account-nomountsa-mountspec
  Jul  6 13:56:44.676: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  Jul  6 13:56:44.683: INFO: created pod pod-service-account-defaultsa-nomountspec
  Jul  6 13:56:44.683: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  Jul  6 13:56:44.690: INFO: created pod pod-service-account-mountsa-nomountspec
  Jul  6 13:56:44.690: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  Jul  6 13:56:44.699: INFO: created pod pod-service-account-nomountsa-nomountspec
  Jul  6 13:56:44.699: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  Jul  6 13:56:44.699: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6903" for this suite. @ 07/06/24 13:56:44.705
• [0.118 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 07/06/24 13:56:44.72
  Jul  6 13:56:44.720: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename webhook @ 07/06/24 13:56:44.721
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:56:44.733
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:56:44.736
  STEP: Setting up server cert @ 07/06/24 13:56:44.759
  E0706 13:56:44.893532      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/06/24 13:56:45.191
  STEP: Deploying the webhook pod @ 07/06/24 13:56:45.199
  STEP: Wait for the deployment to be ready @ 07/06/24 13:56:45.213
  Jul  6 13:56:45.227: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0706 13:56:45.894311      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:56:46.894431      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/06/24 13:56:47.237
  STEP: Verifying the service has paired with the endpoint @ 07/06/24 13:56:47.245
  E0706 13:56:47.894552      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:56:48.245: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 07/06/24 13:56:48.253
  STEP: create a pod that should be denied by the webhook @ 07/06/24 13:56:48.265
  STEP: create a pod that causes the webhook to hang @ 07/06/24 13:56:48.271
  E0706 13:56:48.895513      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:56:49.896112      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:56:50.896983      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:56:51.897206      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:56:52.897358      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:56:53.897459      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:56:54.897645      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:56:55.898237      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:56:56.898522      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:56:57.899597      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create a configmap that should be denied by the webhook @ 07/06/24 13:56:58.28
  STEP: create a configmap that should be admitted by the webhook @ 07/06/24 13:56:58.286
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 07/06/24 13:56:58.293
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 07/06/24 13:56:58.3
  STEP: create a namespace that bypass the webhook @ 07/06/24 13:56:58.304
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 07/06/24 13:56:58.318
  Jul  6 13:56:58.385: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5133" for this suite. @ 07/06/24 13:56:58.388
  STEP: Destroying namespace "webhook-markers-7201" for this suite. @ 07/06/24 13:56:58.396
  STEP: Destroying namespace "exempted-namespace-8094" for this suite. @ 07/06/24 13:56:58.403
• [13.688 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:147
  STEP: Creating a kubernetes client @ 07/06/24 13:56:58.408
  Jul  6 13:56:58.409: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename kubelet-test @ 07/06/24 13:56:58.409
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:56:58.42
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:56:58.423
  STEP: Waiting for pod completion @ 07/06/24 13:56:58.433
  E0706 13:56:58.899695      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:56:59.899858      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:57:00.900403      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:57:01.900498      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:57:02.452: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8813" for this suite. @ 07/06/24 13:57:02.456
• [4.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 07/06/24 13:57:02.463
  Jul  6 13:57:02.463: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename replication-controller @ 07/06/24 13:57:02.463
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:57:02.476
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:57:02.479
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 07/06/24 13:57:02.481
  E0706 13:57:02.900980      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:57:03.901904      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When a replication controller with a matching selector is created @ 07/06/24 13:57:04.497
  STEP: Then the orphan pod is adopted @ 07/06/24 13:57:04.501
  E0706 13:57:04.902006      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:57:05.509: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-9258" for this suite. @ 07/06/24 13:57:05.514
• [3.058 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:784
  STEP: Creating a kubernetes client @ 07/06/24 13:57:05.521
  Jul  6 13:57:05.521: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename job @ 07/06/24 13:57:05.522
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:57:05.534
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:57:05.537
  STEP: Creating a job @ 07/06/24 13:57:05.539
  STEP: Ensure pods equal to parallelism count is attached to the job @ 07/06/24 13:57:05.545
  E0706 13:57:05.903056      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:57:06.903617      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 07/06/24 13:57:07.549
  STEP: updating /status @ 07/06/24 13:57:07.557
  STEP: get /status @ 07/06/24 13:57:07.562
  Jul  6 13:57:07.566: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2048" for this suite. @ 07/06/24 13:57:07.569
• [2.054 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:530
  STEP: Creating a kubernetes client @ 07/06/24 13:57:07.576
  Jul  6 13:57:07.576: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename security-context-test @ 07/06/24 13:57:07.576
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:57:07.589
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:57:07.592
  E0706 13:57:07.904631      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:57:08.904768      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:57:09.905723      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:57:10.905820      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:57:11.632: INFO: Got logs for pod "busybox-privileged-false-c478234e-3f67-4141-9991-e6aa8ecacb3e": "ip: RTNETLINK answers: Operation not permitted\n"
  Jul  6 13:57:11.632: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-278" for this suite. @ 07/06/24 13:57:11.635
• [4.066 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 07/06/24 13:57:11.642
  Jul  6 13:57:11.642: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename watch @ 07/06/24 13:57:11.642
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:57:11.655
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:57:11.66
  STEP: creating a new configmap @ 07/06/24 13:57:11.663
  STEP: modifying the configmap once @ 07/06/24 13:57:11.666
  STEP: modifying the configmap a second time @ 07/06/24 13:57:11.673
  STEP: deleting the configmap @ 07/06/24 13:57:11.678
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 07/06/24 13:57:11.686
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 07/06/24 13:57:11.687
  Jul  6 13:57:11.688: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-4006  b9f4d856-c66a-438d-875c-82dd5d020c2b 47507 0 2024-07-06 13:57:11 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-07-06 13:57:11 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jul  6 13:57:11.688: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-4006  b9f4d856-c66a-438d-875c-82dd5d020c2b 47508 0 2024-07-06 13:57:11 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-07-06 13:57:11 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jul  6 13:57:11.688: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-4006" for this suite. @ 07/06/24 13:57:11.69
• [0.056 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 07/06/24 13:57:11.698
  Jul  6 13:57:11.698: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename emptydir @ 07/06/24 13:57:11.699
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:57:11.71
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:57:11.713
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 07/06/24 13:57:11.715
  E0706 13:57:11.906351      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:57:12.906783      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:57:13.907633      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:57:14.907727      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/06/24 13:57:15.735
  Jul  6 13:57:15.738: INFO: Trying to get logs from node ip-172-31-24-251 pod pod-a804312e-faea-412a-a1e6-b2bd95c500ec container test-container: <nil>
  STEP: delete the pod @ 07/06/24 13:57:15.745
  Jul  6 13:57:15.759: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3206" for this suite. @ 07/06/24 13:57:15.761
• [4.071 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 07/06/24 13:57:15.769
  Jul  6 13:57:15.769: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/06/24 13:57:15.77
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:57:15.78
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:57:15.782
  STEP: fetching the /apis discovery document @ 07/06/24 13:57:15.788
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 07/06/24 13:57:15.789
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 07/06/24 13:57:15.789
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 07/06/24 13:57:15.789
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 07/06/24 13:57:15.79
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 07/06/24 13:57:15.79
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 07/06/24 13:57:15.791
  Jul  6 13:57:15.791: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2068" for this suite. @ 07/06/24 13:57:15.794
• [0.031 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 07/06/24 13:57:15.8
  Jul  6 13:57:15.800: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename configmap @ 07/06/24 13:57:15.801
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:57:15.814
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:57:15.816
  Jul  6 13:57:15.854: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5741" for this suite. @ 07/06/24 13:57:15.857
• [0.064 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1533
  STEP: Creating a kubernetes client @ 07/06/24 13:57:15.864
  Jul  6 13:57:15.864: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename services @ 07/06/24 13:57:15.864
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:57:15.877
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:57:15.88
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-1593 @ 07/06/24 13:57:15.882
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 07/06/24 13:57:15.897
  STEP: creating service externalsvc in namespace services-1593 @ 07/06/24 13:57:15.898
  E0706 13:57:15.908091      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating replication controller externalsvc in namespace services-1593 @ 07/06/24 13:57:15.912
  I0706 13:57:15.920271      21 runners.go:197] Created replication controller with name: externalsvc, namespace: services-1593, replica count: 2
  E0706 13:57:16.908702      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:57:17.908803      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:57:18.908878      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0706 13:57:18.971201      21 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 07/06/24 13:57:18.975
  Jul  6 13:57:18.993: INFO: Creating new exec pod
  E0706 13:57:19.909005      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:57:20.909319      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:57:21.010: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=services-1593 exec execpodqm5lv -- /bin/sh -x -c nslookup nodeport-service.services-1593.svc.cluster.local'
  Jul  6 13:57:21.130: INFO: stderr: "+ nslookup nodeport-service.services-1593.svc.cluster.local\n"
  Jul  6 13:57:21.130: INFO: stdout: "Server:\t\t10.152.183.97\nAddress:\t10.152.183.97#53\n\nnodeport-service.services-1593.svc.cluster.local\tcanonical name = externalsvc.services-1593.svc.cluster.local.\nName:\texternalsvc.services-1593.svc.cluster.local\nAddress: 10.152.183.210\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-1593, will wait for the garbage collector to delete the pods @ 07/06/24 13:57:21.13
  Jul  6 13:57:21.191: INFO: Deleting ReplicationController externalsvc took: 6.636903ms
  Jul  6 13:57:21.292: INFO: Terminating ReplicationController externalsvc pods took: 100.422766ms
  E0706 13:57:21.909520      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:57:22.909753      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:57:23.910170      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:57:24.209: INFO: Cleaning up the NodePort to ExternalName test service
  Jul  6 13:57:24.228: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1593" for this suite. @ 07/06/24 13:57:24.231
• [8.373 seconds]
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:194
  STEP: Creating a kubernetes client @ 07/06/24 13:57:24.237
  Jul  6 13:57:24.237: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/06/24 13:57:24.238
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:57:24.255
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:57:24.257
  Jul  6 13:57:24.260: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  E0706 13:57:24.910705      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 07/06/24 13:57:25.471
  Jul  6 13:57:25.471: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=crd-publish-openapi-230 --namespace=crd-publish-openapi-230 create -f -'
  E0706 13:57:25.911557      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:57:26.912310      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:57:27.547: INFO: stderr: ""
  Jul  6 13:57:27.547: INFO: stdout: "e2e-test-crd-publish-openapi-6801-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Jul  6 13:57:27.547: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=crd-publish-openapi-230 --namespace=crd-publish-openapi-230 delete e2e-test-crd-publish-openapi-6801-crds test-cr'
  Jul  6 13:57:27.603: INFO: stderr: ""
  Jul  6 13:57:27.603: INFO: stdout: "e2e-test-crd-publish-openapi-6801-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  Jul  6 13:57:27.603: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=crd-publish-openapi-230 --namespace=crd-publish-openapi-230 apply -f -'
  Jul  6 13:57:27.652: INFO: stderr: ""
  Jul  6 13:57:27.652: INFO: stdout: "e2e-test-crd-publish-openapi-6801-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Jul  6 13:57:27.652: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=crd-publish-openapi-230 --namespace=crd-publish-openapi-230 delete e2e-test-crd-publish-openapi-6801-crds test-cr'
  Jul  6 13:57:27.699: INFO: stderr: ""
  Jul  6 13:57:27.699: INFO: stdout: "e2e-test-crd-publish-openapi-6801-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 07/06/24 13:57:27.699
  Jul  6 13:57:27.699: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=crd-publish-openapi-230 explain e2e-test-crd-publish-openapi-6801-crds'
  Jul  6 13:57:27.737: INFO: stderr: ""
  Jul  6 13:57:27.737: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-6801-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0706 13:57:27.912417      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:57:28.912659      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:57:28.927: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-230" for this suite. @ 07/06/24 13:57:28.932
• [4.701 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 07/06/24 13:57:28.939
  Jul  6 13:57:28.939: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename daemonsets @ 07/06/24 13:57:28.939
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:57:28.954
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:57:28.956
  Jul  6 13:57:28.972: INFO: Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 07/06/24 13:57:28.978
  Jul  6 13:57:28.981: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul  6 13:57:28.981: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 07/06/24 13:57:28.981
  Jul  6 13:57:28.997: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul  6 13:57:28.997: INFO: Node ip-172-31-9-199 is running 0 daemon pod, expected 1
  E0706 13:57:29.913151      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:57:29.998: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul  6 13:57:29.998: INFO: Node ip-172-31-9-199 is running 0 daemon pod, expected 1
  E0706 13:57:30.913393      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:57:30.998: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jul  6 13:57:30.998: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 07/06/24 13:57:31
  Jul  6 13:57:31.021: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jul  6 13:57:31.022: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  E0706 13:57:31.914064      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:57:32.020: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul  6 13:57:32.020: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 07/06/24 13:57:32.02
  Jul  6 13:57:32.034: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul  6 13:57:32.034: INFO: Node ip-172-31-9-199 is running 0 daemon pod, expected 1
  E0706 13:57:32.914565      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:57:33.039: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul  6 13:57:33.039: INFO: Node ip-172-31-9-199 is running 0 daemon pod, expected 1
  E0706 13:57:33.915385      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:57:34.035: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jul  6 13:57:34.035: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 07/06/24 13:57:34.04
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2342, will wait for the garbage collector to delete the pods @ 07/06/24 13:57:34.04
  Jul  6 13:57:34.098: INFO: Deleting DaemonSet.extensions daemon-set took: 4.96973ms
  Jul  6 13:57:34.200: INFO: Terminating DaemonSet.extensions daemon-set pods took: 102.303529ms
  E0706 13:57:34.915599      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:57:35.104: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul  6 13:57:35.104: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jul  6 13:57:35.107: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"47890"},"items":null}

  Jul  6 13:57:35.110: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"47890"},"items":null}

  Jul  6 13:57:35.132: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2342" for this suite. @ 07/06/24 13:57:35.135
• [6.201 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 07/06/24 13:57:35.14
  Jul  6 13:57:35.140: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename init-container @ 07/06/24 13:57:35.141
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:57:35.157
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:57:35.159
  STEP: creating the pod @ 07/06/24 13:57:35.161
  Jul  6 13:57:35.161: INFO: PodSpec: initContainers in spec.initContainers
  E0706 13:57:35.916185      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:57:36.916960      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:57:37.918016      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:57:38.100: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-2981" for this suite. @ 07/06/24 13:57:38.104
• [2.970 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 07/06/24 13:57:38.11
  Jul  6 13:57:38.110: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename downward-api @ 07/06/24 13:57:38.111
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:57:38.129
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:57:38.13
  STEP: Creating the pod @ 07/06/24 13:57:38.132
  E0706 13:57:38.918694      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:57:39.918774      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:57:40.671: INFO: Successfully updated pod "annotationupdate21a80c65-757a-46a4-bbf8-9f77183af237"
  E0706 13:57:40.919644      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:57:41.919758      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:57:42.920774      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:57:43.920859      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:57:44.689: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7188" for this suite. @ 07/06/24 13:57:44.692
• [6.591 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 07/06/24 13:57:44.701
  Jul  6 13:57:44.701: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename container-probe @ 07/06/24 13:57:44.701
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:57:44.718
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:57:44.72
  E0706 13:57:44.921689      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:57:45.922373      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:57:46.922897      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:57:47.923388      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:57:48.923921      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:57:49.924760      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:57:50.924759      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:57:51.925744      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:57:52.925863      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:57:53.926396      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:57:54.927358      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:57:55.928024      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:57:56.928911      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:57:57.929683      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:57:58.930685      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:57:59.931233      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:58:00.931783      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:58:01.932272      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:58:02.933336      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:58:03.934579      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:58:04.935596      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:58:05.936025      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:58:06.936857      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:58:07.937396      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:58:08.938024      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:58:09.938781      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:58:10.939291      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:58:11.939602      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:58:12.940209      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:58:13.940732      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:58:14.940850      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:58:15.941633      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:58:16.942516      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:58:17.943360      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:58:18.943892      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:58:19.944662      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:58:20.945641      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:58:21.946192      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:58:22.947233      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:58:23.948114      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:58:24.948374      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:58:25.948854      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:58:26.949591      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:58:27.950268      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:58:28.950352      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:58:29.951328      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:58:30.952079      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:58:31.952553      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:58:32.953618      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:58:33.954382      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:58:34.954783      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:58:35.955231      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:58:36.955731      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:58:37.955898      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:58:38.956061      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:58:39.956152      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:58:40.957134      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:58:41.957258      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:58:42.957360      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:58:43.957486      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:58:44.733: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2582" for this suite. @ 07/06/24 13:58:44.737
• [60.043 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:846
  STEP: Creating a kubernetes client @ 07/06/24 13:58:44.744
  Jul  6 13:58:44.744: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename services @ 07/06/24 13:58:44.745
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:58:44.762
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:58:44.764
  STEP: creating service multi-endpoint-test in namespace services-5501 @ 07/06/24 13:58:44.765
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5501 to expose endpoints map[] @ 07/06/24 13:58:44.775
  Jul  6 13:58:44.780: INFO: Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  E0706 13:58:44.958359      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:58:45.789: INFO: successfully validated that service multi-endpoint-test in namespace services-5501 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-5501 @ 07/06/24 13:58:45.789
  E0706 13:58:45.958495      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:58:46.958577      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5501 to expose endpoints map[pod1:[100]] @ 07/06/24 13:58:47.805
  Jul  6 13:58:47.813: INFO: successfully validated that service multi-endpoint-test in namespace services-5501 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-5501 @ 07/06/24 13:58:47.813
  E0706 13:58:47.959269      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:58:48.959555      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5501 to expose endpoints map[pod1:[100] pod2:[101]] @ 07/06/24 13:58:49.83
  Jul  6 13:58:49.840: INFO: successfully validated that service multi-endpoint-test in namespace services-5501 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 07/06/24 13:58:49.84
  Jul  6 13:58:49.840: INFO: Creating new exec pod
  E0706 13:58:49.959610      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:58:50.960567      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:58:51.960859      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:58:52.853: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=services-5501 exec execpodm9t22 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  Jul  6 13:58:52.954: INFO: stderr: "+ nc -v -t -w 2 multi-endpoint-test 80\n+ echo hostName\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  Jul  6 13:58:52.954: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul  6 13:58:52.954: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=services-5501 exec execpodm9t22 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.212 80'
  E0706 13:58:52.961728      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:58:53.039: INFO: stderr: "+ nc -v -t -w 2 10.152.183.212 80\nConnection to 10.152.183.212 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Jul  6 13:58:53.039: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul  6 13:58:53.040: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=services-5501 exec execpodm9t22 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  Jul  6 13:58:53.126: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  Jul  6 13:58:53.126: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul  6 13:58:53.127: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=services-5501 exec execpodm9t22 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.212 81'
  Jul  6 13:58:53.205: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.212 81\nConnection to 10.152.183.212 81 port [tcp/*] succeeded!\n"
  Jul  6 13:58:53.205: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-5501 @ 07/06/24 13:58:53.205
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5501 to expose endpoints map[pod2:[101]] @ 07/06/24 13:58:53.221
  Jul  6 13:58:53.231: INFO: successfully validated that service multi-endpoint-test in namespace services-5501 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-5501 @ 07/06/24 13:58:53.231
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5501 to expose endpoints map[] @ 07/06/24 13:58:53.24
  E0706 13:58:53.962009      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:58:54.258: INFO: successfully validated that service multi-endpoint-test in namespace services-5501 exposes endpoints map[]
  Jul  6 13:58:54.271: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5501" for this suite. @ 07/06/24 13:58:54.275
• [9.537 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:408
  STEP: Creating a kubernetes client @ 07/06/24 13:58:54.281
  Jul  6 13:58:54.281: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename job @ 07/06/24 13:58:54.282
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:58:54.297
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:58:54.299
  STEP: Creating Indexed job @ 07/06/24 13:58:54.301
  STEP: Ensuring job reaches completions @ 07/06/24 13:58:54.308
  E0706 13:58:54.962560      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:58:55.962641      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:58:56.963622      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:58:57.963713      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:58:58.963810      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:58:59.963889      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:59:00.964961      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:59:01.965507      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring pods with index for job exist @ 07/06/24 13:59:02.312
  Jul  6 13:59:02.315: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3729" for this suite. @ 07/06/24 13:59:02.319
• [8.042 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 07/06/24 13:59:02.324
  Jul  6 13:59:02.324: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename pods @ 07/06/24 13:59:02.324
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:59:02.339
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:59:02.341
  E0706 13:59:02.966521      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:59:03.967089      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:59:04.967649      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:59:05.967727      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:59:06.968776      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:59:07.968858      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/06/24 13:59:08.391
  Jul  6 13:59:08.394: INFO: Trying to get logs from node ip-172-31-24-251 pod client-envvars-e7f80193-818d-4a69-b95a-ec6ccee1ae5d container env3cont: <nil>
  STEP: delete the pod @ 07/06/24 13:59:08.404
  Jul  6 13:59:08.417: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8783" for this suite. @ 07/06/24 13:59:08.421
• [6.103 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1863
  STEP: Creating a kubernetes client @ 07/06/24 13:59:08.427
  Jul  6 13:59:08.427: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename kubectl @ 07/06/24 13:59:08.427
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:59:08.443
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:59:08.445
  STEP: Starting the proxy @ 07/06/24 13:59:08.446
  Jul  6 13:59:08.446: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-3404942541 --namespace=kubectl-9023 proxy --unix-socket=/tmp/kubectl-proxy-unix1184977220/test'
  STEP: retrieving proxy /api/ output @ 07/06/24 13:59:08.476
  Jul  6 13:59:08.476: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9023" for this suite. @ 07/06/24 13:59:08.48
• [0.059 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 07/06/24 13:59:08.486
  Jul  6 13:59:08.486: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename server-version @ 07/06/24 13:59:08.486
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:59:08.504
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:59:08.506
  STEP: Request ServerVersion @ 07/06/24 13:59:08.507
  STEP: Confirm major version @ 07/06/24 13:59:08.508
  Jul  6 13:59:08.508: INFO: Major version: 1
  STEP: Confirm minor version @ 07/06/24 13:59:08.508
  Jul  6 13:59:08.508: INFO: cleanMinorVersion: 29
  Jul  6 13:59:08.508: INFO: Minor version: 29
  Jul  6 13:59:08.508: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-6386" for this suite. @ 07/06/24 13:59:08.511
• [0.031 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 07/06/24 13:59:08.517
  Jul  6 13:59:08.517: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename pods @ 07/06/24 13:59:08.517
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:59:08.531
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:59:08.532
  STEP: creating the pod @ 07/06/24 13:59:08.534
  STEP: submitting the pod to kubernetes @ 07/06/24 13:59:08.534
  E0706 13:59:08.969436      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:59:09.969546      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 07/06/24 13:59:10.554
  STEP: updating the pod @ 07/06/24 13:59:10.557
  E0706 13:59:10.969586      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:59:11.070: INFO: Successfully updated pod "pod-update-3c538c56-5265-4afc-8a79-f05eb3e37408"
  STEP: verifying the updated pod is in kubernetes @ 07/06/24 13:59:11.073
  Jul  6 13:59:11.075: INFO: Pod update OK
  Jul  6 13:59:11.075: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4016" for this suite. @ 07/06/24 13:59:11.079
• [2.568 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 07/06/24 13:59:11.085
  Jul  6 13:59:11.085: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename container-probe @ 07/06/24 13:59:11.086
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 13:59:11.102
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 13:59:11.103
  STEP: Creating pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690 @ 07/06/24 13:59:11.105
  E0706 13:59:11.969765      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:59:12.969888      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/06/24 13:59:13.121
  Jul  6 13:59:13.124: INFO: Initial restart count of pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e is 0
  Jul  6 13:59:13.127: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 13:59:13.969985      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:59:14.970170      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:59:15.131: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 13:59:15.970975      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:59:16.971074      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:59:17.136: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 13:59:17.971585      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:59:18.971974      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:59:19.139: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 13:59:19.972275      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:59:20.972355      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:59:21.143: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 13:59:21.973130      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:59:22.973232      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:59:23.149: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 13:59:23.973297      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:59:24.973383      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:59:25.154: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 13:59:25.974000      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:59:26.974096      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:59:27.157: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 13:59:27.974514      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:59:28.974759      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:59:29.161: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 13:59:29.975693      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:59:30.975951      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:59:31.165: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 13:59:31.976043      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:59:32.976878      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:59:33.169: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 13:59:33.977911      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:59:34.978021      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:59:35.174: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 13:59:35.978117      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:59:36.978844      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:59:37.179: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 13:59:37.978949      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:59:38.979613      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:59:39.183: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 13:59:39.980757      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:59:40.980850      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:59:41.187: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 13:59:41.981536      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:59:42.981715      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:59:43.191: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 13:59:43.982034      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:59:44.982276      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:59:45.196: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 13:59:45.982363      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:59:46.982532      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:59:47.200: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 13:59:47.983031      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:59:48.983599      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:59:49.205: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 13:59:49.983683      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:59:50.983795      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:59:51.209: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 13:59:51.983894      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:59:52.984068      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:59:53.214: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 13:59:53.984479      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:59:54.984716      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:59:55.219: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 13:59:55.985159      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:59:56.985409      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:59:57.222: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 13:59:57.985594      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 13:59:58.985646      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 13:59:59.226: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 13:59:59.986011      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:00:00.986312      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:00:01.230: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:00:01.987344      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:00:02.987697      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:00:03.234: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:00:03.987787      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:00:04.987967      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:00:05.239: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:00:05.988120      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:00:06.988735      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:00:07.243: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:00:07.989529      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:00:08.990346      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:00:09.247: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:00:09.990517      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:00:10.991601      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:00:11.251: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:00:11.991982      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:00:12.992173      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:00:13.255: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:00:13.992272      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:00:14.992675      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:00:15.260: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:00:15.993183      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:00:16.993273      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:00:17.265: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:00:17.994079      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:00:18.994177      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:00:19.268: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:00:19.994534      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:00:20.995682      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:00:21.273: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:00:21.995920      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:00:22.995978      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:00:23.278: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:00:23.996221      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:00:24.996401      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:00:25.284: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:00:25.996491      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:00:26.996698      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:00:27.289: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:00:27.996816      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:00:28.997004      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:00:29.293: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:00:29.997147      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:00:30.997252      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:00:31.298: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:00:31.997350      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:00:32.997652      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:00:33.302: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:00:33.997706      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:00:34.997938      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:00:35.306: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:00:35.998484      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:00:36.998547      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:00:37.310: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:00:37.998898      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:00:38.999004      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:00:39.315: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:00:39.999619      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:00:41.000173      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:00:41.321: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:00:42.001226      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:00:43.002171      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:00:43.326: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:00:44.002715      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:00:45.003604      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:00:45.330: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:00:46.004633      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:00:47.004733      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:00:47.334: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:00:48.005451      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:00:49.005569      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:00:49.338: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:00:50.005602      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:00:51.005817      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:00:51.342: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:00:52.005919      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:00:53.006027      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:00:53.347: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:00:54.006524      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:00:55.006638      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:00:55.351: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:00:56.007541      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:00:57.007641      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:00:57.355: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:00:58.008234      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:00:59.008693      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:00:59.359: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:01:00.009384      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:01:01.009486      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:01:01.364: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:01:02.009644      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:01:03.009842      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:01:03.380: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:01:04.010317      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:01:05.010535      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:01:05.386: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:01:06.010660      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:01:07.011620      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:01:07.389: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:01:08.011728      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:01:09.011980      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:01:09.394: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:01:10.012122      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:01:11.012361      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:01:11.399: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:01:12.012492      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:01:13.012694      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:01:13.403: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:01:14.013118      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:01:15.013854      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:01:15.408: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:01:16.014441      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:01:17.014696      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:01:17.413: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:01:18.015625      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:01:19.015813      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:01:19.417: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:01:20.015901      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:01:21.016274      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:01:21.422: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:01:22.016708      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:01:23.016918      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:01:23.425: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:01:24.017019      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:01:25.017122      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:01:25.430: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:01:26.017269      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:01:27.017363      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:01:27.435: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:01:28.017398      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:01:29.017609      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:01:29.441: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:01:30.017774      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:01:31.018293      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:01:31.444: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:01:32.019140      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:01:33.019670      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:01:33.448: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:01:34.020577      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:01:35.020701      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:01:35.454: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:01:36.020824      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:01:37.021024      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:01:37.459: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:01:38.022050      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:01:39.022144      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:01:39.463: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:01:40.022956      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:01:41.023702      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:01:41.468: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:01:42.024302      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:01:43.024475      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:01:43.472: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:01:44.024904      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:01:45.025009      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:01:45.477: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:01:46.025307      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:01:47.026199      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:01:47.481: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:01:48.027003      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:01:49.027598      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:01:49.486: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:01:50.027693      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:01:51.028022      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:01:51.490: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:01:52.028581      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:01:53.028723      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:01:53.493: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:01:54.029152      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:01:55.029249      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:01:55.498: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:01:56.030281      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:01:57.030618      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:01:57.501: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:01:58.031485      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:01:59.031585      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:01:59.505: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:02:00.031955      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:02:01.032224      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:02:01.511: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:02:02.032999      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:02:03.033058      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:02:03.515: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:02:04.033107      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:02:05.033296      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:02:05.519: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:02:06.033336      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:02:07.033510      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:02:07.523: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:02:08.034616      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:02:09.034702      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:02:09.527: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:02:10.035595      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:02:11.036659      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:02:11.532: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:02:12.037204      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:02:13.037296      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:02:13.536: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:02:14.037374      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:02:15.037660      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:02:15.541: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:02:16.037753      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:02:17.037955      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:02:17.544: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:02:18.039001      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:02:19.039672      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:02:19.550: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:02:20.040696      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:02:21.040796      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:02:21.553: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:02:22.041521      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:02:23.041611      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:02:23.558: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:02:24.042040      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:02:25.042147      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:02:25.563: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:02:26.042965      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:02:27.043598      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:02:27.568: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:02:28.044489      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:02:29.044818      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:02:29.572: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:02:30.045341      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:02:31.045476      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:02:31.577: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:02:32.045724      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:02:33.045844      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:02:33.580: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:02:34.046443      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:02:35.046541      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:02:35.585: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:02:36.046623      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:02:37.047603      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:02:37.589: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:02:38.047800      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:02:39.048458      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:02:39.593: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:02:40.049236      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:02:41.049355      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:02:41.596: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:02:42.049555      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:02:43.049762      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:02:43.601: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:02:44.050670      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:02:45.050752      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:02:45.604: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:02:46.051474      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:02:47.051683      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:02:47.608: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:02:48.051962      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:02:49.052135      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:02:49.613: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:02:50.052480      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:02:51.053424      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:02:51.617: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:02:52.053590      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:02:53.053682      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:02:53.620: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:02:54.054047      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:02:55.054783      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:02:55.626: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:02:56.055589      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:02:57.055805      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:02:57.629: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:02:58.055886      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:02:59.055991      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:02:59.634: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:03:00.056235      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:03:01.057186      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:03:01.640: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:03:02.057349      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:03:03.057463      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:03:03.644: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:03:04.057592      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:03:05.057645      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:03:05.648: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:03:06.057833      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:03:07.058537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:03:07.653: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:03:08.059635      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:03:09.059847      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:03:09.657: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:03:10.060545      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:03:11.060582      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:03:11.662: INFO: Get pod liveness-e5ac0b9f-4432-4a6a-ad7a-a5787906aa8e in namespace container-probe-1690
  E0706 14:03:12.061168      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:03:13.061237      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 07/06/24 14:03:13.662
  Jul  6 14:03:13.681: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1690" for this suite. @ 07/06/24 14:03:13.684
• [242.603 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 07/06/24 14:03:13.696
  Jul  6 14:03:13.696: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename projected @ 07/06/24 14:03:13.697
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 14:03:13.716
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 14:03:13.718
  STEP: Creating the pod @ 07/06/24 14:03:13.72
  E0706 14:03:14.062018      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:03:15.062313      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:03:16.062548      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:03:16.268: INFO: Successfully updated pod "annotationupdate06887fec-f39b-43f8-a942-48fb02694e2a"
  E0706 14:03:17.063133      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:03:18.063244      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:03:19.063762      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:03:20.063950      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul  6 14:03:20.290: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9867" for this suite. @ 07/06/24 14:03:20.294
• [6.604 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 07/06/24 14:03:20.3
  Jul  6 14:03:20.301: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename field-validation @ 07/06/24 14:03:20.301
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 14:03:20.317
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 14:03:20.318
  STEP: apply creating a deployment @ 07/06/24 14:03:20.32
  Jul  6 14:03:20.332: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-614" for this suite. @ 07/06/24 14:03:20.334
• [0.041 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 07/06/24 14:03:20.343
  Jul  6 14:03:20.343: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename namespaces @ 07/06/24 14:03:20.343
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 14:03:20.356
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 14:03:20.358
  STEP: Read namespace status @ 07/06/24 14:03:20.36
  Jul  6 14:03:20.363: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 07/06/24 14:03:20.363
  Jul  6 14:03:20.368: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 07/06/24 14:03:20.368
  Jul  6 14:03:20.374: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  Jul  6 14:03:20.374: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2473" for this suite. @ 07/06/24 14:03:20.378
• [0.042 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 07/06/24 14:03:20.385
  Jul  6 14:03:20.385: INFO: >>> kubeConfig: /tmp/kubeconfig-3404942541
  STEP: Building a namespace api object, basename downward-api @ 07/06/24 14:03:20.386
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/06/24 14:03:20.401
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/06/24 14:03:20.403
  STEP: Creating a pod to test downward api env vars @ 07/06/24 14:03:20.404
  E0706 14:03:21.064025      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:03:22.064125      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:03:23.065037      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0706 14:03:24.065190      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/06/24 14:03:24.427
  Jul  6 14:03:24.430: INFO: Trying to get logs from node ip-172-31-9-199 pod downward-api-6a2c75bd-1f60-433d-aeca-d92dd05387ad container dapi-container: <nil>
  STEP: delete the pod @ 07/06/24 14:03:24.443
  Jul  6 14:03:24.461: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9390" for this suite. @ 07/06/24 14:03:24.464
• [4.084 seconds]
------------------------------
SSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:88
  Jul  6 14:03:24.470: INFO: Running AfterSuite actions on node 1
  Jul  6 14:03:24.470: INFO: Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:161
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:621
[ReportAfterSuite] PASSED [0.030 seconds]
------------------------------

Ran 388 of 7408 Specs in 6588.717 seconds
SUCCESS! -- 388 Passed | 0 Failed | 0 Pending | 7020 Skipped
PASS

Ginkgo ran 1 suite in 1h49m49.481398803s
Test Suite Passed
