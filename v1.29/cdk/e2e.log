  I0727 12:07:22.301257      20 e2e.go:117] Starting e2e run "0bbc8b59-ed09-445f-9767-6bc092ca0f0b" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1722082041 - will randomize all specs

Will run 388 of 7408 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:157
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:77
  Jul 27 12:07:22.573: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  Jul 27 12:07:22.575: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
  Jul 27 12:07:22.617: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  Jul 27 12:07:22.622: INFO: 5 / 5 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
  Jul 27 12:07:22.622: INFO: e2e test version: v1.29.7
  Jul 27 12:07:22.623: INFO: kube-apiserver version: v1.29.7
  Jul 27 12:07:22.623: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  Jul 27 12:07:22.628: INFO: Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.055 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 07/27/24 12:07:22.877
  Jul 27 12:07:22.877: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename dns @ 07/27/24 12:07:22.878
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:07:22.897
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:07:22.899
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-8863.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-8863.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 07/27/24 12:07:22.901
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-8863.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-8863.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 07/27/24 12:07:22.901
  STEP: creating a pod to probe /etc/hosts @ 07/27/24 12:07:22.901
  STEP: submitting the pod to kubernetes @ 07/27/24 12:07:22.901
  STEP: retrieving the pod @ 07/27/24 12:07:34.958
  STEP: looking for the results for each expected name from probers @ 07/27/24 12:07:34.962
  Jul 27 12:07:34.977: INFO: DNS probes using dns-8863/dns-test-53f0fced-df1e-4078-a7af-552bdcfeb4ea succeeded

  STEP: deleting the pod @ 07/27/24 12:07:34.977
  Jul 27 12:07:34.993: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8863" for this suite. @ 07/27/24 12:07:34.996
• [12.126 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 07/27/24 12:07:35.004
  Jul 27 12:07:35.004: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename projected @ 07/27/24 12:07:35.004
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:07:35.022
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:07:35.024
  STEP: Creating configMap with name cm-test-opt-del-736a96d6-7ced-4b10-8925-579c2828d672 @ 07/27/24 12:07:35.028
  STEP: Creating configMap with name cm-test-opt-upd-852907e9-410a-4830-a07b-9f50e58ac129 @ 07/27/24 12:07:35.033
  STEP: Creating the pod @ 07/27/24 12:07:35.038
  STEP: Deleting configmap cm-test-opt-del-736a96d6-7ced-4b10-8925-579c2828d672 @ 07/27/24 12:07:39.092
  STEP: Updating configmap cm-test-opt-upd-852907e9-410a-4830-a07b-9f50e58ac129 @ 07/27/24 12:07:39.098
  STEP: Creating configMap with name cm-test-opt-create-f1da4594-a815-4899-9ada-45202cd345ee @ 07/27/24 12:07:39.103
  STEP: waiting to observe update in volume @ 07/27/24 12:07:39.108
  Jul 27 12:08:55.451: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6722" for this suite. @ 07/27/24 12:08:55.455
• [80.458 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:902
  STEP: Creating a kubernetes client @ 07/27/24 12:08:55.462
  Jul 27 12:08:55.462: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename statefulset @ 07/27/24 12:08:55.463
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:08:55.481
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:08:55.483
  STEP: Creating service test in namespace statefulset-6017 @ 07/27/24 12:08:55.485
  STEP: Creating statefulset ss in namespace statefulset-6017 @ 07/27/24 12:08:55.491
  Jul 27 12:08:55.502: INFO: Found 0 stateful pods, waiting for 1
  Jul 27 12:09:05.501: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 07/27/24 12:09:05.508
  STEP: updating a scale subresource @ 07/27/24 12:09:05.511
  STEP: verifying the statefulset Spec.Replicas was modified @ 07/27/24 12:09:05.517
  STEP: Patch a scale subresource @ 07/27/24 12:09:05.52
  STEP: verifying the statefulset Spec.Replicas was modified @ 07/27/24 12:09:05.526
  Jul 27 12:09:05.532: INFO: Deleting all statefulset in ns statefulset-6017
  Jul 27 12:09:05.536: INFO: Scaling statefulset ss to 0
  Jul 27 12:09:15.552: INFO: Waiting for statefulset status.replicas updated to 0
  Jul 27 12:09:15.555: INFO: Deleting statefulset ss
  Jul 27 12:09:15.567: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6017" for this suite. @ 07/27/24 12:09:15.57
• [20.115 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 07/27/24 12:09:15.578
  Jul 27 12:09:15.578: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename projected @ 07/27/24 12:09:15.578
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:09:15.603
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:09:15.604
  STEP: Creating a pod to test downward API volume plugin @ 07/27/24 12:09:15.606
  STEP: Saw pod success @ 07/27/24 12:09:19.629
  Jul 27 12:09:19.632: INFO: Trying to get logs from node ip-172-31-18-96 pod downwardapi-volume-002f2c9f-346f-4272-8f14-62640a6b9726 container client-container: <nil>
  STEP: delete the pod @ 07/27/24 12:09:19.639
  Jul 27 12:09:19.656: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5554" for this suite. @ 07/27/24 12:09:19.659
• [4.088 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 07/27/24 12:09:19.666
  Jul 27 12:09:19.666: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename dns @ 07/27/24 12:09:19.667
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:09:19.682
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:09:19.684
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 07/27/24 12:09:19.686
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 07/27/24 12:09:19.686
  STEP: creating a pod to probe DNS @ 07/27/24 12:09:19.686
  STEP: submitting the pod to kubernetes @ 07/27/24 12:09:19.686
  STEP: retrieving the pod @ 07/27/24 12:09:21.706
  STEP: looking for the results for each expected name from probers @ 07/27/24 12:09:21.709
  Jul 27 12:09:21.725: INFO: DNS probes using dns-3287/dns-test-d1b4051c-6943-4921-9a2e-2c52354738b4 succeeded

  STEP: deleting the pod @ 07/27/24 12:09:21.725
  Jul 27 12:09:21.736: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3287" for this suite. @ 07/27/24 12:09:21.741
• [2.082 seconds]
------------------------------
SS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 07/27/24 12:09:21.748
  Jul 27 12:09:21.748: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename dns @ 07/27/24 12:09:21.749
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:09:21.766
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:09:21.768
  STEP: Creating a test headless service @ 07/27/24 12:09:21.769
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-2467.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-2467.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 07/27/24 12:09:21.773
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-2467.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-2467.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 07/27/24 12:09:21.773
  STEP: creating a pod to probe DNS @ 07/27/24 12:09:21.773
  STEP: submitting the pod to kubernetes @ 07/27/24 12:09:21.773
  STEP: retrieving the pod @ 07/27/24 12:09:23.795
  STEP: looking for the results for each expected name from probers @ 07/27/24 12:09:23.801
  Jul 27 12:09:23.818: INFO: DNS probes using dns-2467/dns-test-f364e259-4915-438d-8a9d-3877f17adfc2 succeeded

  STEP: deleting the pod @ 07/27/24 12:09:23.818
  STEP: deleting the test headless service @ 07/27/24 12:09:23.836
  Jul 27 12:09:23.851: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2467" for this suite. @ 07/27/24 12:09:23.855
• [2.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 07/27/24 12:09:23.863
  Jul 27 12:09:23.863: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename secrets @ 07/27/24 12:09:23.863
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:09:23.879
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:09:23.881
  STEP: Creating secret with name secret-test-83781e23-a447-4ad5-b8c7-1353a35f02ee @ 07/27/24 12:09:23.904
  STEP: Creating a pod to test consume secrets @ 07/27/24 12:09:23.908
  STEP: Saw pod success @ 07/27/24 12:09:25.924
  Jul 27 12:09:25.927: INFO: Trying to get logs from node ip-172-31-18-96 pod pod-secrets-a9690e7a-0c42-4092-8e66-2729a60f4c5b container secret-volume-test: <nil>
  STEP: delete the pod @ 07/27/24 12:09:25.934
  Jul 27 12:09:25.952: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9893" for this suite. @ 07/27/24 12:09:25.956
  STEP: Destroying namespace "secret-namespace-2596" for this suite. @ 07/27/24 12:09:25.966
• [2.113 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 07/27/24 12:09:25.977
  Jul 27 12:09:25.977: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 07/27/24 12:09:25.977
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:09:25.997
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:09:25.999
  STEP: Setting up the test @ 07/27/24 12:09:26.001
  STEP: Creating hostNetwork=false pod @ 07/27/24 12:09:26.001
  STEP: Creating hostNetwork=true pod @ 07/27/24 12:09:28.025
  STEP: Running the test @ 07/27/24 12:09:32.051
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 07/27/24 12:09:32.051
  Jul 27 12:09:32.051: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-84 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 27 12:09:32.051: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  Jul 27 12:09:32.052: INFO: ExecWithOptions: Clientset creation
  Jul 27 12:09:32.052: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-84/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Jul 27 12:09:32.102: INFO: Exec stderr: ""
  Jul 27 12:09:32.102: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-84 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 27 12:09:32.102: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  Jul 27 12:09:32.102: INFO: ExecWithOptions: Clientset creation
  Jul 27 12:09:32.102: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-84/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Jul 27 12:09:32.149: INFO: Exec stderr: ""
  Jul 27 12:09:32.149: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-84 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 27 12:09:32.149: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  Jul 27 12:09:32.149: INFO: ExecWithOptions: Clientset creation
  Jul 27 12:09:32.149: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-84/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Jul 27 12:09:32.193: INFO: Exec stderr: ""
  Jul 27 12:09:32.193: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-84 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 27 12:09:32.193: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  Jul 27 12:09:32.194: INFO: ExecWithOptions: Clientset creation
  Jul 27 12:09:32.194: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-84/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Jul 27 12:09:32.241: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 07/27/24 12:09:32.241
  Jul 27 12:09:32.241: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-84 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 27 12:09:32.241: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  Jul 27 12:09:32.241: INFO: ExecWithOptions: Clientset creation
  Jul 27 12:09:32.241: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-84/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Jul 27 12:09:32.297: INFO: Exec stderr: ""
  Jul 27 12:09:32.297: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-84 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 27 12:09:32.297: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  Jul 27 12:09:32.298: INFO: ExecWithOptions: Clientset creation
  Jul 27 12:09:32.298: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-84/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Jul 27 12:09:32.341: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 07/27/24 12:09:32.341
  Jul 27 12:09:32.341: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-84 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 27 12:09:32.341: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  Jul 27 12:09:32.341: INFO: ExecWithOptions: Clientset creation
  Jul 27 12:09:32.341: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-84/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Jul 27 12:09:32.386: INFO: Exec stderr: ""
  Jul 27 12:09:32.386: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-84 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 27 12:09:32.386: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  Jul 27 12:09:32.386: INFO: ExecWithOptions: Clientset creation
  Jul 27 12:09:32.386: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-84/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Jul 27 12:09:32.429: INFO: Exec stderr: ""
  Jul 27 12:09:32.429: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-84 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 27 12:09:32.429: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  Jul 27 12:09:32.430: INFO: ExecWithOptions: Clientset creation
  Jul 27 12:09:32.430: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-84/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Jul 27 12:09:32.481: INFO: Exec stderr: ""
  Jul 27 12:09:32.481: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-84 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 27 12:09:32.481: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  Jul 27 12:09:32.482: INFO: ExecWithOptions: Clientset creation
  Jul 27 12:09:32.482: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-84/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Jul 27 12:09:32.529: INFO: Exec stderr: ""
  Jul 27 12:09:32.529: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-84" for this suite. @ 07/27/24 12:09:32.533
• [6.564 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 07/27/24 12:09:32.541
  Jul 27 12:09:32.541: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename configmap @ 07/27/24 12:09:32.541
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:09:32.557
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:09:32.559
  Jul 27 12:09:32.595: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3917" for this suite. @ 07/27/24 12:09:32.598
• [0.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 07/27/24 12:09:32.605
  Jul 27 12:09:32.605: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename container-probe @ 07/27/24 12:09:32.606
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:09:32.623
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:09:32.625
  STEP: Creating pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690 @ 07/27/24 12:09:32.627
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/27/24 12:09:34.645
  Jul 27 12:09:34.648: INFO: Initial restart count of pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 is 0
  Jul 27 12:09:34.652: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:09:36.657: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:09:38.662: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:09:40.668: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:09:42.672: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:09:44.677: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:09:46.682: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:09:48.687: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:09:50.692: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:09:52.696: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:09:54.701: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:09:54.701: INFO: Restart count of pod container-probe-690/liveness-2afa7923-77f3-4658-a86a-5783ff831439 is now 1 (20.052803315s elapsed)
  Jul 27 12:09:56.706: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:09:58.710: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:10:00.715: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:10:02.721: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:10:04.726: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:10:06.732: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:10:08.737: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:10:10.741: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:10:12.746: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:10:14.752: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:10:14.752: INFO: Restart count of pod container-probe-690/liveness-2afa7923-77f3-4658-a86a-5783ff831439 is now 2 (40.10404434s elapsed)
  Jul 27 12:10:16.758: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:10:18.762: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:10:20.768: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:10:22.771: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:10:24.777: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:10:26.782: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:10:28.788: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:10:30.793: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:10:32.799: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:10:34.803: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:10:34.803: INFO: Restart count of pod container-probe-690/liveness-2afa7923-77f3-4658-a86a-5783ff831439 is now 3 (1m0.155304599s elapsed)
  Jul 27 12:10:36.809: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:10:38.814: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:10:40.820: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:10:42.824: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:10:44.829: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:10:46.833: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:10:48.837: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:10:50.842: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:10:52.847: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:10:54.851: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:10:54.851: INFO: Restart count of pod container-probe-690/liveness-2afa7923-77f3-4658-a86a-5783ff831439 is now 4 (1m20.202796095s elapsed)
  Jul 27 12:10:56.857: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:10:58.861: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:11:00.866: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:11:02.872: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:11:04.877: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:11:06.882: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:11:08.886: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:11:10.891: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:11:12.897: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:11:14.901: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:11:16.906: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:11:18.910: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:11:20.915: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:11:22.926: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:11:24.930: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:11:26.937: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:11:28.941: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:11:30.946: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:11:32.951: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:11:34.955: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:11:36.959: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:11:38.964: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:11:40.968: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:11:42.976: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:11:44.981: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:11:46.987: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:11:48.991: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:11:50.995: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:11:52.999: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:11:55.005: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:11:57.011: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:11:59.016: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:12:01.020: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:12:03.026: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:12:05.030: INFO: Get pod liveness-2afa7923-77f3-4658-a86a-5783ff831439 in namespace container-probe-690
  Jul 27 12:12:05.030: INFO: Restart count of pod container-probe-690/liveness-2afa7923-77f3-4658-a86a-5783ff831439 is now 5 (2m30.381702977s elapsed)
  STEP: deleting the pod @ 07/27/24 12:12:05.03
  Jul 27 12:12:05.045: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-690" for this suite. @ 07/27/24 12:12:05.049
• [152.451 seconds]
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 07/27/24 12:12:05.056
  Jul 27 12:12:05.056: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename downward-api @ 07/27/24 12:12:05.057
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:12:05.074
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:12:05.076
  STEP: Creating a pod to test downward API volume plugin @ 07/27/24 12:12:05.078
  STEP: Saw pod success @ 07/27/24 12:12:09.098
  Jul 27 12:12:09.102: INFO: Trying to get logs from node ip-172-31-18-96 pod downwardapi-volume-9a487228-8cb7-4fba-abf8-d1fa1e55cf26 container client-container: <nil>
  STEP: delete the pod @ 07/27/24 12:12:09.112
  Jul 27 12:12:09.128: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4334" for this suite. @ 07/27/24 12:12:09.132
• [4.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 07/27/24 12:12:09.14
  Jul 27 12:12:09.140: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename init-container @ 07/27/24 12:12:09.141
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:12:09.156
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:12:09.158
  STEP: creating the pod @ 07/27/24 12:12:09.16
  Jul 27 12:12:09.160: INFO: PodSpec: initContainers in spec.initContainers
  Jul 27 12:12:14.113: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-1258" for this suite. @ 07/27/24 12:12:14.117
• [4.984 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:784
  STEP: Creating a kubernetes client @ 07/27/24 12:12:14.124
  Jul 27 12:12:14.124: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename job @ 07/27/24 12:12:14.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:12:14.14
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:12:14.142
  STEP: Creating a job @ 07/27/24 12:12:14.144
  STEP: Ensure pods equal to parallelism count is attached to the job @ 07/27/24 12:12:14.15
  STEP: patching /status @ 07/27/24 12:12:16.156
  STEP: updating /status @ 07/27/24 12:12:16.163
  STEP: get /status @ 07/27/24 12:12:16.169
  Jul 27 12:12:16.172: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4555" for this suite. @ 07/27/24 12:12:16.175
• [2.058 seconds]
------------------------------
SS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:170
  STEP: Creating a kubernetes client @ 07/27/24 12:12:16.183
  Jul 27 12:12:16.183: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename configmap @ 07/27/24 12:12:16.183
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:12:16.201
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:12:16.202
  STEP: creating a ConfigMap @ 07/27/24 12:12:16.204
  STEP: fetching the ConfigMap @ 07/27/24 12:12:16.208
  STEP: patching the ConfigMap @ 07/27/24 12:12:16.211
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 07/27/24 12:12:16.215
  STEP: deleting the ConfigMap by collection with a label selector @ 07/27/24 12:12:16.219
  STEP: listing all ConfigMaps in test namespace @ 07/27/24 12:12:16.227
  Jul 27 12:12:16.229: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4067" for this suite. @ 07/27/24 12:12:16.232
• [0.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 07/27/24 12:12:16.238
  Jul 27 12:12:16.238: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename container-probe @ 07/27/24 12:12:16.238
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:12:16.253
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:12:16.255
  Jul 27 12:13:16.272: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1868" for this suite. @ 07/27/24 12:13:16.275
• [60.045 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 07/27/24 12:13:16.283
  Jul 27 12:13:16.283: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename endpointslicemirroring @ 07/27/24 12:13:16.284
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:13:16.303
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:13:16.305
  STEP: mirroring a new custom Endpoint @ 07/27/24 12:13:16.319
  Jul 27 12:13:16.326: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 07/27/24 12:13:18.332
  Jul 27 12:13:18.340: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  STEP: mirroring deletion of a custom Endpoint @ 07/27/24 12:13:20.344
  Jul 27 12:13:20.354: INFO: Waiting for 0 EndpointSlices to exist, got 1
  Jul 27 12:13:22.358: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-8606" for this suite. @ 07/27/24 12:13:22.361
• [6.085 seconds]
------------------------------
S
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 07/27/24 12:13:22.368
  Jul 27 12:13:22.368: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename sched-preemption @ 07/27/24 12:13:22.369
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:13:22.386
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:13:22.388
  Jul 27 12:13:22.401: INFO: Waiting up to 1m0s for all nodes to be ready
  Jul 27 12:14:22.407: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 07/27/24 12:14:22.411
  Jul 27 12:14:22.432: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Jul 27 12:14:22.438: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Jul 27 12:14:22.455: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Jul 27 12:14:22.464: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Jul 27 12:14:22.481: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Jul 27 12:14:22.488: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 07/27/24 12:14:22.488
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 07/27/24 12:14:24.511
  Jul 27 12:14:28.603: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-4666" for this suite. @ 07/27/24 12:14:28.607
• [66.247 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:855
  STEP: Creating a kubernetes client @ 07/27/24 12:14:28.615
  Jul 27 12:14:28.615: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename job @ 07/27/24 12:14:28.616
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:14:28.632
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:14:28.634
  STEP: Creating a suspended job @ 07/27/24 12:14:28.638
  STEP: Patching the Job @ 07/27/24 12:14:28.643
  STEP: Watching for Job to be patched @ 07/27/24 12:14:28.657
  Jul 27 12:14:28.658: INFO: Event ADDED observed for Job e2e-6xfxk in namespace job-4118 with labels: map[e2e-job-label:e2e-6xfxk] and annotations: map[]
  Jul 27 12:14:28.658: INFO: Event MODIFIED observed for Job e2e-6xfxk in namespace job-4118 with labels: map[e2e-job-label:e2e-6xfxk] and annotations: map[]
  Jul 27 12:14:28.658: INFO: Event MODIFIED found for Job e2e-6xfxk in namespace job-4118 with labels: map[e2e-6xfxk:patched e2e-job-label:e2e-6xfxk] and annotations: map[]
  STEP: Updating the job @ 07/27/24 12:14:28.658
  STEP: Watching for Job to be updated @ 07/27/24 12:14:28.666
  Jul 27 12:14:28.667: INFO: Event MODIFIED found for Job e2e-6xfxk in namespace job-4118 with labels: map[e2e-6xfxk:patched e2e-job-label:e2e-6xfxk] and annotations: map[updated:true]
  Jul 27 12:14:28.667: INFO: Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 07/27/24 12:14:28.667
  Jul 27 12:14:28.670: INFO: Job: e2e-6xfxk as labels: map[e2e-6xfxk:patched e2e-job-label:e2e-6xfxk]
  STEP: Waiting for job to complete @ 07/27/24 12:14:28.67
  STEP: Delete a job collection with a labelselector @ 07/27/24 12:14:36.676
  STEP: Watching for Job to be deleted @ 07/27/24 12:14:36.685
  Jul 27 12:14:36.686: INFO: Event MODIFIED observed for Job e2e-6xfxk in namespace job-4118 with labels: map[e2e-6xfxk:patched e2e-job-label:e2e-6xfxk] and annotations: map[updated:true]
  Jul 27 12:14:36.686: INFO: Event MODIFIED observed for Job e2e-6xfxk in namespace job-4118 with labels: map[e2e-6xfxk:patched e2e-job-label:e2e-6xfxk] and annotations: map[updated:true]
  Jul 27 12:14:36.686: INFO: Event MODIFIED observed for Job e2e-6xfxk in namespace job-4118 with labels: map[e2e-6xfxk:patched e2e-job-label:e2e-6xfxk] and annotations: map[updated:true]
  Jul 27 12:14:36.686: INFO: Event MODIFIED observed for Job e2e-6xfxk in namespace job-4118 with labels: map[e2e-6xfxk:patched e2e-job-label:e2e-6xfxk] and annotations: map[updated:true]
  Jul 27 12:14:36.686: INFO: Event MODIFIED observed for Job e2e-6xfxk in namespace job-4118 with labels: map[e2e-6xfxk:patched e2e-job-label:e2e-6xfxk] and annotations: map[updated:true]
  Jul 27 12:14:36.686: INFO: Event DELETED found for Job e2e-6xfxk in namespace job-4118 with labels: map[e2e-6xfxk:patched e2e-job-label:e2e-6xfxk] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 07/27/24 12:14:36.686
  Jul 27 12:14:36.690: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4118" for this suite. @ 07/27/24 12:14:36.693
• [8.090 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1031
  STEP: Creating a kubernetes client @ 07/27/24 12:14:36.705
  Jul 27 12:14:36.705: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename statefulset @ 07/27/24 12:14:36.706
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:14:36.724
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:14:36.726
  STEP: Creating service test in namespace statefulset-7621 @ 07/27/24 12:14:36.728
  STEP: Creating statefulset ss in namespace statefulset-7621 @ 07/27/24 12:14:36.736
  Jul 27 12:14:36.743: INFO: Found 0 stateful pods, waiting for 1
  Jul 27 12:14:46.749: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 07/27/24 12:14:46.756
  STEP: Getting /status @ 07/27/24 12:14:46.766
  Jul 27 12:14:46.770: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 07/27/24 12:14:46.77
  Jul 27 12:14:46.779: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 07/27/24 12:14:46.779
  Jul 27 12:14:46.780: INFO: Observed &StatefulSet event: ADDED
  Jul 27 12:14:46.780: INFO: Found Statefulset ss in namespace statefulset-7621 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jul 27 12:14:46.780: INFO: Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 07/27/24 12:14:46.781
  Jul 27 12:14:46.781: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Jul 27 12:14:46.786: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 07/27/24 12:14:46.786
  Jul 27 12:14:46.787: INFO: Observed &StatefulSet event: ADDED
  Jul 27 12:14:46.787: INFO: Deleting all statefulset in ns statefulset-7621
  Jul 27 12:14:46.790: INFO: Scaling statefulset ss to 0
  Jul 27 12:14:56.805: INFO: Waiting for statefulset status.replicas updated to 0
  Jul 27 12:14:56.809: INFO: Deleting statefulset ss
  Jul 27 12:14:56.822: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7621" for this suite. @ 07/27/24 12:14:56.826
• [20.127 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 07/27/24 12:14:56.834
  Jul 27 12:14:56.834: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename container-runtime @ 07/27/24 12:14:56.834
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:14:56.848
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:14:56.85
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 07/27/24 12:14:56.858
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 07/27/24 12:15:12.945
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 07/27/24 12:15:12.949
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 07/27/24 12:15:12.956
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 07/27/24 12:15:12.956
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 07/27/24 12:15:12.982
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 07/27/24 12:15:16
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 07/27/24 12:15:17.007
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 07/27/24 12:15:17.014
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 07/27/24 12:15:17.014
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 07/27/24 12:15:17.038
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 07/27/24 12:15:18.046
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 07/27/24 12:15:20.06
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 07/27/24 12:15:20.066
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 07/27/24 12:15:20.067
  Jul 27 12:15:20.093: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6883" for this suite. @ 07/27/24 12:15:20.098
• [23.273 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 07/27/24 12:15:20.107
  Jul 27 12:15:20.107: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename webhook @ 07/27/24 12:15:20.108
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:15:20.126
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:15:20.128
  STEP: Setting up server cert @ 07/27/24 12:15:20.151
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/27/24 12:15:20.433
  STEP: Deploying the webhook pod @ 07/27/24 12:15:20.441
  STEP: Wait for the deployment to be ready @ 07/27/24 12:15:20.455
  Jul 27 12:15:20.469: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/27/24 12:15:22.48
  STEP: Verifying the service has paired with the endpoint @ 07/27/24 12:15:22.491
  Jul 27 12:15:23.492: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jul 27 12:15:23.500: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-7690-crds.webhook.example.com via the AdmissionRegistration API @ 07/27/24 12:15:24.012
  STEP: Creating a custom resource that should be mutated by the webhook @ 07/27/24 12:15:24.026
  Jul 27 12:15:26.617: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1648" for this suite. @ 07/27/24 12:15:26.621
  STEP: Destroying namespace "webhook-markers-1383" for this suite. @ 07/27/24 12:15:26.63
• [6.529 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 07/27/24 12:15:26.637
  Jul 27 12:15:26.637: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename replication-controller @ 07/27/24 12:15:26.637
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:15:26.654
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:15:26.656
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 07/27/24 12:15:26.658
  STEP: When a replication controller with a matching selector is created @ 07/27/24 12:15:28.676
  STEP: Then the orphan pod is adopted @ 07/27/24 12:15:28.681
  Jul 27 12:15:29.689: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7021" for this suite. @ 07/27/24 12:15:29.693
• [3.064 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 07/27/24 12:15:29.701
  Jul 27 12:15:29.701: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename cronjob @ 07/27/24 12:15:29.702
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:15:29.718
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:15:29.72
  STEP: Creating a suspended cronjob @ 07/27/24 12:15:29.722
  STEP: Ensuring no jobs are scheduled @ 07/27/24 12:15:29.728
  STEP: Ensuring no job exists by listing jobs explicitly @ 07/27/24 12:20:29.737
  STEP: Removing cronjob @ 07/27/24 12:20:29.74
  Jul 27 12:20:29.747: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3307" for this suite. @ 07/27/24 12:20:29.75
• [300.057 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 07/27/24 12:20:29.758
  Jul 27 12:20:29.758: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename configmap @ 07/27/24 12:20:29.759
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:20:29.775
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:20:29.776
  STEP: Creating configMap with name configmap-test-volume-4fdb06a9-8779-450f-bebc-8486ec6519ce @ 07/27/24 12:20:29.778
  STEP: Creating a pod to test consume configMaps @ 07/27/24 12:20:29.783
  STEP: Saw pod success @ 07/27/24 12:20:33.804
  Jul 27 12:20:33.807: INFO: Trying to get logs from node ip-172-31-18-96 pod pod-configmaps-a61cca00-7e8f-4169-81ca-1974ca851e7e container configmap-volume-test: <nil>
  STEP: delete the pod @ 07/27/24 12:20:33.823
  Jul 27 12:20:33.840: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6577" for this suite. @ 07/27/24 12:20:33.844
• [4.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 07/27/24 12:20:33.85
  Jul 27 12:20:33.850: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename replicaset @ 07/27/24 12:20:33.851
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:20:33.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:20:33.868
  Jul 27 12:20:33.881: INFO: Pod name sample-pod: Found 0 pods out of 1
  Jul 27 12:20:38.886: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/27/24 12:20:38.886
  STEP: Scaling up "test-rs" replicaset @ 07/27/24 12:20:38.886
  Jul 27 12:20:38.894: INFO: Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 07/27/24 12:20:38.894
  Jul 27 12:20:38.904: INFO: observed ReplicaSet test-rs in namespace replicaset-323 with ReadyReplicas 1, AvailableReplicas 1
  Jul 27 12:20:38.920: INFO: observed ReplicaSet test-rs in namespace replicaset-323 with ReadyReplicas 1, AvailableReplicas 1
  Jul 27 12:20:38.934: INFO: observed ReplicaSet test-rs in namespace replicaset-323 with ReadyReplicas 1, AvailableReplicas 1
  Jul 27 12:20:38.949: INFO: observed ReplicaSet test-rs in namespace replicaset-323 with ReadyReplicas 1, AvailableReplicas 1
  Jul 27 12:20:39.637: INFO: observed ReplicaSet test-rs in namespace replicaset-323 with ReadyReplicas 2, AvailableReplicas 2
  Jul 27 12:20:42.628: INFO: observed Replicaset test-rs in namespace replicaset-323 with ReadyReplicas 3 found true
  Jul 27 12:20:42.628: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-323" for this suite. @ 07/27/24 12:20:42.632
• [8.790 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:155
  STEP: Creating a kubernetes client @ 07/27/24 12:20:42.641
  Jul 27 12:20:42.641: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename var-expansion @ 07/27/24 12:20:42.641
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:20:42.658
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:20:42.66
  Jul 27 12:20:44.678: INFO: Deleting pod "var-expansion-d083a9f3-a734-437e-af67-c296d8098824" in namespace "var-expansion-607"
  Jul 27 12:20:44.686: INFO: Wait up to 5m0s for pod "var-expansion-d083a9f3-a734-437e-af67-c296d8098824" to be fully deleted
  Jul 27 12:20:46.694: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-607" for this suite. @ 07/27/24 12:20:46.697
• [4.064 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 07/27/24 12:20:46.705
  Jul 27 12:20:46.705: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename webhook @ 07/27/24 12:20:46.705
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:20:46.724
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:20:46.725
  STEP: Setting up server cert @ 07/27/24 12:20:46.75
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/27/24 12:20:46.867
  STEP: Deploying the webhook pod @ 07/27/24 12:20:46.876
  STEP: Wait for the deployment to be ready @ 07/27/24 12:20:46.888
  Jul 27 12:20:46.895: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/27/24 12:20:48.907
  STEP: Verifying the service has paired with the endpoint @ 07/27/24 12:20:48.917
  Jul 27 12:20:49.918: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 07/27/24 12:20:49.925
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 07/27/24 12:20:49.941
  STEP: Creating a configMap that should not be mutated @ 07/27/24 12:20:49.947
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 07/27/24 12:20:49.957
  STEP: Creating a configMap that should be mutated @ 07/27/24 12:20:49.964
  Jul 27 12:20:50.023: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8544" for this suite. @ 07/27/24 12:20:50.026
  STEP: Destroying namespace "webhook-markers-1773" for this suite. @ 07/27/24 12:20:50.036
• [3.338 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 07/27/24 12:20:50.043
  Jul 27 12:20:50.043: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename projected @ 07/27/24 12:20:50.043
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:20:50.057
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:20:50.059
  STEP: Creating a pod to test downward API volume plugin @ 07/27/24 12:20:50.061
  STEP: Saw pod success @ 07/27/24 12:20:52.077
  Jul 27 12:20:52.081: INFO: Trying to get logs from node ip-172-31-18-96 pod downwardapi-volume-b0b44b83-d495-4cee-a639-f02f8dfc4248 container client-container: <nil>
  STEP: delete the pod @ 07/27/24 12:20:52.088
  Jul 27 12:20:52.107: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9120" for this suite. @ 07/27/24 12:20:52.111
• [2.076 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1373
  STEP: Creating a kubernetes client @ 07/27/24 12:20:52.119
  Jul 27 12:20:52.119: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename kubectl @ 07/27/24 12:20:52.12
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:20:52.136
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:20:52.14
  STEP: validating cluster-info @ 07/27/24 12:20:52.143
  Jul 27 12:20:52.143: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-5340 cluster-info'
  Jul 27 12:20:52.191: INFO: stderr: ""
  Jul 27 12:20:52.191: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.152.183.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  Jul 27 12:20:52.191: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5340" for this suite. @ 07/27/24 12:20:52.194
• [0.081 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:611
  STEP: Creating a kubernetes client @ 07/27/24 12:20:52.2
  Jul 27 12:20:52.200: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename security-context-test @ 07/27/24 12:20:52.201
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:20:52.215
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:20:52.217
  Jul 27 12:20:56.246: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-6016" for this suite. @ 07/27/24 12:20:56.249
• [4.055 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:344
  STEP: Creating a kubernetes client @ 07/27/24 12:20:56.255
  Jul 27 12:20:56.255: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename kubectl @ 07/27/24 12:20:56.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:20:56.274
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:20:56.275
  STEP: creating a replication controller @ 07/27/24 12:20:56.277
  Jul 27 12:20:56.277: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-4967 create -f -'
  Jul 27 12:20:56.373: INFO: stderr: ""
  Jul 27 12:20:56.373: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 07/27/24 12:20:56.373
  Jul 27 12:20:56.373: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-4967 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jul 27 12:20:56.421: INFO: stderr: ""
  Jul 27 12:20:56.421: INFO: stdout: "update-demo-nautilus-jhxf7 update-demo-nautilus-mq7gs "
  Jul 27 12:20:56.421: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-4967 get pods update-demo-nautilus-jhxf7 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jul 27 12:20:56.465: INFO: stderr: ""
  Jul 27 12:20:56.465: INFO: stdout: ""
  Jul 27 12:20:56.465: INFO: update-demo-nautilus-jhxf7 is created but not running
  Jul 27 12:21:01.465: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-4967 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jul 27 12:21:01.512: INFO: stderr: ""
  Jul 27 12:21:01.512: INFO: stdout: "update-demo-nautilus-jhxf7 update-demo-nautilus-mq7gs "
  Jul 27 12:21:01.512: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-4967 get pods update-demo-nautilus-jhxf7 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jul 27 12:21:01.554: INFO: stderr: ""
  Jul 27 12:21:01.554: INFO: stdout: "true"
  Jul 27 12:21:01.554: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-4967 get pods update-demo-nautilus-jhxf7 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jul 27 12:21:01.596: INFO: stderr: ""
  Jul 27 12:21:01.596: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jul 27 12:21:01.596: INFO: validating pod update-demo-nautilus-jhxf7
  Jul 27 12:21:01.601: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jul 27 12:21:01.601: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jul 27 12:21:01.601: INFO: update-demo-nautilus-jhxf7 is verified up and running
  Jul 27 12:21:01.601: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-4967 get pods update-demo-nautilus-mq7gs -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jul 27 12:21:01.644: INFO: stderr: ""
  Jul 27 12:21:01.644: INFO: stdout: "true"
  Jul 27 12:21:01.644: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-4967 get pods update-demo-nautilus-mq7gs -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jul 27 12:21:01.687: INFO: stderr: ""
  Jul 27 12:21:01.687: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jul 27 12:21:01.687: INFO: validating pod update-demo-nautilus-mq7gs
  Jul 27 12:21:01.692: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jul 27 12:21:01.693: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jul 27 12:21:01.693: INFO: update-demo-nautilus-mq7gs is verified up and running
  STEP: using delete to clean up resources @ 07/27/24 12:21:01.693
  Jul 27 12:21:01.693: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-4967 delete --grace-period=0 --force -f -'
  Jul 27 12:21:01.740: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jul 27 12:21:01.740: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Jul 27 12:21:01.740: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-4967 get rc,svc -l name=update-demo --no-headers'
  Jul 27 12:21:01.807: INFO: stderr: "No resources found in kubectl-4967 namespace.\n"
  Jul 27 12:21:01.807: INFO: stdout: ""
  Jul 27 12:21:01.807: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-4967 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Jul 27 12:21:01.855: INFO: stderr: ""
  Jul 27 12:21:01.855: INFO: stdout: ""
  Jul 27 12:21:01.855: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4967" for this suite. @ 07/27/24 12:21:01.859
• [5.611 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 07/27/24 12:21:01.866
  Jul 27 12:21:01.866: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename projected @ 07/27/24 12:21:01.867
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:21:01.882
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:21:01.884
  STEP: Creating projection with secret that has name projected-secret-test-023dd98d-fe80-4a51-a786-50a9ac575191 @ 07/27/24 12:21:01.885
  STEP: Creating a pod to test consume secrets @ 07/27/24 12:21:01.89
  STEP: Saw pod success @ 07/27/24 12:21:05.915
  Jul 27 12:21:05.918: INFO: Trying to get logs from node ip-172-31-18-96 pod pod-projected-secrets-c3538ed0-c258-408b-84af-9823048deb4e container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 07/27/24 12:21:05.924
  Jul 27 12:21:05.942: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9277" for this suite. @ 07/27/24 12:21:05.946
• [4.086 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:78
  STEP: Creating a kubernetes client @ 07/27/24 12:21:05.952
  Jul 27 12:21:05.952: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename resourcequota @ 07/27/24 12:21:05.952
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:21:05.968
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:21:05.969
  STEP: Counting existing ResourceQuota @ 07/27/24 12:21:05.971
  STEP: Creating a ResourceQuota @ 07/27/24 12:21:10.975
  STEP: Ensuring resource quota status is calculated @ 07/27/24 12:21:10.98
  Jul 27 12:21:12.984: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7044" for this suite. @ 07/27/24 12:21:12.988
• [7.044 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 07/27/24 12:21:12.997
  Jul 27 12:21:12.997: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/27/24 12:21:12.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:21:13.019
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:21:13.02
  STEP: fetching the /apis discovery document @ 07/27/24 12:21:13.022
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 07/27/24 12:21:13.023
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 07/27/24 12:21:13.023
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 07/27/24 12:21:13.023
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 07/27/24 12:21:13.024
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 07/27/24 12:21:13.024
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 07/27/24 12:21:13.024
  Jul 27 12:21:13.024: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-9500" for this suite. @ 07/27/24 12:21:13.027
• [0.036 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:430
  STEP: Creating a kubernetes client @ 07/27/24 12:21:13.034
  Jul 27 12:21:13.034: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename pv @ 07/27/24 12:21:13.034
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:21:13.049
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:21:13.05
  STEP: Creating initial PV and PVC @ 07/27/24 12:21:13.052
  Jul 27 12:21:13.052: INFO: Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-537" @ 07/27/24 12:21:13.065
  STEP: Listing PVCs in namespace "pv-537" @ 07/27/24 12:21:13.068
  STEP: Patching the PV "pv-537-5c7mq" @ 07/27/24 12:21:13.071
  STEP: Patching the PVC "pvc-s9pmq" @ 07/27/24 12:21:13.08
  STEP: Getting PV "pv-537-5c7mq" @ 07/27/24 12:21:13.086
  STEP: Getting PVC "pvc-s9pmq" @ 07/27/24 12:21:13.089
  STEP: Deleting PVC "pvc-s9pmq" @ 07/27/24 12:21:13.093
  STEP: Confirm deletion of PVC "pvc-s9pmq" @ 07/27/24 12:21:13.099
  STEP: Deleting PV "pv-537-5c7mq" @ 07/27/24 12:21:15.106
  STEP: Confirm deletion of PV "pv-537-5c7mq" @ 07/27/24 12:21:15.113
  STEP: Recreating another PV & PVC @ 07/27/24 12:21:17.121
  Jul 27 12:21:17.121: INFO: Creating a PV followed by a PVC
  STEP: Updating the PV "pv-537-dsxf6" @ 07/27/24 12:21:17.133
  STEP: Updating the PVC "pvc-v4z2f" @ 07/27/24 12:21:17.143
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-v4z2f=updated" @ 07/27/24 12:21:17.15
  STEP: Deleting PVC "pvc-v4z2f" via DeleteCollection @ 07/27/24 12:21:17.154
  STEP: Confirm deletion of PVC "pvc-v4z2f" @ 07/27/24 12:21:17.163
  STEP: Deleting PV "pv-537-dsxf6" via DeleteCollection @ 07/27/24 12:21:19.17
  STEP: Confirm deletion of PV "pv-537-dsxf6" @ 07/27/24 12:21:19.178
  Jul 27 12:21:21.185: INFO: AfterEach: deleting 1 PVCs and 1 PVs...
  Jul 27 12:21:21.185: INFO: Deleting PersistentVolumeClaim "pvc-v4z2f"
  Jul 27 12:21:21.189: INFO: Deleting PersistentVolume "pv-537-dsxf6"
  Jul 27 12:21:21.192: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-537" for this suite. @ 07/27/24 12:21:21.196
• [8.169 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:442
  STEP: Creating a kubernetes client @ 07/27/24 12:21:21.203
  Jul 27 12:21:21.203: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/27/24 12:21:21.204
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:21:21.22
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:21:21.223
  STEP: set up a multi version CRD @ 07/27/24 12:21:21.224
  Jul 27 12:21:21.225: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: mark a version not serverd @ 07/27/24 12:21:24.454
  STEP: check the unserved version gets removed @ 07/27/24 12:21:24.469
  STEP: check the other version is not changed @ 07/27/24 12:21:25.223
  Jul 27 12:21:27.654: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6036" for this suite. @ 07/27/24 12:21:27.661
• [6.466 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 07/27/24 12:21:27.669
  Jul 27 12:21:27.669: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename downward-api @ 07/27/24 12:21:27.67
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:21:27.692
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:21:27.694
  STEP: Creating a pod to test downward API volume plugin @ 07/27/24 12:21:27.696
  STEP: Saw pod success @ 07/27/24 12:21:31.722
  Jul 27 12:21:31.726: INFO: Trying to get logs from node ip-172-31-18-96 pod downwardapi-volume-358641d7-641d-49c6-930a-783bdedb044c container client-container: <nil>
  STEP: delete the pod @ 07/27/24 12:21:31.737
  Jul 27 12:21:31.755: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9228" for this suite. @ 07/27/24 12:21:31.759
• [4.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 07/27/24 12:21:31.766
  Jul 27 12:21:31.766: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename webhook @ 07/27/24 12:21:31.766
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:21:31.78
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:21:31.782
  STEP: Setting up server cert @ 07/27/24 12:21:31.808
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/27/24 12:21:32.014
  STEP: Deploying the webhook pod @ 07/27/24 12:21:32.024
  STEP: Wait for the deployment to be ready @ 07/27/24 12:21:32.035
  Jul 27 12:21:32.044: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/27/24 12:21:34.055
  STEP: Verifying the service has paired with the endpoint @ 07/27/24 12:21:34.065
  Jul 27 12:21:35.066: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 07/27/24 12:21:35.074
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 07/27/24 12:21:35.075
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 07/27/24 12:21:35.075
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 07/27/24 12:21:35.075
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 07/27/24 12:21:35.076
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 07/27/24 12:21:35.076
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 07/27/24 12:21:35.077
  Jul 27 12:21:35.119: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-199" for this suite. @ 07/27/24 12:21:35.122
  STEP: Destroying namespace "webhook-markers-6690" for this suite. @ 07/27/24 12:21:35.131
• [3.371 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 07/27/24 12:21:35.137
  Jul 27 12:21:35.137: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename secrets @ 07/27/24 12:21:35.138
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:21:35.151
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:21:35.154
  STEP: Creating secret with name secret-test-aa63219e-4c51-4974-bb3e-398b0023eb1e @ 07/27/24 12:21:35.156
  STEP: Creating a pod to test consume secrets @ 07/27/24 12:21:35.16
  STEP: Saw pod success @ 07/27/24 12:21:37.178
  Jul 27 12:21:37.181: INFO: Trying to get logs from node ip-172-31-18-96 pod pod-secrets-086bfab2-b87e-474a-8cf4-4bba98d4cb51 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/27/24 12:21:37.188
  Jul 27 12:21:37.208: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7526" for this suite. @ 07/27/24 12:21:37.213
• [2.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 07/27/24 12:21:37.225
  Jul 27 12:21:37.225: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename conformance-tests @ 07/27/24 12:21:37.226
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:21:37.248
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:21:37.25
  STEP: Getting node addresses @ 07/27/24 12:21:37.253
  Jul 27 12:21:37.253: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  Jul 27 12:21:37.266: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-9638" for this suite. @ 07/27/24 12:21:37.271
• [0.055 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:655
  STEP: Creating a kubernetes client @ 07/27/24 12:21:37.281
  Jul 27 12:21:37.281: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename job @ 07/27/24 12:21:37.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:21:37.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:21:37.296
  STEP: Creating a job @ 07/27/24 12:21:37.299
  STEP: Ensuring active pods == parallelism @ 07/27/24 12:21:37.305
  STEP: Orphaning one of the Job's Pods @ 07/27/24 12:21:39.311
  Jul 27 12:21:39.829: INFO: Successfully updated pod "adopt-release-b6xdm"
  STEP: Checking that the Job readopts the Pod @ 07/27/24 12:21:39.829
  STEP: Removing the labels from the Job's Pod @ 07/27/24 12:21:41.841
  Jul 27 12:21:42.356: INFO: Successfully updated pod "adopt-release-b6xdm"
  STEP: Checking that the Job releases the Pod @ 07/27/24 12:21:42.356
  Jul 27 12:21:44.367: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2322" for this suite. @ 07/27/24 12:21:44.371
• [7.097 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 07/27/24 12:21:44.378
  Jul 27 12:21:44.378: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename disruption @ 07/27/24 12:21:44.379
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:21:44.393
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:21:44.395
  STEP: Waiting for the pdb to be processed @ 07/27/24 12:21:44.403
  STEP: Updating PodDisruptionBudget status @ 07/27/24 12:21:46.408
  STEP: Waiting for all pods to be running @ 07/27/24 12:21:46.418
  Jul 27 12:21:46.421: INFO: running pods: 0 < 1
  STEP: locating a running pod @ 07/27/24 12:21:48.423
  STEP: Waiting for the pdb to be processed @ 07/27/24 12:21:48.436
  STEP: Patching PodDisruptionBudget status @ 07/27/24 12:21:48.444
  STEP: Waiting for the pdb to be processed @ 07/27/24 12:21:48.452
  Jul 27 12:21:48.456: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-9177" for this suite. @ 07/27/24 12:21:48.46
• [4.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:136
  STEP: Creating a kubernetes client @ 07/27/24 12:21:48.469
  Jul 27 12:21:48.469: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 07/27/24 12:21:48.47
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:21:48.484
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:21:48.486
  STEP: create the container to handle the HTTPGet hook request. @ 07/27/24 12:21:48.492
  STEP: create the pod with lifecycle hook @ 07/27/24 12:21:50.517
  STEP: check poststart hook @ 07/27/24 12:21:52.535
  STEP: delete the pod with lifecycle hook @ 07/27/24 12:21:52.554
  Jul 27 12:21:54.571: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-9635" for this suite. @ 07/27/24 12:21:54.575
• [6.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 07/27/24 12:21:54.583
  Jul 27 12:21:54.583: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename csiinlinevolumes @ 07/27/24 12:21:54.584
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:21:54.597
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:21:54.599
  STEP: Creating two CSIDrivers @ 07/27/24 12:21:54.602
  STEP: Getting "inline-driver-6d2c9fef-76ef-4e2d-a3ac-baeefcd17e02" & "inline-driver-8a0c409f-69fb-410b-8564-1c6e2483e115" @ 07/27/24 12:21:54.619
  STEP: Patching the CSIDriver "inline-driver-8a0c409f-69fb-410b-8564-1c6e2483e115" @ 07/27/24 12:21:54.625
  STEP: Updating the CSIDriver "inline-driver-8a0c409f-69fb-410b-8564-1c6e2483e115" @ 07/27/24 12:21:54.632
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-959" @ 07/27/24 12:21:54.639
  STEP: Deleting CSIDriver "inline-driver-6d2c9fef-76ef-4e2d-a3ac-baeefcd17e02" @ 07/27/24 12:21:54.642
  STEP: Confirm deletion of CSIDriver "inline-driver-6d2c9fef-76ef-4e2d-a3ac-baeefcd17e02" @ 07/27/24 12:21:54.648
  STEP: Deleting CSIDriver "inline-driver-8a0c409f-69fb-410b-8564-1c6e2483e115" via DeleteCollection @ 07/27/24 12:21:54.651
  STEP: Confirm deletion of CSIDriver "inline-driver-8a0c409f-69fb-410b-8564-1c6e2483e115" @ 07/27/24 12:21:54.66
  Jul 27 12:21:54.663: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-959" for this suite. @ 07/27/24 12:21:54.668
• [0.092 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:785
  STEP: Creating a kubernetes client @ 07/27/24 12:21:54.675
  Jul 27 12:21:54.675: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename services @ 07/27/24 12:21:54.676
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:21:54.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:21:54.693
  STEP: creating service endpoint-test2 in namespace services-4527 @ 07/27/24 12:21:54.695
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4527 to expose endpoints map[] @ 07/27/24 12:21:54.706
  Jul 27 12:21:54.719: INFO: successfully validated that service endpoint-test2 in namespace services-4527 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-4527 @ 07/27/24 12:21:54.719
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4527 to expose endpoints map[pod1:[80]] @ 07/27/24 12:21:56.749
  Jul 27 12:21:56.765: INFO: successfully validated that service endpoint-test2 in namespace services-4527 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 07/27/24 12:21:56.765
  Jul 27 12:21:56.765: INFO: Creating new exec pod
  Jul 27 12:21:59.778: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=services-4527 exec execpodl98sx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Jul 27 12:21:59.876: INFO: stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Jul 27 12:21:59.876: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul 27 12:21:59.876: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=services-4527 exec execpodl98sx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.30 80'
  Jul 27 12:21:59.983: INFO: stderr: "+ nc -v -t -w 2 10.152.183.30 80\nConnection to 10.152.183.30 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Jul 27 12:21:59.983: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-4527 @ 07/27/24 12:21:59.983
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4527 to expose endpoints map[pod1:[80] pod2:[80]] @ 07/27/24 12:22:02.004
  Jul 27 12:22:02.018: INFO: successfully validated that service endpoint-test2 in namespace services-4527 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 07/27/24 12:22:02.019
  Jul 27 12:22:03.019: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=services-4527 exec execpodl98sx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Jul 27 12:22:03.108: INFO: stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Jul 27 12:22:03.108: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul 27 12:22:03.108: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=services-4527 exec execpodl98sx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.30 80'
  Jul 27 12:22:03.199: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.30 80\nConnection to 10.152.183.30 80 port [tcp/http] succeeded!\n"
  Jul 27 12:22:03.199: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-4527 @ 07/27/24 12:22:03.199
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4527 to expose endpoints map[pod2:[80]] @ 07/27/24 12:22:03.212
  Jul 27 12:22:03.227: INFO: successfully validated that service endpoint-test2 in namespace services-4527 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 07/27/24 12:22:03.227
  Jul 27 12:22:04.228: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=services-4527 exec execpodl98sx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Jul 27 12:22:04.321: INFO: stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Jul 27 12:22:04.321: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul 27 12:22:04.321: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=services-4527 exec execpodl98sx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.30 80'
  Jul 27 12:22:04.416: INFO: stderr: "+ nc -v -t -w 2 10.152.183.30 80\n+ echo hostName\nConnection to 10.152.183.30 80 port [tcp/http] succeeded!\n"
  Jul 27 12:22:04.416: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-4527 @ 07/27/24 12:22:04.416
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4527 to expose endpoints map[] @ 07/27/24 12:22:04.436
  Jul 27 12:22:04.445: INFO: successfully validated that service endpoint-test2 in namespace services-4527 exposes endpoints map[]
  Jul 27 12:22:04.468: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4527" for this suite. @ 07/27/24 12:22:04.473
• [9.804 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 07/27/24 12:22:04.479
  Jul 27 12:22:04.479: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename projected @ 07/27/24 12:22:04.48
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:22:04.494
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:22:04.496
  STEP: Creating a pod to test downward API volume plugin @ 07/27/24 12:22:04.501
  STEP: Saw pod success @ 07/27/24 12:22:08.525
  Jul 27 12:22:08.528: INFO: Trying to get logs from node ip-172-31-10-249 pod downwardapi-volume-36dce405-a256-4d61-b920-457dc5320c8c container client-container: <nil>
  STEP: delete the pod @ 07/27/24 12:22:08.535
  Jul 27 12:22:08.551: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4629" for this suite. @ 07/27/24 12:22:08.554
• [4.081 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 07/27/24 12:22:08.561
  Jul 27 12:22:08.561: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename projected @ 07/27/24 12:22:08.562
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:22:08.575
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:22:08.578
  STEP: Creating configMap with name projected-configmap-test-volume-map-18719d68-c296-4576-87fa-1b798600a184 @ 07/27/24 12:22:08.58
  STEP: Creating a pod to test consume configMaps @ 07/27/24 12:22:08.586
  STEP: Saw pod success @ 07/27/24 12:22:12.611
  Jul 27 12:22:12.614: INFO: Trying to get logs from node ip-172-31-10-249 pod pod-projected-configmaps-05ce53cf-77dc-4ce4-b7d8-8569b649eb27 container agnhost-container: <nil>
  STEP: delete the pod @ 07/27/24 12:22:12.621
  Jul 27 12:22:12.639: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6140" for this suite. @ 07/27/24 12:22:12.642
• [4.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:183
  STEP: Creating a kubernetes client @ 07/27/24 12:22:12.65
  Jul 27 12:22:12.650: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename kubelet-test @ 07/27/24 12:22:12.65
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:22:12.665
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:22:12.668
  Jul 27 12:22:14.702: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-5496" for this suite. @ 07/27/24 12:22:14.706
• [2.063 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 07/27/24 12:22:14.713
  Jul 27 12:22:14.713: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename configmap @ 07/27/24 12:22:14.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:22:14.728
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:22:14.731
  STEP: Creating configMap with name configmap-test-upd-62dcd8bd-619c-4035-b51d-00c44a177a40 @ 07/27/24 12:22:14.736
  STEP: Creating the pod @ 07/27/24 12:22:14.74
  STEP: Waiting for pod with text data @ 07/27/24 12:22:16.758
  STEP: Waiting for pod with binary data @ 07/27/24 12:22:16.765
  Jul 27 12:22:16.772: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2473" for this suite. @ 07/27/24 12:22:16.776
• [2.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:962
  STEP: Creating a kubernetes client @ 07/27/24 12:22:16.784
  Jul 27 12:22:16.784: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename statefulset @ 07/27/24 12:22:16.784
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:22:16.799
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:22:16.801
  STEP: Creating service test in namespace statefulset-8879 @ 07/27/24 12:22:16.803
  Jul 27 12:22:16.822: INFO: Found 0 stateful pods, waiting for 1
  Jul 27 12:22:26.825: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 07/27/24 12:22:26.832
  W0727 12:22:26.842106      20 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  Jul 27 12:22:26.848: INFO: Found 1 stateful pods, waiting for 2
  Jul 27 12:22:36.854: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Jul 27 12:22:36.854: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 07/27/24 12:22:36.861
  STEP: Delete all of the StatefulSets @ 07/27/24 12:22:36.864
  STEP: Verify that StatefulSets have been deleted @ 07/27/24 12:22:36.873
  Jul 27 12:22:36.877: INFO: Deleting all statefulset in ns statefulset-8879
  Jul 27 12:22:36.895: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8879" for this suite. @ 07/27/24 12:22:36.899
• [20.124 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 07/27/24 12:22:36.908
  Jul 27 12:22:36.908: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename dns @ 07/27/24 12:22:36.909
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:22:36.923
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:22:36.926
  STEP: Creating a test headless service @ 07/27/24 12:22:36.929
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4466.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-4466.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4466.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-4466.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-4466.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-4466.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-4466.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-4466.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-4466.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-4466.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-4466.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-4466.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 77.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.77_udp@PTR;check="$$(dig +tcp +noall +answer +search 77.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.77_tcp@PTR;sleep 1; done
   @ 07/27/24 12:22:36.955
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4466.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-4466.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4466.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-4466.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-4466.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-4466.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-4466.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-4466.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-4466.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-4466.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-4466.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-4466.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 77.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.77_udp@PTR;check="$$(dig +tcp +noall +answer +search 77.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.77_tcp@PTR;sleep 1; done
   @ 07/27/24 12:22:36.955
  STEP: creating a pod to probe DNS @ 07/27/24 12:22:36.955
  STEP: submitting the pod to kubernetes @ 07/27/24 12:22:36.955
  STEP: retrieving the pod @ 07/27/24 12:22:38.985
  STEP: looking for the results for each expected name from probers @ 07/27/24 12:22:38.988
  Jul 27 12:22:38.993: INFO: Unable to read wheezy_udp@dns-test-service.dns-4466.svc.cluster.local from pod dns-4466/dns-test-95859ed0-ff7b-4ae3-9b1b-22c906e948c8: the server could not find the requested resource (get pods dns-test-95859ed0-ff7b-4ae3-9b1b-22c906e948c8)
  Jul 27 12:22:38.996: INFO: Unable to read wheezy_tcp@dns-test-service.dns-4466.svc.cluster.local from pod dns-4466/dns-test-95859ed0-ff7b-4ae3-9b1b-22c906e948c8: the server could not find the requested resource (get pods dns-test-95859ed0-ff7b-4ae3-9b1b-22c906e948c8)
  Jul 27 12:22:39.000: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4466.svc.cluster.local from pod dns-4466/dns-test-95859ed0-ff7b-4ae3-9b1b-22c906e948c8: the server could not find the requested resource (get pods dns-test-95859ed0-ff7b-4ae3-9b1b-22c906e948c8)
  Jul 27 12:22:39.004: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4466.svc.cluster.local from pod dns-4466/dns-test-95859ed0-ff7b-4ae3-9b1b-22c906e948c8: the server could not find the requested resource (get pods dns-test-95859ed0-ff7b-4ae3-9b1b-22c906e948c8)
  Jul 27 12:22:39.023: INFO: Unable to read jessie_udp@dns-test-service.dns-4466.svc.cluster.local from pod dns-4466/dns-test-95859ed0-ff7b-4ae3-9b1b-22c906e948c8: the server could not find the requested resource (get pods dns-test-95859ed0-ff7b-4ae3-9b1b-22c906e948c8)
  Jul 27 12:22:39.027: INFO: Unable to read jessie_tcp@dns-test-service.dns-4466.svc.cluster.local from pod dns-4466/dns-test-95859ed0-ff7b-4ae3-9b1b-22c906e948c8: the server could not find the requested resource (get pods dns-test-95859ed0-ff7b-4ae3-9b1b-22c906e948c8)
  Jul 27 12:22:39.032: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4466.svc.cluster.local from pod dns-4466/dns-test-95859ed0-ff7b-4ae3-9b1b-22c906e948c8: the server could not find the requested resource (get pods dns-test-95859ed0-ff7b-4ae3-9b1b-22c906e948c8)
  Jul 27 12:22:39.035: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4466.svc.cluster.local from pod dns-4466/dns-test-95859ed0-ff7b-4ae3-9b1b-22c906e948c8: the server could not find the requested resource (get pods dns-test-95859ed0-ff7b-4ae3-9b1b-22c906e948c8)
  Jul 27 12:22:39.052: INFO: Lookups using dns-4466/dns-test-95859ed0-ff7b-4ae3-9b1b-22c906e948c8 failed for: [wheezy_udp@dns-test-service.dns-4466.svc.cluster.local wheezy_tcp@dns-test-service.dns-4466.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-4466.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-4466.svc.cluster.local jessie_udp@dns-test-service.dns-4466.svc.cluster.local jessie_tcp@dns-test-service.dns-4466.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-4466.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-4466.svc.cluster.local]

  Jul 27 12:22:39.059: INFO: Pod client logs for webserver: 
  Jul 27 12:22:39.064: INFO: Pod client logs for querier: 
  Jul 27 12:22:39.071: INFO: Pod client logs for jessie-querier: 
  Jul 27 12:22:44.051: INFO: DNS probes using dns-4466/dns-test-95859ed0-ff7b-4ae3-9b1b-22c906e948c8 succeeded

  STEP: deleting the pod @ 07/27/24 12:22:44.051
  STEP: deleting the test service @ 07/27/24 12:22:44.071
  STEP: deleting the test headless service @ 07/27/24 12:22:44.097
  Jul 27 12:22:44.108: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-4466" for this suite. @ 07/27/24 12:22:44.117
• [7.216 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 07/27/24 12:22:44.124
  Jul 27 12:22:44.124: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename runtimeclass @ 07/27/24 12:22:44.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:22:44.139
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:22:44.141
  Jul 27 12:22:44.169: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3638" for this suite. @ 07/27/24 12:22:44.172
• [0.060 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 07/27/24 12:22:44.185
  Jul 27 12:22:44.185: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename pod-network-test @ 07/27/24 12:22:44.186
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:22:44.199
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:22:44.201
  STEP: Performing setup for networking test in namespace pod-network-test-1885 @ 07/27/24 12:22:44.204
  STEP: creating a selector @ 07/27/24 12:22:44.204
  STEP: Creating the service pods in kubernetes @ 07/27/24 12:22:44.204
  Jul 27 12:22:44.204: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 07/27/24 12:23:06.309
  Jul 27 12:23:08.329: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Jul 27 12:23:08.329: INFO: Breadth first check of 192.168.97.19 on host 172.31.10.249...
  Jul 27 12:23:08.332: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.122.173:9080/dial?request=hostname&protocol=udp&host=192.168.97.19&port=8081&tries=1'] Namespace:pod-network-test-1885 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 27 12:23:08.332: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  Jul 27 12:23:08.332: INFO: ExecWithOptions: Clientset creation
  Jul 27 12:23:08.332: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-1885/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.122.173%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.97.19%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jul 27 12:23:08.377: INFO: Waiting for responses: map[]
  Jul 27 12:23:08.377: INFO: reached 192.168.97.19 after 0/1 tries
  Jul 27 12:23:08.377: INFO: Breadth first check of 192.168.122.172 on host 172.31.18.96...
  Jul 27 12:23:08.381: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.122.173:9080/dial?request=hostname&protocol=udp&host=192.168.122.172&port=8081&tries=1'] Namespace:pod-network-test-1885 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 27 12:23:08.381: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  Jul 27 12:23:08.381: INFO: ExecWithOptions: Clientset creation
  Jul 27 12:23:08.381: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-1885/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.122.173%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.122.172%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jul 27 12:23:08.423: INFO: Waiting for responses: map[]
  Jul 27 12:23:08.423: INFO: reached 192.168.122.172 after 0/1 tries
  Jul 27 12:23:08.423: INFO: Breadth first check of 192.168.96.73 on host 172.31.76.31...
  Jul 27 12:23:08.428: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.122.173:9080/dial?request=hostname&protocol=udp&host=192.168.96.73&port=8081&tries=1'] Namespace:pod-network-test-1885 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 27 12:23:08.428: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  Jul 27 12:23:08.428: INFO: ExecWithOptions: Clientset creation
  Jul 27 12:23:08.428: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-1885/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.122.173%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.96.73%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jul 27 12:23:08.472: INFO: Waiting for responses: map[]
  Jul 27 12:23:08.472: INFO: reached 192.168.96.73 after 0/1 tries
  Jul 27 12:23:08.472: INFO: Going to retry 0 out of 3 pods....
  Jul 27 12:23:08.472: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-1885" for this suite. @ 07/27/24 12:23:08.476
• [24.298 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:115
  STEP: Creating a kubernetes client @ 07/27/24 12:23:08.484
  Jul 27 12:23:08.484: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename var-expansion @ 07/27/24 12:23:08.484
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:23:08.499
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:23:08.501
  STEP: Creating a pod to test substitution in volume subpath @ 07/27/24 12:23:08.504
  STEP: Saw pod success @ 07/27/24 12:23:12.527
  Jul 27 12:23:12.531: INFO: Trying to get logs from node ip-172-31-10-249 pod var-expansion-c78b38f1-a809-4d75-86f7-9a69d183777c container dapi-container: <nil>
  STEP: delete the pod @ 07/27/24 12:23:12.539
  Jul 27 12:23:12.554: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-523" for this suite. @ 07/27/24 12:23:12.559
• [4.082 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 07/27/24 12:23:12.565
  Jul 27 12:23:12.565: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename replication-controller @ 07/27/24 12:23:12.566
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:23:12.579
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:23:12.582
  STEP: Creating replication controller my-hostname-basic-10dbba79-6ab3-4e98-8c84-733830f4b17d @ 07/27/24 12:23:12.584
  Jul 27 12:23:12.592: INFO: Pod name my-hostname-basic-10dbba79-6ab3-4e98-8c84-733830f4b17d: Found 0 pods out of 1
  Jul 27 12:23:17.596: INFO: Pod name my-hostname-basic-10dbba79-6ab3-4e98-8c84-733830f4b17d: Found 1 pods out of 1
  Jul 27 12:23:17.596: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-10dbba79-6ab3-4e98-8c84-733830f4b17d" are running
  Jul 27 12:23:17.599: INFO: Pod "my-hostname-basic-10dbba79-6ab3-4e98-8c84-733830f4b17d-25dvx" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-27 12:23:13 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-27 12:23:12 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-27 12:23:13 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-27 12:23:13 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-27 12:23:12 +0000 UTC Reason: Message:}])
  Jul 27 12:23:17.599: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 07/27/24 12:23:17.599
  Jul 27 12:23:17.610: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-5943" for this suite. @ 07/27/24 12:23:17.613
• [5.054 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:887
  STEP: Creating a kubernetes client @ 07/27/24 12:23:17.62
  Jul 27 12:23:17.620: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename kubectl @ 07/27/24 12:23:17.621
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:23:17.637
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:23:17.639
  STEP: validating api versions @ 07/27/24 12:23:17.642
  Jul 27 12:23:17.644: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-7341 api-versions'
  Jul 27 12:23:17.684: INFO: stderr: ""
  Jul 27 12:23:17.685: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta3\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  Jul 27 12:23:17.685: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7341" for this suite. @ 07/27/24 12:23:17.688
• [0.075 seconds]
------------------------------
SSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 07/27/24 12:23:17.695
  Jul 27 12:23:17.695: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename pods @ 07/27/24 12:23:17.696
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:23:17.708
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:23:17.712
  STEP: creating a Pod with a static label @ 07/27/24 12:23:17.721
  STEP: watching for Pod to be ready @ 07/27/24 12:23:17.734
  Jul 27 12:23:17.736: INFO: observed Pod pod-test in namespace pods-9814 in phase Pending with labels: map[test-pod-static:true] & conditions []
  Jul 27 12:23:17.741: INFO: observed Pod pod-test in namespace pods-9814 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-07-27 12:23:17 +0000 UTC  }]
  Jul 27 12:23:17.768: INFO: observed Pod pod-test in namespace pods-9814 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-07-27 12:23:17 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-07-27 12:23:17 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-07-27 12:23:17 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-07-27 12:23:17 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-07-27 12:23:17 +0000 UTC  }]
  Jul 27 12:23:19.056: INFO: Found Pod pod-test in namespace pods-9814 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-07-27 12:23:19 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-07-27 12:23:17 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2024-07-27 12:23:19 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2024-07-27 12:23:19 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-07-27 12:23:17 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 07/27/24 12:23:19.059
  STEP: getting the Pod and ensuring that it's patched @ 07/27/24 12:23:19.068
  STEP: replacing the Pod's status Ready condition to False @ 07/27/24 12:23:19.071
  STEP: check the Pod again to ensure its Ready conditions are False @ 07/27/24 12:23:19.086
  STEP: deleting the Pod via a Collection with a LabelSelector @ 07/27/24 12:23:19.086
  STEP: watching for the Pod to be deleted @ 07/27/24 12:23:19.096
  Jul 27 12:23:19.098: INFO: observed event type MODIFIED
  Jul 27 12:23:20.134: INFO: observed event type MODIFIED
  Jul 27 12:23:21.066: INFO: observed event type MODIFIED
  Jul 27 12:23:21.225: INFO: observed event type MODIFIED
  Jul 27 12:23:22.067: INFO: observed event type MODIFIED
  Jul 27 12:23:22.084: INFO: observed event type MODIFIED
  Jul 27 12:23:22.096: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9814" for this suite. @ 07/27/24 12:23:22.1
• [4.412 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:530
  STEP: Creating a kubernetes client @ 07/27/24 12:23:22.107
  Jul 27 12:23:22.107: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename security-context-test @ 07/27/24 12:23:22.108
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:23:22.122
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:23:22.124
  Jul 27 12:23:26.158: INFO: Got logs for pod "busybox-privileged-false-abc8a862-a604-4a0c-95b2-645b323f4af1": "ip: RTNETLINK answers: Operation not permitted\n"
  Jul 27 12:23:26.158: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-5748" for this suite. @ 07/27/24 12:23:26.162
• [4.063 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 07/27/24 12:23:26.171
  Jul 27 12:23:26.171: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename endpointslice @ 07/27/24 12:23:26.171
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:23:26.184
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:23:26.186
  STEP: getting /apis @ 07/27/24 12:23:26.189
  STEP: getting /apis/discovery.k8s.io @ 07/27/24 12:23:26.192
  STEP: getting /apis/discovery.k8s.iov1 @ 07/27/24 12:23:26.193
  STEP: creating @ 07/27/24 12:23:26.194
  STEP: getting @ 07/27/24 12:23:26.207
  STEP: listing @ 07/27/24 12:23:26.211
  STEP: watching @ 07/27/24 12:23:26.217
  Jul 27 12:23:26.217: INFO: starting watch
  STEP: cluster-wide listing @ 07/27/24 12:23:26.218
  STEP: cluster-wide watching @ 07/27/24 12:23:26.221
  Jul 27 12:23:26.221: INFO: starting watch
  STEP: patching @ 07/27/24 12:23:26.222
  STEP: updating @ 07/27/24 12:23:26.226
  Jul 27 12:23:26.236: INFO: waiting for watch events with expected annotations
  Jul 27 12:23:26.236: INFO: saw patched and updated annotations
  STEP: deleting @ 07/27/24 12:23:26.236
  STEP: deleting a collection @ 07/27/24 12:23:26.249
  Jul 27 12:23:26.266: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-7612" for this suite. @ 07/27/24 12:23:26.27
• [0.107 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 07/27/24 12:23:26.278
  Jul 27 12:23:26.278: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename projected @ 07/27/24 12:23:26.279
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:23:26.292
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:23:26.295
  STEP: Creating a pod to test downward API volume plugin @ 07/27/24 12:23:26.298
  STEP: Saw pod success @ 07/27/24 12:23:28.316
  Jul 27 12:23:28.320: INFO: Trying to get logs from node ip-172-31-18-96 pod downwardapi-volume-dd1c63f8-f693-43aa-9aec-3b124259b246 container client-container: <nil>
  STEP: delete the pod @ 07/27/24 12:23:28.326
  Jul 27 12:23:28.341: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5351" for this suite. @ 07/27/24 12:23:28.345
• [2.074 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 07/27/24 12:23:28.352
  Jul 27 12:23:28.352: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename pod-network-test @ 07/27/24 12:23:28.352
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:23:28.366
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:23:28.369
  STEP: Performing setup for networking test in namespace pod-network-test-8651 @ 07/27/24 12:23:28.373
  STEP: creating a selector @ 07/27/24 12:23:28.373
  STEP: Creating the service pods in kubernetes @ 07/27/24 12:23:28.373
  Jul 27 12:23:28.373: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 07/27/24 12:23:40.462
  Jul 27 12:23:42.493: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Jul 27 12:23:42.493: INFO: Going to poll 192.168.97.22 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Jul 27 12:23:42.496: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.97.22:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-8651 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 27 12:23:42.496: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  Jul 27 12:23:42.497: INFO: ExecWithOptions: Clientset creation
  Jul 27 12:23:42.497: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8651/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.97.22%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jul 27 12:23:42.548: INFO: Found all 1 expected endpoints: [netserver-0]
  Jul 27 12:23:42.548: INFO: Going to poll 192.168.122.177 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Jul 27 12:23:42.552: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.122.177:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-8651 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 27 12:23:42.552: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  Jul 27 12:23:42.552: INFO: ExecWithOptions: Clientset creation
  Jul 27 12:23:42.552: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8651/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.122.177%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jul 27 12:23:42.599: INFO: Found all 1 expected endpoints: [netserver-1]
  Jul 27 12:23:42.599: INFO: Going to poll 192.168.96.74 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Jul 27 12:23:42.604: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.96.74:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-8651 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 27 12:23:42.604: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  Jul 27 12:23:42.604: INFO: ExecWithOptions: Clientset creation
  Jul 27 12:23:42.604: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8651/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.96.74%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jul 27 12:23:42.657: INFO: Found all 1 expected endpoints: [netserver-2]
  Jul 27 12:23:42.657: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-8651" for this suite. @ 07/27/24 12:23:42.661
• [14.316 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 07/27/24 12:23:42.668
  Jul 27 12:23:42.668: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename podtemplate @ 07/27/24 12:23:42.669
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:23:42.684
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:23:42.689
  STEP: Create a pod template @ 07/27/24 12:23:42.691
  STEP: Replace a pod template @ 07/27/24 12:23:42.697
  Jul 27 12:23:42.705: INFO: Found updated podtemplate annotation: "true"

  Jul 27 12:23:42.705: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-7284" for this suite. @ 07/27/24 12:23:42.709
• [0.047 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 07/27/24 12:23:42.715
  Jul 27 12:23:42.715: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename projected @ 07/27/24 12:23:42.716
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:23:42.729
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:23:42.731
  STEP: Creating configMap with name projected-configmap-test-volume-a99ae51c-1033-41e2-8a41-835a4157f081 @ 07/27/24 12:23:42.734
  STEP: Creating a pod to test consume configMaps @ 07/27/24 12:23:42.74
  STEP: Saw pod success @ 07/27/24 12:23:46.765
  Jul 27 12:23:46.769: INFO: Trying to get logs from node ip-172-31-10-249 pod pod-projected-configmaps-14e028ea-a474-4855-a880-5ba9798d424f container agnhost-container: <nil>
  STEP: delete the pod @ 07/27/24 12:23:46.776
  Jul 27 12:23:46.791: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-240" for this suite. @ 07/27/24 12:23:46.794
• [4.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 07/27/24 12:23:46.802
  Jul 27 12:23:46.802: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename tables @ 07/27/24 12:23:46.803
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:23:46.818
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:23:46.821
  Jul 27 12:23:46.826: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-5733" for this suite. @ 07/27/24 12:23:46.829
• [0.035 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 07/27/24 12:23:46.837
  Jul 27 12:23:46.837: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename projected @ 07/27/24 12:23:46.838
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:23:46.854
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:23:46.856
  STEP: Creating configMap with name projected-configmap-test-volume-map-d203ed6b-fb79-4df1-b5e0-a5615f0d2f45 @ 07/27/24 12:23:46.858
  STEP: Creating a pod to test consume configMaps @ 07/27/24 12:23:46.862
  STEP: Saw pod success @ 07/27/24 12:23:50.887
  Jul 27 12:23:50.890: INFO: Trying to get logs from node ip-172-31-10-249 pod pod-projected-configmaps-195055a2-4758-4470-87be-82ec4f756502 container agnhost-container: <nil>
  STEP: delete the pod @ 07/27/24 12:23:50.898
  Jul 27 12:23:50.913: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9815" for this suite. @ 07/27/24 12:23:50.916
• [4.085 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:335
  STEP: Creating a kubernetes client @ 07/27/24 12:23:50.923
  Jul 27 12:23:50.923: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename sched-pred @ 07/27/24 12:23:50.924
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:23:50.94
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:23:50.942
  Jul 27 12:23:50.944: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Jul 27 12:23:50.958: INFO: Waiting for terminating namespaces to be deleted...
  Jul 27 12:23:50.962: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-10-249 before test
  Jul 27 12:23:50.969: INFO: nginx-ingress-controller-kubernetes-worker-p6cd4 from ingress-nginx-kubernetes-worker started at 2024-07-27 11:55:45 +0000 UTC (1 container statuses recorded)
  Jul 27 12:23:50.969: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jul 27 12:23:50.969: INFO: calico-node-6pr7z from kube-system started at 2024-07-27 12:04:22 +0000 UTC (1 container statuses recorded)
  Jul 27 12:23:50.969: INFO: 	Container calico-node ready: true, restart count 0
  Jul 27 12:23:50.969: INFO: sonobuoy-e2e-job-984de38699c54bba from sonobuoy started at 2024-07-27 12:07:10 +0000 UTC (2 container statuses recorded)
  Jul 27 12:23:50.969: INFO: 	Container e2e ready: true, restart count 0
  Jul 27 12:23:50.969: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jul 27 12:23:50.969: INFO: sonobuoy-systemd-logs-daemon-set-871057d561a1403a-tr4gf from sonobuoy started at 2024-07-27 12:07:10 +0000 UTC (2 container statuses recorded)
  Jul 27 12:23:50.969: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jul 27 12:23:50.969: INFO: 	Container systemd-logs ready: true, restart count 0
  Jul 27 12:23:50.969: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-18-96 before test
  Jul 27 12:23:50.982: INFO: nginx-ingress-controller-kubernetes-worker-86xft from ingress-nginx-kubernetes-worker started at 2024-07-27 11:55:45 +0000 UTC (1 container statuses recorded)
  Jul 27 12:23:50.982: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jul 27 12:23:50.982: INFO: calico-node-92bdd from kube-system started at 2024-07-27 12:04:12 +0000 UTC (1 container statuses recorded)
  Jul 27 12:23:50.982: INFO: 	Container calico-node ready: true, restart count 0
  Jul 27 12:23:50.982: INFO: sonobuoy from sonobuoy started at 2024-07-27 12:07:08 +0000 UTC (1 container statuses recorded)
  Jul 27 12:23:50.982: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Jul 27 12:23:50.982: INFO: sonobuoy-systemd-logs-daemon-set-871057d561a1403a-jpdks from sonobuoy started at 2024-07-27 12:07:10 +0000 UTC (2 container statuses recorded)
  Jul 27 12:23:50.982: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jul 27 12:23:50.982: INFO: 	Container systemd-logs ready: true, restart count 0
  Jul 27 12:23:50.982: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-76-31 before test
  Jul 27 12:23:50.989: INFO: nginx-ingress-controller-kubernetes-worker-c4vwn from ingress-nginx-kubernetes-worker started at 2024-07-27 11:55:45 +0000 UTC (1 container statuses recorded)
  Jul 27 12:23:50.989: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jul 27 12:23:50.989: INFO: calico-node-qqqwn from kube-system started at 2024-07-27 12:03:51 +0000 UTC (1 container statuses recorded)
  Jul 27 12:23:50.989: INFO: 	Container calico-node ready: true, restart count 0
  Jul 27 12:23:50.989: INFO: coredns-bddfd76d7-6sbmv from kube-system started at 2024-07-27 11:55:45 +0000 UTC (1 container statuses recorded)
  Jul 27 12:23:50.989: INFO: 	Container coredns ready: true, restart count 0
  Jul 27 12:23:50.989: INFO: kube-state-metrics-6f48cdd76-wpnxn from kube-system started at 2024-07-27 11:55:45 +0000 UTC (1 container statuses recorded)
  Jul 27 12:23:50.989: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Jul 27 12:23:50.989: INFO: metrics-server-v0.6.3-69d7fbfdf8-wxphj from kube-system started at 2024-07-27 11:55:45 +0000 UTC (2 container statuses recorded)
  Jul 27 12:23:50.989: INFO: 	Container metrics-server ready: true, restart count 0
  Jul 27 12:23:50.989: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Jul 27 12:23:50.989: INFO: dashboard-metrics-scraper-5dd7cb5fc-89q9b from kubernetes-dashboard started at 2024-07-27 11:55:45 +0000 UTC (1 container statuses recorded)
  Jul 27 12:23:50.989: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Jul 27 12:23:50.989: INFO: kubernetes-dashboard-7b899cb9d9-crg8f from kubernetes-dashboard started at 2024-07-27 11:55:45 +0000 UTC (1 container statuses recorded)
  Jul 27 12:23:50.989: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Jul 27 12:23:50.989: INFO: sonobuoy-systemd-logs-daemon-set-871057d561a1403a-2666c from sonobuoy started at 2024-07-27 12:07:10 +0000 UTC (2 container statuses recorded)
  Jul 27 12:23:50.989: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jul 27 12:23:50.989: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node ip-172-31-10-249 @ 07/27/24 12:23:51.021
  STEP: verifying the node has the label node ip-172-31-18-96 @ 07/27/24 12:23:51.033
  STEP: verifying the node has the label node ip-172-31-76-31 @ 07/27/24 12:23:51.045
  Jul 27 12:23:51.056: INFO: Pod nginx-ingress-controller-kubernetes-worker-86xft requesting resource cpu=0m on Node ip-172-31-18-96
  Jul 27 12:23:51.056: INFO: Pod nginx-ingress-controller-kubernetes-worker-c4vwn requesting resource cpu=0m on Node ip-172-31-76-31
  Jul 27 12:23:51.056: INFO: Pod nginx-ingress-controller-kubernetes-worker-p6cd4 requesting resource cpu=0m on Node ip-172-31-10-249
  Jul 27 12:23:51.056: INFO: Pod calico-node-6pr7z requesting resource cpu=250m on Node ip-172-31-10-249
  Jul 27 12:23:51.056: INFO: Pod calico-node-92bdd requesting resource cpu=250m on Node ip-172-31-18-96
  Jul 27 12:23:51.056: INFO: Pod calico-node-qqqwn requesting resource cpu=250m on Node ip-172-31-76-31
  Jul 27 12:23:51.056: INFO: Pod coredns-bddfd76d7-6sbmv requesting resource cpu=100m on Node ip-172-31-76-31
  Jul 27 12:23:51.056: INFO: Pod kube-state-metrics-6f48cdd76-wpnxn requesting resource cpu=0m on Node ip-172-31-76-31
  Jul 27 12:23:51.056: INFO: Pod metrics-server-v0.6.3-69d7fbfdf8-wxphj requesting resource cpu=5m on Node ip-172-31-76-31
  Jul 27 12:23:51.057: INFO: Pod dashboard-metrics-scraper-5dd7cb5fc-89q9b requesting resource cpu=0m on Node ip-172-31-76-31
  Jul 27 12:23:51.057: INFO: Pod kubernetes-dashboard-7b899cb9d9-crg8f requesting resource cpu=0m on Node ip-172-31-76-31
  Jul 27 12:23:51.057: INFO: Pod sonobuoy requesting resource cpu=0m on Node ip-172-31-18-96
  Jul 27 12:23:51.057: INFO: Pod sonobuoy-e2e-job-984de38699c54bba requesting resource cpu=0m on Node ip-172-31-10-249
  Jul 27 12:23:51.057: INFO: Pod sonobuoy-systemd-logs-daemon-set-871057d561a1403a-2666c requesting resource cpu=0m on Node ip-172-31-76-31
  Jul 27 12:23:51.057: INFO: Pod sonobuoy-systemd-logs-daemon-set-871057d561a1403a-jpdks requesting resource cpu=0m on Node ip-172-31-18-96
  Jul 27 12:23:51.057: INFO: Pod sonobuoy-systemd-logs-daemon-set-871057d561a1403a-tr4gf requesting resource cpu=0m on Node ip-172-31-10-249
  STEP: Starting Pods to consume most of the cluster CPU. @ 07/27/24 12:23:51.057
  Jul 27 12:23:51.057: INFO: Creating a pod which consumes cpu=1225m on Node ip-172-31-18-96
  Jul 27 12:23:51.065: INFO: Creating a pod which consumes cpu=1151m on Node ip-172-31-76-31
  Jul 27 12:23:51.078: INFO: Creating a pod which consumes cpu=1225m on Node ip-172-31-10-249
  STEP: Creating another pod that requires unavailable amount of CPU. @ 07/27/24 12:23:53.104
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-8a1f7737-bc19-45f9-a0b5-ca781eb44716.17e611648d76c609], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6664/filler-pod-8a1f7737-bc19-45f9-a0b5-ca781eb44716 to ip-172-31-76-31] @ 07/27/24 12:23:53.108
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-8a1f7737-bc19-45f9-a0b5-ca781eb44716.17e61164ae915e2d], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 07/27/24 12:23:53.108
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-8a1f7737-bc19-45f9-a0b5-ca781eb44716.17e61164af3d6faa], Reason = [Created], Message = [Created container filler-pod-8a1f7737-bc19-45f9-a0b5-ca781eb44716] @ 07/27/24 12:23:53.108
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-8a1f7737-bc19-45f9-a0b5-ca781eb44716.17e61164b1bc40ad], Reason = [Started], Message = [Started container filler-pod-8a1f7737-bc19-45f9-a0b5-ca781eb44716] @ 07/27/24 12:23:53.108
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-bcd10225-934b-45f3-b257-104883087635.17e611648d278b75], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6664/filler-pod-bcd10225-934b-45f3-b257-104883087635 to ip-172-31-18-96] @ 07/27/24 12:23:53.108
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-bcd10225-934b-45f3-b257-104883087635.17e61164ac387f65], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 07/27/24 12:23:53.108
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-bcd10225-934b-45f3-b257-104883087635.17e61164ad5d484f], Reason = [Created], Message = [Created container filler-pod-bcd10225-934b-45f3-b257-104883087635] @ 07/27/24 12:23:53.108
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-bcd10225-934b-45f3-b257-104883087635.17e61164b015d8db], Reason = [Started], Message = [Started container filler-pod-bcd10225-934b-45f3-b257-104883087635] @ 07/27/24 12:23:53.108
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-d66f4bac-9407-4723-ad9d-6debfdd5a1f0.17e611648de6065e], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6664/filler-pod-d66f4bac-9407-4723-ad9d-6debfdd5a1f0 to ip-172-31-10-249] @ 07/27/24 12:23:53.108
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-d66f4bac-9407-4723-ad9d-6debfdd5a1f0.17e61164ac43ada7], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 07/27/24 12:23:53.108
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-d66f4bac-9407-4723-ad9d-6debfdd5a1f0.17e61164ad470052], Reason = [Created], Message = [Created container filler-pod-d66f4bac-9407-4723-ad9d-6debfdd5a1f0] @ 07/27/24 12:23:53.108
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-d66f4bac-9407-4723-ad9d-6debfdd5a1f0.17e61164b0337b3f], Reason = [Started], Message = [Started container filler-pod-d66f4bac-9407-4723-ad9d-6debfdd5a1f0] @ 07/27/24 12:23:53.108
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.17e61165068a263e], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 Insufficient cpu. preemption: 0/5 nodes are available: 2 Preemption is not helpful for scheduling, 3 No preemption victims found for incoming pod.] @ 07/27/24 12:23:53.118
  STEP: removing the label node off the node ip-172-31-10-249 @ 07/27/24 12:23:54.119
  STEP: verifying the node doesn't have the label node @ 07/27/24 12:23:54.131
  STEP: removing the label node off the node ip-172-31-18-96 @ 07/27/24 12:23:54.139
  STEP: verifying the node doesn't have the label node @ 07/27/24 12:23:54.149
  STEP: removing the label node off the node ip-172-31-76-31 @ 07/27/24 12:23:54.152
  STEP: verifying the node doesn't have the label node @ 07/27/24 12:23:54.163
  Jul 27 12:23:54.166: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-6664" for this suite. @ 07/27/24 12:23:54.17
• [3.254 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 07/27/24 12:23:54.177
  Jul 27 12:23:54.177: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename secrets @ 07/27/24 12:23:54.178
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:23:54.192
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:23:54.195
  Jul 27 12:23:54.234: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3818" for this suite. @ 07/27/24 12:23:54.237
• [0.066 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:357
  STEP: Creating a kubernetes client @ 07/27/24 12:23:54.244
  Jul 27 12:23:54.244: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/27/24 12:23:54.244
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:23:54.258
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:23:54.261
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 07/27/24 12:23:54.263
  Jul 27 12:23:54.263: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  Jul 27 12:23:55.476: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  Jul 27 12:24:00.384: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1690" for this suite. @ 07/27/24 12:24:00.39
• [6.153 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 07/27/24 12:24:00.398
  Jul 27 12:24:00.398: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename emptydir @ 07/27/24 12:24:00.398
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:24:00.414
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:24:00.416
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 07/27/24 12:24:00.419
  STEP: Saw pod success @ 07/27/24 12:24:02.439
  Jul 27 12:24:02.442: INFO: Trying to get logs from node ip-172-31-18-96 pod pod-6ee65b50-fb69-4c5d-938e-199f3dbba9e5 container test-container: <nil>
  STEP: delete the pod @ 07/27/24 12:24:02.448
  Jul 27 12:24:02.466: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8855" for this suite. @ 07/27/24 12:24:02.47
• [2.078 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 07/27/24 12:24:02.476
  Jul 27 12:24:02.476: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename container-runtime @ 07/27/24 12:24:02.477
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:24:02.491
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:24:02.494
  STEP: create the container @ 07/27/24 12:24:02.498
  W0727 12:24:02.507316      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 07/27/24 12:24:02.507
  STEP: get the container status @ 07/27/24 12:24:05.526
  STEP: the container should be terminated @ 07/27/24 12:24:05.53
  STEP: the termination message should be set @ 07/27/24 12:24:05.53
  Jul 27 12:24:05.530: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 07/27/24 12:24:05.53
  Jul 27 12:24:05.544: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6028" for this suite. @ 07/27/24 12:24:05.548
• [3.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:889
  STEP: Creating a kubernetes client @ 07/27/24 12:24:05.554
  Jul 27 12:24:05.554: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename resourcequota @ 07/27/24 12:24:05.555
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:24:05.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:24:05.572
  STEP: Creating a ResourceQuota @ 07/27/24 12:24:05.574
  STEP: Getting a ResourceQuota @ 07/27/24 12:24:05.58
  STEP: Updating a ResourceQuota @ 07/27/24 12:24:05.583
  STEP: Verifying a ResourceQuota was modified @ 07/27/24 12:24:05.591
  STEP: Deleting a ResourceQuota @ 07/27/24 12:24:05.597
  STEP: Verifying the deleted ResourceQuota @ 07/27/24 12:24:05.603
  Jul 27 12:24:05.606: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3959" for this suite. @ 07/27/24 12:24:05.609
• [0.061 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 07/27/24 12:24:05.616
  Jul 27 12:24:05.616: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename configmap @ 07/27/24 12:24:05.616
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:24:05.629
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:24:05.632
  STEP: Creating configMap with name configmap-test-volume-97e50fbb-ef9f-48ff-84fe-85a9bb70302c @ 07/27/24 12:24:05.634
  STEP: Creating a pod to test consume configMaps @ 07/27/24 12:24:05.64
  STEP: Saw pod success @ 07/27/24 12:24:09.661
  Jul 27 12:24:09.665: INFO: Trying to get logs from node ip-172-31-18-96 pod pod-configmaps-f771a9f6-59f7-4fd8-8f0c-57620f1e81c4 container agnhost-container: <nil>
  STEP: delete the pod @ 07/27/24 12:24:09.672
  Jul 27 12:24:09.689: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5132" for this suite. @ 07/27/24 12:24:09.693
• [4.083 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 07/27/24 12:24:09.699
  Jul 27 12:24:09.699: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename gc @ 07/27/24 12:24:09.7
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:24:09.713
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:24:09.716
  STEP: create the rc @ 07/27/24 12:24:09.718
  W0727 12:24:09.723784      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 07/27/24 12:24:14.728
  STEP: wait for all pods to be garbage collected @ 07/27/24 12:24:14.736
  STEP: Gathering metrics @ 07/27/24 12:24:19.744
  W0727 12:24:19.750174      20 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Jul 27 12:24:19.750: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jul 27 12:24:19.750: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1386" for this suite. @ 07/27/24 12:24:19.754
• [10.062 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 07/27/24 12:24:19.761
  Jul 27 12:24:19.761: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename pods @ 07/27/24 12:24:19.762
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:24:19.777
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:24:19.78
  STEP: Saw pod success @ 07/27/24 12:24:25.851
  Jul 27 12:24:25.855: INFO: Trying to get logs from node ip-172-31-10-249 pod client-envvars-f530573a-a7e2-4561-b276-004a5e3e0b5b container env3cont: <nil>
  STEP: delete the pod @ 07/27/24 12:24:25.863
  Jul 27 12:24:25.878: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2824" for this suite. @ 07/27/24 12:24:25.883
• [6.129 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 07/27/24 12:24:25.891
  Jul 27 12:24:25.891: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename webhook @ 07/27/24 12:24:25.892
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:24:25.906
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:24:25.909
  STEP: Setting up server cert @ 07/27/24 12:24:25.933
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/27/24 12:24:26.09
  STEP: Deploying the webhook pod @ 07/27/24 12:24:26.098
  STEP: Wait for the deployment to be ready @ 07/27/24 12:24:26.111
  Jul 27 12:24:26.118: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/27/24 12:24:28.131
  STEP: Verifying the service has paired with the endpoint @ 07/27/24 12:24:28.142
  Jul 27 12:24:29.142: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 07/27/24 12:24:29.216
  STEP: Creating a configMap that should be mutated @ 07/27/24 12:24:29.225
  STEP: Deleting the collection of validation webhooks @ 07/27/24 12:24:29.247
  STEP: Creating a configMap that should not be mutated @ 07/27/24 12:24:29.299
  Jul 27 12:24:29.350: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5708" for this suite. @ 07/27/24 12:24:29.357
  STEP: Destroying namespace "webhook-markers-9527" for this suite. @ 07/27/24 12:24:29.363
• [3.478 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 07/27/24 12:24:29.369
  Jul 27 12:24:29.369: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename container-runtime @ 07/27/24 12:24:29.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:24:29.383
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:24:29.385
  STEP: create the container @ 07/27/24 12:24:29.388
  W0727 12:24:29.396924      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 07/27/24 12:24:29.397
  STEP: get the container status @ 07/27/24 12:24:31.41
  STEP: the container should be terminated @ 07/27/24 12:24:31.413
  STEP: the termination message should be set @ 07/27/24 12:24:31.413
  Jul 27 12:24:31.413: INFO: Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 07/27/24 12:24:31.413
  Jul 27 12:24:31.430: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3565" for this suite. @ 07/27/24 12:24:31.433
• [2.071 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:948
  STEP: Creating a kubernetes client @ 07/27/24 12:24:31.44
  Jul 27 12:24:31.440: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename resourcequota @ 07/27/24 12:24:31.44
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:24:31.454
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:24:31.456
  STEP: Creating a ResourceQuota @ 07/27/24 12:24:31.458
  STEP: Getting a ResourceQuota @ 07/27/24 12:24:31.463
  STEP: Listing all ResourceQuotas with LabelSelector @ 07/27/24 12:24:31.466
  STEP: Patching the ResourceQuota @ 07/27/24 12:24:31.469
  STEP: Deleting a Collection of ResourceQuotas @ 07/27/24 12:24:31.475
  STEP: Verifying the deleted ResourceQuota @ 07/27/24 12:24:31.484
  Jul 27 12:24:31.488: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8837" for this suite. @ 07/27/24 12:24:31.491
• [0.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 07/27/24 12:24:31.498
  Jul 27 12:24:31.498: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename field-validation @ 07/27/24 12:24:31.498
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:24:31.512
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:24:31.515
  Jul 27 12:24:31.518: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  W0727 12:24:34.063786      20 warnings.go:70] unknown field "alpha"
  W0727 12:24:34.063895      20 warnings.go:70] unknown field "beta"
  W0727 12:24:34.063930      20 warnings.go:70] unknown field "delta"
  W0727 12:24:34.063957      20 warnings.go:70] unknown field "epsilon"
  W0727 12:24:34.063984      20 warnings.go:70] unknown field "gamma"
  Jul 27 12:24:34.609: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-536" for this suite. @ 07/27/24 12:24:34.614
• [3.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 07/27/24 12:24:34.621
  Jul 27 12:24:34.621: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename disruption @ 07/27/24 12:24:34.621
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:24:34.635
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:24:34.637
  STEP: Waiting for the pdb to be processed @ 07/27/24 12:24:34.644
  STEP: Waiting for all pods to be running @ 07/27/24 12:24:36.675
  Jul 27 12:24:36.680: INFO: running pods: 0 < 3
  Jul 27 12:24:38.683: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2926" for this suite. @ 07/27/24 12:24:38.687
• [4.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 07/27/24 12:24:38.696
  Jul 27 12:24:38.696: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename downward-api @ 07/27/24 12:24:38.696
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:24:38.712
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:24:38.715
  STEP: Creating a pod to test downward API volume plugin @ 07/27/24 12:24:38.718
  STEP: Saw pod success @ 07/27/24 12:24:42.744
  Jul 27 12:24:42.749: INFO: Trying to get logs from node ip-172-31-18-96 pod downwardapi-volume-4eee0e09-ed20-4845-94ac-5a163f13b9f4 container client-container: <nil>
  STEP: delete the pod @ 07/27/24 12:24:42.756
  Jul 27 12:24:42.776: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7047" for this suite. @ 07/27/24 12:24:42.78
• [4.093 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:470
  STEP: Creating a kubernetes client @ 07/27/24 12:24:42.789
  Jul 27 12:24:42.789: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename sched-pred @ 07/27/24 12:24:42.789
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:24:42.804
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:24:42.808
  Jul 27 12:24:42.811: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Jul 27 12:24:42.818: INFO: Waiting for terminating namespaces to be deleted...
  Jul 27 12:24:42.821: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-10-249 before test
  Jul 27 12:24:42.826: INFO: pod-2 from disruption-2926 started at 2024-07-27 12:24:36 +0000 UTC (1 container statuses recorded)
  Jul 27 12:24:42.826: INFO: 	Container donothing ready: true, restart count 0
  Jul 27 12:24:42.826: INFO: nginx-ingress-controller-kubernetes-worker-p6cd4 from ingress-nginx-kubernetes-worker started at 2024-07-27 11:55:45 +0000 UTC (1 container statuses recorded)
  Jul 27 12:24:42.826: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jul 27 12:24:42.826: INFO: calico-node-6pr7z from kube-system started at 2024-07-27 12:04:22 +0000 UTC (1 container statuses recorded)
  Jul 27 12:24:42.826: INFO: 	Container calico-node ready: true, restart count 0
  Jul 27 12:24:42.826: INFO: sonobuoy-e2e-job-984de38699c54bba from sonobuoy started at 2024-07-27 12:07:10 +0000 UTC (2 container statuses recorded)
  Jul 27 12:24:42.826: INFO: 	Container e2e ready: true, restart count 0
  Jul 27 12:24:42.826: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jul 27 12:24:42.826: INFO: sonobuoy-systemd-logs-daemon-set-871057d561a1403a-tr4gf from sonobuoy started at 2024-07-27 12:07:10 +0000 UTC (2 container statuses recorded)
  Jul 27 12:24:42.826: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jul 27 12:24:42.826: INFO: 	Container systemd-logs ready: true, restart count 0
  Jul 27 12:24:42.826: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-18-96 before test
  Jul 27 12:24:42.832: INFO: pod-0 from disruption-2926 started at 2024-07-27 12:24:36 +0000 UTC (1 container statuses recorded)
  Jul 27 12:24:42.832: INFO: 	Container donothing ready: true, restart count 0
  Jul 27 12:24:42.832: INFO: pod-1 from disruption-2926 started at 2024-07-27 12:24:36 +0000 UTC (1 container statuses recorded)
  Jul 27 12:24:42.832: INFO: 	Container donothing ready: true, restart count 0
  Jul 27 12:24:42.832: INFO: nginx-ingress-controller-kubernetes-worker-86xft from ingress-nginx-kubernetes-worker started at 2024-07-27 11:55:45 +0000 UTC (1 container statuses recorded)
  Jul 27 12:24:42.832: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jul 27 12:24:42.832: INFO: calico-node-92bdd from kube-system started at 2024-07-27 12:04:12 +0000 UTC (1 container statuses recorded)
  Jul 27 12:24:42.832: INFO: 	Container calico-node ready: true, restart count 0
  Jul 27 12:24:42.832: INFO: sonobuoy from sonobuoy started at 2024-07-27 12:07:08 +0000 UTC (1 container statuses recorded)
  Jul 27 12:24:42.832: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Jul 27 12:24:42.832: INFO: sonobuoy-systemd-logs-daemon-set-871057d561a1403a-jpdks from sonobuoy started at 2024-07-27 12:07:10 +0000 UTC (2 container statuses recorded)
  Jul 27 12:24:42.832: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jul 27 12:24:42.832: INFO: 	Container systemd-logs ready: true, restart count 0
  Jul 27 12:24:42.832: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-76-31 before test
  Jul 27 12:24:42.837: INFO: nginx-ingress-controller-kubernetes-worker-c4vwn from ingress-nginx-kubernetes-worker started at 2024-07-27 11:55:45 +0000 UTC (1 container statuses recorded)
  Jul 27 12:24:42.837: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jul 27 12:24:42.837: INFO: calico-node-qqqwn from kube-system started at 2024-07-27 12:03:51 +0000 UTC (1 container statuses recorded)
  Jul 27 12:24:42.837: INFO: 	Container calico-node ready: true, restart count 0
  Jul 27 12:24:42.837: INFO: coredns-bddfd76d7-6sbmv from kube-system started at 2024-07-27 11:55:45 +0000 UTC (1 container statuses recorded)
  Jul 27 12:24:42.837: INFO: 	Container coredns ready: true, restart count 0
  Jul 27 12:24:42.837: INFO: kube-state-metrics-6f48cdd76-wpnxn from kube-system started at 2024-07-27 11:55:45 +0000 UTC (1 container statuses recorded)
  Jul 27 12:24:42.837: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Jul 27 12:24:42.837: INFO: metrics-server-v0.6.3-69d7fbfdf8-wxphj from kube-system started at 2024-07-27 11:55:45 +0000 UTC (2 container statuses recorded)
  Jul 27 12:24:42.837: INFO: 	Container metrics-server ready: true, restart count 0
  Jul 27 12:24:42.837: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Jul 27 12:24:42.837: INFO: dashboard-metrics-scraper-5dd7cb5fc-89q9b from kubernetes-dashboard started at 2024-07-27 11:55:45 +0000 UTC (1 container statuses recorded)
  Jul 27 12:24:42.837: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Jul 27 12:24:42.837: INFO: kubernetes-dashboard-7b899cb9d9-crg8f from kubernetes-dashboard started at 2024-07-27 11:55:45 +0000 UTC (1 container statuses recorded)
  Jul 27 12:24:42.837: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Jul 27 12:24:42.837: INFO: sonobuoy-systemd-logs-daemon-set-871057d561a1403a-2666c from sonobuoy started at 2024-07-27 12:07:10 +0000 UTC (2 container statuses recorded)
  Jul 27 12:24:42.837: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jul 27 12:24:42.837: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 07/27/24 12:24:42.837
  STEP: Explicitly delete pod here to free the resource it takes. @ 07/27/24 12:24:44.864
  STEP: Trying to apply a random label on the found node. @ 07/27/24 12:24:44.878
  STEP: verifying the node has the label kubernetes.io/e2e-66fd5049-a06e-4e0b-ac37-920c83ae5642 42 @ 07/27/24 12:24:44.886
  STEP: Trying to relaunch the pod, now with labels. @ 07/27/24 12:24:44.891
  STEP: removing the label kubernetes.io/e2e-66fd5049-a06e-4e0b-ac37-920c83ae5642 off the node ip-172-31-10-249 @ 07/27/24 12:24:46.919
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-66fd5049-a06e-4e0b-ac37-920c83ae5642 @ 07/27/24 12:24:46.93
  Jul 27 12:24:46.935: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-46" for this suite. @ 07/27/24 12:24:46.942
• [4.167 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:558
  STEP: Creating a kubernetes client @ 07/27/24 12:24:46.956
  Jul 27 12:24:46.956: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename ingress @ 07/27/24 12:24:46.956
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:24:46.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:24:46.973
  STEP: getting /apis @ 07/27/24 12:24:46.976
  STEP: getting /apis/networking.k8s.io @ 07/27/24 12:24:46.979
  STEP: getting /apis/networking.k8s.iov1 @ 07/27/24 12:24:46.981
  STEP: creating @ 07/27/24 12:24:46.982
  STEP: getting @ 07/27/24 12:24:47.001
  STEP: listing @ 07/27/24 12:24:47.004
  STEP: watching @ 07/27/24 12:24:47.01
  Jul 27 12:24:47.010: INFO: starting watch
  STEP: cluster-wide listing @ 07/27/24 12:24:47.01
  STEP: cluster-wide watching @ 07/27/24 12:24:47.014
  Jul 27 12:24:47.014: INFO: starting watch
  STEP: patching @ 07/27/24 12:24:47.015
  STEP: updating @ 07/27/24 12:24:47.021
  Jul 27 12:24:47.032: INFO: waiting for watch events with expected annotations
  Jul 27 12:24:47.032: INFO: saw patched and updated annotations
  STEP: patching /status @ 07/27/24 12:24:47.032
  STEP: updating /status @ 07/27/24 12:24:47.038
  STEP: get /status @ 07/27/24 12:24:47.049
  STEP: deleting @ 07/27/24 12:24:47.054
  STEP: deleting a collection @ 07/27/24 12:24:47.076
  Jul 27 12:24:47.092: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-6447" for this suite. @ 07/27/24 12:24:47.097
• [0.152 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:793
  STEP: Creating a kubernetes client @ 07/27/24 12:24:47.109
  Jul 27 12:24:47.109: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename statefulset @ 07/27/24 12:24:47.11
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:24:47.127
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:24:47.129
  STEP: Creating service test in namespace statefulset-7959 @ 07/27/24 12:24:47.131
  STEP: Looking for a node to schedule stateful set and pod @ 07/27/24 12:24:47.137
  STEP: Creating pod with conflicting port in namespace statefulset-7959 @ 07/27/24 12:24:47.144
  STEP: Waiting until pod test-pod will start running in namespace statefulset-7959 @ 07/27/24 12:24:47.153
  STEP: Creating statefulset with conflicting port in namespace statefulset-7959 @ 07/27/24 12:24:49.161
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-7959 @ 07/27/24 12:24:49.167
  Jul 27 12:24:49.178: INFO: Observed stateful pod in namespace: statefulset-7959, name: ss-0, uid: c8abeb3d-91ea-4b57-b0b2-38a11b50d046, status phase: Pending. Waiting for statefulset controller to delete.
  Jul 27 12:24:49.194: INFO: Observed stateful pod in namespace: statefulset-7959, name: ss-0, uid: c8abeb3d-91ea-4b57-b0b2-38a11b50d046, status phase: Failed. Waiting for statefulset controller to delete.
  Jul 27 12:24:49.201: INFO: Observed stateful pod in namespace: statefulset-7959, name: ss-0, uid: c8abeb3d-91ea-4b57-b0b2-38a11b50d046, status phase: Failed. Waiting for statefulset controller to delete.
  Jul 27 12:24:49.207: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-7959
  STEP: Removing pod with conflicting port in namespace statefulset-7959 @ 07/27/24 12:24:49.207
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-7959 and will be in running state @ 07/27/24 12:24:49.239
  Jul 27 12:24:51.254: INFO: Deleting all statefulset in ns statefulset-7959
  Jul 27 12:24:51.257: INFO: Scaling statefulset ss to 0
  Jul 27 12:25:01.277: INFO: Waiting for statefulset status.replicas updated to 0
  Jul 27 12:25:01.280: INFO: Deleting statefulset ss
  Jul 27 12:25:01.295: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7959" for this suite. @ 07/27/24 12:25:01.3
• [14.198 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 07/27/24 12:25:01.307
  Jul 27 12:25:01.307: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename daemonsets @ 07/27/24 12:25:01.308
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:25:01.324
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:25:01.326
  STEP: Creating simple DaemonSet "daemon-set" @ 07/27/24 12:25:01.346
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/27/24 12:25:01.352
  Jul 27 12:25:01.358: INFO: DaemonSet pods can't tolerate node ip-172-31-6-18 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 27 12:25:01.358: INFO: DaemonSet pods can't tolerate node ip-172-31-93-193 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 27 12:25:01.361: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul 27 12:25:01.361: INFO: Node ip-172-31-10-249 is running 0 daemon pod, expected 1
  Jul 27 12:25:02.358: INFO: DaemonSet pods can't tolerate node ip-172-31-6-18 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 27 12:25:02.358: INFO: DaemonSet pods can't tolerate node ip-172-31-93-193 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 27 12:25:02.361: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jul 27 12:25:02.361: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 07/27/24 12:25:02.364
  Jul 27 12:25:02.380: INFO: DaemonSet pods can't tolerate node ip-172-31-6-18 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 27 12:25:02.380: INFO: DaemonSet pods can't tolerate node ip-172-31-93-193 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 27 12:25:02.384: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jul 27 12:25:02.384: INFO: Node ip-172-31-18-96 is running 0 daemon pod, expected 1
  Jul 27 12:25:03.382: INFO: DaemonSet pods can't tolerate node ip-172-31-6-18 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 27 12:25:03.382: INFO: DaemonSet pods can't tolerate node ip-172-31-93-193 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 27 12:25:03.386: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jul 27 12:25:03.386: INFO: Node ip-172-31-18-96 is running 0 daemon pod, expected 1
  Jul 27 12:25:04.383: INFO: DaemonSet pods can't tolerate node ip-172-31-6-18 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 27 12:25:04.383: INFO: DaemonSet pods can't tolerate node ip-172-31-93-193 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 27 12:25:04.388: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jul 27 12:25:04.388: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 07/27/24 12:25:04.393
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1352, will wait for the garbage collector to delete the pods @ 07/27/24 12:25:04.393
  Jul 27 12:25:04.455: INFO: Deleting DaemonSet.extensions daemon-set took: 6.846164ms
  Jul 27 12:25:04.556: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.823691ms
  Jul 27 12:25:06.360: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul 27 12:25:06.360: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jul 27 12:25:06.364: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"10735"},"items":null}

  Jul 27 12:25:06.367: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"10735"},"items":null}

  Jul 27 12:25:06.379: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1352" for this suite. @ 07/27/24 12:25:06.382
• [5.081 seconds]
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 07/27/24 12:25:06.388
  Jul 27 12:25:06.388: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename sched-preemption @ 07/27/24 12:25:06.389
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:25:06.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:25:06.406
  Jul 27 12:25:06.425: INFO: Waiting up to 1m0s for all nodes to be ready
  Jul 27 12:26:06.430: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 07/27/24 12:26:06.434
  Jul 27 12:26:06.434: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename sched-preemption-path @ 07/27/24 12:26:06.434
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:26:06.449
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:26:06.452
  Jul 27 12:26:06.468: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  Jul 27 12:26:06.472: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  Jul 27 12:26:06.546: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-1496" for this suite. @ 07/27/24 12:26:06.55
  Jul 27 12:26:06.556: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-9499" for this suite. @ 07/27/24 12:26:06.56
• [60.179 seconds]
------------------------------
SSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:742
  STEP: Creating a kubernetes client @ 07/27/24 12:26:06.567
  Jul 27 12:26:06.567: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename svcaccounts @ 07/27/24 12:26:06.568
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:26:06.584
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:26:06.586
  Jul 27 12:26:06.592: INFO: Got root ca configmap in namespace "svcaccounts-2749"
  Jul 27 12:26:06.597: INFO: Deleted root ca configmap in namespace "svcaccounts-2749"
  STEP: waiting for a new root ca configmap created @ 07/27/24 12:26:07.098
  Jul 27 12:26:07.103: INFO: Recreated root ca configmap in namespace "svcaccounts-2749"
  Jul 27 12:26:07.108: INFO: Updated root ca configmap in namespace "svcaccounts-2749"
  STEP: waiting for the root ca configmap reconciled @ 07/27/24 12:26:07.609
  Jul 27 12:26:07.613: INFO: Reconciled root ca configmap in namespace "svcaccounts-2749"
  Jul 27 12:26:07.613: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2749" for this suite. @ 07/27/24 12:26:07.617
• [1.058 seconds]
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 07/27/24 12:26:07.625
  Jul 27 12:26:07.625: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename svc-latency @ 07/27/24 12:26:07.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:26:07.638
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:26:07.641
  Jul 27 12:26:07.644: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-1593 @ 07/27/24 12:26:07.644
  I0727 12:26:07.649622      20 runners.go:197] Created replication controller with name: svc-latency-rc, namespace: svc-latency-1593, replica count: 1
  I0727 12:26:08.700553      20 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jul 27 12:26:08.812: INFO: Created: latency-svc-qmn54
  Jul 27 12:26:08.822: INFO: Got endpoints: latency-svc-qmn54 [21.251866ms]
  Jul 27 12:26:08.833: INFO: Created: latency-svc-rcv2l
  Jul 27 12:26:08.845: INFO: Created: latency-svc-sbz9g
  Jul 27 12:26:08.847: INFO: Got endpoints: latency-svc-rcv2l [24.9614ms]
  Jul 27 12:26:08.854: INFO: Got endpoints: latency-svc-sbz9g [32.048806ms]
  Jul 27 12:26:08.855: INFO: Created: latency-svc-kfss2
  Jul 27 12:26:08.861: INFO: Got endpoints: latency-svc-kfss2 [39.22131ms]
  Jul 27 12:26:08.864: INFO: Created: latency-svc-t6z9j
  Jul 27 12:26:08.870: INFO: Created: latency-svc-5ctl2
  Jul 27 12:26:08.871: INFO: Got endpoints: latency-svc-t6z9j [48.610223ms]
  Jul 27 12:26:08.879: INFO: Created: latency-svc-c54cb
  Jul 27 12:26:08.879: INFO: Got endpoints: latency-svc-5ctl2 [56.594785ms]
  Jul 27 12:26:08.885: INFO: Got endpoints: latency-svc-c54cb [63.123989ms]
  Jul 27 12:26:08.958: INFO: Created: latency-svc-b5wss
  Jul 27 12:26:08.958: INFO: Created: latency-svc-rr45w
  Jul 27 12:26:08.958: INFO: Created: latency-svc-rfmk9
  Jul 27 12:26:08.959: INFO: Created: latency-svc-kmvhc
  Jul 27 12:26:08.959: INFO: Created: latency-svc-7ggjd
  Jul 27 12:26:08.960: INFO: Created: latency-svc-x89h6
  Jul 27 12:26:08.960: INFO: Created: latency-svc-27sv4
  Jul 27 12:26:08.960: INFO: Created: latency-svc-856gd
  Jul 27 12:26:08.960: INFO: Created: latency-svc-t89kk
  Jul 27 12:26:08.961: INFO: Created: latency-svc-z8w6n
  Jul 27 12:26:08.961: INFO: Created: latency-svc-7jfk6
  Jul 27 12:26:08.961: INFO: Created: latency-svc-7xwgj
  Jul 27 12:26:08.961: INFO: Created: latency-svc-ntlp8
  Jul 27 12:26:08.962: INFO: Created: latency-svc-qqfd4
  Jul 27 12:26:08.963: INFO: Got endpoints: latency-svc-b5wss [77.284641ms]
  Jul 27 12:26:08.963: INFO: Created: latency-svc-psffg
  Jul 27 12:26:08.971: INFO: Got endpoints: latency-svc-qqfd4 [116.943788ms]
  Jul 27 12:26:08.977: INFO: Got endpoints: latency-svc-z8w6n [155.087718ms]
  Jul 27 12:26:08.982: INFO: Got endpoints: latency-svc-7ggjd [159.653025ms]
  Jul 27 12:26:08.982: INFO: Got endpoints: latency-svc-7xwgj [159.734622ms]
  Jul 27 12:26:08.987: INFO: Created: latency-svc-wddv8
  Jul 27 12:26:08.989: INFO: Got endpoints: latency-svc-t89kk [166.210223ms]
  Jul 27 12:26:08.989: INFO: Got endpoints: latency-svc-psffg [166.463232ms]
  Jul 27 12:26:08.989: INFO: Got endpoints: latency-svc-856gd [166.619686ms]
  Jul 27 12:26:08.991: INFO: Got endpoints: latency-svc-7jfk6 [112.463983ms]
  Jul 27 12:26:08.993: INFO: Got endpoints: latency-svc-ntlp8 [146.132732ms]
  Jul 27 12:26:08.999: INFO: Got endpoints: latency-svc-kmvhc [176.785601ms]
  Jul 27 12:26:09.003: INFO: Got endpoints: latency-svc-rr45w [132.359351ms]
  Jul 27 12:26:09.003: INFO: Created: latency-svc-4v7cv
  Jul 27 12:26:09.006: INFO: Got endpoints: latency-svc-rfmk9 [184.035185ms]
  Jul 27 12:26:09.007: INFO: Got endpoints: latency-svc-27sv4 [145.145756ms]
  Jul 27 12:26:09.011: INFO: Got endpoints: latency-svc-x89h6 [188.769339ms]
  Jul 27 12:26:09.011: INFO: Got endpoints: latency-svc-wddv8 [48.550834ms]
  Jul 27 12:26:09.011: INFO: Got endpoints: latency-svc-4v7cv [40.063634ms]
  Jul 27 12:26:09.086: INFO: Created: latency-svc-qs5d7
  Jul 27 12:26:09.086: INFO: Created: latency-svc-hdg6r
  Jul 27 12:26:09.092: INFO: Created: latency-svc-6dv46
  Jul 27 12:26:09.092: INFO: Created: latency-svc-vbh4v
  Jul 27 12:26:09.092: INFO: Created: latency-svc-9fq4z
  Jul 27 12:26:09.092: INFO: Created: latency-svc-fs6qm
  Jul 27 12:26:09.092: INFO: Created: latency-svc-f728h
  Jul 27 12:26:09.093: INFO: Created: latency-svc-nx9nb
  Jul 27 12:26:09.093: INFO: Created: latency-svc-npm28
  Jul 27 12:26:09.093: INFO: Created: latency-svc-gqtm2
  Jul 27 12:26:09.093: INFO: Created: latency-svc-2472w
  Jul 27 12:26:09.093: INFO: Created: latency-svc-fcb24
  Jul 27 12:26:09.099: INFO: Got endpoints: latency-svc-qs5d7 [110.312176ms]
  Jul 27 12:26:09.102: INFO: Created: latency-svc-kk9xc
  Jul 27 12:26:09.102: INFO: Got endpoints: latency-svc-hdg6r [96.06081ms]
  Jul 27 12:26:09.104: INFO: Created: latency-svc-tbjdj
  Jul 27 12:26:09.105: INFO: Created: latency-svc-nxdzf
  Jul 27 12:26:09.111: INFO: Got endpoints: latency-svc-fcb24 [133.687617ms]
  Jul 27 12:26:09.111: INFO: Got endpoints: latency-svc-gqtm2 [128.794424ms]
  Jul 27 12:26:09.117: INFO: Got endpoints: latency-svc-2472w [125.649997ms]
  Jul 27 12:26:09.117: INFO: Got endpoints: latency-svc-nx9nb [128.498537ms]
  Jul 27 12:26:09.117: INFO: Got endpoints: latency-svc-nxdzf [106.095764ms]
  Jul 27 12:26:09.121: INFO: Got endpoints: latency-svc-npm28 [127.965316ms]
  Jul 27 12:26:09.121: INFO: Got endpoints: latency-svc-tbjdj [118.22571ms]
  Jul 27 12:26:09.127: INFO: Got endpoints: latency-svc-kk9xc [115.843865ms]
  Jul 27 12:26:09.128: INFO: Created: latency-svc-fwg2x
  Jul 27 12:26:09.128: INFO: Got endpoints: latency-svc-9fq4z [138.427601ms]
  Jul 27 12:26:09.128: INFO: Got endpoints: latency-svc-fs6qm [121.62248ms]
  Jul 27 12:26:09.136: INFO: Created: latency-svc-xx45t
  Jul 27 12:26:09.141: INFO: Created: latency-svc-9kzgq
  Jul 27 12:26:09.148: INFO: Created: latency-svc-675gx
  Jul 27 12:26:09.153: INFO: Created: latency-svc-6gjt5
  Jul 27 12:26:09.158: INFO: Created: latency-svc-7tnc4
  Jul 27 12:26:09.163: INFO: Created: latency-svc-bf8rp
  Jul 27 12:26:09.170: INFO: Got endpoints: latency-svc-f728h [158.404606ms]
  Jul 27 12:26:09.173: INFO: Created: latency-svc-m7tff
  Jul 27 12:26:09.178: INFO: Created: latency-svc-zd6bv
  Jul 27 12:26:09.189: INFO: Created: latency-svc-xd52k
  Jul 27 12:26:09.197: INFO: Created: latency-svc-ltsr9
  Jul 27 12:26:09.203: INFO: Created: latency-svc-fjxq8
  Jul 27 12:26:09.204: INFO: Created: latency-svc-zw8j7
  Jul 27 12:26:09.217: INFO: Got endpoints: latency-svc-6dv46 [218.107011ms]
  Jul 27 12:26:09.228: INFO: Created: latency-svc-q9rfs
  Jul 27 12:26:09.269: INFO: Got endpoints: latency-svc-vbh4v [286.810793ms]
  Jul 27 12:26:09.280: INFO: Created: latency-svc-v59tm
  Jul 27 12:26:09.321: INFO: Got endpoints: latency-svc-fwg2x [221.174322ms]
  Jul 27 12:26:09.331: INFO: Created: latency-svc-rkm44
  Jul 27 12:26:09.368: INFO: Got endpoints: latency-svc-xx45t [265.518778ms]
  Jul 27 12:26:09.380: INFO: Created: latency-svc-wsvvq
  Jul 27 12:26:09.417: INFO: Got endpoints: latency-svc-9kzgq [306.116022ms]
  Jul 27 12:26:09.428: INFO: Created: latency-svc-2ffjs
  Jul 27 12:26:09.470: INFO: Got endpoints: latency-svc-675gx [358.883241ms]
  Jul 27 12:26:09.480: INFO: Created: latency-svc-jzlwq
  Jul 27 12:26:09.520: INFO: Got endpoints: latency-svc-6gjt5 [402.485107ms]
  Jul 27 12:26:09.530: INFO: Created: latency-svc-7pdcg
  Jul 27 12:26:09.569: INFO: Got endpoints: latency-svc-7tnc4 [451.486242ms]
  Jul 27 12:26:09.581: INFO: Created: latency-svc-68bzv
  Jul 27 12:26:09.619: INFO: Got endpoints: latency-svc-bf8rp [501.378375ms]
  Jul 27 12:26:09.631: INFO: Created: latency-svc-nngcm
  Jul 27 12:26:09.668: INFO: Got endpoints: latency-svc-m7tff [546.781638ms]
  Jul 27 12:26:09.679: INFO: Created: latency-svc-lc92t
  Jul 27 12:26:09.719: INFO: Got endpoints: latency-svc-zd6bv [597.130618ms]
  Jul 27 12:26:09.729: INFO: Created: latency-svc-4t98n
  Jul 27 12:26:09.769: INFO: Got endpoints: latency-svc-xd52k [640.820889ms]
  Jul 27 12:26:09.779: INFO: Created: latency-svc-6g9fn
  Jul 27 12:26:09.819: INFO: Got endpoints: latency-svc-ltsr9 [691.639304ms]
  Jul 27 12:26:09.832: INFO: Created: latency-svc-cbhfv
  Jul 27 12:26:09.868: INFO: Got endpoints: latency-svc-fjxq8 [697.828201ms]
  Jul 27 12:26:09.879: INFO: Created: latency-svc-fdn8k
  Jul 27 12:26:09.918: INFO: Got endpoints: latency-svc-zw8j7 [790.044051ms]
  Jul 27 12:26:09.928: INFO: Created: latency-svc-hxvjk
  Jul 27 12:26:09.970: INFO: Got endpoints: latency-svc-q9rfs [752.190988ms]
  Jul 27 12:26:09.980: INFO: Created: latency-svc-dvgst
  Jul 27 12:26:10.020: INFO: Got endpoints: latency-svc-v59tm [751.032773ms]
  Jul 27 12:26:10.029: INFO: Created: latency-svc-s8t9x
  Jul 27 12:26:10.071: INFO: Got endpoints: latency-svc-rkm44 [750.314944ms]
  Jul 27 12:26:10.080: INFO: Created: latency-svc-77gsz
  Jul 27 12:26:10.118: INFO: Got endpoints: latency-svc-wsvvq [749.98828ms]
  Jul 27 12:26:10.128: INFO: Created: latency-svc-khhtd
  Jul 27 12:26:10.168: INFO: Got endpoints: latency-svc-2ffjs [750.111102ms]
  Jul 27 12:26:10.180: INFO: Created: latency-svc-r4bsv
  Jul 27 12:26:10.221: INFO: Got endpoints: latency-svc-jzlwq [750.511497ms]
  Jul 27 12:26:10.230: INFO: Created: latency-svc-r7f82
  Jul 27 12:26:10.270: INFO: Got endpoints: latency-svc-7pdcg [750.396162ms]
  Jul 27 12:26:10.280: INFO: Created: latency-svc-qs759
  Jul 27 12:26:10.318: INFO: Got endpoints: latency-svc-68bzv [748.956445ms]
  Jul 27 12:26:10.329: INFO: Created: latency-svc-qxqqk
  Jul 27 12:26:10.368: INFO: Got endpoints: latency-svc-nngcm [748.843012ms]
  Jul 27 12:26:10.382: INFO: Created: latency-svc-gx29x
  Jul 27 12:26:10.419: INFO: Got endpoints: latency-svc-lc92t [751.143887ms]
  Jul 27 12:26:10.430: INFO: Created: latency-svc-7tv4z
  Jul 27 12:26:10.469: INFO: Got endpoints: latency-svc-4t98n [750.649524ms]
  Jul 27 12:26:10.480: INFO: Created: latency-svc-sftqv
  Jul 27 12:26:10.520: INFO: Got endpoints: latency-svc-6g9fn [751.267221ms]
  Jul 27 12:26:10.530: INFO: Created: latency-svc-cjwjd
  Jul 27 12:26:10.569: INFO: Got endpoints: latency-svc-cbhfv [749.483092ms]
  Jul 27 12:26:10.580: INFO: Created: latency-svc-kss7f
  Jul 27 12:26:10.617: INFO: Got endpoints: latency-svc-fdn8k [749.325116ms]
  Jul 27 12:26:10.627: INFO: Created: latency-svc-crmmd
  Jul 27 12:26:10.670: INFO: Got endpoints: latency-svc-hxvjk [752.283891ms]
  Jul 27 12:26:10.679: INFO: Created: latency-svc-wfphg
  Jul 27 12:26:10.720: INFO: Got endpoints: latency-svc-dvgst [749.883932ms]
  Jul 27 12:26:10.729: INFO: Created: latency-svc-jqdsw
  Jul 27 12:26:10.767: INFO: Got endpoints: latency-svc-s8t9x [747.380803ms]
  Jul 27 12:26:10.778: INFO: Created: latency-svc-n4ct6
  Jul 27 12:26:10.817: INFO: Got endpoints: latency-svc-77gsz [746.430688ms]
  Jul 27 12:26:10.830: INFO: Created: latency-svc-hj8n6
  Jul 27 12:26:10.867: INFO: Got endpoints: latency-svc-khhtd [749.176552ms]
  Jul 27 12:26:10.880: INFO: Created: latency-svc-6nbv5
  Jul 27 12:26:10.919: INFO: Got endpoints: latency-svc-r4bsv [751.120501ms]
  Jul 27 12:26:10.929: INFO: Created: latency-svc-xnd87
  Jul 27 12:26:10.970: INFO: Got endpoints: latency-svc-r7f82 [748.897955ms]
  Jul 27 12:26:10.978: INFO: Created: latency-svc-84wzs
  Jul 27 12:26:11.019: INFO: Got endpoints: latency-svc-qs759 [749.173354ms]
  Jul 27 12:26:11.030: INFO: Created: latency-svc-8f9fz
  Jul 27 12:26:11.067: INFO: Got endpoints: latency-svc-qxqqk [748.789909ms]
  Jul 27 12:26:11.078: INFO: Created: latency-svc-pp6tz
  Jul 27 12:26:11.119: INFO: Got endpoints: latency-svc-gx29x [751.092976ms]
  Jul 27 12:26:11.129: INFO: Created: latency-svc-lrx8v
  Jul 27 12:26:11.170: INFO: Got endpoints: latency-svc-7tv4z [750.824855ms]
  Jul 27 12:26:11.180: INFO: Created: latency-svc-58xxs
  Jul 27 12:26:11.219: INFO: Got endpoints: latency-svc-sftqv [749.430992ms]
  Jul 27 12:26:11.228: INFO: Created: latency-svc-5rw8l
  Jul 27 12:26:11.270: INFO: Got endpoints: latency-svc-cjwjd [749.707553ms]
  Jul 27 12:26:11.279: INFO: Created: latency-svc-62bvv
  Jul 27 12:26:11.318: INFO: Got endpoints: latency-svc-kss7f [748.658988ms]
  Jul 27 12:26:11.329: INFO: Created: latency-svc-w9rx6
  Jul 27 12:26:11.367: INFO: Got endpoints: latency-svc-crmmd [750.466356ms]
  Jul 27 12:26:11.377: INFO: Created: latency-svc-rvrjp
  Jul 27 12:26:11.419: INFO: Got endpoints: latency-svc-wfphg [749.038077ms]
  Jul 27 12:26:11.429: INFO: Created: latency-svc-jq7fc
  Jul 27 12:26:11.470: INFO: Got endpoints: latency-svc-jqdsw [750.504418ms]
  Jul 27 12:26:11.481: INFO: Created: latency-svc-cjc5q
  Jul 27 12:26:11.519: INFO: Got endpoints: latency-svc-n4ct6 [751.455619ms]
  Jul 27 12:26:11.532: INFO: Created: latency-svc-d686h
  Jul 27 12:26:11.575: INFO: Got endpoints: latency-svc-hj8n6 [757.99994ms]
  Jul 27 12:26:11.589: INFO: Created: latency-svc-j8rpx
  Jul 27 12:26:11.619: INFO: Got endpoints: latency-svc-6nbv5 [751.87726ms]
  Jul 27 12:26:11.638: INFO: Created: latency-svc-vswts
  Jul 27 12:26:11.667: INFO: Got endpoints: latency-svc-xnd87 [748.523475ms]
  Jul 27 12:26:11.682: INFO: Created: latency-svc-d44qb
  Jul 27 12:26:11.723: INFO: Got endpoints: latency-svc-84wzs [753.338734ms]
  Jul 27 12:26:11.736: INFO: Created: latency-svc-9tlrv
  Jul 27 12:26:11.773: INFO: Got endpoints: latency-svc-8f9fz [753.761123ms]
  Jul 27 12:26:11.785: INFO: Created: latency-svc-px2mn
  Jul 27 12:26:11.819: INFO: Got endpoints: latency-svc-pp6tz [751.859693ms]
  Jul 27 12:26:11.833: INFO: Created: latency-svc-7dc4z
  Jul 27 12:26:11.870: INFO: Got endpoints: latency-svc-lrx8v [750.951122ms]
  Jul 27 12:26:11.880: INFO: Created: latency-svc-bb2cw
  Jul 27 12:26:11.919: INFO: Got endpoints: latency-svc-58xxs [748.833547ms]
  Jul 27 12:26:11.929: INFO: Created: latency-svc-9756x
  Jul 27 12:26:11.969: INFO: Got endpoints: latency-svc-5rw8l [750.238905ms]
  Jul 27 12:26:11.980: INFO: Created: latency-svc-k97cg
  Jul 27 12:26:12.020: INFO: Got endpoints: latency-svc-62bvv [749.591595ms]
  Jul 27 12:26:12.029: INFO: Created: latency-svc-khmfj
  Jul 27 12:26:12.068: INFO: Got endpoints: latency-svc-w9rx6 [749.397583ms]
  Jul 27 12:26:12.078: INFO: Created: latency-svc-4m7vd
  Jul 27 12:26:12.118: INFO: Got endpoints: latency-svc-rvrjp [750.133901ms]
  Jul 27 12:26:12.134: INFO: Created: latency-svc-zqpdv
  Jul 27 12:26:12.170: INFO: Got endpoints: latency-svc-jq7fc [751.217317ms]
  Jul 27 12:26:12.180: INFO: Created: latency-svc-w798c
  Jul 27 12:26:12.219: INFO: Got endpoints: latency-svc-cjc5q [748.930174ms]
  Jul 27 12:26:12.228: INFO: Created: latency-svc-f879w
  Jul 27 12:26:12.268: INFO: Got endpoints: latency-svc-d686h [748.829232ms]
  Jul 27 12:26:12.279: INFO: Created: latency-svc-r979b
  Jul 27 12:26:12.318: INFO: Got endpoints: latency-svc-j8rpx [742.277098ms]
  Jul 27 12:26:12.331: INFO: Created: latency-svc-cw6cj
  Jul 27 12:26:12.370: INFO: Got endpoints: latency-svc-vswts [750.576674ms]
  Jul 27 12:26:12.379: INFO: Created: latency-svc-2kl5q
  Jul 27 12:26:12.420: INFO: Got endpoints: latency-svc-d44qb [752.320977ms]
  Jul 27 12:26:12.430: INFO: Created: latency-svc-52jp4
  Jul 27 12:26:12.470: INFO: Got endpoints: latency-svc-9tlrv [747.083877ms]
  Jul 27 12:26:12.480: INFO: Created: latency-svc-h5z42
  Jul 27 12:26:12.517: INFO: Got endpoints: latency-svc-px2mn [743.809528ms]
  Jul 27 12:26:12.527: INFO: Created: latency-svc-czfbq
  Jul 27 12:26:12.567: INFO: Got endpoints: latency-svc-7dc4z [748.522942ms]
  Jul 27 12:26:12.578: INFO: Created: latency-svc-vj95j
  Jul 27 12:26:12.619: INFO: Got endpoints: latency-svc-bb2cw [749.442762ms]
  Jul 27 12:26:12.632: INFO: Created: latency-svc-ghgdh
  Jul 27 12:26:12.670: INFO: Got endpoints: latency-svc-9756x [750.976214ms]
  Jul 27 12:26:12.680: INFO: Created: latency-svc-5xk9p
  Jul 27 12:26:12.719: INFO: Got endpoints: latency-svc-k97cg [749.574071ms]
  Jul 27 12:26:12.728: INFO: Created: latency-svc-t6jgp
  Jul 27 12:26:12.767: INFO: Got endpoints: latency-svc-khmfj [747.570014ms]
  Jul 27 12:26:12.779: INFO: Created: latency-svc-29gj5
  Jul 27 12:26:12.820: INFO: Got endpoints: latency-svc-4m7vd [752.168772ms]
  Jul 27 12:26:12.837: INFO: Created: latency-svc-x7kbp
  Jul 27 12:26:12.869: INFO: Got endpoints: latency-svc-zqpdv [751.523669ms]
  Jul 27 12:26:12.879: INFO: Created: latency-svc-xtwm5
  Jul 27 12:26:12.923: INFO: Got endpoints: latency-svc-w798c [752.711911ms]
  Jul 27 12:26:12.939: INFO: Created: latency-svc-8gh69
  Jul 27 12:26:12.968: INFO: Got endpoints: latency-svc-f879w [749.33155ms]
  Jul 27 12:26:12.981: INFO: Created: latency-svc-xgcmk
  Jul 27 12:26:13.017: INFO: Got endpoints: latency-svc-r979b [749.457059ms]
  Jul 27 12:26:13.029: INFO: Created: latency-svc-f6ksq
  Jul 27 12:26:13.067: INFO: Got endpoints: latency-svc-cw6cj [749.109671ms]
  Jul 27 12:26:13.079: INFO: Created: latency-svc-56g79
  Jul 27 12:26:13.120: INFO: Got endpoints: latency-svc-2kl5q [750.168253ms]
  Jul 27 12:26:13.130: INFO: Created: latency-svc-764xs
  Jul 27 12:26:13.169: INFO: Got endpoints: latency-svc-52jp4 [749.42827ms]
  Jul 27 12:26:13.181: INFO: Created: latency-svc-gpl7p
  Jul 27 12:26:13.219: INFO: Got endpoints: latency-svc-h5z42 [748.495227ms]
  Jul 27 12:26:13.229: INFO: Created: latency-svc-cbght
  Jul 27 12:26:13.269: INFO: Got endpoints: latency-svc-czfbq [751.276094ms]
  Jul 27 12:26:13.281: INFO: Created: latency-svc-89zkc
  Jul 27 12:26:13.317: INFO: Got endpoints: latency-svc-vj95j [749.632717ms]
  Jul 27 12:26:13.327: INFO: Created: latency-svc-fjrll
  Jul 27 12:26:13.374: INFO: Got endpoints: latency-svc-ghgdh [754.672575ms]
  Jul 27 12:26:13.384: INFO: Created: latency-svc-pc2n5
  Jul 27 12:26:13.420: INFO: Got endpoints: latency-svc-5xk9p [749.584663ms]
  Jul 27 12:26:13.431: INFO: Created: latency-svc-87s6l
  Jul 27 12:26:13.467: INFO: Got endpoints: latency-svc-t6jgp [748.085539ms]
  Jul 27 12:26:13.478: INFO: Created: latency-svc-r7nrg
  Jul 27 12:26:13.518: INFO: Got endpoints: latency-svc-29gj5 [750.481455ms]
  Jul 27 12:26:13.530: INFO: Created: latency-svc-x4nhr
  Jul 27 12:26:13.569: INFO: Got endpoints: latency-svc-x7kbp [748.976186ms]
  Jul 27 12:26:13.580: INFO: Created: latency-svc-cqq7t
  Jul 27 12:26:13.620: INFO: Got endpoints: latency-svc-xtwm5 [750.366335ms]
  Jul 27 12:26:13.629: INFO: Created: latency-svc-hhdhl
  Jul 27 12:26:13.670: INFO: Got endpoints: latency-svc-8gh69 [747.06819ms]
  Jul 27 12:26:13.680: INFO: Created: latency-svc-75vq2
  Jul 27 12:26:13.718: INFO: Got endpoints: latency-svc-xgcmk [749.363839ms]
  Jul 27 12:26:13.730: INFO: Created: latency-svc-vk96f
  Jul 27 12:26:13.767: INFO: Got endpoints: latency-svc-f6ksq [749.650431ms]
  Jul 27 12:26:13.779: INFO: Created: latency-svc-xdfk4
  Jul 27 12:26:13.820: INFO: Got endpoints: latency-svc-56g79 [752.388047ms]
  Jul 27 12:26:13.832: INFO: Created: latency-svc-lz7vv
  Jul 27 12:26:13.869: INFO: Got endpoints: latency-svc-764xs [749.465324ms]
  Jul 27 12:26:13.880: INFO: Created: latency-svc-c2zp9
  Jul 27 12:26:13.920: INFO: Got endpoints: latency-svc-gpl7p [750.350166ms]
  Jul 27 12:26:13.930: INFO: Created: latency-svc-mgpz7
  Jul 27 12:26:13.969: INFO: Got endpoints: latency-svc-cbght [750.228737ms]
  Jul 27 12:26:13.979: INFO: Created: latency-svc-gw8p4
  Jul 27 12:26:14.018: INFO: Got endpoints: latency-svc-89zkc [749.522704ms]
  Jul 27 12:26:14.030: INFO: Created: latency-svc-8m42x
  Jul 27 12:26:14.067: INFO: Got endpoints: latency-svc-fjrll [749.963228ms]
  Jul 27 12:26:14.078: INFO: Created: latency-svc-z7nsr
  Jul 27 12:26:14.118: INFO: Got endpoints: latency-svc-pc2n5 [744.195475ms]
  Jul 27 12:26:14.128: INFO: Created: latency-svc-gp49g
  Jul 27 12:26:14.171: INFO: Got endpoints: latency-svc-87s6l [750.720522ms]
  Jul 27 12:26:14.181: INFO: Created: latency-svc-lg62r
  Jul 27 12:26:14.221: INFO: Got endpoints: latency-svc-r7nrg [753.393187ms]
  Jul 27 12:26:14.230: INFO: Created: latency-svc-g5sk2
  Jul 27 12:26:14.269: INFO: Got endpoints: latency-svc-x4nhr [750.777791ms]
  Jul 27 12:26:14.279: INFO: Created: latency-svc-rxlql
  Jul 27 12:26:14.318: INFO: Got endpoints: latency-svc-cqq7t [748.858223ms]
  Jul 27 12:26:14.330: INFO: Created: latency-svc-zl9hq
  Jul 27 12:26:14.368: INFO: Got endpoints: latency-svc-hhdhl [748.270888ms]
  Jul 27 12:26:14.378: INFO: Created: latency-svc-t8llj
  Jul 27 12:26:14.420: INFO: Got endpoints: latency-svc-75vq2 [749.529737ms]
  Jul 27 12:26:14.430: INFO: Created: latency-svc-l442p
  Jul 27 12:26:14.470: INFO: Got endpoints: latency-svc-vk96f [751.89516ms]
  Jul 27 12:26:14.480: INFO: Created: latency-svc-qsp7d
  Jul 27 12:26:14.517: INFO: Got endpoints: latency-svc-xdfk4 [750.031072ms]
  Jul 27 12:26:14.528: INFO: Created: latency-svc-2t2sf
  Jul 27 12:26:14.568: INFO: Got endpoints: latency-svc-lz7vv [747.311123ms]
  Jul 27 12:26:14.579: INFO: Created: latency-svc-8zp8m
  Jul 27 12:26:14.620: INFO: Got endpoints: latency-svc-c2zp9 [750.428571ms]
  Jul 27 12:26:14.630: INFO: Created: latency-svc-dsllh
  Jul 27 12:26:14.669: INFO: Got endpoints: latency-svc-mgpz7 [749.395433ms]
  Jul 27 12:26:14.680: INFO: Created: latency-svc-q9hwd
  Jul 27 12:26:14.720: INFO: Got endpoints: latency-svc-gw8p4 [750.444603ms]
  Jul 27 12:26:14.729: INFO: Created: latency-svc-t4mcl
  Jul 27 12:26:14.768: INFO: Got endpoints: latency-svc-8m42x [749.701582ms]
  Jul 27 12:26:14.780: INFO: Created: latency-svc-9zf6t
  Jul 27 12:26:14.819: INFO: Got endpoints: latency-svc-z7nsr [752.153395ms]
  Jul 27 12:26:14.830: INFO: Created: latency-svc-t8dtw
  Jul 27 12:26:14.869: INFO: Got endpoints: latency-svc-gp49g [750.237055ms]
  Jul 27 12:26:14.879: INFO: Created: latency-svc-gt44d
  Jul 27 12:26:14.920: INFO: Got endpoints: latency-svc-lg62r [749.177644ms]
  Jul 27 12:26:14.930: INFO: Created: latency-svc-8xmhg
  Jul 27 12:26:14.967: INFO: Got endpoints: latency-svc-g5sk2 [746.575428ms]
  Jul 27 12:26:14.978: INFO: Created: latency-svc-jdn7z
  Jul 27 12:26:15.018: INFO: Got endpoints: latency-svc-rxlql [748.801468ms]
  Jul 27 12:26:15.029: INFO: Created: latency-svc-lqvmw
  Jul 27 12:26:15.067: INFO: Got endpoints: latency-svc-zl9hq [749.167917ms]
  Jul 27 12:26:15.077: INFO: Created: latency-svc-wtnf9
  Jul 27 12:26:15.120: INFO: Got endpoints: latency-svc-t8llj [751.887279ms]
  Jul 27 12:26:15.129: INFO: Created: latency-svc-9fmrq
  Jul 27 12:26:15.170: INFO: Got endpoints: latency-svc-l442p [750.67933ms]
  Jul 27 12:26:15.180: INFO: Created: latency-svc-r57cl
  Jul 27 12:26:15.218: INFO: Got endpoints: latency-svc-qsp7d [747.789072ms]
  Jul 27 12:26:15.228: INFO: Created: latency-svc-t2bbl
  Jul 27 12:26:15.267: INFO: Got endpoints: latency-svc-2t2sf [749.868185ms]
  Jul 27 12:26:15.280: INFO: Created: latency-svc-25j9k
  Jul 27 12:26:15.318: INFO: Got endpoints: latency-svc-8zp8m [750.765983ms]
  Jul 27 12:26:15.329: INFO: Created: latency-svc-dsrm8
  Jul 27 12:26:15.369: INFO: Got endpoints: latency-svc-dsllh [749.247446ms]
  Jul 27 12:26:15.379: INFO: Created: latency-svc-qq7nr
  Jul 27 12:26:15.419: INFO: Got endpoints: latency-svc-q9hwd [749.829446ms]
  Jul 27 12:26:15.429: INFO: Created: latency-svc-jnlt4
  Jul 27 12:26:15.469: INFO: Got endpoints: latency-svc-t4mcl [749.578634ms]
  Jul 27 12:26:15.480: INFO: Created: latency-svc-s86qm
  Jul 27 12:26:15.518: INFO: Got endpoints: latency-svc-9zf6t [750.146976ms]
  Jul 27 12:26:15.530: INFO: Created: latency-svc-9kgzr
  Jul 27 12:26:15.567: INFO: Got endpoints: latency-svc-t8dtw [747.437574ms]
  Jul 27 12:26:15.576: INFO: Created: latency-svc-ktvnl
  Jul 27 12:26:15.620: INFO: Got endpoints: latency-svc-gt44d [751.289781ms]
  Jul 27 12:26:15.630: INFO: Created: latency-svc-725kf
  Jul 27 12:26:15.671: INFO: Got endpoints: latency-svc-8xmhg [750.764546ms]
  Jul 27 12:26:15.685: INFO: Created: latency-svc-wljp5
  Jul 27 12:26:15.717: INFO: Got endpoints: latency-svc-jdn7z [749.662866ms]
  Jul 27 12:26:15.728: INFO: Created: latency-svc-vc79h
  Jul 27 12:26:15.768: INFO: Got endpoints: latency-svc-lqvmw [750.457103ms]
  Jul 27 12:26:15.780: INFO: Created: latency-svc-8zcc7
  Jul 27 12:26:15.820: INFO: Got endpoints: latency-svc-wtnf9 [752.864388ms]
  Jul 27 12:26:15.834: INFO: Created: latency-svc-lrktr
  Jul 27 12:26:15.869: INFO: Got endpoints: latency-svc-9fmrq [748.923379ms]
  Jul 27 12:26:15.880: INFO: Created: latency-svc-lxvhg
  Jul 27 12:26:15.920: INFO: Got endpoints: latency-svc-r57cl [749.358447ms]
  Jul 27 12:26:15.929: INFO: Created: latency-svc-cvxm6
  Jul 27 12:26:15.971: INFO: Got endpoints: latency-svc-t2bbl [752.619359ms]
  Jul 27 12:26:15.981: INFO: Created: latency-svc-h29ld
  Jul 27 12:26:16.017: INFO: Got endpoints: latency-svc-25j9k [749.54326ms]
  Jul 27 12:26:16.030: INFO: Created: latency-svc-qcfw8
  Jul 27 12:26:16.067: INFO: Got endpoints: latency-svc-dsrm8 [748.714087ms]
  Jul 27 12:26:16.079: INFO: Created: latency-svc-nrxvb
  Jul 27 12:26:16.118: INFO: Got endpoints: latency-svc-qq7nr [748.325826ms]
  Jul 27 12:26:16.128: INFO: Created: latency-svc-r7qzb
  Jul 27 12:26:16.169: INFO: Got endpoints: latency-svc-jnlt4 [750.424954ms]
  Jul 27 12:26:16.179: INFO: Created: latency-svc-f8b82
  Jul 27 12:26:16.219: INFO: Got endpoints: latency-svc-s86qm [749.560938ms]
  Jul 27 12:26:16.230: INFO: Created: latency-svc-mx97w
  Jul 27 12:26:16.269: INFO: Got endpoints: latency-svc-9kgzr [751.004514ms]
  Jul 27 12:26:16.281: INFO: Created: latency-svc-bbltz
  Jul 27 12:26:16.318: INFO: Got endpoints: latency-svc-ktvnl [750.734992ms]
  Jul 27 12:26:16.328: INFO: Created: latency-svc-2hl65
  Jul 27 12:26:16.368: INFO: Got endpoints: latency-svc-725kf [747.981943ms]
  Jul 27 12:26:16.378: INFO: Created: latency-svc-7h9ls
  Jul 27 12:26:16.420: INFO: Got endpoints: latency-svc-wljp5 [749.155144ms]
  Jul 27 12:26:16.430: INFO: Created: latency-svc-45dj9
  Jul 27 12:26:16.470: INFO: Got endpoints: latency-svc-vc79h [752.620528ms]
  Jul 27 12:26:16.479: INFO: Created: latency-svc-v7znx
  Jul 27 12:26:16.518: INFO: Got endpoints: latency-svc-8zcc7 [748.850386ms]
  Jul 27 12:26:16.530: INFO: Created: latency-svc-jzqfp
  Jul 27 12:26:16.568: INFO: Got endpoints: latency-svc-lrktr [747.667613ms]
  Jul 27 12:26:16.579: INFO: Created: latency-svc-d5mwq
  Jul 27 12:26:16.620: INFO: Got endpoints: latency-svc-lxvhg [750.791287ms]
  Jul 27 12:26:16.630: INFO: Created: latency-svc-mxx7d
  Jul 27 12:26:16.669: INFO: Got endpoints: latency-svc-cvxm6 [749.26917ms]
  Jul 27 12:26:16.719: INFO: Got endpoints: latency-svc-h29ld [747.537045ms]
  Jul 27 12:26:16.771: INFO: Got endpoints: latency-svc-qcfw8 [754.231293ms]
  Jul 27 12:26:16.821: INFO: Got endpoints: latency-svc-nrxvb [753.621286ms]
  Jul 27 12:26:16.870: INFO: Got endpoints: latency-svc-r7qzb [752.419187ms]
  Jul 27 12:26:16.918: INFO: Got endpoints: latency-svc-f8b82 [748.474173ms]
  Jul 27 12:26:16.970: INFO: Got endpoints: latency-svc-mx97w [751.101532ms]
  Jul 27 12:26:17.018: INFO: Got endpoints: latency-svc-bbltz [748.635048ms]
  Jul 27 12:26:17.069: INFO: Got endpoints: latency-svc-2hl65 [751.413032ms]
  Jul 27 12:26:17.119: INFO: Got endpoints: latency-svc-7h9ls [750.766876ms]
  Jul 27 12:26:17.171: INFO: Got endpoints: latency-svc-45dj9 [750.818103ms]
  Jul 27 12:26:17.217: INFO: Got endpoints: latency-svc-v7znx [747.226789ms]
  Jul 27 12:26:17.268: INFO: Got endpoints: latency-svc-jzqfp [750.411189ms]
  Jul 27 12:26:17.320: INFO: Got endpoints: latency-svc-d5mwq [751.19013ms]
  Jul 27 12:26:17.367: INFO: Got endpoints: latency-svc-mxx7d [747.688461ms]
  Jul 27 12:26:17.368: INFO: Latencies: [24.9614ms 32.048806ms 39.22131ms 40.063634ms 48.550834ms 48.610223ms 56.594785ms 63.123989ms 77.284641ms 96.06081ms 106.095764ms 110.312176ms 112.463983ms 115.843865ms 116.943788ms 118.22571ms 121.62248ms 125.649997ms 127.965316ms 128.498537ms 128.794424ms 132.359351ms 133.687617ms 138.427601ms 145.145756ms 146.132732ms 155.087718ms 158.404606ms 159.653025ms 159.734622ms 166.210223ms 166.463232ms 166.619686ms 176.785601ms 184.035185ms 188.769339ms 218.107011ms 221.174322ms 265.518778ms 286.810793ms 306.116022ms 358.883241ms 402.485107ms 451.486242ms 501.378375ms 546.781638ms 597.130618ms 640.820889ms 691.639304ms 697.828201ms 742.277098ms 743.809528ms 744.195475ms 746.430688ms 746.575428ms 747.06819ms 747.083877ms 747.226789ms 747.311123ms 747.380803ms 747.437574ms 747.537045ms 747.570014ms 747.667613ms 747.688461ms 747.789072ms 747.981943ms 748.085539ms 748.270888ms 748.325826ms 748.474173ms 748.495227ms 748.522942ms 748.523475ms 748.635048ms 748.658988ms 748.714087ms 748.789909ms 748.801468ms 748.829232ms 748.833547ms 748.843012ms 748.850386ms 748.858223ms 748.897955ms 748.923379ms 748.930174ms 748.956445ms 748.976186ms 749.038077ms 749.109671ms 749.155144ms 749.167917ms 749.173354ms 749.176552ms 749.177644ms 749.247446ms 749.26917ms 749.325116ms 749.33155ms 749.358447ms 749.363839ms 749.395433ms 749.397583ms 749.42827ms 749.430992ms 749.442762ms 749.457059ms 749.465324ms 749.483092ms 749.522704ms 749.529737ms 749.54326ms 749.560938ms 749.574071ms 749.578634ms 749.584663ms 749.591595ms 749.632717ms 749.650431ms 749.662866ms 749.701582ms 749.707553ms 749.829446ms 749.868185ms 749.883932ms 749.963228ms 749.98828ms 750.031072ms 750.111102ms 750.133901ms 750.146976ms 750.168253ms 750.228737ms 750.237055ms 750.238905ms 750.314944ms 750.350166ms 750.366335ms 750.396162ms 750.411189ms 750.424954ms 750.428571ms 750.444603ms 750.457103ms 750.466356ms 750.481455ms 750.504418ms 750.511497ms 750.576674ms 750.649524ms 750.67933ms 750.720522ms 750.734992ms 750.764546ms 750.765983ms 750.766876ms 750.777791ms 750.791287ms 750.818103ms 750.824855ms 750.951122ms 750.976214ms 751.004514ms 751.032773ms 751.092976ms 751.101532ms 751.120501ms 751.143887ms 751.19013ms 751.217317ms 751.267221ms 751.276094ms 751.289781ms 751.413032ms 751.455619ms 751.523669ms 751.859693ms 751.87726ms 751.887279ms 751.89516ms 752.153395ms 752.168772ms 752.190988ms 752.283891ms 752.320977ms 752.388047ms 752.419187ms 752.619359ms 752.620528ms 752.711911ms 752.864388ms 753.338734ms 753.393187ms 753.621286ms 753.761123ms 754.231293ms 754.672575ms 757.99994ms 790.044051ms]
  Jul 27 12:26:17.368: INFO: 50 %ile: 749.358447ms
  Jul 27 12:26:17.368: INFO: 90 %ile: 751.89516ms
  Jul 27 12:26:17.368: INFO: 99 %ile: 757.99994ms
  Jul 27 12:26:17.368: INFO: Total sample count: 200
  Jul 27 12:26:17.368: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-1593" for this suite. @ 07/27/24 12:26:17.375
• [9.759 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 07/27/24 12:26:17.385
  Jul 27 12:26:17.385: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename projected @ 07/27/24 12:26:17.386
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:26:17.401
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:26:17.403
  STEP: Creating a pod to test downward API volume plugin @ 07/27/24 12:26:17.405
  STEP: Saw pod success @ 07/27/24 12:26:21.431
  Jul 27 12:26:21.434: INFO: Trying to get logs from node ip-172-31-18-96 pod downwardapi-volume-7cd5c9be-ee56-4dca-9334-850a8e2efa83 container client-container: <nil>
  STEP: delete the pod @ 07/27/24 12:26:21.449
  Jul 27 12:26:21.468: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9263" for this suite. @ 07/27/24 12:26:21.472
• [4.095 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 07/27/24 12:26:21.479
  Jul 27 12:26:21.479: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename chunking @ 07/27/24 12:26:21.48
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:26:21.492
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:26:21.495
  STEP: creating a large number of resources @ 07/27/24 12:26:21.497
  STEP: retrieving the first page @ 07/27/24 12:26:39.187
  Jul 27 12:26:39.236: INFO: Retrieved 40/40 results with rv 13104 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMxMDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page until the token expires @ 07/27/24 12:26:39.236
  Jul 27 12:26:59.242: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMxMDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jul 27 12:27:19.242: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMxMDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jul 27 12:27:39.241: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMxMDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jul 27 12:27:59.241: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMxMDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jul 27 12:28:19.241: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMxMDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jul 27 12:28:39.242: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMxMDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jul 27 12:28:59.242: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMxMDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jul 27 12:29:19.242: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMxMDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jul 27 12:29:39.242: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMxMDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jul 27 12:29:59.241: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMxMDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jul 27 12:30:19.242: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMxMDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jul 27 12:30:39.242: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMxMDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jul 27 12:30:59.241: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMxMDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jul 27 12:31:19.242: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMxMDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jul 27 12:31:39.242: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMxMDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jul 27 12:31:59.241: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMxMDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jul 27 12:32:19.242: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMxMDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jul 27 12:32:39.241: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMxMDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jul 27 12:32:59.241: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMxMDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jul 27 12:33:19.242: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMxMDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jul 27 12:33:39.242: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMxMDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jul 27 12:33:59.242: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMxMDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jul 27 12:34:19.242: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMxMDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jul 27 12:34:39.242: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMxMDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jul 27 12:34:59.243: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMxMDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jul 27 12:35:19.242: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMxMDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jul 27 12:35:39.242: INFO: got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  Jul 27 12:35:39.242: INFO: Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 07/27/24 12:35:39.242
  STEP: retrieving all remaining pages @ 07/27/24 12:35:39.245
  Jul 27 12:35:39.250: INFO: Retrieved 40/40 results with rv 14132 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQxMzIsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  Jul 27 12:35:39.254: INFO: Retrieved 40/40 results with rv 14132 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQxMzIsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  Jul 27 12:35:39.258: INFO: Retrieved 40/40 results with rv 14132 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQxMzIsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  Jul 27 12:35:39.263: INFO: Retrieved 40/40 results with rv 14132 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQxMzIsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  Jul 27 12:35:39.266: INFO: Retrieved 40/40 results with rv 14132 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQxMzIsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  Jul 27 12:35:39.270: INFO: Retrieved 40/40 results with rv 14132 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQxMzIsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  Jul 27 12:35:39.274: INFO: Retrieved 40/40 results with rv 14132 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQxMzIsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  Jul 27 12:35:39.278: INFO: Retrieved 40/40 results with rv 14132 and continue 
  Jul 27 12:35:39.278: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-7346" for this suite. @ 07/27/24 12:35:39.282
• [557.809 seconds]
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 07/27/24 12:35:39.288
  Jul 27 12:35:39.288: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename pod-network-test @ 07/27/24 12:35:39.289
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:35:39.303
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:35:39.306
  STEP: Performing setup for networking test in namespace pod-network-test-7350 @ 07/27/24 12:35:39.308
  STEP: creating a selector @ 07/27/24 12:35:39.308
  STEP: Creating the service pods in kubernetes @ 07/27/24 12:35:39.308
  Jul 27 12:35:39.308: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 07/27/24 12:35:51.393
  Jul 27 12:35:53.413: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Jul 27 12:35:53.413: INFO: Breadth first check of 192.168.97.34 on host 172.31.10.249...
  Jul 27 12:35:53.417: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.122.131:9080/dial?request=hostname&protocol=http&host=192.168.97.34&port=8083&tries=1'] Namespace:pod-network-test-7350 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 27 12:35:53.417: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  Jul 27 12:35:53.417: INFO: ExecWithOptions: Clientset creation
  Jul 27 12:35:53.417: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-7350/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.122.131%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.97.34%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jul 27 12:35:53.473: INFO: Waiting for responses: map[]
  Jul 27 12:35:53.473: INFO: reached 192.168.97.34 after 0/1 tries
  Jul 27 12:35:53.474: INFO: Breadth first check of 192.168.122.130 on host 172.31.18.96...
  Jul 27 12:35:53.478: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.122.131:9080/dial?request=hostname&protocol=http&host=192.168.122.130&port=8083&tries=1'] Namespace:pod-network-test-7350 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 27 12:35:53.478: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  Jul 27 12:35:53.478: INFO: ExecWithOptions: Clientset creation
  Jul 27 12:35:53.478: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-7350/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.122.131%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.122.130%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jul 27 12:35:53.520: INFO: Waiting for responses: map[]
  Jul 27 12:35:53.520: INFO: reached 192.168.122.130 after 0/1 tries
  Jul 27 12:35:53.520: INFO: Breadth first check of 192.168.96.79 on host 172.31.76.31...
  Jul 27 12:35:53.524: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.122.131:9080/dial?request=hostname&protocol=http&host=192.168.96.79&port=8083&tries=1'] Namespace:pod-network-test-7350 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 27 12:35:53.524: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  Jul 27 12:35:53.524: INFO: ExecWithOptions: Clientset creation
  Jul 27 12:35:53.524: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-7350/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.122.131%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.96.79%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jul 27 12:35:53.573: INFO: Waiting for responses: map[]
  Jul 27 12:35:53.573: INFO: reached 192.168.96.79 after 0/1 tries
  Jul 27 12:35:53.573: INFO: Going to retry 0 out of 3 pods....
  Jul 27 12:35:53.573: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-7350" for this suite. @ 07/27/24 12:35:53.578
• [14.299 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 07/27/24 12:35:53.587
  Jul 27 12:35:53.587: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename gc @ 07/27/24 12:35:53.588
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:35:53.603
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:35:53.605
  Jul 27 12:35:53.639: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"0e47502d-6f27-4ee8-a449-da2991989ec9", Controller:(*bool)(0xc00178fd5a), BlockOwnerDeletion:(*bool)(0xc00178fd5b)}}
  Jul 27 12:35:53.647: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"f8988d19-ec36-4428-820f-044fff4e083b", Controller:(*bool)(0xc00178ff8e), BlockOwnerDeletion:(*bool)(0xc00178ff8f)}}
  Jul 27 12:35:53.656: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"41503c73-9131-45c3-a9e2-75174a5a0b34", Controller:(*bool)(0xc0023a585e), BlockOwnerDeletion:(*bool)(0xc0023a585f)}}
  Jul 27 12:35:58.665: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9167" for this suite. @ 07/27/24 12:35:58.669
• [5.089 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 07/27/24 12:35:58.676
  Jul 27 12:35:58.676: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename pods @ 07/27/24 12:35:58.677
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:35:58.69
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:35:58.693
  Jul 27 12:35:58.695: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: creating the pod @ 07/27/24 12:35:58.696
  STEP: submitting the pod to kubernetes @ 07/27/24 12:35:58.696
  Jul 27 12:36:00.740: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6180" for this suite. @ 07/27/24 12:36:00.744
• [2.076 seconds]
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 07/27/24 12:36:00.752
  Jul 27 12:36:00.752: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename replication-controller @ 07/27/24 12:36:00.753
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:36:00.766
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:36:00.768
  STEP: creating a ReplicationController @ 07/27/24 12:36:00.774
  STEP: waiting for RC to be added @ 07/27/24 12:36:00.779
  STEP: waiting for available Replicas @ 07/27/24 12:36:00.779
  STEP: patching ReplicationController @ 07/27/24 12:36:02.281
  STEP: waiting for RC to be modified @ 07/27/24 12:36:02.288
  STEP: patching ReplicationController status @ 07/27/24 12:36:02.288
  STEP: waiting for RC to be modified @ 07/27/24 12:36:02.295
  STEP: waiting for available Replicas @ 07/27/24 12:36:02.295
  STEP: fetching ReplicationController status @ 07/27/24 12:36:02.3
  STEP: patching ReplicationController scale @ 07/27/24 12:36:02.304
  STEP: waiting for RC to be modified @ 07/27/24 12:36:02.312
  STEP: waiting for ReplicationController's scale to be the max amount @ 07/27/24 12:36:02.312
  STEP: fetching ReplicationController; ensuring that it's patched @ 07/27/24 12:36:03.166
  STEP: updating ReplicationController status @ 07/27/24 12:36:03.17
  STEP: waiting for RC to be modified @ 07/27/24 12:36:03.176
  STEP: listing all ReplicationControllers @ 07/27/24 12:36:03.176
  STEP: checking that ReplicationController has expected values @ 07/27/24 12:36:03.18
  STEP: deleting ReplicationControllers by collection @ 07/27/24 12:36:03.18
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 07/27/24 12:36:03.19
  Jul 27 12:36:03.236: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0727 12:36:03.236880      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-7428" for this suite. @ 07/27/24 12:36:03.24
• [2.496 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 07/27/24 12:36:03.248
  Jul 27 12:36:03.248: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename projected @ 07/27/24 12:36:03.249
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:36:03.263
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:36:03.266
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-6b3f9ccb-53ed-4ddb-8017-a0062bdfae5e @ 07/27/24 12:36:03.272
  STEP: Creating the pod @ 07/27/24 12:36:03.276
  E0727 12:36:04.237175      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:36:05.237396      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-6b3f9ccb-53ed-4ddb-8017-a0062bdfae5e @ 07/27/24 12:36:05.313
  STEP: waiting to observe update in volume @ 07/27/24 12:36:05.319
  E0727 12:36:06.238321      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:36:07.238543      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:36:08.238640      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:36:09.238872      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:36:10.239335      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:36:11.239419      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:36:12.239502      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:36:13.239589      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:36:14.239724      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:36:15.239814      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:36:16.240756      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:36:17.240952      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:36:18.241216      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:36:19.241393      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:36:20.242248      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:36:21.243230      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:36:22.243339      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:36:23.243696      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:36:24.243984      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:36:25.244506      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:36:26.244599      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:36:27.244794      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:36:28.245148      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:36:29.245244      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:36:30.246229      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:36:31.246416      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:36:32.247178      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:36:33.247563      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:36:34.248092      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:36:35.248284      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:36:36.248442      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:36:37.248547      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:36:38.248646      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:36:39.248747      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:36:40.249477      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:36:41.249577      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:36:42.250397      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:36:43.251195      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:36:44.251770      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:36:45.252263      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:36:46.252353      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:36:47.252528      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:36:48.252776      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:36:49.253042      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:36:50.253160      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:36:51.253251      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:36:52.254339      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:36:53.254437      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:36:54.254955      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:36:55.255938      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:36:56.256885      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:36:57.257088      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:36:58.257168      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:36:59.258208      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:37:00.258885      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:37:01.258959      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:37:02.259039      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:37:03.259147      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:37:04.259187      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:37:05.259378      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:37:06.260262      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:37:07.260343      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:37:08.260927      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:37:09.261134      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:37:10.262040      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:37:11.262135      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:37:12.262236      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:37:13.262346      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:37:14.263166      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:37:15.263351      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:37:16.264971      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:37:17.265130      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:37:18.266201      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:37:19.266292      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:37:20.267323      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:37:21.267409      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:37:22.267503      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:37:23.267694      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:37:24.268508      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:37:25.268611      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:37:26.269108      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:37:27.269257      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:37:28.269331      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:37:29.269484      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:37:30.270221      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:37:31.270317      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:37:32.271219      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:37:33.271559      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:37:34.272376      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:37:35.272997      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:37:35.718: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5711" for this suite. @ 07/27/24 12:37:35.722
• [92.480 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 07/27/24 12:37:35.729
  Jul 27 12:37:35.729: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename container-probe @ 07/27/24 12:37:35.73
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:37:35.743
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:37:35.746
  STEP: Creating pod liveness-dbeaf1e6-b6a5-4458-9ab6-8593d1c2dfe9 in namespace container-probe-4123 @ 07/27/24 12:37:35.748
  E0727 12:37:36.273816      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:37:37.273940      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/27/24 12:37:37.768
  Jul 27 12:37:37.772: INFO: Initial restart count of pod liveness-dbeaf1e6-b6a5-4458-9ab6-8593d1c2dfe9 is 0
  Jul 27 12:37:37.775: INFO: Get pod liveness-dbeaf1e6-b6a5-4458-9ab6-8593d1c2dfe9 in namespace container-probe-4123
  E0727 12:37:38.274774      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:37:39.274852      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:37:39.779: INFO: Get pod liveness-dbeaf1e6-b6a5-4458-9ab6-8593d1c2dfe9 in namespace container-probe-4123
  E0727 12:37:40.275158      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:37:41.275255      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:37:41.785: INFO: Get pod liveness-dbeaf1e6-b6a5-4458-9ab6-8593d1c2dfe9 in namespace container-probe-4123
  E0727 12:37:42.275353      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:37:43.275448      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:37:43.790: INFO: Get pod liveness-dbeaf1e6-b6a5-4458-9ab6-8593d1c2dfe9 in namespace container-probe-4123
  E0727 12:37:44.276363      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:37:45.276479      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:37:45.796: INFO: Get pod liveness-dbeaf1e6-b6a5-4458-9ab6-8593d1c2dfe9 in namespace container-probe-4123
  E0727 12:37:46.276641      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:37:47.276831      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:37:47.800: INFO: Get pod liveness-dbeaf1e6-b6a5-4458-9ab6-8593d1c2dfe9 in namespace container-probe-4123
  E0727 12:37:48.277740      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:37:49.277819      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:37:49.804: INFO: Get pod liveness-dbeaf1e6-b6a5-4458-9ab6-8593d1c2dfe9 in namespace container-probe-4123
  E0727 12:37:50.278305      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:37:51.278411      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:37:51.809: INFO: Get pod liveness-dbeaf1e6-b6a5-4458-9ab6-8593d1c2dfe9 in namespace container-probe-4123
  E0727 12:37:52.279031      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:37:53.279497      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:37:53.813: INFO: Get pod liveness-dbeaf1e6-b6a5-4458-9ab6-8593d1c2dfe9 in namespace container-probe-4123
  E0727 12:37:54.280546      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:37:55.280650      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:37:55.818: INFO: Get pod liveness-dbeaf1e6-b6a5-4458-9ab6-8593d1c2dfe9 in namespace container-probe-4123
  E0727 12:37:56.281290      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:37:57.282286      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:37:57.823: INFO: Get pod liveness-dbeaf1e6-b6a5-4458-9ab6-8593d1c2dfe9 in namespace container-probe-4123
  Jul 27 12:37:57.823: INFO: Restart count of pod container-probe-4123/liveness-dbeaf1e6-b6a5-4458-9ab6-8593d1c2dfe9 is now 1 (20.051138325s elapsed)
  STEP: deleting the pod @ 07/27/24 12:37:57.823
  Jul 27 12:37:57.836: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4123" for this suite. @ 07/27/24 12:37:57.84
• [22.119 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 07/27/24 12:37:57.849
  Jul 27 12:37:57.849: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename emptydir @ 07/27/24 12:37:57.85
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:37:57.861
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:37:57.864
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 07/27/24 12:37:57.869
  E0727 12:37:58.282380      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:37:59.283415      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:38:00.283516      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:38:01.283604      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/27/24 12:38:01.897
  Jul 27 12:38:01.900: INFO: Trying to get logs from node ip-172-31-18-96 pod pod-47a6a7a6-6135-4300-a761-5e31260c343b container test-container: <nil>
  STEP: delete the pod @ 07/27/24 12:38:01.907
  Jul 27 12:38:01.922: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5986" for this suite. @ 07/27/24 12:38:01.925
• [4.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 07/27/24 12:38:01.933
  Jul 27 12:38:01.933: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename events @ 07/27/24 12:38:01.934
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:38:01.946
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:38:01.949
  STEP: creating a test event @ 07/27/24 12:38:01.951
  STEP: listing all events in all namespaces @ 07/27/24 12:38:01.955
  STEP: patching the test event @ 07/27/24 12:38:01.966
  STEP: fetching the test event @ 07/27/24 12:38:01.973
  STEP: updating the test event @ 07/27/24 12:38:01.977
  STEP: getting the test event @ 07/27/24 12:38:01.987
  STEP: deleting the test event @ 07/27/24 12:38:01.99
  STEP: listing all events in all namespaces @ 07/27/24 12:38:01.999
  Jul 27 12:38:02.032: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-643" for this suite. @ 07/27/24 12:38:02.039
• [0.113 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 07/27/24 12:38:02.046
  Jul 27 12:38:02.046: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename apf @ 07/27/24 12:38:02.047
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:38:02.064
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:38:02.068
  STEP: getting /apis @ 07/27/24 12:38:02.071
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 07/27/24 12:38:02.081
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 07/27/24 12:38:02.083
  STEP: creating @ 07/27/24 12:38:02.084
  STEP: getting @ 07/27/24 12:38:02.101
  STEP: listing @ 07/27/24 12:38:02.104
  STEP: watching @ 07/27/24 12:38:02.11
  Jul 27 12:38:02.110: INFO: starting watch
  STEP: patching @ 07/27/24 12:38:02.111
  STEP: updating @ 07/27/24 12:38:02.116
  Jul 27 12:38:02.126: INFO: waiting for watch events with expected annotations
  Jul 27 12:38:02.126: INFO: missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 07/27/24 12:38:02.126
  STEP: patching /status @ 07/27/24 12:38:02.129
  STEP: updating /status @ 07/27/24 12:38:02.135
  STEP: deleting @ 07/27/24 12:38:02.148
  STEP: deleting a collection @ 07/27/24 12:38:02.161
  Jul 27 12:38:02.182: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-4863" for this suite. @ 07/27/24 12:38:02.186
• [0.147 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1698
  STEP: Creating a kubernetes client @ 07/27/24 12:38:02.194
  Jul 27 12:38:02.194: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename kubectl @ 07/27/24 12:38:02.194
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:38:02.206
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:38:02.208
  STEP: creating Agnhost RC @ 07/27/24 12:38:02.21
  Jul 27 12:38:02.211: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-4333 create -f -'
  E0727 12:38:02.284529      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:38:02.293: INFO: stderr: ""
  Jul 27 12:38:02.293: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 07/27/24 12:38:02.293
  E0727 12:38:03.284624      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:38:03.297: INFO: Selector matched 1 pods for map[app:agnhost]
  Jul 27 12:38:03.297: INFO: Found 0 / 1
  E0727 12:38:04.284876      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:38:04.298: INFO: Selector matched 1 pods for map[app:agnhost]
  Jul 27 12:38:04.298: INFO: Found 1 / 1
  Jul 27 12:38:04.298: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 07/27/24 12:38:04.298
  Jul 27 12:38:04.302: INFO: Selector matched 1 pods for map[app:agnhost]
  Jul 27 12:38:04.302: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Jul 27 12:38:04.302: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-4333 patch pod agnhost-primary-9x6jp -p {"metadata":{"annotations":{"x":"y"}}}'
  Jul 27 12:38:04.354: INFO: stderr: ""
  Jul 27 12:38:04.354: INFO: stdout: "pod/agnhost-primary-9x6jp patched\n"
  STEP: checking annotations @ 07/27/24 12:38:04.354
  Jul 27 12:38:04.358: INFO: Selector matched 1 pods for map[app:agnhost]
  Jul 27 12:38:04.358: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Jul 27 12:38:04.358: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4333" for this suite. @ 07/27/24 12:38:04.361
• [2.174 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 07/27/24 12:38:04.368
  Jul 27 12:38:04.368: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename pods @ 07/27/24 12:38:04.369
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:38:04.382
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:38:04.387
  STEP: creating the pod @ 07/27/24 12:38:04.389
  STEP: submitting the pod to kubernetes @ 07/27/24 12:38:04.389
  W0727 12:38:04.398691      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  E0727 12:38:05.285202      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:38:06.286233      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 07/27/24 12:38:06.413
  STEP: updating the pod @ 07/27/24 12:38:06.416
  Jul 27 12:38:06.931: INFO: Successfully updated pod "pod-update-activedeadlineseconds-2c5f4b99-96fe-4b21-9221-dd5147471c45"
  E0727 12:38:07.286314      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:38:08.286410      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:38:09.287179      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:38:10.287295      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:38:10.944: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6245" for this suite. @ 07/27/24 12:38:10.948
• [6.588 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 07/27/24 12:38:10.956
  Jul 27 12:38:10.956: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename webhook @ 07/27/24 12:38:10.957
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:38:10.97
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:38:10.975
  STEP: Setting up server cert @ 07/27/24 12:38:10.998
  E0727 12:38:11.287403      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/27/24 12:38:11.373
  STEP: Deploying the webhook pod @ 07/27/24 12:38:11.382
  STEP: Wait for the deployment to be ready @ 07/27/24 12:38:11.393
  Jul 27 12:38:11.402: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0727 12:38:12.288481      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:38:13.288603      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/27/24 12:38:13.415
  STEP: Verifying the service has paired with the endpoint @ 07/27/24 12:38:13.426
  E0727 12:38:14.288847      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:38:14.427: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 07/27/24 12:38:14.435
  STEP: Creating a custom resource definition that should be denied by the webhook @ 07/27/24 12:38:14.448
  Jul 27 12:38:14.448: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  Jul 27 12:38:14.509: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6055" for this suite. @ 07/27/24 12:38:14.513
  STEP: Destroying namespace "webhook-markers-850" for this suite. @ 07/27/24 12:38:14.519
• [3.569 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:641
  STEP: Creating a kubernetes client @ 07/27/24 12:38:14.526
  Jul 27 12:38:14.526: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename statefulset @ 07/27/24 12:38:14.526
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:38:14.539
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:38:14.542
  STEP: Creating service test in namespace statefulset-1923 @ 07/27/24 12:38:14.544
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 07/27/24 12:38:14.55
  STEP: Creating stateful set ss in namespace statefulset-1923 @ 07/27/24 12:38:14.556
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-1923 @ 07/27/24 12:38:14.561
  Jul 27 12:38:14.567: INFO: Found 0 stateful pods, waiting for 1
  E0727 12:38:15.288948      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:38:16.290032      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:38:17.290119      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:38:18.290189      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:38:19.290427      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:38:20.291032      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:38:21.291094      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:38:22.292193      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:38:23.292534      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:38:24.292377      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:38:24.567: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 07/27/24 12:38:24.567
  Jul 27 12:38:24.572: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=statefulset-1923 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jul 27 12:38:24.662: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jul 27 12:38:24.662: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jul 27 12:38:24.662: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jul 27 12:38:24.666: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0727 12:38:25.293334      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:38:26.294308      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:38:27.294389      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:38:28.294480      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:38:29.294598      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:38:30.294691      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:38:31.294762      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:38:32.295208      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:38:33.295312      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:38:34.295496      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:38:34.669: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Jul 27 12:38:34.669: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Jul 27 12:38:34.687: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.999999856s
  E0727 12:38:35.295745      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:38:35.692: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.996651159s
  E0727 12:38:36.295795      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:38:36.697: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.992601543s
  E0727 12:38:37.295893      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:38:37.701: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.987436695s
  E0727 12:38:38.295977      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:38:38.706: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.983458794s
  E0727 12:38:39.296029      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:38:39.710: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.978430928s
  E0727 12:38:40.296144      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:38:40.715: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.974154689s
  E0727 12:38:41.297173      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:38:41.720: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.969093212s
  E0727 12:38:42.298226      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:38:42.725: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.963894526s
  E0727 12:38:43.298930      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:38:43.729: INFO: Verifying statefulset ss doesn't scale past 1 for another 959.475006ms
  E0727 12:38:44.299018      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-1923 @ 07/27/24 12:38:44.73
  Jul 27 12:38:44.735: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=statefulset-1923 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jul 27 12:38:44.831: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jul 27 12:38:44.831: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jul 27 12:38:44.831: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jul 27 12:38:44.835: INFO: Found 1 stateful pods, waiting for 3
  E0727 12:38:45.299624      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:38:46.299909      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:38:47.299987      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:38:48.300240      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:38:49.300345      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:38:50.300596      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:38:51.300780      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:38:52.300937      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:38:53.301129      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:38:54.301223      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:38:54.836: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Jul 27 12:38:54.836: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Jul 27 12:38:54.836: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 07/27/24 12:38:54.836
  STEP: Scale down will halt with unhealthy stateful pod @ 07/27/24 12:38:54.836
  Jul 27 12:38:54.844: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=statefulset-1923 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jul 27 12:38:54.935: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jul 27 12:38:54.935: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jul 27 12:38:54.935: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jul 27 12:38:54.935: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=statefulset-1923 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jul 27 12:38:55.033: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jul 27 12:38:55.033: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jul 27 12:38:55.033: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jul 27 12:38:55.033: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=statefulset-1923 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jul 27 12:38:55.137: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jul 27 12:38:55.137: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jul 27 12:38:55.137: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jul 27 12:38:55.137: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Jul 27 12:38:55.141: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0727 12:38:55.301869      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:38:56.301967      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:38:57.302501      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:38:58.302570      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:38:59.302684      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:39:00.302837      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:39:01.303179      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:39:02.303396      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:39:03.303483      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:39:04.303553      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:39:05.147: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Jul 27 12:39:05.147: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Jul 27 12:39:05.147: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Jul 27 12:39:05.160: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999999815s
  E0727 12:39:05.303758      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:39:06.165: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.995583019s
  E0727 12:39:06.303865      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:39:07.170: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.990570955s
  E0727 12:39:07.304540      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:39:08.174: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.985787775s
  E0727 12:39:08.304634      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:39:09.179: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.981679219s
  E0727 12:39:09.305322      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:39:10.183: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.976978832s
  E0727 12:39:10.306082      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:39:11.188: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.972249164s
  E0727 12:39:11.307071      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:39:12.193: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.967237977s
  E0727 12:39:12.308025      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:39:13.197: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.962509807s
  E0727 12:39:13.309095      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:39:14.203: INFO: Verifying statefulset ss doesn't scale past 3 for another 958.322229ms
  E0727 12:39:14.309590      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-1923 @ 07/27/24 12:39:15.203
  Jul 27 12:39:15.208: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=statefulset-1923 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jul 27 12:39:15.295: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jul 27 12:39:15.295: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jul 27 12:39:15.295: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jul 27 12:39:15.295: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=statefulset-1923 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0727 12:39:15.309963      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:39:15.383: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jul 27 12:39:15.383: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jul 27 12:39:15.383: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jul 27 12:39:15.383: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=statefulset-1923 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jul 27 12:39:15.466: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jul 27 12:39:15.466: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jul 27 12:39:15.466: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jul 27 12:39:15.466: INFO: Scaling statefulset ss to 0
  E0727 12:39:16.310802      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:39:17.311807      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:39:18.311907      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:39:19.312737      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:39:20.312803      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:39:21.312920      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:39:22.313350      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:39:23.313465      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:39:24.313552      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:39:25.314191      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 07/27/24 12:39:25.476
  Jul 27 12:39:25.476: INFO: Deleting all statefulset in ns statefulset-1923
  Jul 27 12:39:25.479: INFO: Scaling statefulset ss to 0
  Jul 27 12:39:25.486: INFO: Waiting for statefulset status.replicas updated to 0
  Jul 27 12:39:25.489: INFO: Deleting statefulset ss
  Jul 27 12:39:25.502: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1923" for this suite. @ 07/27/24 12:39:25.507
• [70.987 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 07/27/24 12:39:25.513
  Jul 27 12:39:25.513: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename certificates @ 07/27/24 12:39:25.514
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:39:25.528
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:39:25.531
  STEP: getting /apis @ 07/27/24 12:39:25.824
  STEP: getting /apis/certificates.k8s.io @ 07/27/24 12:39:25.828
  STEP: getting /apis/certificates.k8s.io/v1 @ 07/27/24 12:39:25.829
  STEP: creating @ 07/27/24 12:39:25.83
  STEP: getting @ 07/27/24 12:39:25.855
  STEP: listing @ 07/27/24 12:39:25.859
  STEP: watching @ 07/27/24 12:39:25.862
  Jul 27 12:39:25.862: INFO: starting watch
  STEP: patching @ 07/27/24 12:39:25.863
  STEP: updating @ 07/27/24 12:39:25.869
  Jul 27 12:39:25.876: INFO: waiting for watch events with expected annotations
  Jul 27 12:39:25.876: INFO: saw patched and updated annotations
  STEP: getting /approval @ 07/27/24 12:39:25.876
  STEP: patching /approval @ 07/27/24 12:39:25.879
  STEP: updating /approval @ 07/27/24 12:39:25.884
  STEP: getting /status @ 07/27/24 12:39:25.891
  STEP: patching /status @ 07/27/24 12:39:25.894
  STEP: updating /status @ 07/27/24 12:39:25.902
  STEP: deleting @ 07/27/24 12:39:25.909
  STEP: deleting a collection @ 07/27/24 12:39:25.922
  Jul 27 12:39:25.938: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-166" for this suite. @ 07/27/24 12:39:25.941
• [0.435 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 07/27/24 12:39:25.948
  Jul 27 12:39:25.948: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename projected @ 07/27/24 12:39:25.948
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:39:25.961
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:39:25.964
  STEP: Creating projection with secret that has name projected-secret-test-map-2d9096cc-864c-4b56-bb5e-6c19272f6d1c @ 07/27/24 12:39:25.968
  STEP: Creating a pod to test consume secrets @ 07/27/24 12:39:25.974
  E0727 12:39:26.314891      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:39:27.315661      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:39:28.316438      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:39:29.316518      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/27/24 12:39:29.994
  Jul 27 12:39:29.999: INFO: Trying to get logs from node ip-172-31-18-96 pod pod-projected-secrets-c14c3fee-ed48-46c3-af92-8c1d9c790224 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 07/27/24 12:39:30.007
  Jul 27 12:39:30.022: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4812" for this suite. @ 07/27/24 12:39:30.026
• [4.084 seconds]
------------------------------
SS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 07/27/24 12:39:30.032
  Jul 27 12:39:30.032: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename svcaccounts @ 07/27/24 12:39:30.033
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:39:30.047
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:39:30.049
  E0727 12:39:30.317152      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:39:31.317283      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 07/27/24 12:39:32.075
  Jul 27 12:39:32.075: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-7139 pod-service-account-21873ac4-564c-4767-bd3a-6417c75d2ade -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 07/27/24 12:39:32.167
  Jul 27 12:39:32.167: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-7139 pod-service-account-21873ac4-564c-4767-bd3a-6417c75d2ade -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 07/27/24 12:39:32.263
  Jul 27 12:39:32.263: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-7139 pod-service-account-21873ac4-564c-4767-bd3a-6417c75d2ade -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  E0727 12:39:32.318011      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:39:32.349: INFO: Got root ca configmap in namespace "svcaccounts-7139"
  Jul 27 12:39:32.351: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7139" for this suite. @ 07/27/24 12:39:32.354
• [2.329 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2214
  STEP: Creating a kubernetes client @ 07/27/24 12:39:32.361
  Jul 27 12:39:32.361: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename services @ 07/27/24 12:39:32.362
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:39:32.375
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:39:32.377
  STEP: creating service in namespace services-2078 @ 07/27/24 12:39:32.379
  STEP: creating service affinity-nodeport in namespace services-2078 @ 07/27/24 12:39:32.379
  STEP: creating replication controller affinity-nodeport in namespace services-2078 @ 07/27/24 12:39:32.393
  I0727 12:39:32.398599      20 runners.go:197] Created replication controller with name: affinity-nodeport, namespace: services-2078, replica count: 3
  E0727 12:39:33.318259      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:39:34.319239      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:39:35.319447      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0727 12:39:35.449667      20 runners.go:197] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jul 27 12:39:35.461: INFO: Creating new exec pod
  E0727 12:39:36.319622      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:39:37.320435      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:39:38.320506      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:39:38.485: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=services-2078 exec execpod-affinity5xgr4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  Jul 27 12:39:38.577: INFO: stderr: "+ nc -v -t -w 2 affinity-nodeport 80\n+ echo hostName\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  Jul 27 12:39:38.577: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul 27 12:39:38.577: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=services-2078 exec execpod-affinity5xgr4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.18 80'
  Jul 27 12:39:38.675: INFO: stderr: "+ nc -v -t -w 2 10.152.183.18 80\nConnection to 10.152.183.18 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Jul 27 12:39:38.675: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul 27 12:39:38.675: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=services-2078 exec execpod-affinity5xgr4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.10.249 32521'
  Jul 27 12:39:38.769: INFO: stderr: "+ nc -v -t -w 2 172.31.10.249 32521\n+ echo hostName\nConnection to 172.31.10.249 32521 port [tcp/*] succeeded!\n"
  Jul 27 12:39:38.769: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul 27 12:39:38.769: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=services-2078 exec execpod-affinity5xgr4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.76.31 32521'
  Jul 27 12:39:38.861: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.76.31 32521\nConnection to 172.31.76.31 32521 port [tcp/*] succeeded!\n"
  Jul 27 12:39:38.861: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul 27 12:39:38.861: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=services-2078 exec execpod-affinity5xgr4 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.10.249:32521/ ; done'
  Jul 27 12:39:39.014: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.249:32521/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.249:32521/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.249:32521/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.249:32521/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.249:32521/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.249:32521/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.249:32521/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.249:32521/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.249:32521/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.249:32521/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.249:32521/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.249:32521/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.249:32521/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.249:32521/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.249:32521/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.249:32521/\n"
  Jul 27 12:39:39.014: INFO: stdout: "\naffinity-nodeport-fctt5\naffinity-nodeport-fctt5\naffinity-nodeport-fctt5\naffinity-nodeport-fctt5\naffinity-nodeport-fctt5\naffinity-nodeport-fctt5\naffinity-nodeport-fctt5\naffinity-nodeport-fctt5\naffinity-nodeport-fctt5\naffinity-nodeport-fctt5\naffinity-nodeport-fctt5\naffinity-nodeport-fctt5\naffinity-nodeport-fctt5\naffinity-nodeport-fctt5\naffinity-nodeport-fctt5\naffinity-nodeport-fctt5"
  Jul 27 12:39:39.014: INFO: Received response from host: affinity-nodeport-fctt5
  Jul 27 12:39:39.014: INFO: Received response from host: affinity-nodeport-fctt5
  Jul 27 12:39:39.014: INFO: Received response from host: affinity-nodeport-fctt5
  Jul 27 12:39:39.014: INFO: Received response from host: affinity-nodeport-fctt5
  Jul 27 12:39:39.014: INFO: Received response from host: affinity-nodeport-fctt5
  Jul 27 12:39:39.014: INFO: Received response from host: affinity-nodeport-fctt5
  Jul 27 12:39:39.014: INFO: Received response from host: affinity-nodeport-fctt5
  Jul 27 12:39:39.014: INFO: Received response from host: affinity-nodeport-fctt5
  Jul 27 12:39:39.014: INFO: Received response from host: affinity-nodeport-fctt5
  Jul 27 12:39:39.014: INFO: Received response from host: affinity-nodeport-fctt5
  Jul 27 12:39:39.014: INFO: Received response from host: affinity-nodeport-fctt5
  Jul 27 12:39:39.014: INFO: Received response from host: affinity-nodeport-fctt5
  Jul 27 12:39:39.014: INFO: Received response from host: affinity-nodeport-fctt5
  Jul 27 12:39:39.014: INFO: Received response from host: affinity-nodeport-fctt5
  Jul 27 12:39:39.014: INFO: Received response from host: affinity-nodeport-fctt5
  Jul 27 12:39:39.014: INFO: Received response from host: affinity-nodeport-fctt5
  Jul 27 12:39:39.014: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-2078, will wait for the garbage collector to delete the pods @ 07/27/24 12:39:39.029
  Jul 27 12:39:39.094: INFO: Deleting ReplicationController affinity-nodeport took: 8.942325ms
  Jul 27 12:39:39.194: INFO: Terminating ReplicationController affinity-nodeport pods took: 100.215292ms
  E0727 12:39:39.320944      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:39:40.321364      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:39:41.321550      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:39:41.819: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2078" for this suite. @ 07/27/24 12:39:41.823
• [9.469 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 07/27/24 12:39:41.83
  Jul 27 12:39:41.830: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename replication-controller @ 07/27/24 12:39:41.831
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:39:41.846
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:39:41.849
  STEP: Given a ReplicationController is created @ 07/27/24 12:39:41.851
  STEP: When the matched label of one of its pods change @ 07/27/24 12:39:41.856
  Jul 27 12:39:41.861: INFO: Pod name pod-release: Found 0 pods out of 1
  E0727 12:39:42.321727      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:39:43.321824      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:39:44.321895      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:39:45.321986      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:39:46.322195      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:39:46.865: INFO: Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 07/27/24 12:39:46.876
  E0727 12:39:47.322572      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:39:47.886: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-5987" for this suite. @ 07/27/24 12:39:47.889
• [6.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1493
  STEP: Creating a kubernetes client @ 07/27/24 12:39:47.898
  Jul 27 12:39:47.898: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename services @ 07/27/24 12:39:47.899
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:39:47.913
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:39:47.917
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-3612 @ 07/27/24 12:39:47.919
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 07/27/24 12:39:47.929
  STEP: creating service externalsvc in namespace services-3612 @ 07/27/24 12:39:47.929
  STEP: creating replication controller externalsvc in namespace services-3612 @ 07/27/24 12:39:47.945
  I0727 12:39:47.955001      20 runners.go:197] Created replication controller with name: externalsvc, namespace: services-3612, replica count: 2
  E0727 12:39:48.323184      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:39:49.324251      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:39:50.324359      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0727 12:39:51.005641      20 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 07/27/24 12:39:51.01
  Jul 27 12:39:51.024: INFO: Creating new exec pod
  E0727 12:39:51.325141      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:39:52.325336      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:39:53.040: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=services-3612 exec execpodgsl94 -- /bin/sh -x -c nslookup clusterip-service.services-3612.svc.cluster.local'
  Jul 27 12:39:53.150: INFO: stderr: "+ nslookup clusterip-service.services-3612.svc.cluster.local\n"
  Jul 27 12:39:53.150: INFO: stdout: "Server:\t\t10.152.183.144\nAddress:\t10.152.183.144#53\n\nclusterip-service.services-3612.svc.cluster.local\tcanonical name = externalsvc.services-3612.svc.cluster.local.\nName:\texternalsvc.services-3612.svc.cluster.local\nAddress: 10.152.183.163\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-3612, will wait for the garbage collector to delete the pods @ 07/27/24 12:39:53.15
  Jul 27 12:39:53.213: INFO: Deleting ReplicationController externalsvc took: 8.778665ms
  Jul 27 12:39:53.314: INFO: Terminating ReplicationController externalsvc pods took: 101.058906ms
  E0727 12:39:53.325677      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:39:54.326096      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:39:55.326642      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:39:55.731: INFO: Cleaning up the ClusterIP to ExternalName test service
  Jul 27 12:39:55.743: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3612" for this suite. @ 07/27/24 12:39:55.747
• [7.857 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 07/27/24 12:39:55.756
  Jul 27 12:39:55.756: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename projected @ 07/27/24 12:39:55.756
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:39:55.77
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:39:55.773
  STEP: Creating secret with name s-test-opt-del-7d677cfa-f3d0-4019-8434-9d956f9f5cec @ 07/27/24 12:39:55.779
  STEP: Creating secret with name s-test-opt-upd-a3b8913c-4193-41cc-8391-e9efa7fec970 @ 07/27/24 12:39:55.783
  STEP: Creating the pod @ 07/27/24 12:39:55.788
  E0727 12:39:56.326855      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:39:57.327851      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-7d677cfa-f3d0-4019-8434-9d956f9f5cec @ 07/27/24 12:39:57.832
  STEP: Updating secret s-test-opt-upd-a3b8913c-4193-41cc-8391-e9efa7fec970 @ 07/27/24 12:39:57.839
  STEP: Creating secret with name s-test-opt-create-c0d0f6eb-2aea-4163-a5cb-629186d6e809 @ 07/27/24 12:39:57.844
  STEP: waiting to observe update in volume @ 07/27/24 12:39:57.848
  E0727 12:39:58.328206      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:39:59.328260      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:40:00.328788      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:40:01.329805      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:40:02.330228      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:40:03.330320      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:40:04.331300      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:40:05.331834      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:40:06.332449      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:40:07.332522      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:40:08.332559      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:40:09.332730      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:40:10.332832      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:40:11.333076      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:40:12.333985      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:40:13.334097      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:40:14.334209      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:40:15.334282      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:40:16.334551      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:40:17.335385      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:40:18.336298      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:40:19.336650      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:40:20.336826      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:40:21.336930      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:40:22.337130      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:40:23.337433      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:40:24.338151      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:40:25.338234      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:40:26.338783      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:40:27.339387      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:40:28.340236      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:40:29.341074      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:40:30.341134      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:40:31.342219      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:40:32.342955      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:40:33.343037      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:40:34.343289      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:40:35.343766      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:40:36.344397      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:40:37.344574      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:40:38.344847      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:40:39.345858      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:40:40.345971      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:40:41.346174      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:40:42.346575      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:40:43.346683      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:40:44.347542      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:40:45.347643      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:40:46.347767      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:40:47.348601      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:40:48.349123      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:40:49.349150      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:40:50.350018      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:40:51.350354      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:40:52.351127      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:40:53.351670      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:40:54.352200      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:40:55.352306      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:40:56.352430      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:40:57.352797      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:40:58.352862      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:40:59.352959      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:41:00.354040      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:41:01.354143      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:41:02.354305      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:41:03.355368      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:41:04.159: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5338" for this suite. @ 07/27/24 12:41:04.162
• [68.413 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 07/27/24 12:41:04.169
  Jul 27 12:41:04.169: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename webhook @ 07/27/24 12:41:04.17
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:41:04.185
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:41:04.188
  STEP: Setting up server cert @ 07/27/24 12:41:04.206
  E0727 12:41:04.356380      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/27/24 12:41:04.596
  STEP: Deploying the webhook pod @ 07/27/24 12:41:04.606
  STEP: Wait for the deployment to be ready @ 07/27/24 12:41:04.618
  Jul 27 12:41:04.631: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0727 12:41:05.356598      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:41:06.356805      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/27/24 12:41:06.643
  STEP: Verifying the service has paired with the endpoint @ 07/27/24 12:41:06.652
  E0727 12:41:07.357428      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:41:07.652: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 07/27/24 12:41:07.661
  STEP: create a namespace for the webhook @ 07/27/24 12:41:07.673
  STEP: create a configmap should be unconditionally rejected by the webhook @ 07/27/24 12:41:07.701
  Jul 27 12:41:07.780: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2215" for this suite. @ 07/27/24 12:41:07.785
  STEP: Destroying namespace "webhook-markers-4245" for this suite. @ 07/27/24 12:41:07.791
  STEP: Destroying namespace "fail-closed-namespace-1964" for this suite. @ 07/27/24 12:41:07.799
• [3.636 seconds]
------------------------------
SSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 07/27/24 12:41:07.805
  Jul 27 12:41:07.805: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename sched-preemption @ 07/27/24 12:41:07.806
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:41:07.818
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:41:07.821
  Jul 27 12:41:07.836: INFO: Waiting up to 1m0s for all nodes to be ready
  E0727 12:41:08.358233      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:41:09.358320      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:41:10.358425      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:41:11.358497      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:41:12.359368      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:41:13.359455      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:41:14.359632      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:41:15.359843      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:41:16.360521      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:41:17.360623      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:41:18.360704      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:41:19.360912      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:41:20.361461      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:41:21.361545      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:41:22.362612      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:41:23.362882      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:41:24.363599      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:41:25.363808      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:41:26.364528      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:41:27.365390      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:41:28.365521      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:41:29.365585      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:41:30.366219      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:41:31.366298      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:41:32.367106      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:41:33.367207      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:41:34.368263      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:41:35.368391      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:41:36.368833      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:41:37.369420      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:41:38.369513      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:41:39.370210      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:41:40.370321      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:41:41.370534      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:41:42.371393      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:41:43.371488      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:41:44.372311      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:41:45.373222      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:41:46.373306      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:41:47.373387      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:41:48.374200      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:41:49.374435      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:41:50.375503      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:41:51.375659      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:41:52.376191      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:41:53.376300      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:41:54.377063      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:41:55.377144      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:41:56.377851      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:41:57.378396      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:41:58.379441      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:41:59.379530      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:42:00.379695      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:42:01.379866      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:42:02.380933      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:42:03.381152      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:42:04.381938      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:42:05.382217      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:42:06.382307      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:42:07.382622      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:42:07.841: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 07/27/24 12:42:07.846
  Jul 27 12:42:07.846: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename sched-preemption-path @ 07/27/24 12:42:07.846
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:42:07.861
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:42:07.864
  STEP: Finding an available node @ 07/27/24 12:42:07.867
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 07/27/24 12:42:07.867
  E0727 12:42:08.382731      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:42:09.382922      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 07/27/24 12:42:09.89
  Jul 27 12:42:09.904: INFO: found a healthy node: ip-172-31-18-96
  E0727 12:42:10.383446      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:42:11.383662      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:42:12.384404      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:42:13.384957      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:42:14.385468      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:42:15.385556      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:42:15.964: INFO: pods created so far: [1 1 1]
  Jul 27 12:42:15.964: INFO: length of pods created so far: 3
  E0727 12:42:16.385651      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:42:17.386704      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:42:17.979: INFO: pods created so far: [2 2 1]
  E0727 12:42:18.386898      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:42:19.387856      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:42:20.387941      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:42:21.388077      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:42:22.388108      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:42:23.388343      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:42:24.388562      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:42:25.044: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-267" for this suite. @ 07/27/24 12:42:25.048
  Jul 27 12:42:25.054: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-4665" for this suite. @ 07/27/24 12:42:25.058
• [77.260 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 07/27/24 12:42:25.065
  Jul 27 12:42:25.065: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename discovery @ 07/27/24 12:42:25.066
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:42:25.08
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:42:25.082
  STEP: Setting up server cert @ 07/27/24 12:42:25.085
  Jul 27 12:42:25.308: INFO: Checking APIGroup: apiregistration.k8s.io
  Jul 27 12:42:25.309: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  Jul 27 12:42:25.309: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
  Jul 27 12:42:25.309: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  Jul 27 12:42:25.309: INFO: Checking APIGroup: apps
  Jul 27 12:42:25.310: INFO: PreferredVersion.GroupVersion: apps/v1
  Jul 27 12:42:25.310: INFO: Versions found [{apps/v1 v1}]
  Jul 27 12:42:25.310: INFO: apps/v1 matches apps/v1
  Jul 27 12:42:25.310: INFO: Checking APIGroup: events.k8s.io
  Jul 27 12:42:25.311: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
  Jul 27 12:42:25.311: INFO: Versions found [{events.k8s.io/v1 v1}]
  Jul 27 12:42:25.311: INFO: events.k8s.io/v1 matches events.k8s.io/v1
  Jul 27 12:42:25.311: INFO: Checking APIGroup: authentication.k8s.io
  Jul 27 12:42:25.312: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
  Jul 27 12:42:25.312: INFO: Versions found [{authentication.k8s.io/v1 v1}]
  Jul 27 12:42:25.312: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
  Jul 27 12:42:25.312: INFO: Checking APIGroup: authorization.k8s.io
  Jul 27 12:42:25.313: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
  Jul 27 12:42:25.313: INFO: Versions found [{authorization.k8s.io/v1 v1}]
  Jul 27 12:42:25.313: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
  Jul 27 12:42:25.313: INFO: Checking APIGroup: autoscaling
  Jul 27 12:42:25.314: INFO: PreferredVersion.GroupVersion: autoscaling/v2
  Jul 27 12:42:25.314: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  Jul 27 12:42:25.314: INFO: autoscaling/v2 matches autoscaling/v2
  Jul 27 12:42:25.314: INFO: Checking APIGroup: batch
  Jul 27 12:42:25.314: INFO: PreferredVersion.GroupVersion: batch/v1
  Jul 27 12:42:25.314: INFO: Versions found [{batch/v1 v1}]
  Jul 27 12:42:25.314: INFO: batch/v1 matches batch/v1
  Jul 27 12:42:25.314: INFO: Checking APIGroup: certificates.k8s.io
  Jul 27 12:42:25.315: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
  Jul 27 12:42:25.315: INFO: Versions found [{certificates.k8s.io/v1 v1}]
  Jul 27 12:42:25.315: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
  Jul 27 12:42:25.315: INFO: Checking APIGroup: networking.k8s.io
  Jul 27 12:42:25.316: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
  Jul 27 12:42:25.316: INFO: Versions found [{networking.k8s.io/v1 v1}]
  Jul 27 12:42:25.316: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
  Jul 27 12:42:25.316: INFO: Checking APIGroup: policy
  Jul 27 12:42:25.317: INFO: PreferredVersion.GroupVersion: policy/v1
  Jul 27 12:42:25.317: INFO: Versions found [{policy/v1 v1}]
  Jul 27 12:42:25.317: INFO: policy/v1 matches policy/v1
  Jul 27 12:42:25.317: INFO: Checking APIGroup: rbac.authorization.k8s.io
  Jul 27 12:42:25.318: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  Jul 27 12:42:25.318: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
  Jul 27 12:42:25.318: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  Jul 27 12:42:25.318: INFO: Checking APIGroup: storage.k8s.io
  Jul 27 12:42:25.319: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
  Jul 27 12:42:25.319: INFO: Versions found [{storage.k8s.io/v1 v1}]
  Jul 27 12:42:25.319: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
  Jul 27 12:42:25.319: INFO: Checking APIGroup: admissionregistration.k8s.io
  Jul 27 12:42:25.320: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  Jul 27 12:42:25.320: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
  Jul 27 12:42:25.320: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  Jul 27 12:42:25.320: INFO: Checking APIGroup: apiextensions.k8s.io
  Jul 27 12:42:25.320: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  Jul 27 12:42:25.320: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
  Jul 27 12:42:25.320: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  Jul 27 12:42:25.320: INFO: Checking APIGroup: scheduling.k8s.io
  Jul 27 12:42:25.321: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  Jul 27 12:42:25.321: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
  Jul 27 12:42:25.321: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  Jul 27 12:42:25.321: INFO: Checking APIGroup: coordination.k8s.io
  Jul 27 12:42:25.322: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
  Jul 27 12:42:25.322: INFO: Versions found [{coordination.k8s.io/v1 v1}]
  Jul 27 12:42:25.322: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
  Jul 27 12:42:25.322: INFO: Checking APIGroup: node.k8s.io
  Jul 27 12:42:25.323: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
  Jul 27 12:42:25.323: INFO: Versions found [{node.k8s.io/v1 v1}]
  Jul 27 12:42:25.323: INFO: node.k8s.io/v1 matches node.k8s.io/v1
  Jul 27 12:42:25.323: INFO: Checking APIGroup: discovery.k8s.io
  Jul 27 12:42:25.324: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
  Jul 27 12:42:25.324: INFO: Versions found [{discovery.k8s.io/v1 v1}]
  Jul 27 12:42:25.324: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
  Jul 27 12:42:25.324: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
  Jul 27 12:42:25.325: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  Jul 27 12:42:25.325: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1 v1} {flowcontrol.apiserver.k8s.io/v1beta3 v1beta3}]
  Jul 27 12:42:25.325: INFO: flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  Jul 27 12:42:25.325: INFO: Checking APIGroup: metrics.k8s.io
  Jul 27 12:42:25.326: INFO: PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  Jul 27 12:42:25.326: INFO: Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  Jul 27 12:42:25.326: INFO: metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  Jul 27 12:42:25.326: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-9480" for this suite. @ 07/27/24 12:42:25.33
• [0.272 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 07/27/24 12:42:25.337
  Jul 27 12:42:25.337: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename replication-controller @ 07/27/24 12:42:25.338
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:42:25.349
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:42:25.351
  STEP: Creating ReplicationController "e2e-rc-bhlm4" @ 07/27/24 12:42:25.355
  Jul 27 12:42:25.360: INFO: Get Replication Controller "e2e-rc-bhlm4" to confirm replicas
  E0727 12:42:25.389579      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:42:26.361: INFO: Get Replication Controller "e2e-rc-bhlm4" to confirm replicas
  Jul 27 12:42:26.365: INFO: Found 1 replicas for "e2e-rc-bhlm4" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-bhlm4" @ 07/27/24 12:42:26.365
  STEP: Updating a scale subresource @ 07/27/24 12:42:26.368
  STEP: Verifying replicas where modified for replication controller "e2e-rc-bhlm4" @ 07/27/24 12:42:26.376
  Jul 27 12:42:26.376: INFO: Get Replication Controller "e2e-rc-bhlm4" to confirm replicas
  E0727 12:42:26.390263      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:42:27.377: INFO: Get Replication Controller "e2e-rc-bhlm4" to confirm replicas
  Jul 27 12:42:27.382: INFO: Found 2 replicas for "e2e-rc-bhlm4" replication controller
  Jul 27 12:42:27.382: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1381" for this suite. @ 07/27/24 12:42:27.387
  E0727 12:42:27.391020      20 retrywatcher.go:129] "Watch failed" err="context canceled"
• [2.056 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1015
  STEP: Creating a kubernetes client @ 07/27/24 12:42:27.394
  Jul 27 12:42:27.394: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename resourcequota @ 07/27/24 12:42:27.394
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:42:27.407
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:42:27.409
  STEP: Creating resourceQuota "e2e-rq-status-kvl95" @ 07/27/24 12:42:27.418
  Jul 27 12:42:27.428: INFO: Resource quota "e2e-rq-status-kvl95" reports spec: hard cpu limit of 500m
  Jul 27 12:42:27.428: INFO: Resource quota "e2e-rq-status-kvl95" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-kvl95" /status @ 07/27/24 12:42:27.428
  STEP: Confirm /status for "e2e-rq-status-kvl95" resourceQuota via watch @ 07/27/24 12:42:27.437
  Jul 27 12:42:27.438: INFO: observed resourceQuota "e2e-rq-status-kvl95" in namespace "resourcequota-2161" with hard status: v1.ResourceList(nil)
  Jul 27 12:42:27.438: INFO: Found resourceQuota "e2e-rq-status-kvl95" in namespace "resourcequota-2161" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Jul 27 12:42:27.438: INFO: ResourceQuota "e2e-rq-status-kvl95" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 07/27/24 12:42:27.442
  Jul 27 12:42:27.447: INFO: Resource quota "e2e-rq-status-kvl95" reports spec: hard cpu limit of 1
  Jul 27 12:42:27.447: INFO: Resource quota "e2e-rq-status-kvl95" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-kvl95" /status @ 07/27/24 12:42:27.447
  STEP: Confirm /status for "e2e-rq-status-kvl95" resourceQuota via watch @ 07/27/24 12:42:27.453
  Jul 27 12:42:27.454: INFO: observed resourceQuota "e2e-rq-status-kvl95" in namespace "resourcequota-2161" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Jul 27 12:42:27.454: INFO: Found resourceQuota "e2e-rq-status-kvl95" in namespace "resourcequota-2161" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  Jul 27 12:42:27.454: INFO: ResourceQuota "e2e-rq-status-kvl95" /status was patched
  STEP: Get "e2e-rq-status-kvl95" /status @ 07/27/24 12:42:27.454
  Jul 27 12:42:27.458: INFO: Resourcequota "e2e-rq-status-kvl95" reports status: hard cpu of 1
  Jul 27 12:42:27.458: INFO: Resourcequota "e2e-rq-status-kvl95" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-kvl95" /status before checking Spec is unchanged @ 07/27/24 12:42:27.461
  Jul 27 12:42:27.468: INFO: Resourcequota "e2e-rq-status-kvl95" reports status: hard cpu of 2
  Jul 27 12:42:27.468: INFO: Resourcequota "e2e-rq-status-kvl95" reports status: hard memory of 2Gi
  Jul 27 12:42:27.469: INFO: Found resourceQuota "e2e-rq-status-kvl95" in namespace "resourcequota-2161" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  Jul 27 12:42:27.472: INFO: ResourceQuota "e2e-rq-status-kvl95" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvl95", GenerateName:"", Namespace:"resourcequota-2161", SelfLink:"", UID:"60f16289-5736-4f72-86d2-75a5a329fd52", ResourceVersion:"16907", Generation:0, CreationTimestamp:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvl95"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005bdb3c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005bdb3f8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005bdb428), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0727 12:42:28.391548      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:42:29.392146      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:42:30.393161      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:42:31.393247      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:42:32.393322      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:42:32.475: INFO: ResourceQuota "e2e-rq-status-kvl95" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvl95", GenerateName:"", Namespace:"resourcequota-2161", SelfLink:"", UID:"60f16289-5736-4f72-86d2-75a5a329fd52", ResourceVersion:"16907", Generation:0, CreationTimestamp:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvl95"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0056b1de8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0056b1e18), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0056b1e48), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0727 12:42:33.393438      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:42:34.393639      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:42:35.394258      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:42:36.394389      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:42:37.394621      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:42:37.474: INFO: ResourceQuota "e2e-rq-status-kvl95" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvl95", GenerateName:"", Namespace:"resourcequota-2161", SelfLink:"", UID:"60f16289-5736-4f72-86d2-75a5a329fd52", ResourceVersion:"16907", Generation:0, CreationTimestamp:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvl95"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005af4180), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005af4270), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005af42a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0727 12:42:38.394903      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:42:39.395009      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:42:40.395111      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:42:41.395220      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:42:42.395720      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:42:42.474: INFO: ResourceQuota "e2e-rq-status-kvl95" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvl95", GenerateName:"", Namespace:"resourcequota-2161", SelfLink:"", UID:"60f16289-5736-4f72-86d2-75a5a329fd52", ResourceVersion:"16907", Generation:0, CreationTimestamp:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvl95"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005af4498), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005af44e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005af4528), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0727 12:42:43.395828      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:42:44.395918      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:42:45.396492      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:42:46.397501      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:42:47.397760      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:42:47.474: INFO: ResourceQuota "e2e-rq-status-kvl95" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvl95", GenerateName:"", Namespace:"resourcequota-2161", SelfLink:"", UID:"60f16289-5736-4f72-86d2-75a5a329fd52", ResourceVersion:"16907", Generation:0, CreationTimestamp:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvl95"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005bdb650), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005bdb698), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005bdb6c8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0727 12:42:48.397863      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:42:49.397957      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:42:50.398020      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:42:51.398126      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:42:52.398388      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:42:52.475: INFO: ResourceQuota "e2e-rq-status-kvl95" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvl95", GenerateName:"", Namespace:"resourcequota-2161", SelfLink:"", UID:"60f16289-5736-4f72-86d2-75a5a329fd52", ResourceVersion:"16907", Generation:0, CreationTimestamp:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvl95"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005af47f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005af4840), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005af4888), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0727 12:42:53.398467      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:42:54.398605      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:42:55.398718      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:42:56.398797      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:42:57.399660      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:42:57.474: INFO: ResourceQuota "e2e-rq-status-kvl95" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvl95", GenerateName:"", Namespace:"resourcequota-2161", SelfLink:"", UID:"60f16289-5736-4f72-86d2-75a5a329fd52", ResourceVersion:"16907", Generation:0, CreationTimestamp:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvl95"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005bdb8d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005bdb908), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005bdb938), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0727 12:42:58.399983      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:42:59.400191      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:43:00.401241      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:43:01.401331      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:43:02.401666      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:43:02.474: INFO: ResourceQuota "e2e-rq-status-kvl95" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvl95", GenerateName:"", Namespace:"resourcequota-2161", SelfLink:"", UID:"60f16289-5736-4f72-86d2-75a5a329fd52", ResourceVersion:"16907", Generation:0, CreationTimestamp:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvl95"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005af4b70), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005af4bb8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005af4c18), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0727 12:43:03.402577      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:43:04.403204      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:43:05.403278      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:43:06.403408      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:43:07.403708      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:43:07.474: INFO: ResourceQuota "e2e-rq-status-kvl95" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvl95", GenerateName:"", Namespace:"resourcequota-2161", SelfLink:"", UID:"60f16289-5736-4f72-86d2-75a5a329fd52", ResourceVersion:"16907", Generation:0, CreationTimestamp:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvl95"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005af4ed0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005af4f18), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005af4f78), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0727 12:43:08.403826      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:43:09.403953      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:43:10.404037      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:43:11.404143      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:43:12.404453      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:43:12.473: INFO: ResourceQuota "e2e-rq-status-kvl95" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvl95", GenerateName:"", Namespace:"resourcequota-2161", SelfLink:"", UID:"60f16289-5736-4f72-86d2-75a5a329fd52", ResourceVersion:"16907", Generation:0, CreationTimestamp:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvl95"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005bdbbf0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005bdbc38), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005bdbc68), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0727 12:43:13.404504      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:43:14.404602      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:43:15.404704      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:43:16.404789      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:43:17.405605      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:43:17.474: INFO: ResourceQuota "e2e-rq-status-kvl95" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvl95", GenerateName:"", Namespace:"resourcequota-2161", SelfLink:"", UID:"60f16289-5736-4f72-86d2-75a5a329fd52", ResourceVersion:"16907", Generation:0, CreationTimestamp:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvl95"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005bdbe18), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005bdbe48), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005bdbe90), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0727 12:43:18.406264      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:43:19.406358      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:43:20.406582      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:43:21.407197      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:43:22.407315      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:43:22.475: INFO: ResourceQuota "e2e-rq-status-kvl95" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvl95", GenerateName:"", Namespace:"resourcequota-2161", SelfLink:"", UID:"60f16289-5736-4f72-86d2-75a5a329fd52", ResourceVersion:"16907", Generation:0, CreationTimestamp:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvl95"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005af5398), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005af53f8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005af5458), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0727 12:43:23.407552      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:43:24.407653      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:43:25.407768      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:43:26.407945      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:43:27.408642      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:43:27.474: INFO: ResourceQuota "e2e-rq-status-kvl95" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvl95", GenerateName:"", Namespace:"resourcequota-2161", SelfLink:"", UID:"60f16289-5736-4f72-86d2-75a5a329fd52", ResourceVersion:"16907", Generation:0, CreationTimestamp:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvl95"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043760f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004376120), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004376180), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0727 12:43:28.408777      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:43:29.408983      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:43:30.409163      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:43:31.409249      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:43:32.409369      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:43:32.475: INFO: ResourceQuota "e2e-rq-status-kvl95" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvl95", GenerateName:"", Namespace:"resourcequota-2161", SelfLink:"", UID:"60f16289-5736-4f72-86d2-75a5a329fd52", ResourceVersion:"16907", Generation:0, CreationTimestamp:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvl95"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005af5788), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005af57d0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005af5848), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0727 12:43:33.409468      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:43:34.410207      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:43:35.410324      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:43:36.411257      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:43:37.411478      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:43:37.475: INFO: ResourceQuota "e2e-rq-status-kvl95" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvl95", GenerateName:"", Namespace:"resourcequota-2161", SelfLink:"", UID:"60f16289-5736-4f72-86d2-75a5a329fd52", ResourceVersion:"16907", Generation:0, CreationTimestamp:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvl95"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005af5aa0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005af5ad0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005af5b18), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0727 12:43:38.411605      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:43:39.412287      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:43:40.412642      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:43:41.412503      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:43:42.413236      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:43:42.474: INFO: ResourceQuota "e2e-rq-status-kvl95" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvl95", GenerateName:"", Namespace:"resourcequota-2161", SelfLink:"", UID:"60f16289-5736-4f72-86d2-75a5a329fd52", ResourceVersion:"16907", Generation:0, CreationTimestamp:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvl95"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004376060), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043760c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043760f0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0727 12:43:43.414312      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:43:44.414663      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:43:45.414951      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:43:46.415131      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:43:47.415461      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:43:47.474: INFO: ResourceQuota "e2e-rq-status-kvl95" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvl95", GenerateName:"", Namespace:"resourcequota-2161", SelfLink:"", UID:"60f16289-5736-4f72-86d2-75a5a329fd52", ResourceVersion:"16907", Generation:0, CreationTimestamp:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvl95"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005af4108), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005af4150), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005af4180), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0727 12:43:48.415559      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:43:49.415647      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:43:50.415830      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:43:51.416039      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:43:52.416450      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:43:52.474: INFO: ResourceQuota "e2e-rq-status-kvl95" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvl95", GenerateName:"", Namespace:"resourcequota-2161", SelfLink:"", UID:"60f16289-5736-4f72-86d2-75a5a329fd52", ResourceVersion:"16907", Generation:0, CreationTimestamp:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvl95"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005af4438), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005af4498), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005af44e0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0727 12:43:53.416638      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:43:54.416762      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:43:55.416886      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:43:56.417115      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:43:57.417397      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:43:57.474: INFO: ResourceQuota "e2e-rq-status-kvl95" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvl95", GenerateName:"", Namespace:"resourcequota-2161", SelfLink:"", UID:"60f16289-5736-4f72-86d2-75a5a329fd52", ResourceVersion:"16907", Generation:0, CreationTimestamp:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvl95"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005af4768), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005af4798), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005af47c8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0727 12:43:58.418123      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:43:59.418308      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:44:00.418473      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:44:01.418630      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:44:02.419635      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:44:02.474: INFO: ResourceQuota "e2e-rq-status-kvl95" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvl95", GenerateName:"", Namespace:"resourcequota-2161", SelfLink:"", UID:"60f16289-5736-4f72-86d2-75a5a329fd52", ResourceVersion:"16907", Generation:0, CreationTimestamp:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvl95"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005af49f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005af4a50), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005af4a98), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0727 12:44:03.420397      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:44:04.420581      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:44:05.420858      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:44:06.420974      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:44:07.420990      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:44:07.474: INFO: ResourceQuota "e2e-rq-status-kvl95" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvl95", GenerateName:"", Namespace:"resourcequota-2161", SelfLink:"", UID:"60f16289-5736-4f72-86d2-75a5a329fd52", ResourceVersion:"16907", Generation:0, CreationTimestamp:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvl95"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043764b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004376528), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004376558), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0727 12:44:08.421867      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:44:09.421961      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:44:10.422097      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:44:11.422203      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:44:12.422431      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:44:12.475: INFO: ResourceQuota "e2e-rq-status-kvl95" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvl95", GenerateName:"", Namespace:"resourcequota-2161", SelfLink:"", UID:"60f16289-5736-4f72-86d2-75a5a329fd52", ResourceVersion:"16907", Generation:0, CreationTimestamp:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvl95"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004376768), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004376798), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043767f8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0727 12:44:13.422527      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:44:14.422612      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:44:15.422758      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:44:16.422927      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:44:17.423630      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:44:17.474: INFO: ResourceQuota "e2e-rq-status-kvl95" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvl95", GenerateName:"", Namespace:"resourcequota-2161", SelfLink:"", UID:"60f16289-5736-4f72-86d2-75a5a329fd52", ResourceVersion:"16907", Generation:0, CreationTimestamp:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvl95"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043769d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004376a20), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004376a68), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0727 12:44:18.423716      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:44:19.423899      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:44:20.424099      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:44:21.424673      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:44:22.425636      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:44:22.474: INFO: ResourceQuota "e2e-rq-status-kvl95" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvl95", GenerateName:"", Namespace:"resourcequota-2161", SelfLink:"", UID:"60f16289-5736-4f72-86d2-75a5a329fd52", ResourceVersion:"16907", Generation:0, CreationTimestamp:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvl95"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005af5008), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005af5068), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005af50b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0727 12:44:23.426219      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:44:24.426308      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:44:25.426748      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:44:26.427717      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:44:27.428800      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:44:27.474: INFO: ResourceQuota "e2e-rq-status-kvl95" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvl95", GenerateName:"", Namespace:"resourcequota-2161", SelfLink:"", UID:"60f16289-5736-4f72-86d2-75a5a329fd52", ResourceVersion:"16907", Generation:0, CreationTimestamp:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvl95"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005af5308), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005af5350), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005af5398), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0727 12:44:28.429137      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:44:29.429235      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:44:30.430192      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:44:31.430400      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:44:32.430429      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:44:32.475: INFO: ResourceQuota "e2e-rq-status-kvl95" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvl95", GenerateName:"", Namespace:"resourcequota-2161", SelfLink:"", UID:"60f16289-5736-4f72-86d2-75a5a329fd52", ResourceVersion:"16907", Generation:0, CreationTimestamp:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvl95"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005af55d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005af5638), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005af5698), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0727 12:44:33.430522      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:44:34.430621      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:44:35.431565      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:44:36.431655      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:44:37.431902      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:44:37.473: INFO: ResourceQuota "e2e-rq-status-kvl95" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvl95", GenerateName:"", Namespace:"resourcequota-2161", SelfLink:"", UID:"60f16289-5736-4f72-86d2-75a5a329fd52", ResourceVersion:"16907", Generation:0, CreationTimestamp:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvl95"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005af5890), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005af58f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005af5920), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0727 12:44:38.432003      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:44:39.433073      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:44:40.433160      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:44:41.433259      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:44:42.433375      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:44:42.475: INFO: ResourceQuota "e2e-rq-status-kvl95" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvl95", GenerateName:"", Namespace:"resourcequota-2161", SelfLink:"", UID:"60f16289-5736-4f72-86d2-75a5a329fd52", ResourceVersion:"16907", Generation:0, CreationTimestamp:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvl95"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004376ea0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004376ed0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004376f30), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0727 12:44:43.434211      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:44:44.434404      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:44:45.434524      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:44:46.435312      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:44:47.435565      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:44:47.474: INFO: ResourceQuota "e2e-rq-status-kvl95" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvl95", GenerateName:"", Namespace:"resourcequota-2161", SelfLink:"", UID:"60f16289-5736-4f72-86d2-75a5a329fd52", ResourceVersion:"16907", Generation:0, CreationTimestamp:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvl95"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043770e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004377128), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004377170), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0727 12:44:48.436423      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:44:49.436617      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:44:50.437537      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:44:51.437745      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:44:52.438135      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:44:52.474: INFO: ResourceQuota "e2e-rq-status-kvl95" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvl95", GenerateName:"", Namespace:"resourcequota-2161", SelfLink:"", UID:"60f16289-5736-4f72-86d2-75a5a329fd52", ResourceVersion:"16907", Generation:0, CreationTimestamp:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvl95"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005af5c98), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005af5ce0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005af5d10), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0727 12:44:53.438845      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:44:54.439036      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:44:55.439383      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:44:56.439470      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:44:57.440456      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:44:57.474: INFO: ResourceQuota "e2e-rq-status-kvl95" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvl95", GenerateName:"", Namespace:"resourcequota-2161", SelfLink:"", UID:"60f16289-5736-4f72-86d2-75a5a329fd52", ResourceVersion:"16907", Generation:0, CreationTimestamp:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvl95"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005af5f20), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005af5f50), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005daa000), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0727 12:44:58.440665      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:44:59.441693      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:45:00.441778      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:45:01.442354      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:45:02.442741      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:45:02.474: INFO: ResourceQuota "e2e-rq-status-kvl95" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvl95", GenerateName:"", Namespace:"resourcequota-2161", SelfLink:"", UID:"60f16289-5736-4f72-86d2-75a5a329fd52", ResourceVersion:"16907", Generation:0, CreationTimestamp:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvl95"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043774d0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004377500), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004377548), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0727 12:45:03.442767      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:45:04.443795      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:45:05.443891      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:45:06.443987      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:45:07.444660      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:45:07.474: INFO: ResourceQuota "e2e-rq-status-kvl95" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvl95", GenerateName:"", Namespace:"resourcequota-2161", SelfLink:"", UID:"60f16289-5736-4f72-86d2-75a5a329fd52", ResourceVersion:"16907", Generation:0, CreationTimestamp:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvl95"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004377758), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043777b8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043777e8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0727 12:45:08.445147      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:45:09.445247      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:45:10.446217      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:45:11.446368      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:45:12.446417      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:45:12.475: INFO: ResourceQuota "e2e-rq-status-kvl95" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvl95", GenerateName:"", Namespace:"resourcequota-2161", SelfLink:"", UID:"60f16289-5736-4f72-86d2-75a5a329fd52", ResourceVersion:"16907", Generation:0, CreationTimestamp:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvl95"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043779f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004377a40), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004377a70), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0727 12:45:13.446515      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:45:14.446712      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:45:15.447354      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:45:16.447574      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:45:17.448471      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:45:17.474: INFO: ResourceQuota "e2e-rq-status-kvl95" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvl95", GenerateName:"", Namespace:"resourcequota-2161", SelfLink:"", UID:"60f16289-5736-4f72-86d2-75a5a329fd52", ResourceVersion:"16907", Generation:0, CreationTimestamp:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvl95"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005daa378), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005daa3c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005daa3f0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0727 12:45:18.448577      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:45:19.449640      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:45:20.449741      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:45:21.449837      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:45:22.450252      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:45:22.475: INFO: ResourceQuota "e2e-rq-status-kvl95" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvl95", GenerateName:"", Namespace:"resourcequota-2161", SelfLink:"", UID:"60f16289-5736-4f72-86d2-75a5a329fd52", ResourceVersion:"16907", Generation:0, CreationTimestamp:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvl95"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004377d58), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004377da0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004377de8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0727 12:45:23.450379      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:45:24.450554      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:45:25.451269      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:45:26.451373      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:45:27.452474      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:45:27.474: INFO: ResourceQuota "e2e-rq-status-kvl95" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvl95", GenerateName:"", Namespace:"resourcequota-2161", SelfLink:"", UID:"60f16289-5736-4f72-86d2-75a5a329fd52", ResourceVersion:"16907", Generation:0, CreationTimestamp:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvl95"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001728018), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001728090), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0017280c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0727 12:45:28.452564      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:45:29.453641      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:45:30.454201      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:45:31.454710      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:45:32.455129      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:45:32.474: INFO: ResourceQuota "e2e-rq-status-kvl95" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvl95", GenerateName:"", Namespace:"resourcequota-2161", SelfLink:"", UID:"60f16289-5736-4f72-86d2-75a5a329fd52", ResourceVersion:"16907", Generation:0, CreationTimestamp:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvl95"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005daa690), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005daa6c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005daa6f0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0727 12:45:33.456019      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:45:34.456230      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:45:35.456428      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:45:36.456612      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:45:37.457680      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:45:37.474: INFO: ResourceQuota "e2e-rq-status-kvl95" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvl95", GenerateName:"", Namespace:"resourcequota-2161", SelfLink:"", UID:"60f16289-5736-4f72-86d2-75a5a329fd52", ResourceVersion:"16907", Generation:0, CreationTimestamp:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvl95"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005daa8d0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005daa900), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005daa930), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0727 12:45:38.458537      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:45:39.458656      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:45:40.459006      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:45:41.458986      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:45:42.459477      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:45:42.475: INFO: ResourceQuota "e2e-rq-status-kvl95" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kvl95", GenerateName:"", Namespace:"resourcequota-2161", SelfLink:"", UID:"60f16289-5736-4f72-86d2-75a5a329fd52", ResourceVersion:"16907", Generation:0, CreationTimestamp:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kvl95"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001728108), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001728138), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 42, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001728168), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0727 12:45:43.460518      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:45:44.460611      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:45:45.461165      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:45:46.462210      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:45:47.462475      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:45:47.475: INFO: ResourceQuota "e2e-rq-status-kvl95" Spec was unchanged and /status reset
  Jul 27 12:45:47.475: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2161" for this suite. @ 07/27/24 12:45:47.478
• [200.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 07/27/24 12:45:47.485
  Jul 27 12:45:47.485: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename init-container @ 07/27/24 12:45:47.486
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:45:47.5
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:45:47.503
  STEP: creating the pod @ 07/27/24 12:45:47.505
  Jul 27 12:45:47.505: INFO: PodSpec: initContainers in spec.initContainers
  E0727 12:45:48.463350      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:45:49.464359      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:45:50.464455      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:45:51.464652      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:45:52.464694      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:45:53.464928      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:45:54.465171      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:45:55.465286      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:45:56.465349      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:45:57.465422      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:45:58.466199      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:45:59.466302      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:46:00.466421      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:46:01.466956      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:46:02.467334      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:46:03.467439      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:46:04.467548      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:46:05.467610      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:46:06.467755      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:46:07.468504      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:46:08.468723      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:46:09.468978      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:46:10.469145      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:46:11.470209      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:46:12.470402      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:46:13.470923      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:46:14.471045      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:46:15.471167      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:46:16.472200      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:46:17.472502      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:46:18.472702      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:46:19.472842      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:46:20.473084      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:46:21.473133      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:46:22.473354      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:46:23.474200      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:46:24.475205      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:46:25.475403      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:46:26.475604      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:46:27.475699      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:46:28.476037      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:46:29.274: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-91005be2-ab4d-406a-8434-3ecfc76b6c00", GenerateName:"", Namespace:"init-container-8727", SelfLink:"", UID:"7d972616-7e91-48a8-86fe-6e8f20ebbfbf", ResourceVersion:"17523", Generation:0, CreationTimestamp:time.Date(2024, time.July, 27, 12, 45, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"505294224"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 45, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001729830), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 27, 12, 46, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001729890), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-4c89x", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc005813420), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-4c89x", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-4c89x", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-4c89x", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0029d1008), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ip-172-31-18-96", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc0004d5340), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0029d1090)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0029d10b0)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc0029d10b8), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc0029d10bc), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc000fa33e0), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.July, 27, 12, 45, 48, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.July, 27, 12, 45, 47, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.July, 27, 12, 45, 47, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.July, 27, 12, 45, 47, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.July, 27, 12, 45, 47, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.31.18.96", HostIPs:[]v1.HostIP{v1.HostIP{IP:"172.31.18.96"}}, PodIP:"192.168.122.153", PodIPs:[]v1.PodIP{v1.PodIP{IP:"192.168.122.153"}}, StartTime:time.Date(2024, time.July, 27, 12, 45, 47, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0004d5650)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0004d5730)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://522f87f757a9e8de3eeb7b34001f24179a9569811afab7115b91ee911efc90b3", Started:(*bool)(0xc0029d115a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc005813480), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc0029d116f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc005813460), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc0029d113f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  Jul 27 12:46:29.275: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-8727" for this suite. @ 07/27/24 12:46:29.279
• [41.801 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:269
  STEP: Creating a kubernetes client @ 07/27/24 12:46:29.286
  Jul 27 12:46:29.286: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename downward-api @ 07/27/24 12:46:29.287
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:46:29.3
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:46:29.303
  STEP: Creating a pod to test downward api env vars @ 07/27/24 12:46:29.306
  E0727 12:46:29.476746      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:46:30.476963      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/27/24 12:46:31.328
  Jul 27 12:46:31.331: INFO: Trying to get logs from node ip-172-31-10-249 pod downward-api-2042e36b-4eee-40bf-abd6-7d81a4d6cc90 container dapi-container: <nil>
  STEP: delete the pod @ 07/27/24 12:46:31.346
  Jul 27 12:46:31.364: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7973" for this suite. @ 07/27/24 12:46:31.368
• [2.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 07/27/24 12:46:31.374
  Jul 27 12:46:31.374: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename downward-api @ 07/27/24 12:46:31.375
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:46:31.39
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:46:31.393
  STEP: Creating a pod to test downward api env vars @ 07/27/24 12:46:31.395
  E0727 12:46:31.477266      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:46:32.477722      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/27/24 12:46:33.411
  Jul 27 12:46:33.415: INFO: Trying to get logs from node ip-172-31-10-249 pod downward-api-e663123c-3d3e-498a-8be0-8cb6a317d07b container dapi-container: <nil>
  STEP: delete the pod @ 07/27/24 12:46:33.422
  Jul 27 12:46:33.440: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8279" for this suite. @ 07/27/24 12:46:33.443
• [2.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 07/27/24 12:46:33.451
  Jul 27 12:46:33.451: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename emptydir @ 07/27/24 12:46:33.452
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:46:33.462
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:46:33.464
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 07/27/24 12:46:33.468
  E0727 12:46:33.478234      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:46:34.478391      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:46:35.478491      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/27/24 12:46:35.487
  Jul 27 12:46:35.490: INFO: Trying to get logs from node ip-172-31-10-249 pod pod-620c7c60-07d5-4b58-a454-6d373aa3927f container test-container: <nil>
  STEP: delete the pod @ 07/27/24 12:46:35.497
  Jul 27 12:46:35.515: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4662" for this suite. @ 07/27/24 12:46:35.518
• [2.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:324
  STEP: Creating a kubernetes client @ 07/27/24 12:46:35.525
  Jul 27 12:46:35.525: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename cronjob @ 07/27/24 12:46:35.525
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:46:35.538
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:46:35.54
  STEP: Creating a cronjob @ 07/27/24 12:46:35.542
  STEP: creating @ 07/27/24 12:46:35.542
  STEP: getting @ 07/27/24 12:46:35.547
  STEP: listing @ 07/27/24 12:46:35.55
  STEP: watching @ 07/27/24 12:46:35.554
  Jul 27 12:46:35.554: INFO: starting watch
  STEP: cluster-wide listing @ 07/27/24 12:46:35.555
  STEP: cluster-wide watching @ 07/27/24 12:46:35.557
  Jul 27 12:46:35.557: INFO: starting watch
  STEP: patching @ 07/27/24 12:46:35.558
  STEP: updating @ 07/27/24 12:46:35.564
  Jul 27 12:46:35.574: INFO: waiting for watch events with expected annotations
  Jul 27 12:46:35.574: INFO: saw patched and updated annotations
  STEP: patching /status @ 07/27/24 12:46:35.574
  STEP: updating /status @ 07/27/24 12:46:35.579
  STEP: get /status @ 07/27/24 12:46:35.586
  STEP: deleting @ 07/27/24 12:46:35.589
  STEP: deleting a collection @ 07/27/24 12:46:35.612
  Jul 27 12:46:35.623: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-193" for this suite. @ 07/27/24 12:46:35.628
• [0.110 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 07/27/24 12:46:35.635
  Jul 27 12:46:35.635: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename field-validation @ 07/27/24 12:46:35.636
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:46:35.648
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:46:35.651
  Jul 27 12:46:35.653: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  E0727 12:46:36.479506      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:46:37.479791      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0727 12:46:38.190798      20 warnings.go:70] unknown field "alpha"
  W0727 12:46:38.190818      20 warnings.go:70] unknown field "beta"
  W0727 12:46:38.190822      20 warnings.go:70] unknown field "delta"
  W0727 12:46:38.190825      20 warnings.go:70] unknown field "epsilon"
  W0727 12:46:38.190828      20 warnings.go:70] unknown field "gamma"
  E0727 12:46:38.480619      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:46:38.738: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-728" for this suite. @ 07/27/24 12:46:38.741
• [3.113 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 07/27/24 12:46:38.748
  Jul 27 12:46:38.748: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename dns @ 07/27/24 12:46:38.749
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:46:38.761
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:46:38.763
  STEP: Creating a test externalName service @ 07/27/24 12:46:38.766
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1471.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-1471.svc.cluster.local; sleep 1; done
   @ 07/27/24 12:46:38.772
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1471.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-1471.svc.cluster.local; sleep 1; done
   @ 07/27/24 12:46:38.772
  STEP: creating a pod to probe DNS @ 07/27/24 12:46:38.772
  STEP: submitting the pod to kubernetes @ 07/27/24 12:46:38.772
  E0727 12:46:39.480720      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:46:40.480852      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/27/24 12:46:40.786
  STEP: looking for the results for each expected name from probers @ 07/27/24 12:46:40.789
  Jul 27 12:46:40.799: INFO: DNS probes using dns-test-46ad1f9a-8552-46d1-974b-c7096928154c succeeded

  STEP: changing the externalName to bar.example.com @ 07/27/24 12:46:40.799
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1471.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-1471.svc.cluster.local; sleep 1; done
   @ 07/27/24 12:46:40.808
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1471.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-1471.svc.cluster.local; sleep 1; done
   @ 07/27/24 12:46:40.808
  STEP: creating a second pod to probe DNS @ 07/27/24 12:46:40.808
  STEP: submitting the pod to kubernetes @ 07/27/24 12:46:40.808
  E0727 12:46:41.481751      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:46:42.482530      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:46:43.483184      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:46:44.483269      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:46:45.483408      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:46:46.483496      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/27/24 12:46:46.835
  STEP: looking for the results for each expected name from probers @ 07/27/24 12:46:46.839
  Jul 27 12:46:46.848: INFO: DNS probes using dns-test-cc45a586-8a66-47c6-9252-3f7aaefb690c succeeded

  STEP: changing the service to type=ClusterIP @ 07/27/24 12:46:46.848
  W0727 12:46:46.863696      20 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1471.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-1471.svc.cluster.local; sleep 1; done
   @ 07/27/24 12:46:46.864
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1471.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-1471.svc.cluster.local; sleep 1; done
   @ 07/27/24 12:46:46.864
  STEP: creating a third pod to probe DNS @ 07/27/24 12:46:46.864
  STEP: submitting the pod to kubernetes @ 07/27/24 12:46:46.87
  E0727 12:46:47.484129      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:46:48.484335      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/27/24 12:46:48.888
  STEP: looking for the results for each expected name from probers @ 07/27/24 12:46:48.891
  Jul 27 12:46:48.900: INFO: DNS probes using dns-test-ad0ec794-2a75-4fe1-b8d6-d2811cca0ccb succeeded

  STEP: deleting the pod @ 07/27/24 12:46:48.901
  STEP: deleting the pod @ 07/27/24 12:46:48.914
  STEP: deleting the pod @ 07/27/24 12:46:48.93
  STEP: deleting the test externalName service @ 07/27/24 12:46:48.944
  Jul 27 12:46:48.963: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1471" for this suite. @ 07/27/24 12:46:48.97
• [10.228 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 07/27/24 12:46:48.977
  Jul 27 12:46:48.977: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename proxy @ 07/27/24 12:46:48.978
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:46:48.992
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:46:48.996
  Jul 27 12:46:48.998: INFO: Creating pod...
  E0727 12:46:49.485308      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:46:50.485407      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:46:51.016: INFO: Creating service...
  Jul 27 12:46:51.026: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5546/pods/agnhost/proxy?method=DELETE
  Jul 27 12:46:51.039: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Jul 27 12:46:51.040: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5546/pods/agnhost/proxy?method=OPTIONS
  Jul 27 12:46:51.044: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Jul 27 12:46:51.044: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5546/pods/agnhost/proxy?method=PATCH
  Jul 27 12:46:51.047: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Jul 27 12:46:51.047: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5546/pods/agnhost/proxy?method=POST
  Jul 27 12:46:51.051: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Jul 27 12:46:51.051: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5546/pods/agnhost/proxy?method=PUT
  Jul 27 12:46:51.055: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Jul 27 12:46:51.055: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5546/services/e2e-proxy-test-service/proxy?method=DELETE
  Jul 27 12:46:51.061: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Jul 27 12:46:51.061: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5546/services/e2e-proxy-test-service/proxy?method=OPTIONS
  Jul 27 12:46:51.066: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Jul 27 12:46:51.066: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5546/services/e2e-proxy-test-service/proxy?method=PATCH
  Jul 27 12:46:51.073: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Jul 27 12:46:51.073: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5546/services/e2e-proxy-test-service/proxy?method=POST
  Jul 27 12:46:51.078: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Jul 27 12:46:51.078: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5546/services/e2e-proxy-test-service/proxy?method=PUT
  Jul 27 12:46:51.083: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Jul 27 12:46:51.083: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5546/pods/agnhost/proxy?method=GET
  Jul 27 12:46:51.086: INFO: http.Client request:GET StatusCode:301
  Jul 27 12:46:51.086: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5546/services/e2e-proxy-test-service/proxy?method=GET
  Jul 27 12:46:51.091: INFO: http.Client request:GET StatusCode:301
  Jul 27 12:46:51.091: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5546/pods/agnhost/proxy?method=HEAD
  Jul 27 12:46:51.093: INFO: http.Client request:HEAD StatusCode:301
  Jul 27 12:46:51.094: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5546/services/e2e-proxy-test-service/proxy?method=HEAD
  Jul 27 12:46:51.099: INFO: http.Client request:HEAD StatusCode:301
  Jul 27 12:46:51.100: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-5546" for this suite. @ 07/27/24 12:46:51.103
• [2.132 seconds]
------------------------------
S
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 07/27/24 12:46:51.11
  Jul 27 12:46:51.110: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename deployment @ 07/27/24 12:46:51.111
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:46:51.121
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:46:51.123
  Jul 27 12:46:51.135: INFO: Pod name rollover-pod: Found 0 pods out of 1
  E0727 12:46:51.485510      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:46:52.485793      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:46:53.485900      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:46:54.486018      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:46:55.486809      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:46:56.139: INFO: Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/27/24 12:46:56.139
  Jul 27 12:46:56.140: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
  E0727 12:46:56.487329      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:46:57.487556      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:46:58.144: INFO: Creating deployment "test-rollover-deployment"
  Jul 27 12:46:58.152: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
  E0727 12:46:58.487649      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:46:59.487986      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:47:00.160: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
  Jul 27 12:47:00.167: INFO: Ensure that both replica sets have 1 created replica
  Jul 27 12:47:00.174: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  Jul 27 12:47:00.184: INFO: Updating deployment test-rollover-deployment
  Jul 27 12:47:00.185: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  E0727 12:47:00.488117      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:47:01.488225      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:47:02.193: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
  Jul 27 12:47:02.201: INFO: Make sure deployment "test-rollover-deployment" is complete
  Jul 27 12:47:02.207: INFO: all replica sets need to contain the pod-template-hash label
  Jul 27 12:47:02.207: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.July, 27, 12, 46, 58, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 27, 12, 46, 58, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 27, 12, 47, 1, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 27, 12, 46, 58, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0727 12:47:02.489235      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:47:03.489342      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:47:04.215: INFO: all replica sets need to contain the pod-template-hash label
  Jul 27 12:47:04.215: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.July, 27, 12, 46, 58, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 27, 12, 46, 58, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 27, 12, 47, 1, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 27, 12, 46, 58, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0727 12:47:04.489989      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:47:05.490106      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:47:06.217: INFO: all replica sets need to contain the pod-template-hash label
  Jul 27 12:47:06.218: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.July, 27, 12, 46, 58, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 27, 12, 46, 58, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 27, 12, 47, 1, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 27, 12, 46, 58, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0727 12:47:06.491109      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:47:07.491437      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:47:08.216: INFO: all replica sets need to contain the pod-template-hash label
  Jul 27 12:47:08.216: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.July, 27, 12, 46, 58, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 27, 12, 46, 58, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 27, 12, 47, 1, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 27, 12, 46, 58, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0727 12:47:08.491711      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:47:09.491802      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:47:10.215: INFO: all replica sets need to contain the pod-template-hash label
  Jul 27 12:47:10.215: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.July, 27, 12, 46, 58, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 27, 12, 46, 58, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 27, 12, 47, 1, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 27, 12, 46, 58, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0727 12:47:10.492595      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:47:11.492710      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:47:12.215: INFO: 
  Jul 27 12:47:12.216: INFO: Ensure that both old replica sets have no replicas
  Jul 27 12:47:12.226: INFO: Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8454",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "775c02c5-8fba-4084-8855-0078eb598839",
      ResourceVersion: (string) (len=5) "18031",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857681218,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857681220,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857681231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857681218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857681218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857681231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857681218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-68774655d5\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jul 27 12:47:12.232: INFO: New ReplicaSet "test-rollover-deployment-68774655d5" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-68774655d5",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8454",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b4076ff9-52df-40b5-b582-699f485b6d1d",
      ResourceVersion: (string) (len=5) "18021",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857681220,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "775c02c5-8fba-4084-8855-0078eb598839",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857681220,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 37 37 35 63 30 32  63 35 2d 38 66 62 61 2d  |\"775c02c5-8fba-|
              00000120  34 30 38 34 2d 38 38 35  35 2d 30 30 37 38 65 62  |4084-8855-0078eb|
              00000130  35 39 38 38 33 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |598839\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857681231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jul 27 12:47:12.233: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
  Jul 27 12:47:12.233: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8454",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e6ac20db-6427-4849-91d4-87ddd7580814",
      ResourceVersion: (string) (len=5) "18030",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857681211,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "775c02c5-8fba-4084-8855-0078eb598839",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857681211,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857681231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  37 37 35 63 30 32 63 35  2d 38 66 62 61 2d 34 30  |775c02c5-8fba-40|
              000000c0  38 34 2d 38 38 35 35 2d  30 30 37 38 65 62 35 39  |84-8855-0078eb59|
              000000d0  38 38 33 39 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |8839\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857681231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "pod": (string) (len=5) "httpd",
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jul 27 12:47:12.234: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-664fc6c874",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8454",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b5a27194-0af7-40d4-a6f5-4c065bb98aba",
      ResourceVersion: (string) (len=5) "17979",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857681218,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "775c02c5-8fba-4084-8855-0078eb598839",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857681220,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 37 37 35 63 30 32  63 35 2d 38 66 62 61 2d  |\"775c02c5-8fba-|
              00000120  34 30 38 34 2d 38 38 35  35 2d 30 30 37 38 65 62  |4084-8855-0078eb|
              00000130  35 39 38 38 33 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |598839\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857681220,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jul 27 12:47:12.238: INFO: Pod "test-rollover-deployment-68774655d5-pm8dv" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-68774655d5-pm8dv",
      GenerateName: (string) (len=36) "test-rollover-deployment-68774655d5-",
      Namespace: (string) (len=15) "deployment-8454",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "16eab008-b214-4c3f-b106-230529b21ad4",
      ResourceVersion: (string) (len=5) "17995",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857681220,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-68774655d5",
          UID: (types.UID) (len=36) "b4076ff9-52df-40b5-b582-699f485b6d1d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857681220,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 34  30 37 36 66 66 39 2d 35  |d\":\"b4076ff9-5|
              00000090  32 64 66 2d 34 30 62 35  2d 62 35 38 32 2d 36 39  |2df-40b5-b582-69|
              000000a0  39 66 34 38 35 62 36 64  31 64 5c 22 7d 22 3a 7b  |9f485b6d1d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857681221,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 39 37  2e 34 38 5c 22 7d 22 3a  |2.168.97.48\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-prdt4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-prdt4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-10-249",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857681221,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857681220,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857681221,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857681221,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857681220,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.10.249",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.10.249"
        }
      },
      PodIP: (string) (len=13) "192.168.97.48",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.97.48"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857681220,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63857681220,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253",
          ContainerID: (string) (len=77) "containerd://f4bb58027c81c39280446673a9b506a345353406b4867b0d625eb999f74b115a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 27 12:47:12.240: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8454" for this suite. @ 07/27/24 12:47:12.245
• [21.148 seconds]
------------------------------
SS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 07/27/24 12:47:12.258
  Jul 27 12:47:12.258: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename endpointslice @ 07/27/24 12:47:12.258
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:47:12.272
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:47:12.275
  E0727 12:47:12.493040      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:47:13.493165      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:47:14.373: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-4958" for this suite. @ 07/27/24 12:47:14.378
• [2.143 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 07/27/24 12:47:14.401
  Jul 27 12:47:14.401: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename projected @ 07/27/24 12:47:14.401
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:47:14.426
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:47:14.438
  STEP: Creating secret with name projected-secret-test-33dcbde4-dd9b-4379-a426-d68087e33285 @ 07/27/24 12:47:14.44
  STEP: Creating a pod to test consume secrets @ 07/27/24 12:47:14.446
  E0727 12:47:14.494098      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:47:15.495094      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:47:16.495559      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:47:17.495684      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/27/24 12:47:18.47
  Jul 27 12:47:18.474: INFO: Trying to get logs from node ip-172-31-18-96 pod pod-projected-secrets-6718d124-1760-485f-8adc-c75dc2afd664 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/27/24 12:47:18.489
  E0727 12:47:18.495687      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:47:18.504: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7558" for this suite. @ 07/27/24 12:47:18.508
• [4.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 07/27/24 12:47:18.516
  Jul 27 12:47:18.516: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename sysctl @ 07/27/24 12:47:18.517
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:47:18.529
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:47:18.531
  STEP: Creating a pod with one valid and two invalid sysctls @ 07/27/24 12:47:18.534
  Jul 27 12:47:18.538: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-6495" for this suite. @ 07/27/24 12:47:18.541
• [0.032 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:397
  STEP: Creating a kubernetes client @ 07/27/24 12:47:18.548
  Jul 27 12:47:18.548: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename resourcequota @ 07/27/24 12:47:18.549
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:47:18.561
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:47:18.564
  STEP: Counting existing ResourceQuota @ 07/27/24 12:47:18.566
  E0727 12:47:19.496501      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:47:20.496612      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:47:21.496701      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:47:22.497744      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:47:23.498224      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 07/27/24 12:47:23.571
  STEP: Ensuring resource quota status is calculated @ 07/27/24 12:47:23.576
  E0727 12:47:24.498996      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:47:25.499104      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicationController @ 07/27/24 12:47:25.581
  STEP: Ensuring resource quota status captures replication controller creation @ 07/27/24 12:47:25.596
  E0727 12:47:26.500013      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:47:27.501026      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicationController @ 07/27/24 12:47:27.601
  STEP: Ensuring resource quota status released usage @ 07/27/24 12:47:27.608
  E0727 12:47:28.501226      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:47:29.501352      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:47:29.614: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1527" for this suite. @ 07/27/24 12:47:29.618
• [11.079 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 07/27/24 12:47:29.628
  Jul 27 12:47:29.628: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename kubectl-logs @ 07/27/24 12:47:29.628
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:47:29.641
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:47:29.643
  STEP: creating an pod @ 07/27/24 12:47:29.648
  Jul 27 12:47:29.648: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-logs-7667 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.47 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  Jul 27 12:47:29.697: INFO: stderr: ""
  Jul 27 12:47:29.697: INFO: stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 07/27/24 12:47:29.697
  Jul 27 12:47:29.697: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  E0727 12:47:30.501792      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:47:31.502258      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:47:31.706: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 07/27/24 12:47:31.706
  Jul 27 12:47:31.706: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-logs-7667 logs logs-generator logs-generator'
  Jul 27 12:47:31.757: INFO: stderr: ""
  Jul 27 12:47:31.757: INFO: stdout: "I0727 12:47:30.278530       1 logs_generator.go:76] 0 POST /api/v1/namespaces/kube-system/pods/hrz 395\nI0727 12:47:30.478615       1 logs_generator.go:76] 1 POST /api/v1/namespaces/ns/pods/g8wr 250\nI0727 12:47:30.679049       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/default/pods/zfc2 256\nI0727 12:47:30.879354       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/kube-system/pods/vs5 272\nI0727 12:47:31.078590       1 logs_generator.go:76] 4 GET /api/v1/namespaces/kube-system/pods/t6z 330\nI0727 12:47:31.278752       1 logs_generator.go:76] 5 POST /api/v1/namespaces/default/pods/lg4q 578\nI0727 12:47:31.479058       1 logs_generator.go:76] 6 POST /api/v1/namespaces/kube-system/pods/gbq5 281\nI0727 12:47:31.679348       1 logs_generator.go:76] 7 GET /api/v1/namespaces/ns/pods/5c6d 542\n"
  STEP: limiting log lines @ 07/27/24 12:47:31.757
  Jul 27 12:47:31.757: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-logs-7667 logs logs-generator logs-generator --tail=1'
  Jul 27 12:47:31.807: INFO: stderr: ""
  Jul 27 12:47:31.807: INFO: stdout: "I0727 12:47:31.679348       1 logs_generator.go:76] 7 GET /api/v1/namespaces/ns/pods/5c6d 542\n"
  Jul 27 12:47:31.807: INFO: got output "I0727 12:47:31.679348       1 logs_generator.go:76] 7 GET /api/v1/namespaces/ns/pods/5c6d 542\n"
  STEP: limiting log bytes @ 07/27/24 12:47:31.807
  Jul 27 12:47:31.807: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-logs-7667 logs logs-generator logs-generator --limit-bytes=1'
  Jul 27 12:47:31.860: INFO: stderr: ""
  Jul 27 12:47:31.860: INFO: stdout: "I"
  Jul 27 12:47:31.860: INFO: got output "I"
  STEP: exposing timestamps @ 07/27/24 12:47:31.86
  Jul 27 12:47:31.860: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-logs-7667 logs logs-generator logs-generator --tail=1 --timestamps'
  Jul 27 12:47:31.909: INFO: stderr: ""
  Jul 27 12:47:31.909: INFO: stdout: "2024-07-27T12:47:31.878700862Z I0727 12:47:31.878630       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/kube-system/pods/hvsz 360\n"
  Jul 27 12:47:31.909: INFO: got output "2024-07-27T12:47:31.878700862Z I0727 12:47:31.878630       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/kube-system/pods/hvsz 360\n"
  STEP: restricting to a time range @ 07/27/24 12:47:31.909
  E0727 12:47:32.502382      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:47:33.502618      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:47:34.410: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-logs-7667 logs logs-generator logs-generator --since=1s'
  Jul 27 12:47:34.461: INFO: stderr: ""
  Jul 27 12:47:34.461: INFO: stdout: "I0727 12:47:33.479446       1 logs_generator.go:76] 16 GET /api/v1/namespaces/default/pods/fbmj 206\nI0727 12:47:33.678684       1 logs_generator.go:76] 17 POST /api/v1/namespaces/kube-system/pods/2gc 316\nI0727 12:47:33.878991       1 logs_generator.go:76] 18 GET /api/v1/namespaces/ns/pods/zqr 499\nI0727 12:47:34.079282       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/ns/pods/frv2 589\nI0727 12:47:34.279583       1 logs_generator.go:76] 20 POST /api/v1/namespaces/kube-system/pods/q2vc 581\n"
  Jul 27 12:47:34.461: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-logs-7667 logs logs-generator logs-generator --since=24h'
  E0727 12:47:34.502951      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:47:34.509: INFO: stderr: ""
  Jul 27 12:47:34.509: INFO: stdout: "I0727 12:47:30.278530       1 logs_generator.go:76] 0 POST /api/v1/namespaces/kube-system/pods/hrz 395\nI0727 12:47:30.478615       1 logs_generator.go:76] 1 POST /api/v1/namespaces/ns/pods/g8wr 250\nI0727 12:47:30.679049       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/default/pods/zfc2 256\nI0727 12:47:30.879354       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/kube-system/pods/vs5 272\nI0727 12:47:31.078590       1 logs_generator.go:76] 4 GET /api/v1/namespaces/kube-system/pods/t6z 330\nI0727 12:47:31.278752       1 logs_generator.go:76] 5 POST /api/v1/namespaces/default/pods/lg4q 578\nI0727 12:47:31.479058       1 logs_generator.go:76] 6 POST /api/v1/namespaces/kube-system/pods/gbq5 281\nI0727 12:47:31.679348       1 logs_generator.go:76] 7 GET /api/v1/namespaces/ns/pods/5c6d 542\nI0727 12:47:31.878630       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/kube-system/pods/hvsz 360\nI0727 12:47:32.078759       1 logs_generator.go:76] 9 GET /api/v1/namespaces/kube-system/pods/xttk 215\nI0727 12:47:32.279063       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/ns/pods/7trx 334\nI0727 12:47:32.479165       1 logs_generator.go:76] 11 GET /api/v1/namespaces/ns/pods/lj5m 274\nI0727 12:47:32.679441       1 logs_generator.go:76] 12 GET /api/v1/namespaces/ns/pods/2nqx 317\nI0727 12:47:32.878678       1 logs_generator.go:76] 13 PUT /api/v1/namespaces/ns/pods/mt9 592\nI0727 12:47:33.078831       1 logs_generator.go:76] 14 POST /api/v1/namespaces/default/pods/7bp 318\nI0727 12:47:33.279116       1 logs_generator.go:76] 15 POST /api/v1/namespaces/kube-system/pods/bf46 580\nI0727 12:47:33.479446       1 logs_generator.go:76] 16 GET /api/v1/namespaces/default/pods/fbmj 206\nI0727 12:47:33.678684       1 logs_generator.go:76] 17 POST /api/v1/namespaces/kube-system/pods/2gc 316\nI0727 12:47:33.878991       1 logs_generator.go:76] 18 GET /api/v1/namespaces/ns/pods/zqr 499\nI0727 12:47:34.079282       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/ns/pods/frv2 589\nI0727 12:47:34.279583       1 logs_generator.go:76] 20 POST /api/v1/namespaces/kube-system/pods/q2vc 581\nI0727 12:47:34.478757       1 logs_generator.go:76] 21 PUT /api/v1/namespaces/default/pods/dp7z 274\n"
  Jul 27 12:47:34.509: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-logs-7667 delete pod logs-generator'
  Jul 27 12:47:35.418: INFO: stderr: ""
  Jul 27 12:47:35.418: INFO: stdout: "pod \"logs-generator\" deleted\n"
  Jul 27 12:47:35.418: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-7667" for this suite. @ 07/27/24 12:47:35.422
• [5.800 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 07/27/24 12:47:35.429
  Jul 27 12:47:35.429: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename replication-controller @ 07/27/24 12:47:35.429
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:47:35.444
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:47:35.447
  Jul 27 12:47:35.449: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
  E0727 12:47:35.503364      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 07/27/24 12:47:36.461
  STEP: Checking rc "condition-test" has the desired failure condition set @ 07/27/24 12:47:36.467
  E0727 12:47:36.504026      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 07/27/24 12:47:37.475
  Jul 27 12:47:37.487: INFO: Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 07/27/24 12:47:37.487
  E0727 12:47:37.504941      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:47:38.497: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-6553" for this suite. @ 07/27/24 12:47:38.501
  E0727 12:47:38.505964      20 retrywatcher.go:129] "Watch failed" err="context canceled"
• [3.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 07/27/24 12:47:38.508
  Jul 27 12:47:38.508: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename container-runtime @ 07/27/24 12:47:38.508
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:47:38.525
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:47:38.528
  STEP: create the container @ 07/27/24 12:47:38.531
  W0727 12:47:38.540172      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 07/27/24 12:47:38.54
  E0727 12:47:39.506158      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:47:40.506546      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:47:41.507408      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 07/27/24 12:47:41.563
  STEP: the container should be terminated @ 07/27/24 12:47:41.57
  STEP: the termination message should be set @ 07/27/24 12:47:41.57
  Jul 27 12:47:41.570: INFO: Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 07/27/24 12:47:41.57
  Jul 27 12:47:41.585: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-9210" for this suite. @ 07/27/24 12:47:41.589
• [3.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:408
  STEP: Creating a kubernetes client @ 07/27/24 12:47:41.597
  Jul 27 12:47:41.597: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename job @ 07/27/24 12:47:41.598
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:47:41.614
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:47:41.617
  STEP: Creating Indexed job @ 07/27/24 12:47:41.622
  STEP: Ensuring job reaches completions @ 07/27/24 12:47:41.628
  E0727 12:47:42.507502      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:47:43.507801      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:47:44.508302      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:47:45.508501      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:47:46.508597      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:47:47.508756      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:47:48.509784      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:47:49.509866      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring pods with index for job exist @ 07/27/24 12:47:49.633
  Jul 27 12:47:49.638: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1876" for this suite. @ 07/27/24 12:47:49.641
• [8.050 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 07/27/24 12:47:49.648
  Jul 27 12:47:49.648: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename deployment @ 07/27/24 12:47:49.649
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:47:49.663
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:47:49.666
  Jul 27 12:47:49.668: INFO: Creating simple deployment test-new-deployment
  Jul 27 12:47:49.685: INFO: deployment "test-new-deployment" doesn't have the required revision set
  E0727 12:47:50.509970      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:47:51.510199      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting scale subresource @ 07/27/24 12:47:51.7
  STEP: updating a scale subresource @ 07/27/24 12:47:51.703
  STEP: verifying the deployment Spec.Replicas was modified @ 07/27/24 12:47:51.709
  STEP: Patch a scale subresource @ 07/27/24 12:47:51.712
  Jul 27 12:47:51.736: INFO: Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8208",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "db41e7dd-6a4b-4bcb-b8f2-555cd0b86163",
      ResourceVersion: (string) (len=5) "18520",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857681269,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857681269,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857681270,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857681270,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857681270,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857681270,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857681269,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-557759b7c7\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jul 27 12:47:51.740: INFO: New ReplicaSet "test-new-deployment-557759b7c7" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8208",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ee2f4ed5-67be-425a-b25a-354c40078ee0",
      ResourceVersion: (string) (len=5) "18527",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857681269,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "db41e7dd-6a4b-4bcb-b8f2-555cd0b86163",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857681271,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 62 34 31 65 37  64 64 2d 36 61 34 62 2d  |\"db41e7dd-6a4b-|
              00000120  34 62 63 62 2d 62 38 66  32 2d 35 35 35 63 64 30  |4bcb-b8f2-555cd0|
              00000130  62 38 36 31 36 33 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |b86163\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857681271,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jul 27 12:47:51.757: INFO: Pod "test-new-deployment-557759b7c7-m98mf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-m98mf",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-8208",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9ed0fec5-221a-46c0-b57a-6ab168b58ebd",
      ResourceVersion: (string) (len=5) "18530",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857681271,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "ee2f4ed5-67be-425a-b25a-354c40078ee0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857681271,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 65  32 66 34 65 64 35 2d 36  |d\":\"ee2f4ed5-6|
              00000090  37 62 65 2d 34 32 35 61  2d 62 32 35 61 2d 33 35  |7be-425a-b25a-35|
              000000a0  34 63 34 30 30 37 38 65  65 30 5c 22 7d 22 3a 7b  |4c40078ee0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dcn7r",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dcn7r",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 27 12:47:51.758: INFO: Pod "test-new-deployment-557759b7c7-mcr96" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-mcr96",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-8208",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "71ab5743-5496-4acb-bb2f-747b29c44bb2",
      ResourceVersion: (string) (len=5) "18529",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857681271,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "ee2f4ed5-67be-425a-b25a-354c40078ee0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857681271,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 65  32 66 34 65 64 35 2d 36  |d\":\"ee2f4ed5-6|
              00000090  37 62 65 2d 34 32 35 61  2d 62 32 35 61 2d 33 35  |7be-425a-b25a-35|
              000000a0  34 63 34 30 30 37 38 65  65 30 5c 22 7d 22 3a 7b  |4c40078ee0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857681271,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-q2r7g",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-q2r7g",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-10-249",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857681271,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857681271,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857681271,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857681271,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857681271,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.10.249",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.10.249"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857681271,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 27 12:47:51.759: INFO: Pod "test-new-deployment-557759b7c7-tcfgw" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-tcfgw",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-8208",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e1cb5864-c584-4482-82b8-0618a5e90634",
      ResourceVersion: (string) (len=5) "18513",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857681269,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "ee2f4ed5-67be-425a-b25a-354c40078ee0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857681269,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 65  32 66 34 65 64 35 2d 36  |d\":\"ee2f4ed5-6|
              00000090  37 62 65 2d 34 32 35 61  2d 62 32 35 61 2d 33 35  |7be-425a-b25a-35|
              000000a0  34 63 34 30 30 37 38 65  65 30 5c 22 7d 22 3a 7b  |4c40078ee0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857681270,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  32 2e 31 36 37 5c 22 7d  |2.168.122.167\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ljmrl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ljmrl",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-18-96",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857681270,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857681269,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857681270,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857681270,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857681269,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.18.96",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.18.96"
        }
      },
      PodIP: (string) (len=15) "192.168.122.167",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.122.167"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857681269,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63857681270,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://6927d3146d33e12a13a6beb2ca7f48fe95ca0724524b01f5696eb3ef96fb6e22",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 27 12:47:51.761: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8208" for this suite. @ 07/27/24 12:47:51.767
• [2.134 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 07/27/24 12:47:51.782
  Jul 27 12:47:51.782: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename emptydir @ 07/27/24 12:47:51.783
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:47:51.801
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:47:51.804
  STEP: Creating Pod @ 07/27/24 12:47:51.806
  E0727 12:47:52.510522      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:47:53.510618      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 07/27/24 12:47:53.826
  Jul 27 12:47:53.826: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-1868 PodName:pod-sharedvolume-eab4b8ae-4166-4e37-95b3-23613e489fc3 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 27 12:47:53.826: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  Jul 27 12:47:53.826: INFO: ExecWithOptions: Clientset creation
  Jul 27 12:47:53.826: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/emptydir-1868/pods/pod-sharedvolume-eab4b8ae-4166-4e37-95b3-23613e489fc3/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  Jul 27 12:47:53.878: INFO: Exec stderr: ""
  Jul 27 12:47:53.878: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1868" for this suite. @ 07/27/24 12:47:53.882
• [2.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 07/27/24 12:47:53.892
  Jul 27 12:47:53.892: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename containers @ 07/27/24 12:47:53.893
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:47:53.904
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:47:53.906
  E0727 12:47:54.511442      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:47:55.511540      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:47:55.936: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-2951" for this suite. @ 07/27/24 12:47:55.94
• [2.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 07/27/24 12:47:55.947
  Jul 27 12:47:55.947: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename daemonsets @ 07/27/24 12:47:55.948
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:47:55.961
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:47:55.964
  Jul 27 12:47:55.985: INFO: Create a RollingUpdate DaemonSet
  Jul 27 12:47:55.992: INFO: Check that daemon pods launch on every node of the cluster
  Jul 27 12:47:55.996: INFO: DaemonSet pods can't tolerate node ip-172-31-6-18 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 27 12:47:55.996: INFO: DaemonSet pods can't tolerate node ip-172-31-93-193 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 27 12:47:55.999: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul 27 12:47:55.999: INFO: Node ip-172-31-10-249 is running 0 daemon pod, expected 1
  E0727 12:47:56.512317      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:47:56.997: INFO: DaemonSet pods can't tolerate node ip-172-31-6-18 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 27 12:47:56.997: INFO: DaemonSet pods can't tolerate node ip-172-31-93-193 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 27 12:47:57.000: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul 27 12:47:57.000: INFO: Node ip-172-31-10-249 is running 0 daemon pod, expected 1
  E0727 12:47:57.513275      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:47:57.996: INFO: DaemonSet pods can't tolerate node ip-172-31-6-18 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 27 12:47:57.997: INFO: DaemonSet pods can't tolerate node ip-172-31-93-193 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 27 12:47:58.000: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jul 27 12:47:58.000: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  Jul 27 12:47:58.000: INFO: Update the DaemonSet to trigger a rollout
  Jul 27 12:47:58.010: INFO: Updating DaemonSet daemon-set
  E0727 12:47:58.513436      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:47:59.021: INFO: Roll back the DaemonSet before rollout is complete
  Jul 27 12:47:59.032: INFO: Updating DaemonSet daemon-set
  Jul 27 12:47:59.032: INFO: Make sure DaemonSet rollback is complete
  Jul 27 12:47:59.036: INFO: Wrong image for pod: daemon-set-628zq. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  Jul 27 12:47:59.036: INFO: Pod daemon-set-628zq is not available
  Jul 27 12:47:59.039: INFO: DaemonSet pods can't tolerate node ip-172-31-6-18 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 27 12:47:59.039: INFO: DaemonSet pods can't tolerate node ip-172-31-93-193 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0727 12:47:59.514211      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:48:00.040: INFO: DaemonSet pods can't tolerate node ip-172-31-6-18 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 27 12:48:00.040: INFO: DaemonSet pods can't tolerate node ip-172-31-93-193 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0727 12:48:00.514250      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:48:01.036: INFO: Pod daemon-set-vstlx is not available
  Jul 27 12:48:01.041: INFO: DaemonSet pods can't tolerate node ip-172-31-6-18 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 27 12:48:01.041: INFO: DaemonSet pods can't tolerate node ip-172-31-93-193 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Deleting DaemonSet "daemon-set" @ 07/27/24 12:48:01.048
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4792, will wait for the garbage collector to delete the pods @ 07/27/24 12:48:01.048
  Jul 27 12:48:01.108: INFO: Deleting DaemonSet.extensions daemon-set took: 7.168206ms
  Jul 27 12:48:01.210: INFO: Terminating DaemonSet.extensions daemon-set pods took: 102.039689ms
  E0727 12:48:01.514844      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:48:02.415: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul 27 12:48:02.415: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jul 27 12:48:02.419: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"18838"},"items":null}

  Jul 27 12:48:02.423: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"18838"},"items":null}

  Jul 27 12:48:02.435: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4792" for this suite. @ 07/27/24 12:48:02.439
• [6.499 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:349
  STEP: Creating a kubernetes client @ 07/27/24 12:48:02.447
  Jul 27 12:48:02.447: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename security-context-test @ 07/27/24 12:48:02.447
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:48:02.459
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:48:02.462
  E0727 12:48:02.515164      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:48:03.515303      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:48:04.516233      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:48:05.516712      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:48:06.483: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-5694" for this suite. @ 07/27/24 12:48:06.487
• [4.049 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:141
  STEP: Creating a kubernetes client @ 07/27/24 12:48:06.496
  Jul 27 12:48:06.496: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename secrets @ 07/27/24 12:48:06.496
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:48:06.508
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:48:06.511
  STEP: Creating projection with secret that has name secret-emptykey-test-d074fde7-3432-4063-bb26-4eb50d30788f @ 07/27/24 12:48:06.513
  Jul 27 12:48:06.514: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0727 12:48:06.517074      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "secrets-9473" for this suite. @ 07/27/24 12:48:06.519
• [0.030 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 07/27/24 12:48:06.527
  Jul 27 12:48:06.527: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename containers @ 07/27/24 12:48:06.527
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:48:06.54
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:48:06.542
  STEP: Creating a pod to test override arguments @ 07/27/24 12:48:06.545
  E0727 12:48:07.518019      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:48:08.518130      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:48:09.518238      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:48:10.518296      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/27/24 12:48:10.569
  Jul 27 12:48:10.573: INFO: Trying to get logs from node ip-172-31-18-96 pod client-containers-56ddb68c-224f-462b-acd9-87c99edbcc67 container agnhost-container: <nil>
  STEP: delete the pod @ 07/27/24 12:48:10.58
  Jul 27 12:48:10.595: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-5241" for this suite. @ 07/27/24 12:48:10.598
• [4.078 seconds]
------------------------------
SS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 07/27/24 12:48:10.605
  Jul 27 12:48:10.605: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename downward-api @ 07/27/24 12:48:10.606
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:48:10.62
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:48:10.623
  STEP: Creating the pod @ 07/27/24 12:48:10.625
  E0727 12:48:11.518467      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:48:12.518666      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:48:13.168: INFO: Successfully updated pod "labelsupdate4fb373a5-4d6d-4e53-a13f-50b784197e4a"
  E0727 12:48:13.518869      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:48:14.518960      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:48:15.519533      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:48:16.520011      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:48:17.195: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8333" for this suite. @ 07/27/24 12:48:17.199
• [6.602 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 07/27/24 12:48:17.207
  Jul 27 12:48:17.207: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename emptydir-wrapper @ 07/27/24 12:48:17.207
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:48:17.224
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:48:17.226
  E0727 12:48:17.520919      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:48:18.521080      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Cleaning up the secret @ 07/27/24 12:48:19.262
  STEP: Cleaning up the configmap @ 07/27/24 12:48:19.27
  STEP: Cleaning up the pod @ 07/27/24 12:48:19.275
  Jul 27 12:48:19.289: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-8247" for this suite. @ 07/27/24 12:48:19.293
• [2.093 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 07/27/24 12:48:19.3
  Jul 27 12:48:19.300: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename runtimeclass @ 07/27/24 12:48:19.3
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:48:19.313
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:48:19.317
  Jul 27 12:48:19.327: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8392" for this suite. @ 07/27/24 12:48:19.33
• [0.036 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 07/27/24 12:48:19.336
  Jul 27 12:48:19.336: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename field-validation @ 07/27/24 12:48:19.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:48:19.35
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:48:19.353
  STEP: apply creating a deployment @ 07/27/24 12:48:19.356
  Jul 27 12:48:19.368: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9462" for this suite. @ 07/27/24 12:48:19.372
• [0.043 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:109
  STEP: Creating a kubernetes client @ 07/27/24 12:48:19.379
  Jul 27 12:48:19.379: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename kubelet-test @ 07/27/24 12:48:19.38
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:48:19.393
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:48:19.396
  E0727 12:48:19.521616      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:48:20.521685      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:48:21.521780      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:48:22.522788      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:48:23.416: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-3751" for this suite. @ 07/27/24 12:48:23.42
• [4.048 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 07/27/24 12:48:23.427
  Jul 27 12:48:23.427: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/27/24 12:48:23.428
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:48:23.441
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:48:23.444
  Jul 27 12:48:23.446: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  E0727 12:48:23.523698      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:48:24.524556      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:48:25.525104      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:48:26.525962      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:48:27.526648      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:48:28.526807      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:48:29.527469      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:48:29.646: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-5181" for this suite. @ 07/27/24 12:48:29.65
• [6.231 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3338
  STEP: Creating a kubernetes client @ 07/27/24 12:48:29.661
  Jul 27 12:48:29.661: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename services @ 07/27/24 12:48:29.661
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:48:29.674
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:48:29.677
  STEP: creating a Service @ 07/27/24 12:48:29.682
  STEP: watching for the Service to be added @ 07/27/24 12:48:29.697
  Jul 27 12:48:29.700: INFO: Found Service test-service-klwbv in namespace services-6634 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 32327}]
  Jul 27 12:48:29.700: INFO: Service test-service-klwbv created
  STEP: Getting /status @ 07/27/24 12:48:29.701
  Jul 27 12:48:29.704: INFO: Service test-service-klwbv has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 07/27/24 12:48:29.704
  STEP: watching for the Service to be patched @ 07/27/24 12:48:29.71
  Jul 27 12:48:29.711: INFO: observed Service test-service-klwbv in namespace services-6634 with annotations: map[] & LoadBalancer: {[]}
  Jul 27 12:48:29.711: INFO: Found Service test-service-klwbv in namespace services-6634 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  <nil> []}]}
  Jul 27 12:48:29.711: INFO: Service test-service-klwbv has service status patched
  STEP: updating the ServiceStatus @ 07/27/24 12:48:29.711
  Jul 27 12:48:29.721: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 07/27/24 12:48:29.721
  Jul 27 12:48:29.722: INFO: Observed Service test-service-klwbv in namespace services-6634 with annotations: map[] & Conditions: {[]}
  Jul 27 12:48:29.722: INFO: Observed event: &Service{ObjectMeta:{test-service-klwbv  services-6634  437a0b85-db86-40e5-addf-ef2a691aeeb9 19204 0 2024-07-27 12:48:29 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2024-07-27 12:48:29 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:allocateLoadBalancerNodePorts":{},"f:externalTrafficPolicy":{},"f:internalTrafficPolicy":{},"f:loadBalancerClass":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2024-07-27 12:48:29 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:32327,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.152.183.45,Type:LoadBalancer,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:Cluster,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.152.183.45],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:*true,LoadBalancerClass:*example.com/internal-vip,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,IPMode:nil,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  Jul 27 12:48:29.722: INFO: Found Service test-service-klwbv in namespace services-6634 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Jul 27 12:48:29.722: INFO: Service test-service-klwbv has service status updated
  STEP: patching the service @ 07/27/24 12:48:29.722
  STEP: watching for the Service to be patched @ 07/27/24 12:48:29.732
  Jul 27 12:48:29.734: INFO: observed Service test-service-klwbv in namespace services-6634 with labels: map[test-service-static:true]
  Jul 27 12:48:29.734: INFO: observed Service test-service-klwbv in namespace services-6634 with labels: map[test-service-static:true]
  Jul 27 12:48:29.734: INFO: observed Service test-service-klwbv in namespace services-6634 with labels: map[test-service-static:true]
  Jul 27 12:48:29.734: INFO: Found Service test-service-klwbv in namespace services-6634 with labels: map[test-service:patched test-service-static:true]
  Jul 27 12:48:29.734: INFO: Service test-service-klwbv patched
  STEP: deleting the service @ 07/27/24 12:48:29.734
  STEP: watching for the Service to be deleted @ 07/27/24 12:48:29.752
  Jul 27 12:48:29.754: INFO: Observed event: ADDED
  Jul 27 12:48:29.754: INFO: Observed event: MODIFIED
  Jul 27 12:48:29.754: INFO: Observed event: MODIFIED
  Jul 27 12:48:29.754: INFO: Observed event: MODIFIED
  Jul 27 12:48:29.754: INFO: Found Service test-service-klwbv in namespace services-6634 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  Jul 27 12:48:29.754: INFO: Service test-service-klwbv deleted
  Jul 27 12:48:29.754: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6634" for this suite. @ 07/27/24 12:48:29.757
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 07/27/24 12:48:29.764
  Jul 27 12:48:29.764: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename pods @ 07/27/24 12:48:29.765
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:48:29.78
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:48:29.783
  STEP: creating the pod @ 07/27/24 12:48:29.787
  STEP: submitting the pod to kubernetes @ 07/27/24 12:48:29.787
  STEP: verifying QOS class is set on the pod @ 07/27/24 12:48:29.796
  Jul 27 12:48:29.803: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-801" for this suite. @ 07/27/24 12:48:29.807
• [0.048 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2236
  STEP: Creating a kubernetes client @ 07/27/24 12:48:29.814
  Jul 27 12:48:29.814: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename services @ 07/27/24 12:48:29.814
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:48:29.829
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:48:29.832
  STEP: creating service in namespace services-4847 @ 07/27/24 12:48:29.834
  STEP: creating service affinity-nodeport-transition in namespace services-4847 @ 07/27/24 12:48:29.834
  STEP: creating replication controller affinity-nodeport-transition in namespace services-4847 @ 07/27/24 12:48:29.848
  I0727 12:48:29.854724      20 runners.go:197] Created replication controller with name: affinity-nodeport-transition, namespace: services-4847, replica count: 3
  E0727 12:48:30.527626      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:48:31.527876      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:48:32.528920      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0727 12:48:32.905391      20 runners.go:197] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jul 27 12:48:32.918: INFO: Creating new exec pod
  E0727 12:48:33.529167      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:48:34.529242      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:48:35.529453      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:48:35.941: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=services-4847 exec execpod-affinityplmjm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  Jul 27 12:48:36.036: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  Jul 27 12:48:36.036: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul 27 12:48:36.036: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=services-4847 exec execpod-affinityplmjm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.213 80'
  Jul 27 12:48:36.136: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.213 80\nConnection to 10.152.183.213 80 port [tcp/http] succeeded!\n"
  Jul 27 12:48:36.136: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul 27 12:48:36.136: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=services-4847 exec execpod-affinityplmjm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.76.31 32277'
  Jul 27 12:48:36.233: INFO: stderr: "+ nc -v -t -w 2 172.31.76.31 32277\n+ echo hostName\nConnection to 172.31.76.31 32277 port [tcp/*] succeeded!\n"
  Jul 27 12:48:36.233: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul 27 12:48:36.233: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=services-4847 exec execpod-affinityplmjm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.18.96 32277'
  Jul 27 12:48:36.317: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.18.96 32277\nConnection to 172.31.18.96 32277 port [tcp/*] succeeded!\n"
  Jul 27 12:48:36.317: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul 27 12:48:36.328: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=services-4847 exec execpod-affinityplmjm -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.10.249:32277/ ; done'
  Jul 27 12:48:36.483: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.249:32277/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.249:32277/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.249:32277/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.249:32277/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.249:32277/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.249:32277/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.249:32277/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.249:32277/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.249:32277/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.249:32277/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.249:32277/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.249:32277/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.249:32277/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.249:32277/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.249:32277/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.249:32277/\n"
  Jul 27 12:48:36.483: INFO: stdout: "\naffinity-nodeport-transition-qlvqh\naffinity-nodeport-transition-4t79l\naffinity-nodeport-transition-khkzr\naffinity-nodeport-transition-khkzr\naffinity-nodeport-transition-4t79l\naffinity-nodeport-transition-4t79l\naffinity-nodeport-transition-4t79l\naffinity-nodeport-transition-khkzr\naffinity-nodeport-transition-4t79l\naffinity-nodeport-transition-4t79l\naffinity-nodeport-transition-khkzr\naffinity-nodeport-transition-khkzr\naffinity-nodeport-transition-4t79l\naffinity-nodeport-transition-qlvqh\naffinity-nodeport-transition-4t79l\naffinity-nodeport-transition-khkzr"
  Jul 27 12:48:36.483: INFO: Received response from host: affinity-nodeport-transition-qlvqh
  Jul 27 12:48:36.483: INFO: Received response from host: affinity-nodeport-transition-4t79l
  Jul 27 12:48:36.483: INFO: Received response from host: affinity-nodeport-transition-khkzr
  Jul 27 12:48:36.483: INFO: Received response from host: affinity-nodeport-transition-khkzr
  Jul 27 12:48:36.483: INFO: Received response from host: affinity-nodeport-transition-4t79l
  Jul 27 12:48:36.483: INFO: Received response from host: affinity-nodeport-transition-4t79l
  Jul 27 12:48:36.483: INFO: Received response from host: affinity-nodeport-transition-4t79l
  Jul 27 12:48:36.483: INFO: Received response from host: affinity-nodeport-transition-khkzr
  Jul 27 12:48:36.483: INFO: Received response from host: affinity-nodeport-transition-4t79l
  Jul 27 12:48:36.483: INFO: Received response from host: affinity-nodeport-transition-4t79l
  Jul 27 12:48:36.483: INFO: Received response from host: affinity-nodeport-transition-khkzr
  Jul 27 12:48:36.483: INFO: Received response from host: affinity-nodeport-transition-khkzr
  Jul 27 12:48:36.483: INFO: Received response from host: affinity-nodeport-transition-4t79l
  Jul 27 12:48:36.483: INFO: Received response from host: affinity-nodeport-transition-qlvqh
  Jul 27 12:48:36.483: INFO: Received response from host: affinity-nodeport-transition-4t79l
  Jul 27 12:48:36.483: INFO: Received response from host: affinity-nodeport-transition-khkzr
  Jul 27 12:48:36.493: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=services-4847 exec execpod-affinityplmjm -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.10.249:32277/ ; done'
  E0727 12:48:36.530383      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:48:36.647: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.249:32277/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.249:32277/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.249:32277/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.249:32277/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.249:32277/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.249:32277/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.249:32277/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.249:32277/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.249:32277/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.249:32277/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.249:32277/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.249:32277/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.249:32277/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.249:32277/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.249:32277/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.249:32277/\n"
  Jul 27 12:48:36.647: INFO: stdout: "\naffinity-nodeport-transition-khkzr\naffinity-nodeport-transition-khkzr\naffinity-nodeport-transition-khkzr\naffinity-nodeport-transition-khkzr\naffinity-nodeport-transition-khkzr\naffinity-nodeport-transition-khkzr\naffinity-nodeport-transition-khkzr\naffinity-nodeport-transition-khkzr\naffinity-nodeport-transition-khkzr\naffinity-nodeport-transition-khkzr\naffinity-nodeport-transition-khkzr\naffinity-nodeport-transition-khkzr\naffinity-nodeport-transition-khkzr\naffinity-nodeport-transition-khkzr\naffinity-nodeport-transition-khkzr\naffinity-nodeport-transition-khkzr"
  Jul 27 12:48:36.647: INFO: Received response from host: affinity-nodeport-transition-khkzr
  Jul 27 12:48:36.647: INFO: Received response from host: affinity-nodeport-transition-khkzr
  Jul 27 12:48:36.647: INFO: Received response from host: affinity-nodeport-transition-khkzr
  Jul 27 12:48:36.647: INFO: Received response from host: affinity-nodeport-transition-khkzr
  Jul 27 12:48:36.647: INFO: Received response from host: affinity-nodeport-transition-khkzr
  Jul 27 12:48:36.647: INFO: Received response from host: affinity-nodeport-transition-khkzr
  Jul 27 12:48:36.647: INFO: Received response from host: affinity-nodeport-transition-khkzr
  Jul 27 12:48:36.647: INFO: Received response from host: affinity-nodeport-transition-khkzr
  Jul 27 12:48:36.647: INFO: Received response from host: affinity-nodeport-transition-khkzr
  Jul 27 12:48:36.647: INFO: Received response from host: affinity-nodeport-transition-khkzr
  Jul 27 12:48:36.647: INFO: Received response from host: affinity-nodeport-transition-khkzr
  Jul 27 12:48:36.647: INFO: Received response from host: affinity-nodeport-transition-khkzr
  Jul 27 12:48:36.647: INFO: Received response from host: affinity-nodeport-transition-khkzr
  Jul 27 12:48:36.647: INFO: Received response from host: affinity-nodeport-transition-khkzr
  Jul 27 12:48:36.647: INFO: Received response from host: affinity-nodeport-transition-khkzr
  Jul 27 12:48:36.647: INFO: Received response from host: affinity-nodeport-transition-khkzr
  Jul 27 12:48:36.647: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-4847, will wait for the garbage collector to delete the pods @ 07/27/24 12:48:36.661
  Jul 27 12:48:36.724: INFO: Deleting ReplicationController affinity-nodeport-transition took: 8.117179ms
  Jul 27 12:48:36.825: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 101.333773ms
  E0727 12:48:37.531316      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:48:38.531885      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:48:39.532910      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:48:39.654: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4847" for this suite. @ 07/27/24 12:48:39.658
• [9.851 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 07/27/24 12:48:39.665
  Jul 27 12:48:39.665: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename secrets @ 07/27/24 12:48:39.666
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:48:39.68
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:48:39.682
  STEP: Creating secret with name secret-test-map-a0085070-6705-4f1b-9b1d-a5da00019f7e @ 07/27/24 12:48:39.685
  STEP: Creating a pod to test consume secrets @ 07/27/24 12:48:39.69
  E0727 12:48:40.533892      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:48:41.534213      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:48:42.535244      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:48:43.535478      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/27/24 12:48:43.713
  Jul 27 12:48:43.717: INFO: Trying to get logs from node ip-172-31-18-96 pod pod-secrets-9e5ca392-1d17-4ecd-90ff-ea74f1ecc796 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/27/24 12:48:43.724
  Jul 27 12:48:43.739: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2282" for this suite. @ 07/27/24 12:48:43.743
• [4.084 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 07/27/24 12:48:43.75
  Jul 27 12:48:43.750: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename configmap @ 07/27/24 12:48:43.751
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:48:43.763
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:48:43.768
  STEP: Creating configMap with name configmap-test-volume-c6762309-3db4-4643-9daa-70929288a9dd @ 07/27/24 12:48:43.77
  STEP: Creating a pod to test consume configMaps @ 07/27/24 12:48:43.777
  E0727 12:48:44.535605      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:48:45.535679      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/27/24 12:48:45.795
  Jul 27 12:48:45.797: INFO: Trying to get logs from node ip-172-31-18-96 pod pod-configmaps-5de12b4a-59d6-4cbe-8a5b-ade22af6719d container agnhost-container: <nil>
  STEP: delete the pod @ 07/27/24 12:48:45.804
  Jul 27 12:48:45.822: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7495" for this suite. @ 07/27/24 12:48:45.826
• [2.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 07/27/24 12:48:45.833
  Jul 27 12:48:45.833: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename lease-test @ 07/27/24 12:48:45.834
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:48:45.847
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:48:45.849
  Jul 27 12:48:45.909: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-7328" for this suite. @ 07/27/24 12:48:45.913
• [0.087 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:751
  STEP: Creating a kubernetes client @ 07/27/24 12:48:45.921
  Jul 27 12:48:45.921: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename statefulset @ 07/27/24 12:48:45.922
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:48:45.935
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:48:45.937
  STEP: Creating service test in namespace statefulset-7737 @ 07/27/24 12:48:45.939
  STEP: Creating stateful set ss in namespace statefulset-7737 @ 07/27/24 12:48:45.946
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-7737 @ 07/27/24 12:48:45.957
  Jul 27 12:48:45.964: INFO: Found 0 stateful pods, waiting for 1
  E0727 12:48:46.535840      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:48:47.535982      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:48:48.536120      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:48:49.536264      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:48:50.536592      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:48:51.537509      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:48:52.537638      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:48:53.537735      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:48:54.537814      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:48:55.538240      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:48:55.961: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 07/27/24 12:48:55.962
  Jul 27 12:48:55.966: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=statefulset-7737 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jul 27 12:48:56.062: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jul 27 12:48:56.062: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jul 27 12:48:56.062: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jul 27 12:48:56.066: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0727 12:48:56.538480      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:48:57.538614      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:48:58.538705      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:48:59.538808      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:49:00.538890      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:49:01.539040      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:49:02.539442      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:49:03.539562      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:49:04.539781      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:49:05.540195      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:49:06.068: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Jul 27 12:49:06.068: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Jul 27 12:49:06.086: INFO: POD   NODE             PHASE    GRACE  CONDITIONS
  Jul 27 12:49:06.086: INFO: ss-0  ip-172-31-18-96  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-07-27 12:48:46 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-07-27 12:48:45 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-07-27 12:48:56 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-07-27 12:48:56 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-07-27 12:48:45 +0000 UTC  }]
  Jul 27 12:49:06.086: INFO: 
  Jul 27 12:49:06.086: INFO: StatefulSet ss has not reached scale 3, at 1
  E0727 12:49:06.540812      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:49:07.090: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.996407043s
  E0727 12:49:07.541376      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:49:08.095: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.991877801s
  E0727 12:49:08.542230      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:49:09.100: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.986853457s
  E0727 12:49:09.542596      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:49:10.104: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.982525145s
  E0727 12:49:10.543334      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:49:11.109: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.977751061s
  E0727 12:49:11.544182      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:49:12.114: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.972989186s
  E0727 12:49:12.544294      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:49:13.119: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.967828676s
  E0727 12:49:13.545191      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:49:14.124: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.962887973s
  E0727 12:49:14.545922      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:49:15.129: INFO: Verifying statefulset ss doesn't scale past 3 for another 958.172406ms
  E0727 12:49:15.546735      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-7737 @ 07/27/24 12:49:16.13
  Jul 27 12:49:16.135: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=statefulset-7737 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jul 27 12:49:16.231: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jul 27 12:49:16.231: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jul 27 12:49:16.231: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jul 27 12:49:16.231: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=statefulset-7737 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jul 27 12:49:16.322: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Jul 27 12:49:16.322: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jul 27 12:49:16.322: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jul 27 12:49:16.322: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=statefulset-7737 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jul 27 12:49:16.411: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Jul 27 12:49:16.411: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jul 27 12:49:16.411: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jul 27 12:49:16.415: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Jul 27 12:49:16.415: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Jul 27 12:49:16.415: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 07/27/24 12:49:16.415
  Jul 27 12:49:16.418: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=statefulset-7737 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jul 27 12:49:16.503: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jul 27 12:49:16.503: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jul 27 12:49:16.503: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jul 27 12:49:16.503: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=statefulset-7737 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0727 12:49:16.547633      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:49:16.600: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jul 27 12:49:16.600: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jul 27 12:49:16.600: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jul 27 12:49:16.600: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=statefulset-7737 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jul 27 12:49:16.697: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jul 27 12:49:16.697: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jul 27 12:49:16.697: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jul 27 12:49:16.697: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Jul 27 12:49:16.702: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0727 12:49:17.548533      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:49:18.548644      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:49:19.548739      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:49:20.548821      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:49:21.548924      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:49:22.549910      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:49:23.550728      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:49:24.550846      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:49:25.551016      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:49:26.551123      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:49:26.707: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Jul 27 12:49:26.707: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Jul 27 12:49:26.707: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Jul 27 12:49:26.720: INFO: POD   NODE              PHASE    GRACE  CONDITIONS
  Jul 27 12:49:26.720: INFO: ss-0  ip-172-31-18-96   Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-07-27 12:48:46 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-07-27 12:48:45 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-07-27 12:49:17 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-07-27 12:49:17 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-07-27 12:48:45 +0000 UTC  }]
  Jul 27 12:49:26.720: INFO: ss-1  ip-172-31-76-31   Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-07-27 12:49:07 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-07-27 12:49:06 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-07-27 12:49:17 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-07-27 12:49:17 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-07-27 12:49:06 +0000 UTC  }]
  Jul 27 12:49:26.720: INFO: ss-2  ip-172-31-10-249  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-07-27 12:49:07 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-07-27 12:49:06 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-07-27 12:49:17 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-07-27 12:49:17 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-07-27 12:49:06 +0000 UTC  }]
  Jul 27 12:49:26.720: INFO: 
  Jul 27 12:49:26.720: INFO: StatefulSet ss has not reached scale 0, at 3
  E0727 12:49:27.551626      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:49:27.725: INFO: Verifying statefulset ss doesn't scale past 0 for another 8.995476443s
  E0727 12:49:28.551780      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:49:28.730: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.990333255s
  E0727 12:49:29.552363      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:49:29.735: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.985750972s
  E0727 12:49:30.552438      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:49:30.740: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.980736671s
  E0727 12:49:31.552601      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:49:31.745: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.975412758s
  E0727 12:49:32.553424      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:49:32.750: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.970679875s
  E0727 12:49:33.554162      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:49:33.755: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.965967988s
  E0727 12:49:34.554375      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:49:34.759: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.96090628s
  E0727 12:49:35.554801      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:49:35.764: INFO: Verifying statefulset ss doesn't scale past 0 for another 956.067588ms
  E0727 12:49:36.555704      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-7737 @ 07/27/24 12:49:36.765
  Jul 27 12:49:36.770: INFO: Scaling statefulset ss to 0
  Jul 27 12:49:36.777: INFO: Waiting for statefulset status.replicas updated to 0
  Jul 27 12:49:36.781: INFO: Deleting all statefulset in ns statefulset-7737
  Jul 27 12:49:36.784: INFO: Scaling statefulset ss to 0
  Jul 27 12:49:36.790: INFO: Waiting for statefulset status.replicas updated to 0
  Jul 27 12:49:36.794: INFO: Deleting statefulset ss
  Jul 27 12:49:36.807: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7737" for this suite. @ 07/27/24 12:49:36.81
• [50.896 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 07/27/24 12:49:36.817
  Jul 27 12:49:36.817: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename emptydir @ 07/27/24 12:49:36.818
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:49:36.833
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:49:36.836
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 07/27/24 12:49:36.838
  E0727 12:49:37.556334      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:49:38.556453      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/27/24 12:49:38.858
  Jul 27 12:49:38.862: INFO: Trying to get logs from node ip-172-31-18-96 pod pod-c7689523-69ea-4ec7-992c-6accfa212383 container test-container: <nil>
  STEP: delete the pod @ 07/27/24 12:49:38.869
  Jul 27 12:49:38.883: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7868" for this suite. @ 07/27/24 12:49:38.887
• [2.076 seconds]
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:349
  STEP: Creating a kubernetes client @ 07/27/24 12:49:38.894
  Jul 27 12:49:38.894: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename disruption @ 07/27/24 12:49:38.894
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:49:38.91
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:49:38.912
  STEP: Creating a pdb that targets all three pods in a test replica set @ 07/27/24 12:49:38.914
  STEP: Waiting for the pdb to be processed @ 07/27/24 12:49:38.918
  E0727 12:49:39.556775      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:49:40.557255      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: First trying to evict a pod which shouldn't be evictable @ 07/27/24 12:49:40.928
  STEP: Waiting for all pods to be running @ 07/27/24 12:49:40.928
  Jul 27 12:49:40.932: INFO: pods: 0 < 3
  E0727 12:49:41.557152      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:49:42.557677      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 07/27/24 12:49:42.94
  STEP: Updating the pdb to allow a pod to be evicted @ 07/27/24 12:49:42.96
  STEP: Waiting for the pdb to be processed @ 07/27/24 12:49:42.97
  E0727 12:49:43.557868      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:49:44.557964      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 07/27/24 12:49:44.974
  STEP: Waiting for all pods to be running @ 07/27/24 12:49:44.974
  STEP: Waiting for the pdb to observed all healthy pods @ 07/27/24 12:49:44.977
  STEP: Patching the pdb to disallow a pod to be evicted @ 07/27/24 12:49:45.005
  STEP: Waiting for the pdb to be processed @ 07/27/24 12:49:45.028
  E0727 12:49:45.558076      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:49:46.558227      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 07/27/24 12:49:47.033
  STEP: locating a running pod @ 07/27/24 12:49:47.037
  STEP: Deleting the pdb to allow a pod to be evicted @ 07/27/24 12:49:47.048
  STEP: Waiting for the pdb to be deleted @ 07/27/24 12:49:47.054
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 07/27/24 12:49:47.058
  STEP: Waiting for all pods to be running @ 07/27/24 12:49:47.058
  Jul 27 12:49:47.078: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-7781" for this suite. @ 07/27/24 12:49:47.083
• [8.202 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 07/27/24 12:49:47.096
  Jul 27 12:49:47.096: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename disruption @ 07/27/24 12:49:47.096
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:49:47.113
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:49:47.116
  STEP: creating the pdb @ 07/27/24 12:49:47.119
  STEP: Waiting for the pdb to be processed @ 07/27/24 12:49:47.123
  STEP: updating the pdb @ 07/27/24 12:49:47.13
  STEP: Waiting for the pdb to be processed @ 07/27/24 12:49:47.138
  E0727 12:49:47.558329      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:49:48.558544      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching the pdb @ 07/27/24 12:49:49.146
  STEP: Waiting for the pdb to be processed @ 07/27/24 12:49:49.162
  STEP: Waiting for the pdb to be deleted @ 07/27/24 12:49:49.183
  Jul 27 12:49:49.187: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2047" for this suite. @ 07/27/24 12:49:49.195
• [2.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 07/27/24 12:49:49.203
  Jul 27 12:49:49.203: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename prestop @ 07/27/24 12:49:49.204
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:49:49.217
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:49:49.22
  STEP: Creating server pod server in namespace prestop-5311 @ 07/27/24 12:49:49.222
  STEP: Waiting for pods to come up. @ 07/27/24 12:49:49.231
  E0727 12:49:49.559405      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:49:50.559687      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating tester pod tester in namespace prestop-5311 @ 07/27/24 12:49:51.244
  E0727 12:49:51.560603      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:49:52.560774      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting pre-stop pod @ 07/27/24 12:49:53.261
  E0727 12:49:53.561462      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:49:54.562204      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:49:55.562325      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:49:56.562418      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:49:57.562472      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:49:58.276: INFO: Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 07/27/24 12:49:58.277
  Jul 27 12:49:58.293: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-5311" for this suite. @ 07/27/24 12:49:58.297
• [9.100 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:47
  STEP: Creating a kubernetes client @ 07/27/24 12:49:58.303
  Jul 27 12:49:58.303: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename var-expansion @ 07/27/24 12:49:58.304
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:49:58.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:49:58.32
  STEP: Creating a pod to test env composition @ 07/27/24 12:49:58.322
  E0727 12:49:58.563279      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:49:59.563494      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:50:00.563597      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:50:01.564002      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/27/24 12:50:02.343
  Jul 27 12:50:02.346: INFO: Trying to get logs from node ip-172-31-18-96 pod var-expansion-fbf95f2f-5d88-4bad-973d-90468236da6d container dapi-container: <nil>
  STEP: delete the pod @ 07/27/24 12:50:02.354
  Jul 27 12:50:02.371: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-882" for this suite. @ 07/27/24 12:50:02.376
• [4.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 07/27/24 12:50:02.383
  Jul 27 12:50:02.383: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename field-validation @ 07/27/24 12:50:02.384
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:50:02.397
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:50:02.4
  STEP: apply creating a deployment @ 07/27/24 12:50:02.402
  Jul 27 12:50:02.415: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7477" for this suite. @ 07/27/24 12:50:02.419
• [0.042 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 07/27/24 12:50:02.426
  Jul 27 12:50:02.426: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename namespaces @ 07/27/24 12:50:02.426
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:50:02.438
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:50:02.44
  STEP: Read namespace status @ 07/27/24 12:50:02.442
  Jul 27 12:50:02.446: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 07/27/24 12:50:02.446
  Jul 27 12:50:02.451: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 07/27/24 12:50:02.451
  Jul 27 12:50:02.459: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  Jul 27 12:50:02.459: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-650" for this suite. @ 07/27/24 12:50:02.462
• [0.044 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 07/27/24 12:50:02.47
  Jul 27 12:50:02.470: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 07/27/24 12:50:02.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:50:02.484
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:50:02.486
  STEP: creating a target pod @ 07/27/24 12:50:02.491
  E0727 12:50:02.564466      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:50:03.564627      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 07/27/24 12:50:04.515
  E0727 12:50:04.565216      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:50:05.565279      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 07/27/24 12:50:06.533
  Jul 27 12:50:06.533: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-7684 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 27 12:50:06.533: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  Jul 27 12:50:06.533: INFO: ExecWithOptions: Clientset creation
  Jul 27 12:50:06.533: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-7684/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  E0727 12:50:06.566325      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:50:06.578: INFO: Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 07/27/24 12:50:06.586
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 07/27/24 12:50:06.59
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 07/27/24 12:50:06.601
  Jul 27 12:50:06.604: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-7684" for this suite. @ 07/27/24 12:50:06.608
• [4.145 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 07/27/24 12:50:06.616
  Jul 27 12:50:06.616: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename emptydir @ 07/27/24 12:50:06.616
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:50:06.629
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:50:06.631
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 07/27/24 12:50:06.633
  E0727 12:50:07.566456      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:50:08.566603      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:50:09.567365      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:50:10.567569      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/27/24 12:50:10.656
  Jul 27 12:50:10.660: INFO: Trying to get logs from node ip-172-31-18-96 pod pod-a2c77cc2-b89a-4a5f-99ec-b794f2ea8aad container test-container: <nil>
  STEP: delete the pod @ 07/27/24 12:50:10.667
  Jul 27 12:50:10.682: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8950" for this suite. @ 07/27/24 12:50:10.686
• [4.076 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:189
  STEP: Creating a kubernetes client @ 07/27/24 12:50:10.693
  Jul 27 12:50:10.693: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename var-expansion @ 07/27/24 12:50:10.693
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:50:10.707
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:50:10.71
  E0727 12:50:11.567656      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:50:12.567827      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:50:12.730: INFO: Deleting pod "var-expansion-2c346089-0a8b-4d7c-a90f-57b86b4cc483" in namespace "var-expansion-6084"
  Jul 27 12:50:12.738: INFO: Wait up to 5m0s for pod "var-expansion-2c346089-0a8b-4d7c-a90f-57b86b4cc483" to be fully deleted
  E0727 12:50:13.568285      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:50:14.568389      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:50:14.747: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6084" for this suite. @ 07/27/24 12:50:14.752
• [4.068 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 07/27/24 12:50:14.761
  Jul 27 12:50:14.761: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename field-validation @ 07/27/24 12:50:14.762
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:50:14.773
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:50:14.776
  Jul 27 12:50:14.778: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  E0727 12:50:15.568449      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:50:16.568537      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:50:17.568609      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:50:17.856: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9107" for this suite. @ 07/27/24 12:50:17.86
• [3.106 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 07/27/24 12:50:17.867
  Jul 27 12:50:17.867: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename webhook @ 07/27/24 12:50:17.868
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:50:17.883
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:50:17.885
  STEP: Setting up server cert @ 07/27/24 12:50:17.906
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/27/24 12:50:18.066
  STEP: Deploying the webhook pod @ 07/27/24 12:50:18.074
  STEP: Wait for the deployment to be ready @ 07/27/24 12:50:18.086
  Jul 27 12:50:18.097: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0727 12:50:18.569047      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:50:19.569159      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/27/24 12:50:20.109
  STEP: Verifying the service has paired with the endpoint @ 07/27/24 12:50:20.121
  E0727 12:50:20.569711      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:50:21.121: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 07/27/24 12:50:21.128
  STEP: create a pod that should be updated by the webhook @ 07/27/24 12:50:21.14
  Jul 27 12:50:21.205: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4966" for this suite. @ 07/27/24 12:50:21.209
  STEP: Destroying namespace "webhook-markers-8109" for this suite. @ 07/27/24 12:50:21.215
• [3.355 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1731
  STEP: Creating a kubernetes client @ 07/27/24 12:50:21.223
  Jul 27 12:50:21.223: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename kubectl @ 07/27/24 12:50:21.223
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:50:21.236
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:50:21.239
  Jul 27 12:50:21.241: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-3373 version'
  Jul 27 12:50:21.278: INFO: stderr: ""
  Jul 27 12:50:21.278: INFO: stdout: "Client Version: v1.29.7\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.29.7\n"
  Jul 27 12:50:21.278: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3373" for this suite. @ 07/27/24 12:50:21.282
• [0.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1538
  STEP: Creating a kubernetes client @ 07/27/24 12:50:21.289
  Jul 27 12:50:21.289: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename kubectl @ 07/27/24 12:50:21.289
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:50:21.302
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:50:21.305
  STEP: creating Agnhost RC @ 07/27/24 12:50:21.307
  Jul 27 12:50:21.307: INFO: namespace kubectl-9933
  Jul 27 12:50:21.307: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-9933 create -f -'
  Jul 27 12:50:21.391: INFO: stderr: ""
  Jul 27 12:50:21.391: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 07/27/24 12:50:21.391
  E0727 12:50:21.570326      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:50:22.396: INFO: Selector matched 1 pods for map[app:agnhost]
  Jul 27 12:50:22.396: INFO: Found 0 / 1
  E0727 12:50:22.570758      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:50:23.396: INFO: Selector matched 1 pods for map[app:agnhost]
  Jul 27 12:50:23.396: INFO: Found 1 / 1
  Jul 27 12:50:23.396: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Jul 27 12:50:23.400: INFO: Selector matched 1 pods for map[app:agnhost]
  Jul 27 12:50:23.400: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Jul 27 12:50:23.400: INFO: wait on agnhost-primary startup in kubectl-9933 
  Jul 27 12:50:23.400: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-9933 logs agnhost-primary-sqhfd agnhost-primary'
  Jul 27 12:50:23.450: INFO: stderr: ""
  Jul 27 12:50:23.450: INFO: stdout: "Paused\n"
  STEP: exposing RC @ 07/27/24 12:50:23.45
  Jul 27 12:50:23.450: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-9933 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  Jul 27 12:50:23.510: INFO: stderr: ""
  Jul 27 12:50:23.510: INFO: stdout: "service/rm2 exposed\n"
  Jul 27 12:50:23.515: INFO: Service rm2 in namespace kubectl-9933 found.
  E0727 12:50:23.571710      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:50:24.571836      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: exposing service @ 07/27/24 12:50:25.522
  Jul 27 12:50:25.522: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-9933 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  E0727 12:50:25.572172      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:50:25.577: INFO: stderr: ""
  Jul 27 12:50:25.577: INFO: stdout: "service/rm3 exposed\n"
  Jul 27 12:50:25.582: INFO: Service rm3 in namespace kubectl-9933 found.
  E0727 12:50:26.572279      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:50:27.572365      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:50:27.590: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9933" for this suite. @ 07/27/24 12:50:27.594
• [6.311 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:627
  STEP: Creating a kubernetes client @ 07/27/24 12:50:27.6
  Jul 27 12:50:27.600: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename job @ 07/27/24 12:50:27.6
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:50:27.614
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:50:27.617
  STEP: Creating a job @ 07/27/24 12:50:27.619
  STEP: Ensuring active pods == parallelism @ 07/27/24 12:50:27.626
  E0727 12:50:28.573090      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:50:29.573164      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete a job @ 07/27/24 12:50:29.63
  STEP: deleting Job.batch foo in namespace job-2605, will wait for the garbage collector to delete the pods @ 07/27/24 12:50:29.63
  Jul 27 12:50:29.694: INFO: Deleting Job.batch foo took: 7.608512ms
  Jul 27 12:50:29.794: INFO: Terminating Job.batch foo pods took: 100.354128ms
  E0727 12:50:30.573230      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring job was deleted @ 07/27/24 12:50:30.795
  Jul 27 12:50:30.798: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2605" for this suite. @ 07/27/24 12:50:30.802
• [3.211 seconds]
------------------------------
SS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 07/27/24 12:50:30.811
  Jul 27 12:50:30.811: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename downward-api @ 07/27/24 12:50:30.812
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:50:30.828
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:50:30.832
  STEP: Creating a pod to test downward API volume plugin @ 07/27/24 12:50:30.834
  E0727 12:50:31.573337      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:50:32.573428      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/27/24 12:50:32.851
  Jul 27 12:50:32.855: INFO: Trying to get logs from node ip-172-31-10-249 pod downwardapi-volume-0d9f9997-a2db-4938-a00d-3c78e7a32e2b container client-container: <nil>
  STEP: delete the pod @ 07/27/24 12:50:32.866
  Jul 27 12:50:32.885: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2195" for this suite. @ 07/27/24 12:50:32.889
• [2.085 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 07/27/24 12:50:32.897
  Jul 27 12:50:32.897: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename aggregator @ 07/27/24 12:50:32.897
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:50:32.912
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:50:32.915
  Jul 27 12:50:32.928: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Registering the sample API server. @ 07/27/24 12:50:32.929
  Jul 27 12:50:33.192: INFO: Found ClusterRoles; assuming RBAC is enabled.
  Jul 27 12:50:33.222: INFO: deployment "sample-apiserver-deployment" doesn't have the required revision set
  E0727 12:50:33.574287      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:50:34.574329      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:50:35.268: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 27, 12, 50, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 27, 12, 50, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 27, 12, 50, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 27, 12, 50, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0727 12:50:35.574416      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:50:36.574900      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:50:37.272: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 27, 12, 50, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 27, 12, 50, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 27, 12, 50, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 27, 12, 50, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0727 12:50:37.575003      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:50:38.575090      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:50:39.272: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 27, 12, 50, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 27, 12, 50, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 27, 12, 50, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 27, 12, 50, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0727 12:50:39.575144      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:50:40.575348      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:50:41.273: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 27, 12, 50, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 27, 12, 50, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 27, 12, 50, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 27, 12, 50, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0727 12:50:41.576113      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:50:42.576567      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:50:43.274: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 27, 12, 50, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 27, 12, 50, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 27, 12, 50, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 27, 12, 50, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0727 12:50:43.577413      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:50:44.577493      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:50:45.273: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 27, 12, 50, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 27, 12, 50, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 27, 12, 50, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 27, 12, 50, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0727 12:50:45.578104      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:50:46.578217      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:50:47.272: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 27, 12, 50, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 27, 12, 50, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 27, 12, 50, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 27, 12, 50, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0727 12:50:47.578678      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:50:48.579000      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:50:49.272: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 27, 12, 50, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 27, 12, 50, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 27, 12, 50, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 27, 12, 50, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0727 12:50:49.579736      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:50:50.579840      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:50:51.272: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 27, 12, 50, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 27, 12, 50, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 27, 12, 50, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 27, 12, 50, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0727 12:50:51.580084      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:50:52.580490      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:50:53.272: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 27, 12, 50, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 27, 12, 50, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 27, 12, 50, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 27, 12, 50, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0727 12:50:53.581397      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:50:54.581489      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:50:55.273: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 27, 12, 50, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 27, 12, 50, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 27, 12, 50, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 27, 12, 50, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0727 12:50:55.581582      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:50:56.581717      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:50:57.273: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 27, 12, 50, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 27, 12, 50, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 27, 12, 50, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 27, 12, 50, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0727 12:50:57.582619      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:50:58.582815      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:50:59.391: INFO: Waited 112.513388ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 07/27/24 12:50:59.418
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 07/27/24 12:50:59.422
  STEP: List APIServices @ 07/27/24 12:50:59.429
  Jul 27 12:50:59.434: INFO: Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 07/27/24 12:50:59.434
  Jul 27 12:50:59.445: INFO: APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 07/27/24 12:50:59.445
  Jul 27 12:50:59.457: INFO: updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2024, time.July, 27, 12, 50, 59, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 07/27/24 12:50:59.457
  Jul 27 12:50:59.461: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2024-07-27 12:50:59 +0000 UTC Passed all checks passed}
  Jul 27 12:50:59.461: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jul 27 12:50:59.461: INFO: Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 07/27/24 12:50:59.461
  Jul 27 12:50:59.474: INFO: Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-355669476" @ 07/27/24 12:50:59.474
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 07/27/24 12:50:59.481
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 07/27/24 12:50:59.487
  STEP: Patch APIService Status @ 07/27/24 12:50:59.491
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 07/27/24 12:50:59.499
  Jul 27 12:50:59.503: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2024-07-27 12:50:59 +0000 UTC Passed all checks passed}
  Jul 27 12:50:59.503: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jul 27 12:50:59.503: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  Jul 27 12:50:59.503: INFO: Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 07/27/24 12:50:59.503
  STEP: Confirm that the generated APIService has been deleted @ 07/27/24 12:50:59.512
  Jul 27 12:50:59.512: INFO: Requesting list of APIServices to confirm quantity
  Jul 27 12:50:59.516: INFO: Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  Jul 27 12:50:59.516: INFO: APIService v1alpha1.wardle.example.com has been deleted.
  E0727 12:50:59.582846      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:50:59.631: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-4974" for this suite. @ 07/27/24 12:50:59.634
• [26.744 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 07/27/24 12:50:59.641
  Jul 27 12:50:59.641: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename subpath @ 07/27/24 12:50:59.642
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:50:59.655
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:50:59.658
  STEP: Setting up data @ 07/27/24 12:50:59.66
  STEP: Creating pod pod-subpath-test-configmap-6mrh @ 07/27/24 12:50:59.669
  STEP: Creating a pod to test atomic-volume-subpath @ 07/27/24 12:50:59.669
  E0727 12:51:00.582997      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:51:01.583100      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:51:02.583877      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:51:03.583994      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:51:04.584331      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:51:05.584426      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:51:06.584535      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:51:07.584629      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:51:08.585163      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:51:09.585263      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:51:10.585363      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:51:11.586307      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:51:12.586419      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:51:13.586816      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:51:14.586912      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:51:15.587027      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:51:16.587135      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:51:17.587230      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:51:18.587339      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:51:19.587431      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:51:20.587536      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:51:21.587639      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:51:22.587730      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:51:23.587855      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/27/24 12:51:23.747
  Jul 27 12:51:23.751: INFO: Trying to get logs from node ip-172-31-18-96 pod pod-subpath-test-configmap-6mrh container test-container-subpath-configmap-6mrh: <nil>
  STEP: delete the pod @ 07/27/24 12:51:23.758
  STEP: Deleting pod pod-subpath-test-configmap-6mrh @ 07/27/24 12:51:23.777
  Jul 27 12:51:23.777: INFO: Deleting pod "pod-subpath-test-configmap-6mrh" in namespace "subpath-1616"
  Jul 27 12:51:23.781: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-1616" for this suite. @ 07/27/24 12:51:23.784
• [24.150 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 07/27/24 12:51:23.792
  Jul 27 12:51:23.792: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename namespaces @ 07/27/24 12:51:23.792
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:51:23.813
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:51:23.817
  STEP: creating a Namespace @ 07/27/24 12:51:23.82
  STEP: patching the Namespace @ 07/27/24 12:51:23.837
  STEP: get the Namespace and ensuring it has the label @ 07/27/24 12:51:23.844
  Jul 27 12:51:23.847: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8911" for this suite. @ 07/27/24 12:51:23.85
  STEP: Destroying namespace "nspatchtest-57d3fc9e-729e-41ef-bfbb-029942de0976-2996" for this suite. @ 07/27/24 12:51:23.857
• [0.073 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:161
  STEP: Creating a kubernetes client @ 07/27/24 12:51:23.865
  Jul 27 12:51:23.865: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename cronjob @ 07/27/24 12:51:23.865
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:51:23.88
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:51:23.886
  STEP: Creating a ReplaceConcurrent cronjob @ 07/27/24 12:51:23.888
  STEP: Ensuring a job is scheduled @ 07/27/24 12:51:23.893
  E0727 12:51:24.588745      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:51:25.588956      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:51:26.589930      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:51:27.590842      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:51:28.590938      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:51:29.591940      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:51:30.592089      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:51:31.592190      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:51:32.592569      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:51:33.592848      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:51:34.592949      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:51:35.593780      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:51:36.594220      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:51:37.595270      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:51:38.596052      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:51:39.596088      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:51:40.596492      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:51:41.596419      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:51:42.596590      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:51:43.596673      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:51:44.597731      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:51:45.598208      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:51:46.598923      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:51:47.599019      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:51:48.599679      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:51:49.600489      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:51:50.600839      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:51:51.601882      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:51:52.602272      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:51:53.602861      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:51:54.603933      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:51:55.604099      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:51:56.604844      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:51:57.605911      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:51:58.606025      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:51:59.606118      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:52:00.607112      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:52:01.607886      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 07/27/24 12:52:01.898
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 07/27/24 12:52:01.901
  STEP: Ensuring the job is replaced with a new one @ 07/27/24 12:52:01.904
  E0727 12:52:02.608873      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:52:03.609176      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:52:04.609279      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:52:05.609361      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:52:06.609463      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:52:07.609537      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:52:08.609638      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:52:09.609734      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:52:10.609845      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:52:11.610008      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:52:12.610855      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:52:13.611066      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:52:14.611452      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:52:15.611545      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:52:16.611906      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:52:17.612856      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:52:18.613159      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:52:19.613268      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:52:20.613650      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:52:21.614215      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:52:22.614305      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:52:23.614393      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:52:24.614499      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:52:25.614559      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:52:26.614685      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:52:27.614831      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:52:28.614930      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:52:29.615147      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:52:30.616222      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:52:31.616443      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:52:32.617321      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:52:33.617409      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:52:34.617492      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:52:35.618289      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:52:36.619193      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:52:37.620118      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:52:38.621068      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:52:39.621177      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:52:40.621534      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:52:41.621613      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:52:42.622590      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:52:43.622682      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:52:44.622822      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:52:45.622956      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:52:46.622994      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:52:47.623825      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:52:48.623963      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:52:49.624175      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:52:50.624211      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:52:51.624547      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:52:52.624640      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:52:53.624766      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:52:54.625679      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:52:55.625758      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:52:56.626472      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:52:57.626587      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:52:58.626666      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:52:59.626842      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:53:00.626938      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:53:01.627110      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 07/27/24 12:53:01.908
  Jul 27 12:53:01.916: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4637" for this suite. @ 07/27/24 12:53:01.92
• [98.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:447
  STEP: Creating a kubernetes client @ 07/27/24 12:53:01.928
  Jul 27 12:53:01.928: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename sched-pred @ 07/27/24 12:53:01.929
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:53:01.949
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:53:01.952
  Jul 27 12:53:01.954: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Jul 27 12:53:01.961: INFO: Waiting for terminating namespaces to be deleted...
  Jul 27 12:53:01.964: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-10-249 before test
  Jul 27 12:53:01.969: INFO: replace-28701413-rrq6f from cronjob-4637 started at 2024-07-27 12:53:00 +0000 UTC (1 container statuses recorded)
  Jul 27 12:53:01.969: INFO: 	Container c ready: true, restart count 0
  Jul 27 12:53:01.969: INFO: nginx-ingress-controller-kubernetes-worker-p6cd4 from ingress-nginx-kubernetes-worker started at 2024-07-27 11:55:45 +0000 UTC (1 container statuses recorded)
  Jul 27 12:53:01.969: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jul 27 12:53:01.969: INFO: calico-node-6pr7z from kube-system started at 2024-07-27 12:04:22 +0000 UTC (1 container statuses recorded)
  Jul 27 12:53:01.969: INFO: 	Container calico-node ready: true, restart count 0
  Jul 27 12:53:01.969: INFO: sonobuoy-e2e-job-984de38699c54bba from sonobuoy started at 2024-07-27 12:07:10 +0000 UTC (2 container statuses recorded)
  Jul 27 12:53:01.969: INFO: 	Container e2e ready: true, restart count 0
  Jul 27 12:53:01.969: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jul 27 12:53:01.969: INFO: sonobuoy-systemd-logs-daemon-set-871057d561a1403a-tr4gf from sonobuoy started at 2024-07-27 12:07:10 +0000 UTC (2 container statuses recorded)
  Jul 27 12:53:01.969: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jul 27 12:53:01.969: INFO: 	Container systemd-logs ready: true, restart count 0
  Jul 27 12:53:01.969: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-18-96 before test
  Jul 27 12:53:01.974: INFO: replace-28701412-69rl5 from cronjob-4637 started at 2024-07-27 12:52:00 +0000 UTC (1 container statuses recorded)
  Jul 27 12:53:01.974: INFO: 	Container c ready: true, restart count 0
  Jul 27 12:53:01.974: INFO: nginx-ingress-controller-kubernetes-worker-86xft from ingress-nginx-kubernetes-worker started at 2024-07-27 11:55:45 +0000 UTC (1 container statuses recorded)
  Jul 27 12:53:01.974: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jul 27 12:53:01.974: INFO: calico-node-92bdd from kube-system started at 2024-07-27 12:04:12 +0000 UTC (1 container statuses recorded)
  Jul 27 12:53:01.974: INFO: 	Container calico-node ready: true, restart count 0
  Jul 27 12:53:01.974: INFO: sonobuoy from sonobuoy started at 2024-07-27 12:07:08 +0000 UTC (1 container statuses recorded)
  Jul 27 12:53:01.974: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Jul 27 12:53:01.974: INFO: sonobuoy-systemd-logs-daemon-set-871057d561a1403a-jpdks from sonobuoy started at 2024-07-27 12:07:10 +0000 UTC (2 container statuses recorded)
  Jul 27 12:53:01.974: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jul 27 12:53:01.974: INFO: 	Container systemd-logs ready: true, restart count 0
  Jul 27 12:53:01.974: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-76-31 before test
  Jul 27 12:53:01.979: INFO: nginx-ingress-controller-kubernetes-worker-c4vwn from ingress-nginx-kubernetes-worker started at 2024-07-27 11:55:45 +0000 UTC (1 container statuses recorded)
  Jul 27 12:53:01.979: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jul 27 12:53:01.979: INFO: calico-node-qqqwn from kube-system started at 2024-07-27 12:03:51 +0000 UTC (1 container statuses recorded)
  Jul 27 12:53:01.979: INFO: 	Container calico-node ready: true, restart count 0
  Jul 27 12:53:01.979: INFO: coredns-bddfd76d7-6sbmv from kube-system started at 2024-07-27 11:55:45 +0000 UTC (1 container statuses recorded)
  Jul 27 12:53:01.979: INFO: 	Container coredns ready: true, restart count 0
  Jul 27 12:53:01.979: INFO: kube-state-metrics-6f48cdd76-wpnxn from kube-system started at 2024-07-27 11:55:45 +0000 UTC (1 container statuses recorded)
  Jul 27 12:53:01.979: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Jul 27 12:53:01.979: INFO: metrics-server-v0.6.3-69d7fbfdf8-wxphj from kube-system started at 2024-07-27 11:55:45 +0000 UTC (2 container statuses recorded)
  Jul 27 12:53:01.979: INFO: 	Container metrics-server ready: true, restart count 0
  Jul 27 12:53:01.979: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Jul 27 12:53:01.979: INFO: dashboard-metrics-scraper-5dd7cb5fc-89q9b from kubernetes-dashboard started at 2024-07-27 11:55:45 +0000 UTC (1 container statuses recorded)
  Jul 27 12:53:01.979: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Jul 27 12:53:01.979: INFO: kubernetes-dashboard-7b899cb9d9-crg8f from kubernetes-dashboard started at 2024-07-27 11:55:45 +0000 UTC (1 container statuses recorded)
  Jul 27 12:53:01.979: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Jul 27 12:53:01.979: INFO: sonobuoy-systemd-logs-daemon-set-871057d561a1403a-2666c from sonobuoy started at 2024-07-27 12:07:10 +0000 UTC (2 container statuses recorded)
  Jul 27 12:53:01.979: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jul 27 12:53:01.979: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 07/27/24 12:53:01.979
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.17e612fc38243100], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/5 nodes are available: 5 Preemption is not helpful for scheduling.] @ 07/27/24 12:53:02.005
  E0727 12:53:02.627702      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:53:03.003: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-1517" for this suite. @ 07/27/24 12:53:03.008
• [1.086 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 07/27/24 12:53:03.015
  Jul 27 12:53:03.015: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename field-validation @ 07/27/24 12:53:03.016
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:53:03.03
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:53:03.034
  Jul 27 12:53:03.036: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  E0727 12:53:03.628397      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:53:04.628679      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0727 12:53:05.578768      20 warnings.go:70] unknown field "alpha"
  W0727 12:53:05.578787      20 warnings.go:70] unknown field "beta"
  W0727 12:53:05.578795      20 warnings.go:70] unknown field "delta"
  W0727 12:53:05.578798      20 warnings.go:70] unknown field "epsilon"
  W0727 12:53:05.578801      20 warnings.go:70] unknown field "gamma"
  E0727 12:53:05.629454      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:53:06.122: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1864" for this suite. @ 07/27/24 12:53:06.126
• [3.119 seconds]
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 07/27/24 12:53:06.135
  Jul 27 12:53:06.135: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename secrets @ 07/27/24 12:53:06.135
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:53:06.147
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:53:06.149
  STEP: Creating secret with name secret-test-map-ff4c514f-fc05-4e48-87a2-243669b9d8fa @ 07/27/24 12:53:06.152
  STEP: Creating a pod to test consume secrets @ 07/27/24 12:53:06.159
  E0727 12:53:06.629689      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:53:07.629744      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/27/24 12:53:08.175
  Jul 27 12:53:08.178: INFO: Trying to get logs from node ip-172-31-18-96 pod pod-secrets-1559243c-0609-4ff1-81bf-164b243c6967 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/27/24 12:53:08.194
  Jul 27 12:53:08.213: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9680" for this suite. @ 07/27/24 12:53:08.217
• [2.091 seconds]
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 07/27/24 12:53:08.226
  Jul 27 12:53:08.226: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 07/27/24 12:53:08.226
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:53:08.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:53:08.243
  STEP: creating a target pod @ 07/27/24 12:53:08.245
  E0727 12:53:08.630747      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:53:09.630882      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 07/27/24 12:53:10.27
  E0727 12:53:10.630868      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:53:11.631401      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 07/27/24 12:53:12.287
  Jul 27 12:53:12.287: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-901 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 27 12:53:12.287: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  Jul 27 12:53:12.287: INFO: ExecWithOptions: Clientset creation
  Jul 27 12:53:12.287: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-901/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Jul 27 12:53:12.342: INFO: Exec stderr: ""
  Jul 27 12:53:12.348: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-901" for this suite. @ 07/27/24 12:53:12.352
• [4.133 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:330
  STEP: Creating a kubernetes client @ 07/27/24 12:53:12.359
  Jul 27 12:53:12.359: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename resourcequota @ 07/27/24 12:53:12.359
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:53:12.374
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:53:12.376
  E0727 12:53:12.632130      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:53:13.632251      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:53:14.633084      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:53:15.633972      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:53:16.634595      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:53:17.635054      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:53:18.636004      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:53:19.636917      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:53:20.637295      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:53:21.637845      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:53:22.638466      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:53:23.639229      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:53:24.640231      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:53:25.640559      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:53:26.640625      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:53:27.641652      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:53:28.642173      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 07/27/24 12:53:29.385
  E0727 12:53:29.642256      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:53:30.642339      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:53:31.642704      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:53:32.643407      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:53:33.644197      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 07/27/24 12:53:34.39
  STEP: Ensuring resource quota status is calculated @ 07/27/24 12:53:34.395
  E0727 12:53:34.644251      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:53:35.644382      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 07/27/24 12:53:36.4
  STEP: Ensuring resource quota status captures configMap creation @ 07/27/24 12:53:36.413
  E0727 12:53:36.644796      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:53:37.645786      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 07/27/24 12:53:38.418
  STEP: Ensuring resource quota status released usage @ 07/27/24 12:53:38.425
  E0727 12:53:38.645851      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:53:39.645971      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:53:40.430: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8601" for this suite. @ 07/27/24 12:53:40.434
• [28.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 07/27/24 12:53:40.441
  Jul 27 12:53:40.441: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename deployment @ 07/27/24 12:53:40.441
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:53:40.456
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:53:40.458
  Jul 27 12:53:40.470: INFO: Pod name cleanup-pod: Found 0 pods out of 1
  E0727 12:53:40.646338      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:53:41.646761      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:53:42.646849      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:53:43.646978      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:53:44.647252      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:53:45.474: INFO: Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/27/24 12:53:45.474
  Jul 27 12:53:45.474: INFO: Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 07/27/24 12:53:45.484
  E0727 12:53:45.647655      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:53:46.647767      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:53:47.505: INFO: Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4469",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cdcc2674-c2e6-4f7c-a676-538150721541",
      ResourceVersion: (string) (len=5) "21499",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857681625,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857681625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857681627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857681625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857681625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857681627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857681625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=76) "ReplicaSet \"test-cleanup-deployment-7bc75bbdf6\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jul 27 12:53:47.510: INFO: New ReplicaSet "test-cleanup-deployment-7bc75bbdf6" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-7bc75bbdf6",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4469",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1dcda06a-4d5e-4353-ae5f-2b7094d9cb01",
      ResourceVersion: (string) (len=5) "21489",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857681625,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "cdcc2674-c2e6-4f7c-a676-538150721541",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857681625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 63 64 63 63 32 36  37 34 2d 63 32 65 36 2d  |\"cdcc2674-c2e6-|
              00000120  34 66 37 63 2d 61 36 37  36 2d 35 33 38 31 35 30  |4f7c-a676-538150|
              00000130  37 32 31 35 34 31 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |721541\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857681627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6",
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jul 27 12:53:47.516: INFO: Pod "test-cleanup-deployment-7bc75bbdf6-sz6vk" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-cleanup-deployment-7bc75bbdf6-sz6vk",
      GenerateName: (string) (len=35) "test-cleanup-deployment-7bc75bbdf6-",
      Namespace: (string) (len=15) "deployment-4469",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "70ec30ef-c4a8-4ecf-9c60-422ce899521a",
      ResourceVersion: (string) (len=5) "21488",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857681625,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-cleanup-deployment-7bc75bbdf6",
          UID: (types.UID) (len=36) "1dcda06a-4d5e-4353-ae5f-2b7094d9cb01",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857681625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 64  63 64 61 30 36 61 2d 34  |d\":\"1dcda06a-4|
              00000090  64 35 65 2d 34 33 35 33  2d 61 65 35 66 2d 32 62  |d5e-4353-ae5f-2b|
              000000a0  37 30 39 34 64 39 63 62  30 31 5c 22 7d 22 3a 7b  |7094d9cb01\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857681627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  32 2e 31 33 32 5c 22 7d  |2.168.122.132\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8l85c",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8l85c",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-18-96",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857681627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857681625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857681627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857681627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857681625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.18.96",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.18.96"
        }
      },
      PodIP: (string) (len=15) "192.168.122.132",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.122.132"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857681625,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63857681626,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253",
          ContainerID: (string) (len=77) "containerd://c459b6bc49b8b03f9e5916739964f97029d3f3c853dec5a2d041871633a4d07a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 27 12:53:47.518: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4469" for this suite. @ 07/27/24 12:53:47.522
• [7.088 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 07/27/24 12:53:47.529
  Jul 27 12:53:47.529: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename pods @ 07/27/24 12:53:47.529
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:53:47.543
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:53:47.545
  STEP: creating the pod @ 07/27/24 12:53:47.548
  STEP: setting up watch @ 07/27/24 12:53:47.548
  E0727 12:53:47.648513      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: submitting the pod to kubernetes @ 07/27/24 12:53:47.651
  STEP: verifying the pod is in kubernetes @ 07/27/24 12:53:47.661
  STEP: verifying pod creation was observed @ 07/27/24 12:53:47.667
  E0727 12:53:48.649175      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:53:49.650248      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 07/27/24 12:53:49.681
  STEP: verifying pod deletion was observed @ 07/27/24 12:53:49.688
  E0727 12:53:50.651187      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:53:50.931: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4145" for this suite. @ 07/27/24 12:53:50.935
• [3.415 seconds]
------------------------------
SS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:95
  STEP: Creating a kubernetes client @ 07/27/24 12:53:50.944
  Jul 27 12:53:50.944: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename var-expansion @ 07/27/24 12:53:50.944
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:53:50.956
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:53:50.958
  STEP: Creating a pod to test substitution in container's args @ 07/27/24 12:53:50.961
  E0727 12:53:51.651526      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:53:52.652459      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:53:53.653339      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:53:54.653441      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/27/24 12:53:54.992
  Jul 27 12:53:54.996: INFO: Trying to get logs from node ip-172-31-10-249 pod var-expansion-5e228231-1e24-45cf-8622-420c37c1af58 container dapi-container: <nil>
  STEP: delete the pod @ 07/27/24 12:53:55.012
  Jul 27 12:53:55.027: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6889" for this suite. @ 07/27/24 12:53:55.03
• [4.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:153
  STEP: Creating a kubernetes client @ 07/27/24 12:53:55.037
  Jul 27 12:53:55.037: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 07/27/24 12:53:55.038
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:53:55.052
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:53:55.054
  STEP: create the container to handle the HTTPGet hook request. @ 07/27/24 12:53:55.06
  E0727 12:53:55.653507      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:53:56.654458      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 07/27/24 12:53:57.088
  E0727 12:53:57.654504      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:53:58.654783      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 07/27/24 12:53:59.107
  E0727 12:53:59.654896      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:54:00.655022      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 07/27/24 12:54:01.123
  Jul 27 12:54:01.131: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-436" for this suite. @ 07/27/24 12:54:01.134
• [6.103 seconds]
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:775
  STEP: Creating a kubernetes client @ 07/27/24 12:54:01.141
  Jul 27 12:54:01.141: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename services @ 07/27/24 12:54:01.141
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:54:01.155
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:54:01.16
  Jul 27 12:54:01.165: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-989" for this suite. @ 07/27/24 12:54:01.169
• [0.034 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 07/27/24 12:54:01.175
  Jul 27 12:54:01.175: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename projected @ 07/27/24 12:54:01.176
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:54:01.189
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:54:01.191
  STEP: Creating a pod to test downward API volume plugin @ 07/27/24 12:54:01.193
  E0727 12:54:01.657325      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:54:02.657963      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/27/24 12:54:03.212
  Jul 27 12:54:03.217: INFO: Trying to get logs from node ip-172-31-10-249 pod downwardapi-volume-26f389c8-35f3-41cb-8d27-d2825e5cc5ec container client-container: <nil>
  STEP: delete the pod @ 07/27/24 12:54:03.226
  Jul 27 12:54:03.243: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6096" for this suite. @ 07/27/24 12:54:03.246
• [2.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 07/27/24 12:54:03.253
  Jul 27 12:54:03.253: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename subpath @ 07/27/24 12:54:03.254
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:54:03.267
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:54:03.27
  STEP: Setting up data @ 07/27/24 12:54:03.272
  STEP: Creating pod pod-subpath-test-configmap-7k5r @ 07/27/24 12:54:03.281
  STEP: Creating a pod to test atomic-volume-subpath @ 07/27/24 12:54:03.281
  E0727 12:54:03.658480      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:54:04.658507      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:54:05.659206      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:54:06.659313      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:54:07.659947      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:54:08.660121      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:54:09.660984      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:54:10.661170      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:54:11.662137      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:54:12.662913      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:54:13.663427      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:54:14.663528      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:54:15.663625      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:54:16.663819      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:54:17.663935      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:54:18.664040      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:54:19.664131      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:54:20.664226      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:54:21.664331      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:54:22.664425      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:54:23.664522      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:54:24.664778      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/27/24 12:54:25.348
  Jul 27 12:54:25.352: INFO: Trying to get logs from node ip-172-31-10-249 pod pod-subpath-test-configmap-7k5r container test-container-subpath-configmap-7k5r: <nil>
  STEP: delete the pod @ 07/27/24 12:54:25.359
  STEP: Deleting pod pod-subpath-test-configmap-7k5r @ 07/27/24 12:54:25.375
  Jul 27 12:54:25.375: INFO: Deleting pod "pod-subpath-test-configmap-7k5r" in namespace "subpath-6432"
  Jul 27 12:54:25.378: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-6432" for this suite. @ 07/27/24 12:54:25.382
• [22.135 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 07/27/24 12:54:25.389
  Jul 27 12:54:25.389: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename projected @ 07/27/24 12:54:25.389
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:54:25.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:54:25.406
  STEP: Creating a pod to test downward API volume plugin @ 07/27/24 12:54:25.409
  E0727 12:54:25.665622      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:54:26.665722      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/27/24 12:54:27.434
  Jul 27 12:54:27.438: INFO: Trying to get logs from node ip-172-31-18-96 pod downwardapi-volume-96fc9e31-0fa5-458b-afca-846c2478fe8a container client-container: <nil>
  STEP: delete the pod @ 07/27/24 12:54:27.445
  Jul 27 12:54:27.463: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3798" for this suite. @ 07/27/24 12:54:27.467
• [2.085 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 07/27/24 12:54:27.475
  Jul 27 12:54:27.475: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename namespaces @ 07/27/24 12:54:27.475
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:54:27.491
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:54:27.495
  STEP: Creating namespace "e2e-ns-lvk7t" @ 07/27/24 12:54:27.497
  Jul 27 12:54:27.512: INFO: Namespace "e2e-ns-lvk7t-7355" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-lvk7t-7355" @ 07/27/24 12:54:27.512
  Jul 27 12:54:27.528: INFO: Namespace "e2e-ns-lvk7t-7355" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-lvk7t-7355" @ 07/27/24 12:54:27.528
  Jul 27 12:54:27.542: INFO: Namespace "e2e-ns-lvk7t-7355" has []v1.FinalizerName{"kubernetes"}
  Jul 27 12:54:27.542: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5799" for this suite. @ 07/27/24 12:54:27.547
  STEP: Destroying namespace "e2e-ns-lvk7t-7355" for this suite. @ 07/27/24 12:54:27.555
• [0.089 seconds]
------------------------------
SSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 07/27/24 12:54:27.564
  Jul 27 12:54:27.564: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename runtimeclass @ 07/27/24 12:54:27.564
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:54:27.58
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:54:27.582
  STEP: Deleting RuntimeClass runtimeclass-2182-delete-me @ 07/27/24 12:54:27.598
  STEP: Waiting for the RuntimeClass to disappear @ 07/27/24 12:54:27.604
  Jul 27 12:54:27.614: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-2182" for this suite. @ 07/27/24 12:54:27.618
• [0.060 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:846
  STEP: Creating a kubernetes client @ 07/27/24 12:54:27.624
  Jul 27 12:54:27.624: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename services @ 07/27/24 12:54:27.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:54:27.638
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:54:27.641
  STEP: creating service multi-endpoint-test in namespace services-3354 @ 07/27/24 12:54:27.643
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3354 to expose endpoints map[] @ 07/27/24 12:54:27.654
  Jul 27 12:54:27.661: INFO: Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  E0727 12:54:27.666015      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:54:28.666260      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:54:28.670: INFO: successfully validated that service multi-endpoint-test in namespace services-3354 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-3354 @ 07/27/24 12:54:28.67
  E0727 12:54:29.667293      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:54:30.667511      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3354 to expose endpoints map[pod1:[100]] @ 07/27/24 12:54:30.692
  Jul 27 12:54:30.703: INFO: successfully validated that service multi-endpoint-test in namespace services-3354 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-3354 @ 07/27/24 12:54:30.703
  E0727 12:54:31.667540      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:54:32.667611      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3354 to expose endpoints map[pod1:[100] pod2:[101]] @ 07/27/24 12:54:32.725
  Jul 27 12:54:32.741: INFO: successfully validated that service multi-endpoint-test in namespace services-3354 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 07/27/24 12:54:32.741
  Jul 27 12:54:32.741: INFO: Creating new exec pod
  E0727 12:54:33.667726      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:54:34.667837      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:54:35.667930      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:54:35.762: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=services-3354 exec execpodsskrz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  Jul 27 12:54:35.856: INFO: stderr: "+ nc -v -t -w 2 multi-endpoint-test 80\n+ echo hostName\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  Jul 27 12:54:35.856: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul 27 12:54:35.856: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=services-3354 exec execpodsskrz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.55 80'
  Jul 27 12:54:35.943: INFO: stderr: "+ nc -v -t -w 2 10.152.183.55 80\nConnection to 10.152.183.55 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Jul 27 12:54:35.943: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul 27 12:54:35.943: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=services-3354 exec execpodsskrz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  Jul 27 12:54:36.033: INFO: stderr: "+ nc -v -t -w 2 multi-endpoint-test 81\n+ echo hostName\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  Jul 27 12:54:36.033: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul 27 12:54:36.034: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=services-3354 exec execpodsskrz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.55 81'
  Jul 27 12:54:36.121: INFO: stderr: "+ nc -v -t -w 2 10.152.183.55 81\n+ echo hostName\nConnection to 10.152.183.55 81 port [tcp/*] succeeded!\n"
  Jul 27 12:54:36.121: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-3354 @ 07/27/24 12:54:36.121
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3354 to expose endpoints map[pod2:[101]] @ 07/27/24 12:54:36.149
  Jul 27 12:54:36.160: INFO: successfully validated that service multi-endpoint-test in namespace services-3354 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-3354 @ 07/27/24 12:54:36.16
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3354 to expose endpoints map[] @ 07/27/24 12:54:36.178
  Jul 27 12:54:36.186: INFO: successfully validated that service multi-endpoint-test in namespace services-3354 exposes endpoints map[]
  Jul 27 12:54:36.205: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3354" for this suite. @ 07/27/24 12:54:36.209
• [8.591 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 07/27/24 12:54:36.216
  Jul 27 12:54:36.216: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename namespaces @ 07/27/24 12:54:36.216
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:54:36.231
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:54:36.234
  STEP: Creating a test namespace @ 07/27/24 12:54:36.238
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:54:36.252
  STEP: Creating a pod in the namespace @ 07/27/24 12:54:36.258
  STEP: Waiting for the pod to have running status @ 07/27/24 12:54:36.267
  E0727 12:54:36.668606      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:54:37.668713      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the namespace @ 07/27/24 12:54:38.277
  STEP: Waiting for the namespace to be removed. @ 07/27/24 12:54:38.285
  E0727 12:54:38.668870      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:54:39.668935      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:54:40.669801      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:54:41.670331      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:54:42.670425      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:54:43.671294      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:54:44.671426      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:54:45.672240      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:54:46.672418      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:54:47.673227      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:54:48.673321      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 07/27/24 12:54:49.29
  STEP: Verifying there are no pods in the namespace @ 07/27/24 12:54:49.306
  Jul 27 12:54:49.310: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9070" for this suite. @ 07/27/24 12:54:49.314
  STEP: Destroying namespace "nsdeletetest-897" for this suite. @ 07/27/24 12:54:49.321
  Jul 27 12:54:49.325: INFO: Namespace nsdeletetest-897 was already deleted
  STEP: Destroying namespace "nsdeletetest-6639" for this suite. @ 07/27/24 12:54:49.325
• [13.117 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:300
  STEP: Creating a kubernetes client @ 07/27/24 12:54:49.333
  Jul 27 12:54:49.333: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename var-expansion @ 07/27/24 12:54:49.333
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:54:49.347
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:54:49.35
  STEP: creating the pod @ 07/27/24 12:54:49.352
  STEP: waiting for pod running @ 07/27/24 12:54:49.359
  E0727 12:54:49.673424      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:54:50.674165      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 07/27/24 12:54:51.369
  Jul 27 12:54:51.372: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-1840 PodName:var-expansion-44d47f55-bf4a-4942-ac15-9356c606eb60 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 27 12:54:51.372: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  Jul 27 12:54:51.373: INFO: ExecWithOptions: Clientset creation
  Jul 27 12:54:51.373: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-1840/pods/var-expansion-44d47f55-bf4a-4942-ac15-9356c606eb60/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 07/27/24 12:54:51.418
  Jul 27 12:54:51.423: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-1840 PodName:var-expansion-44d47f55-bf4a-4942-ac15-9356c606eb60 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 27 12:54:51.423: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  Jul 27 12:54:51.423: INFO: ExecWithOptions: Clientset creation
  Jul 27 12:54:51.423: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-1840/pods/var-expansion-44d47f55-bf4a-4942-ac15-9356c606eb60/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 07/27/24 12:54:51.469
  E0727 12:54:51.674855      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:54:51.983: INFO: Successfully updated pod "var-expansion-44d47f55-bf4a-4942-ac15-9356c606eb60"
  STEP: waiting for annotated pod running @ 07/27/24 12:54:51.983
  STEP: deleting the pod gracefully @ 07/27/24 12:54:51.987
  Jul 27 12:54:51.987: INFO: Deleting pod "var-expansion-44d47f55-bf4a-4942-ac15-9356c606eb60" in namespace "var-expansion-1840"
  Jul 27 12:54:51.995: INFO: Wait up to 5m0s for pod "var-expansion-44d47f55-bf4a-4942-ac15-9356c606eb60" to be fully deleted
  E0727 12:54:52.675882      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:54:53.675974      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:54:54.676078      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:54:55.676181      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:54:56.676270      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:54:57.677175      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:54:58.677880      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:54:59.677992      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:55:00.678071      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:55:01.678125      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:55:02.678752      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:55:03.678836      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:55:04.678958      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:55:05.679049      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:55:06.679351      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:55:07.679616      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:55:08.680610      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:55:09.681601      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:55:10.681695      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:55:11.682011      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:55:12.682781      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:55:13.683093      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:55:14.683177      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:55:15.683391      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:55:16.683498      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:55:17.683607      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:55:18.683869      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:55:19.684312      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:55:20.685087      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:55:21.685323      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:55:22.685992      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:55:23.686108      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:55:24.079: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1840" for this suite. @ 07/27/24 12:55:24.083
• [34.758 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 07/27/24 12:55:24.091
  Jul 27 12:55:24.091: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename emptydir @ 07/27/24 12:55:24.091
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:55:24.11
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:55:24.112
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 07/27/24 12:55:24.114
  E0727 12:55:24.686206      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:55:25.686525      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:55:26.686635      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:55:27.687484      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/27/24 12:55:28.138
  Jul 27 12:55:28.141: INFO: Trying to get logs from node ip-172-31-18-96 pod pod-96cb7e6c-1160-485b-a057-8ab814770b8e container test-container: <nil>
  STEP: delete the pod @ 07/27/24 12:55:28.148
  Jul 27 12:55:28.163: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7184" for this suite. @ 07/27/24 12:55:28.167
• [4.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 07/27/24 12:55:28.174
  Jul 27 12:55:28.174: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename subpath @ 07/27/24 12:55:28.174
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:55:28.188
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:55:28.19
  STEP: Setting up data @ 07/27/24 12:55:28.192
  STEP: Creating pod pod-subpath-test-projected-vpb4 @ 07/27/24 12:55:28.202
  STEP: Creating a pod to test atomic-volume-subpath @ 07/27/24 12:55:28.202
  E0727 12:55:28.687781      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:55:29.688405      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:55:30.689062      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:55:31.689486      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:55:32.689607      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:55:33.690234      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:55:34.690818      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:55:35.690888      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:55:36.691955      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:55:37.692603      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:55:38.693377      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:55:39.693445      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:55:40.693858      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:55:41.693851      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:55:42.693911      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:55:43.694230      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:55:44.694343      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:55:45.694476      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:55:46.695357      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:55:47.695647      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:55:48.696029      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:55:49.696129      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:55:50.696864      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:55:51.697171      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/27/24 12:55:52.277
  Jul 27 12:55:52.280: INFO: Trying to get logs from node ip-172-31-18-96 pod pod-subpath-test-projected-vpb4 container test-container-subpath-projected-vpb4: <nil>
  STEP: delete the pod @ 07/27/24 12:55:52.288
  STEP: Deleting pod pod-subpath-test-projected-vpb4 @ 07/27/24 12:55:52.303
  Jul 27 12:55:52.303: INFO: Deleting pod "pod-subpath-test-projected-vpb4" in namespace "subpath-9553"
  Jul 27 12:55:52.306: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9553" for this suite. @ 07/27/24 12:55:52.309
• [24.143 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 07/27/24 12:55:52.317
  Jul 27 12:55:52.317: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename proxy @ 07/27/24 12:55:52.317
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:55:52.331
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:55:52.333
  Jul 27 12:55:52.335: INFO: Creating pod...
  E0727 12:55:52.697315      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:55:53.697383      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:55:54.352: INFO: Creating service...
  Jul 27 12:55:54.362: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9936/pods/agnhost/proxy/some/path/with/DELETE
  Jul 27 12:55:54.369: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Jul 27 12:55:54.369: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9936/pods/agnhost/proxy/some/path/with/GET
  Jul 27 12:55:54.375: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Jul 27 12:55:54.375: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9936/pods/agnhost/proxy/some/path/with/HEAD
  Jul 27 12:55:54.378: INFO: http.Client request:HEAD | StatusCode:200
  Jul 27 12:55:54.378: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9936/pods/agnhost/proxy/some/path/with/OPTIONS
  Jul 27 12:55:54.382: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Jul 27 12:55:54.382: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9936/pods/agnhost/proxy/some/path/with/PATCH
  Jul 27 12:55:54.386: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Jul 27 12:55:54.386: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9936/pods/agnhost/proxy/some/path/with/POST
  Jul 27 12:55:54.389: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Jul 27 12:55:54.390: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9936/pods/agnhost/proxy/some/path/with/PUT
  Jul 27 12:55:54.393: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Jul 27 12:55:54.394: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9936/services/test-service/proxy/some/path/with/DELETE
  Jul 27 12:55:54.399: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Jul 27 12:55:54.399: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9936/services/test-service/proxy/some/path/with/GET
  Jul 27 12:55:54.404: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Jul 27 12:55:54.405: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9936/services/test-service/proxy/some/path/with/HEAD
  Jul 27 12:55:54.410: INFO: http.Client request:HEAD | StatusCode:200
  Jul 27 12:55:54.410: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9936/services/test-service/proxy/some/path/with/OPTIONS
  Jul 27 12:55:54.415: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Jul 27 12:55:54.415: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9936/services/test-service/proxy/some/path/with/PATCH
  Jul 27 12:55:54.420: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Jul 27 12:55:54.420: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9936/services/test-service/proxy/some/path/with/POST
  Jul 27 12:55:54.425: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Jul 27 12:55:54.425: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9936/services/test-service/proxy/some/path/with/PUT
  Jul 27 12:55:54.430: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Jul 27 12:55:54.431: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-9936" for this suite. @ 07/27/24 12:55:54.434
• [2.124 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 07/27/24 12:55:54.441
  Jul 27 12:55:54.441: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename projected @ 07/27/24 12:55:54.442
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:55:54.456
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:55:54.458
  STEP: Creating the pod @ 07/27/24 12:55:54.46
  E0727 12:55:54.698096      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:55:55.698196      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:55:56.698287      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:55:57.009: INFO: Successfully updated pod "labelsupdateeaa70e6c-4353-43d6-87aa-5cab9913f67e"
  E0727 12:55:57.698653      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:55:58.698851      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:55:59.699668      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:56:00.699818      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:56:01.033: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4603" for this suite. @ 07/27/24 12:56:01.037
• [6.602 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:168
  STEP: Creating a kubernetes client @ 07/27/24 12:56:01.044
  Jul 27 12:56:01.044: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename downward-api @ 07/27/24 12:56:01.045
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:56:01.06
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:56:01.062
  STEP: Creating a pod to test downward api env vars @ 07/27/24 12:56:01.064
  E0727 12:56:01.700709      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:56:02.701756      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:56:03.701856      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:56:04.701914      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/27/24 12:56:05.088
  Jul 27 12:56:05.092: INFO: Trying to get logs from node ip-172-31-18-96 pod downward-api-99aa56a2-1eef-4037-8051-971e16474790 container dapi-container: <nil>
  STEP: delete the pod @ 07/27/24 12:56:05.099
  Jul 27 12:56:05.117: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4709" for this suite. @ 07/27/24 12:56:05.121
• [4.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 07/27/24 12:56:05.131
  Jul 27 12:56:05.131: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename containers @ 07/27/24 12:56:05.132
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:56:05.146
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:56:05.149
  STEP: Creating a pod to test override all @ 07/27/24 12:56:05.151
  E0727 12:56:05.702033      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:56:06.702124      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:56:07.702954      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:56:08.703185      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/27/24 12:56:09.173
  Jul 27 12:56:09.176: INFO: Trying to get logs from node ip-172-31-18-96 pod client-containers-bdaeca76-0047-404c-85d0-07e262c21bd6 container agnhost-container: <nil>
  STEP: delete the pod @ 07/27/24 12:56:09.183
  Jul 27 12:56:09.200: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-4846" for this suite. @ 07/27/24 12:56:09.204
• [4.079 seconds]
------------------------------
S
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 07/27/24 12:56:09.21
  Jul 27 12:56:09.210: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename podtemplate @ 07/27/24 12:56:09.211
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:56:09.225
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:56:09.228
  Jul 27 12:56:09.262: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-2453" for this suite. @ 07/27/24 12:56:09.266
• [0.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 07/27/24 12:56:09.272
  Jul 27 12:56:09.272: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/27/24 12:56:09.273
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:56:09.286
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:56:09.289
  Jul 27 12:56:09.291: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  E0727 12:56:09.703578      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:56:10.704499      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:56:11.704735      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:56:12.371: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-5939" for this suite. @ 07/27/24 12:56:12.376
• [3.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1632
  STEP: Creating a kubernetes client @ 07/27/24 12:56:12.384
  Jul 27 12:56:12.384: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename kubectl @ 07/27/24 12:56:12.384
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:56:12.401
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:56:12.403
  STEP: creating the pod @ 07/27/24 12:56:12.405
  Jul 27 12:56:12.405: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-7428 create -f -'
  Jul 27 12:56:12.491: INFO: stderr: ""
  Jul 27 12:56:12.491: INFO: stdout: "pod/pause created\n"
  E0727 12:56:12.705585      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:56:13.706254      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 07/27/24 12:56:14.5
  Jul 27 12:56:14.500: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-7428 label pods pause testing-label=testing-label-value'
  Jul 27 12:56:14.550: INFO: stderr: ""
  Jul 27 12:56:14.550: INFO: stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 07/27/24 12:56:14.55
  Jul 27 12:56:14.550: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-7428 get pod pause -L testing-label'
  Jul 27 12:56:14.592: INFO: stderr: ""
  Jul 27 12:56:14.592: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 07/27/24 12:56:14.592
  Jul 27 12:56:14.592: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-7428 label pods pause testing-label-'
  Jul 27 12:56:14.643: INFO: stderr: ""
  Jul 27 12:56:14.643: INFO: stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 07/27/24 12:56:14.643
  Jul 27 12:56:14.643: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-7428 get pod pause -L testing-label'
  Jul 27 12:56:14.686: INFO: stderr: ""
  Jul 27 12:56:14.686: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 07/27/24 12:56:14.686
  Jul 27 12:56:14.686: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-7428 delete --grace-period=0 --force -f -'
  E0727 12:56:14.707249      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:56:14.744: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jul 27 12:56:14.744: INFO: stdout: "pod \"pause\" force deleted\n"
  Jul 27 12:56:14.745: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-7428 get rc,svc -l name=pause --no-headers'
  Jul 27 12:56:14.792: INFO: stderr: "No resources found in kubectl-7428 namespace.\n"
  Jul 27 12:56:14.792: INFO: stdout: ""
  Jul 27 12:56:14.792: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-7428 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Jul 27 12:56:14.833: INFO: stderr: ""
  Jul 27 12:56:14.833: INFO: stdout: ""
  Jul 27 12:56:14.833: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7428" for this suite. @ 07/27/24 12:56:14.837
• [2.460 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 07/27/24 12:56:14.844
  Jul 27 12:56:14.844: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename disruption @ 07/27/24 12:56:14.845
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:56:14.859
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:56:14.861
  STEP: Creating a kubernetes client @ 07/27/24 12:56:14.863
  Jul 27 12:56:14.863: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename disruption-2 @ 07/27/24 12:56:14.864
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:56:14.878
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:56:14.88
  STEP: Waiting for the pdb to be processed @ 07/27/24 12:56:14.888
  E0727 12:56:15.707393      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:56:16.707617      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 07/27/24 12:56:16.899
  STEP: Waiting for the pdb to be processed @ 07/27/24 12:56:16.91
  STEP: listing a collection of PDBs across all namespaces @ 07/27/24 12:56:16.914
  STEP: listing a collection of PDBs in namespace disruption-2773 @ 07/27/24 12:56:16.918
  STEP: deleting a collection of PDBs @ 07/27/24 12:56:16.923
  STEP: Waiting for the PDB collection to be deleted @ 07/27/24 12:56:16.936
  Jul 27 12:56:16.939: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-4966" for this suite. @ 07/27/24 12:56:16.943
  Jul 27 12:56:16.949: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2773" for this suite. @ 07/27/24 12:56:16.953
• [2.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 07/27/24 12:56:16.96
  Jul 27 12:56:16.960: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename events @ 07/27/24 12:56:16.961
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:56:16.975
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:56:16.977
  STEP: Create set of events @ 07/27/24 12:56:16.98
  Jul 27 12:56:16.985: INFO: created test-event-1
  Jul 27 12:56:16.989: INFO: created test-event-2
  Jul 27 12:56:16.993: INFO: created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 07/27/24 12:56:16.993
  STEP: delete collection of events @ 07/27/24 12:56:16.996
  Jul 27 12:56:16.996: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 07/27/24 12:56:17.018
  Jul 27 12:56:17.018: INFO: requesting list of events to confirm quantity
  Jul 27 12:56:17.020: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-3648" for this suite. @ 07/27/24 12:56:17.024
• [0.070 seconds]
------------------------------
SSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 07/27/24 12:56:17.03
  Jul 27 12:56:17.030: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename container-runtime @ 07/27/24 12:56:17.031
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:56:17.043
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:56:17.045
  STEP: create the container @ 07/27/24 12:56:17.047
  W0727 12:56:17.060406      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 07/27/24 12:56:17.06
  E0727 12:56:17.707704      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:56:18.707795      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:56:19.707867      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 07/27/24 12:56:20.077
  STEP: the container should be terminated @ 07/27/24 12:56:20.081
  STEP: the termination message should be set @ 07/27/24 12:56:20.081
  Jul 27 12:56:20.081: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 07/27/24 12:56:20.081
  Jul 27 12:56:20.098: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3941" for this suite. @ 07/27/24 12:56:20.102
• [3.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 07/27/24 12:56:20.109
  Jul 27 12:56:20.109: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename projected @ 07/27/24 12:56:20.11
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:56:20.121
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:56:20.123
  STEP: Creating projection with secret that has name projected-secret-test-map-fc47609a-828f-46ef-b55d-e5968b4c3472 @ 07/27/24 12:56:20.128
  STEP: Creating a pod to test consume secrets @ 07/27/24 12:56:20.135
  E0727 12:56:20.707976      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:56:21.708852      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:56:22.709936      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:56:23.710044      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/27/24 12:56:24.156
  Jul 27 12:56:24.160: INFO: Trying to get logs from node ip-172-31-18-96 pod pod-projected-secrets-27aa95d3-9cd9-47af-9322-9ac9968cb91a container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 07/27/24 12:56:24.168
  Jul 27 12:56:24.183: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4849" for this suite. @ 07/27/24 12:56:24.186
• [4.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 07/27/24 12:56:24.194
  Jul 27 12:56:24.194: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename gc @ 07/27/24 12:56:24.194
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:56:24.209
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:56:24.211
  STEP: create the deployment @ 07/27/24 12:56:24.214
  W0727 12:56:24.220905      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 07/27/24 12:56:24.22
  E0727 12:56:24.710308      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the deployment @ 07/27/24 12:56:24.729
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 07/27/24 12:56:24.739
  STEP: Gathering metrics @ 07/27/24 12:56:25.257
  W0727 12:56:25.261893      20 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Jul 27 12:56:25.261: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jul 27 12:56:25.262: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4314" for this suite. @ 07/27/24 12:56:25.266
• [1.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 07/27/24 12:56:25.273
  Jul 27 12:56:25.273: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename subpath @ 07/27/24 12:56:25.274
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:56:25.289
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:56:25.292
  STEP: Setting up data @ 07/27/24 12:56:25.294
  STEP: Creating pod pod-subpath-test-secret-frdq @ 07/27/24 12:56:25.305
  STEP: Creating a pod to test atomic-volume-subpath @ 07/27/24 12:56:25.305
  E0727 12:56:25.711289      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:56:26.711563      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:56:27.711789      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:56:28.711876      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:56:29.712581      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:56:30.712662      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:56:31.713723      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:56:32.713914      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:56:33.714853      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:56:34.715012      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:56:35.715512      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:56:36.715600      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:56:37.716581      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:56:38.716796      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:56:39.717743      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:56:40.718229      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:56:41.718787      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:56:42.719791      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:56:43.720698      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:56:44.720806      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:56:45.721565      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:56:46.721662      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:56:47.722654      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:56:48.722736      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/27/24 12:56:49.379
  Jul 27 12:56:49.383: INFO: Trying to get logs from node ip-172-31-18-96 pod pod-subpath-test-secret-frdq container test-container-subpath-secret-frdq: <nil>
  STEP: delete the pod @ 07/27/24 12:56:49.39
  STEP: Deleting pod pod-subpath-test-secret-frdq @ 07/27/24 12:56:49.404
  Jul 27 12:56:49.405: INFO: Deleting pod "pod-subpath-test-secret-frdq" in namespace "subpath-6555"
  Jul 27 12:56:49.408: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-6555" for this suite. @ 07/27/24 12:56:49.412
• [24.145 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 07/27/24 12:56:49.419
  Jul 27 12:56:49.419: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename projected @ 07/27/24 12:56:49.42
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:56:49.432
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:56:49.434
  STEP: Creating configMap with name projected-configmap-test-volume-0c912469-5116-4ef2-aea2-b32ffb8b83cb @ 07/27/24 12:56:49.437
  STEP: Creating a pod to test consume configMaps @ 07/27/24 12:56:49.442
  E0727 12:56:49.723054      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:56:50.723148      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:56:51.724128      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:56:52.724305      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/27/24 12:56:53.464
  Jul 27 12:56:53.468: INFO: Trying to get logs from node ip-172-31-18-96 pod pod-projected-configmaps-b451174e-711a-40f4-8743-cba5858384c3 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 07/27/24 12:56:53.475
  Jul 27 12:56:53.490: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-637" for this suite. @ 07/27/24 12:56:53.494
• [4.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 07/27/24 12:56:53.5
  Jul 27 12:56:53.500: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename container-probe @ 07/27/24 12:56:53.501
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 12:56:53.516
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 12:56:53.518
  STEP: Creating pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919 @ 07/27/24 12:56:53.52
  E0727 12:56:53.724414      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:56:54.724508      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/27/24 12:56:55.539
  Jul 27 12:56:55.543: INFO: Initial restart count of pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 is 0
  Jul 27 12:56:55.547: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:56:55.725405      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:56:56.726397      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:56:57.552: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:56:57.726446      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:56:58.726540      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:56:59.557: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:56:59.727317      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:57:00.727527      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:57:01.566: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:57:01.727580      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:57:02.727657      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:57:03.571: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:57:03.728522      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:57:04.728614      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:57:05.576: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:57:05.729458      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:57:06.729551      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:57:07.581: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:57:07.730240      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:57:08.730411      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:57:09.585: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:57:09.731116      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:57:10.731223      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:57:11.591: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:57:11.731953      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:57:12.732756      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:57:13.596: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:57:13.732969      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:57:14.733156      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:57:15.602: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:57:15.733572      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:57:16.734350      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:57:17.606: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:57:17.734728      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:57:18.735439      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:57:19.611: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:57:19.735501      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:57:20.735579      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:57:21.615: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:57:21.736076      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:57:22.736981      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:57:23.621: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:57:23.737483      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:57:24.737552      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:57:25.626: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:57:25.737695      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:57:26.738307      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:57:27.631: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:57:27.739087      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:57:28.739140      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:57:29.637: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:57:29.739214      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:57:30.739434      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:57:31.642: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:57:31.740138      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:57:32.740205      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:57:33.647: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:57:33.740739      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:57:34.740852      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:57:35.652: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:57:35.741846      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:57:36.741937      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:57:37.657: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:57:37.742010      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:57:38.742111      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:57:39.662: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:57:39.742563      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:57:40.742929      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:57:41.667: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:57:41.743678      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:57:42.743747      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:57:43.672: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:57:43.744366      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:57:44.744555      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:57:45.677: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:57:45.745610      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:57:46.745733      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:57:47.682: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:57:47.746867      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:57:48.747126      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:57:49.688: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:57:49.747462      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:57:50.747559      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:57:51.693: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:57:51.748321      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:57:52.748628      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:57:53.697: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:57:53.749692      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:57:54.750306      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:57:55.702: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:57:55.751078      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:57:56.751595      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:57:57.708: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:57:57.752433      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:57:58.752551      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:57:59.712: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:57:59.752645      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:58:00.752846      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:58:01.717: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:58:01.753907      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:58:02.754758      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:58:03.723: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:58:03.755304      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:58:04.755401      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:58:05.729: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:58:05.756363      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:58:06.756673      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:58:07.734: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:58:07.757304      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:58:08.757411      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:58:09.738: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:58:09.758189      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:58:10.758371      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:58:11.744: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:58:11.758603      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:58:12.758727      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:58:13.749: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:58:13.759018      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:58:14.759281      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:58:15.755: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:58:15.759603      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:58:16.759874      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:58:17.760123      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:58:17.760: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:58:18.760357      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:58:19.760547      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:58:19.765: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:58:20.761148      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:58:21.761580      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:58:21.769: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:58:22.761672      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:58:23.762714      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:58:23.775: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:58:24.763658      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:58:25.763842      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:58:25.780: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:58:26.764851      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:58:27.764951      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:58:27.785: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:58:28.765179      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:58:29.765258      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:58:29.791: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:58:30.765358      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:58:31.765769      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:58:31.796: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:58:32.766238      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:58:33.766346      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:58:33.801: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:58:34.766428      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:58:35.766660      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:58:35.805: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:58:36.766734      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:58:37.767795      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:58:37.810: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:58:38.767896      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:58:39.768102      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:58:39.815: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:58:40.768574      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:58:41.768897      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:58:41.825: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:58:42.769614      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:58:43.769698      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:58:43.830: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:58:44.769987      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:58:45.770185      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:58:45.835: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:58:46.771134      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:58:47.771974      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:58:47.840: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:58:48.772140      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:58:49.772336      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:58:49.845: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:58:50.773182      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:58:51.773785      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:58:51.850: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:58:52.774771      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:58:53.774866      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:58:53.855: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:58:54.774962      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:58:55.775249      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:58:55.860: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:58:56.775376      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:58:57.775479      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:58:57.865: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:58:58.775833      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:58:59.776020      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:58:59.870: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:59:00.776510      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:59:01.776947      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:59:01.875: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:59:02.777840      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:59:03.778869      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:59:03.880: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:59:04.779626      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:59:05.780357      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:59:05.885: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:59:06.780450      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:59:07.780558      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:59:07.891: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:59:08.780754      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:59:09.780934      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:59:09.895: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:59:10.781082      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:59:11.781805      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:59:11.900: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:59:12.782553      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:59:13.782642      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:59:13.906: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:59:14.782694      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:59:15.782890      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:59:15.911: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:59:16.782939      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:59:17.783193      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:59:17.915: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:59:18.783907      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:59:19.784020      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:59:19.920: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:59:20.784351      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:59:21.784719      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:59:21.924: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:59:22.784778      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:59:23.784868      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:59:23.929: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:59:24.785170      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:59:25.786078      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:59:25.934: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:59:26.786501      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:59:27.786618      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:59:27.939: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:59:28.787560      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:59:29.787658      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:59:29.944: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:59:30.788581      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:59:31.788864      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:59:31.949: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:59:32.789577      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:59:33.790227      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:59:33.955: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:59:34.791249      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:59:35.791316      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:59:35.960: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:59:36.792015      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:59:37.792067      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:59:37.964: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:59:38.792227      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:59:39.792276      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:59:39.969: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:59:40.792617      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:59:41.792837      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:59:41.973: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:59:42.793791      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:59:43.793889      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:59:43.978: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:59:44.793991      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:59:45.794172      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:59:45.983: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:59:46.794277      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:59:47.794369      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:59:47.988: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:59:48.794526      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:59:49.794735      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:59:49.992: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:59:50.795467      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:59:51.795769      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:59:51.996: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:59:52.796524      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:59:53.797448      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:59:54.000: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:59:54.797547      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:59:55.798229      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:59:56.006: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:59:56.798935      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:59:57.799838      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 12:59:58.010: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 12:59:58.800344      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 12:59:59.800514      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:00:00.015: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 13:00:00.801215      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:00:01.801824      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:00:02.021: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 13:00:02.801867      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:00:03.802200      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:00:04.026: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 13:00:04.802294      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:00:05.803275      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:00:06.031: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 13:00:06.803419      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:00:07.803518      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:00:08.035: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 13:00:08.804123      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:00:09.804218      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:00:10.040: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 13:00:10.804376      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:00:11.805118      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:00:12.046: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 13:00:12.805953      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:00:13.806056      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:00:14.050: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 13:00:14.806153      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:00:15.806362      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:00:16.056: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 13:00:16.806472      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:00:17.806583      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:00:18.061: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 13:00:18.806778      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:00:19.806870      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:00:20.066: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 13:00:20.806960      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:00:21.807244      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:00:22.070: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 13:00:22.807787      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:00:23.807979      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:00:24.075: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 13:00:24.808865      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:00:25.808977      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:00:26.081: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 13:00:26.809735      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:00:27.809763      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:00:28.086: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 13:00:28.809860      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:00:29.810168      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:00:30.090: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 13:00:30.810919      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:00:31.811744      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:00:32.095: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 13:00:32.812493      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:00:33.812569      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:00:34.100: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 13:00:34.812687      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:00:35.812882      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:00:36.106: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 13:00:36.813776      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:00:37.813876      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:00:38.110: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 13:00:38.814021      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:00:39.814227      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:00:40.116: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 13:00:40.814361      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:00:41.814775      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:00:42.120: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 13:00:42.814825      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:00:43.815034      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:00:44.125: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 13:00:44.815688      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:00:45.815877      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:00:46.130: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 13:00:46.815998      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:00:47.816319      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:00:48.135: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 13:00:48.816446      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:00:49.816624      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:00:50.140: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 13:00:50.817066      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:00:51.818097      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:00:52.144: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 13:00:52.818682      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:00:53.819262      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:00:54.149: INFO: Get pod test-grpc-7f5e59d1-3ce4-40e5-ac5e-ecd06170c702 in namespace container-probe-5919
  E0727 13:00:54.820064      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:00:55.820183      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 07/27/24 13:00:56.149
  Jul 27 13:00:56.170: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5919" for this suite. @ 07/27/24 13:00:56.173
• [242.679 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 07/27/24 13:00:56.18
  Jul 27 13:00:56.180: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename projected @ 07/27/24 13:00:56.18
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:00:56.194
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:00:56.196
  STEP: Creating configMap with name projected-configmap-test-volume-map-d7d0695b-b7fc-48d2-8f40-c23a58608dbb @ 07/27/24 13:00:56.199
  STEP: Creating a pod to test consume configMaps @ 07/27/24 13:00:56.203
  E0727 13:00:56.821138      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:00:57.821176      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:00:58.821823      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:00:59.822278      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/27/24 13:01:00.226
  Jul 27 13:01:00.229: INFO: Trying to get logs from node ip-172-31-18-96 pod pod-projected-configmaps-c41a0fdd-50b4-4382-a807-956468374205 container agnhost-container: <nil>
  STEP: delete the pod @ 07/27/24 13:01:00.246
  Jul 27 13:01:00.266: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5909" for this suite. @ 07/27/24 13:01:00.269
• [4.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 07/27/24 13:01:00.276
  Jul 27 13:01:00.276: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename chunking @ 07/27/24 13:01:00.276
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:01:00.295
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:01:00.298
  STEP: creating a large number of resources @ 07/27/24 13:01:00.301
  E0727 13:01:00.822644      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:01:01.823241      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:01:02.824172      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:01:03.824920      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:01:04.825759      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:01:05.826794      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:01:06.827708      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:01:07.828075      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:01:08.828834      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:01:09.829841      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:01:10.830070      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:01:11.830978      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:01:12.831891      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:01:13.832425      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:01:14.832936      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:01:15.832997      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:01:16.833636      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:01:17.833678      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving those results in paged fashion several times @ 07/27/24 13:01:17.984
  Jul 27 13:01:18.031: INFO: Retrieved 17/17 results with rv 23967 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM5NjcsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  Jul 27 13:01:18.082: INFO: Retrieved 17/17 results with rv 23967 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM5NjcsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  Jul 27 13:01:18.132: INFO: Retrieved 17/17 results with rv 23967 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM5NjcsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  Jul 27 13:01:18.181: INFO: Retrieved 17/17 results with rv 23967 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM5NjcsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  Jul 27 13:01:18.231: INFO: Retrieved 17/17 results with rv 23967 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM5NjcsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  Jul 27 13:01:18.281: INFO: Retrieved 17/17 results with rv 23967 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM5NjcsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  Jul 27 13:01:18.331: INFO: Retrieved 17/17 results with rv 23967 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM5NjcsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  Jul 27 13:01:18.381: INFO: Retrieved 17/17 results with rv 23967 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM5NjcsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  Jul 27 13:01:18.431: INFO: Retrieved 17/17 results with rv 23967 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM5NjcsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  Jul 27 13:01:18.481: INFO: Retrieved 17/17 results with rv 23967 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM5NjcsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  Jul 27 13:01:18.531: INFO: Retrieved 17/17 results with rv 23967 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM5NjcsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  Jul 27 13:01:18.581: INFO: Retrieved 17/17 results with rv 23967 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM5NjcsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  Jul 27 13:01:18.630: INFO: Retrieved 17/17 results with rv 23967 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM5NjcsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  Jul 27 13:01:18.681: INFO: Retrieved 17/17 results with rv 23967 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM5NjcsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  Jul 27 13:01:18.732: INFO: Retrieved 17/17 results with rv 23967 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM5NjcsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  Jul 27 13:01:18.781: INFO: Retrieved 17/17 results with rv 23967 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM5NjcsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  Jul 27 13:01:18.831: INFO: Retrieved 17/17 results with rv 23967 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM5NjcsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  E0727 13:01:18.833713      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:01:18.881: INFO: Retrieved 17/17 results with rv 23967 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM5NjcsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  Jul 27 13:01:18.931: INFO: Retrieved 17/17 results with rv 23967 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM5NjcsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  Jul 27 13:01:18.982: INFO: Retrieved 17/17 results with rv 23967 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM5NjcsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  Jul 27 13:01:19.032: INFO: Retrieved 17/17 results with rv 23967 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM5NjcsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  Jul 27 13:01:19.081: INFO: Retrieved 17/17 results with rv 23967 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM5NjcsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  Jul 27 13:01:19.132: INFO: Retrieved 17/17 results with rv 23967 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM5NjcsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  Jul 27 13:01:19.181: INFO: Retrieved 9/17 results with rv 23967 and continue 
  Jul 27 13:01:19.230: INFO: Retrieved 17/17 results with rv 23970 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM5NzAsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  Jul 27 13:01:19.281: INFO: Retrieved 17/17 results with rv 23970 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM5NzAsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  Jul 27 13:01:19.332: INFO: Retrieved 17/17 results with rv 23970 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM5NzAsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  Jul 27 13:01:19.381: INFO: Retrieved 17/17 results with rv 23970 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM5NzAsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  Jul 27 13:01:19.431: INFO: Retrieved 17/17 results with rv 23970 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM5NzAsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  Jul 27 13:01:19.481: INFO: Retrieved 17/17 results with rv 23970 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM5NzAsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  Jul 27 13:01:19.531: INFO: Retrieved 17/17 results with rv 23970 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM5NzAsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  Jul 27 13:01:19.581: INFO: Retrieved 17/17 results with rv 23970 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM5NzAsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  Jul 27 13:01:19.632: INFO: Retrieved 17/17 results with rv 23970 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM5NzAsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  Jul 27 13:01:19.681: INFO: Retrieved 17/17 results with rv 23970 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM5NzAsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  Jul 27 13:01:19.731: INFO: Retrieved 17/17 results with rv 23970 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM5NzAsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  Jul 27 13:01:19.781: INFO: Retrieved 17/17 results with rv 23970 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM5NzAsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  Jul 27 13:01:19.831: INFO: Retrieved 17/17 results with rv 23970 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM5NzAsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  E0727 13:01:19.834010      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:01:19.882: INFO: Retrieved 17/17 results with rv 23970 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM5NzAsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  Jul 27 13:01:19.932: INFO: Retrieved 17/17 results with rv 23970 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM5NzAsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  Jul 27 13:01:19.980: INFO: Retrieved 17/17 results with rv 23970 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM5NzAsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  Jul 27 13:01:20.031: INFO: Retrieved 17/17 results with rv 23970 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM5NzAsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  Jul 27 13:01:20.082: INFO: Retrieved 17/17 results with rv 23970 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM5NzAsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  Jul 27 13:01:20.131: INFO: Retrieved 17/17 results with rv 23970 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM5NzAsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  Jul 27 13:01:20.181: INFO: Retrieved 17/17 results with rv 23970 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM5NzAsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  Jul 27 13:01:20.231: INFO: Retrieved 17/17 results with rv 23970 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM5NzAsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  Jul 27 13:01:20.281: INFO: Retrieved 17/17 results with rv 23970 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM5NzAsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  Jul 27 13:01:20.331: INFO: Retrieved 17/17 results with rv 23970 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM5NzAsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  Jul 27 13:01:20.381: INFO: Retrieved 9/17 results with rv 23970 and continue 
  Jul 27 13:01:20.431: INFO: Retrieved 17/17 results with rv 23972 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM5NzIsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  Jul 27 13:01:20.481: INFO: Retrieved 17/17 results with rv 23972 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM5NzIsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  Jul 27 13:01:20.531: INFO: Retrieved 17/17 results with rv 23972 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM5NzIsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  Jul 27 13:01:20.581: INFO: Retrieved 17/17 results with rv 23972 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM5NzIsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  Jul 27 13:01:20.631: INFO: Retrieved 17/17 results with rv 23972 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM5NzIsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  Jul 27 13:01:20.681: INFO: Retrieved 17/17 results with rv 23972 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM5NzIsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  Jul 27 13:01:20.731: INFO: Retrieved 17/17 results with rv 23972 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM5NzIsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  Jul 27 13:01:20.786: INFO: Retrieved 17/17 results with rv 23972 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM5NzIsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  Jul 27 13:01:20.831: INFO: Retrieved 17/17 results with rv 23972 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM5NzIsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  E0727 13:01:20.834830      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:01:20.880: INFO: Retrieved 17/17 results with rv 23972 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM5NzIsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  Jul 27 13:01:20.931: INFO: Retrieved 17/17 results with rv 23972 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM5NzIsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  Jul 27 13:01:20.982: INFO: Retrieved 17/17 results with rv 23972 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM5NzIsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  Jul 27 13:01:21.031: INFO: Retrieved 17/17 results with rv 23972 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM5NzIsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  Jul 27 13:01:21.081: INFO: Retrieved 17/17 results with rv 23972 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM5NzIsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  Jul 27 13:01:21.131: INFO: Retrieved 17/17 results with rv 23972 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM5NzIsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  Jul 27 13:01:21.181: INFO: Retrieved 17/17 results with rv 23972 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM5NzIsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  Jul 27 13:01:21.232: INFO: Retrieved 17/17 results with rv 23972 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM5NzIsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  Jul 27 13:01:21.281: INFO: Retrieved 17/17 results with rv 23972 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM5NzIsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  Jul 27 13:01:21.331: INFO: Retrieved 17/17 results with rv 23972 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM5NzIsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  Jul 27 13:01:21.381: INFO: Retrieved 17/17 results with rv 23972 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM5NzIsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  Jul 27 13:01:21.431: INFO: Retrieved 17/17 results with rv 23972 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM5NzIsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  Jul 27 13:01:21.481: INFO: Retrieved 17/17 results with rv 23972 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM5NzIsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  Jul 27 13:01:21.532: INFO: Retrieved 17/17 results with rv 23972 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM5NzIsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  Jul 27 13:01:21.581: INFO: Retrieved 9/17 results with rv 23972 and continue 
  STEP: retrieving those results all at once @ 07/27/24 13:01:21.581
  Jul 27 13:01:21.636: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-7160" for this suite. @ 07/27/24 13:01:21.681
• [21.460 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:219
  STEP: Creating a kubernetes client @ 07/27/24 13:01:21.735
  Jul 27 13:01:21.735: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename downward-api @ 07/27/24 13:01:21.736
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:01:21.751
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:01:21.754
  STEP: Creating a pod to test downward api env vars @ 07/27/24 13:01:21.756
  E0727 13:01:21.835523      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:01:22.835620      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:01:23.836009      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:01:24.836201      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/27/24 13:01:25.779
  Jul 27 13:01:25.783: INFO: Trying to get logs from node ip-172-31-18-96 pod downward-api-056477d0-383a-4aa7-b457-fc96ce57e3fb container dapi-container: <nil>
  STEP: delete the pod @ 07/27/24 13:01:25.79
  Jul 27 13:01:25.807: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2671" for this suite. @ 07/27/24 13:01:25.81
• [4.082 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 07/27/24 13:01:25.817
  Jul 27 13:01:25.817: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename apf @ 07/27/24 13:01:25.818
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:01:25.833
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:01:25.836
  E0727 13:01:25.836414      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting /apis @ 07/27/24 13:01:25.84
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 07/27/24 13:01:25.843
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 07/27/24 13:01:25.844
  STEP: creating @ 07/27/24 13:01:25.845
  STEP: getting @ 07/27/24 13:01:25.861
  STEP: listing @ 07/27/24 13:01:25.864
  STEP: watching @ 07/27/24 13:01:25.868
  Jul 27 13:01:25.868: INFO: starting watch
  STEP: patching @ 07/27/24 13:01:25.869
  STEP: updating @ 07/27/24 13:01:25.876
  Jul 27 13:01:25.884: INFO: waiting for watch events with expected annotations
  STEP: getting /status @ 07/27/24 13:01:25.884
  STEP: patching /status @ 07/27/24 13:01:25.887
  STEP: updating /status @ 07/27/24 13:01:25.892
  STEP: deleting @ 07/27/24 13:01:25.9
  STEP: deleting a collection @ 07/27/24 13:01:25.913
  Jul 27 13:01:25.933: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-8603" for this suite. @ 07/27/24 13:01:25.937
• [0.126 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 07/27/24 13:01:25.944
  Jul 27 13:01:25.944: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename watch @ 07/27/24 13:01:25.945
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:01:25.959
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:01:25.962
  STEP: getting a starting resourceVersion @ 07/27/24 13:01:25.964
  STEP: starting a background goroutine to produce watch events @ 07/27/24 13:01:25.967
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 07/27/24 13:01:25.968
  E0727 13:01:26.836958      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:01:27.837558      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:01:28.750: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5070" for this suite. @ 07/27/24 13:01:28.798
  E0727 13:01:28.837923      20 retrywatcher.go:129] "Watch failed" err="context canceled"
• [2.910 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 07/27/24 13:01:28.854
  Jul 27 13:01:28.854: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename projected @ 07/27/24 13:01:28.854
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:01:28.875
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:01:28.881
  STEP: Creating configMap with name projected-configmap-test-volume-63a4df84-a1c7-4d03-a067-0a0b83737427 @ 07/27/24 13:01:28.886
  STEP: Creating a pod to test consume configMaps @ 07/27/24 13:01:28.895
  E0727 13:01:29.838240      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:01:30.838328      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:01:31.838871      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:01:32.838979      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/27/24 13:01:32.926
  Jul 27 13:01:32.931: INFO: Trying to get logs from node ip-172-31-18-96 pod pod-projected-configmaps-c8b61b33-8cba-4206-9e7d-6f69cd750ddb container agnhost-container: <nil>
  STEP: delete the pod @ 07/27/24 13:01:32.939
  Jul 27 13:01:32.960: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4672" for this suite. @ 07/27/24 13:01:32.964
• [4.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 07/27/24 13:01:32.973
  Jul 27 13:01:32.974: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename cronjob @ 07/27/24 13:01:32.975
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:01:32.991
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:01:32.993
  STEP: Creating a ForbidConcurrent cronjob @ 07/27/24 13:01:32.995
  STEP: Ensuring a job is scheduled @ 07/27/24 13:01:33.001
  E0727 13:01:33.839970      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:01:34.840119      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:01:35.840208      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:01:36.841183      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:01:37.841780      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:01:38.842786      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:01:39.843828      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:01:40.844873      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:01:41.845877      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:01:42.846010      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:01:43.846123      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:01:44.846393      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:01:45.846577      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:01:46.847328      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:01:47.848230      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:01:48.848986      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:01:49.850018      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:01:50.850112      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:01:51.850222      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:01:52.850394      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:01:53.850481      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:01:54.850681      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:01:55.851292      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:01:56.851986      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:01:57.852551      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:01:58.853409      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:01:59.854294      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:02:00.854485      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 07/27/24 13:02:01.006
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 07/27/24 13:02:01.01
  STEP: Ensuring no more jobs are scheduled @ 07/27/24 13:02:01.014
  E0727 13:02:01.854906      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:02:02.855022      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:02:03.855116      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:02:04.855229      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:02:05.855454      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:02:06.856051      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:02:07.856157      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:02:08.856371      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:02:09.856466      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:02:10.856984      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:02:11.857912      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:02:12.857999      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:02:13.858128      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:02:14.858207      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:02:15.858317      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:02:16.858410      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:02:17.858517      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:02:18.858851      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:02:19.858910      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:02:20.859130      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:02:21.859902      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:02:22.860028      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:02:23.861077      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:02:24.861175      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:02:25.861265      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:02:26.861467      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:02:27.862180      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:02:28.862909      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:02:29.863044      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:02:30.863149      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:02:31.863845      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:02:32.863948      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:02:33.864165      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:02:34.864237      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:02:35.865246      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:02:36.866278      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:02:37.866385      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:02:38.866479      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:02:39.866572      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:02:40.866670      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:02:41.867649      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:02:42.867883      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:02:43.867915      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:02:44.868148      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:02:45.868247      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:02:46.868355      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:02:47.868997      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:02:48.869158      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:02:49.869256      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:02:50.869353      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:02:51.869930      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:02:52.870940      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:02:53.871003      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:02:54.871895      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:02:55.872016      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:02:56.872109      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:02:57.873151      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:02:58.873515      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:02:59.873635      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:03:00.874218      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:03:01.874965      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:03:02.875060      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:03:03.875498      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:03:04.876114      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:03:05.876195      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:03:06.876292      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:03:07.876414      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:03:08.876628      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:03:09.876750      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:03:10.877727      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:03:11.877850      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:03:12.878147      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:03:13.878255      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:03:14.878343      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:03:15.878447      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:03:16.878533      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:03:17.878665      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:03:18.878741      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:03:19.878875      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:03:20.878945      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:03:21.879569      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:03:22.879819      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:03:23.880205      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:03:24.880981      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:03:25.881178      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:03:26.881257      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:03:27.881360      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:03:28.881660      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:03:29.881715      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:03:30.882350      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:03:31.882447      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:03:32.882537      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:03:33.883055      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:03:34.883156      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:03:35.883414      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:03:36.884058      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:03:37.884832      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:03:38.885035      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:03:39.885165      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:03:40.885507      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:03:41.885883      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:03:42.885924      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:03:43.886345      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:03:44.886417      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:03:45.886531      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:03:46.886603      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:03:47.886699      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:03:48.886869      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:03:49.886964      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:03:50.887077      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:03:51.887938      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:03:52.888961      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:03:53.889096      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:03:54.889168      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:03:55.889312      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:03:56.890235      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:03:57.891108      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:03:58.891200      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:03:59.891286      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:04:00.891639      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:04:01.891681      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:04:02.892210      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:04:03.892774      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:04:04.892852      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:04:05.893842      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:04:06.893972      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:04:07.894074      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:04:08.894931      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:04:09.895038      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:04:10.895130      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:04:11.895835      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:04:12.896620      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:04:13.897555      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:04:14.897504      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:04:15.897609      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:04:16.897694      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:04:17.897785      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:04:18.898237      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:04:19.898350      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:04:20.898439      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:04:21.898894      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:04:22.898973      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:04:23.899801      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:04:24.899923      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:04:25.900013      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:04:26.900180      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:04:27.901161      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:04:28.901321      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:04:29.902233      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:04:30.902320      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:04:31.902902      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:04:32.902982      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:04:33.903267      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:04:34.903747      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:04:35.903852      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:04:36.904531      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:04:37.904693      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:04:38.905321      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:04:39.905422      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:04:40.905508      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:04:41.905623      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:04:42.905721      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:04:43.905793      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:04:44.905902      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:04:45.906395      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:04:46.906481      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:04:47.906566      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:04:48.906663      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:04:49.907505      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:04:50.907605      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:04:51.908327      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:04:52.908403      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:04:53.909075      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:04:54.909168      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:04:55.909276      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:04:56.909373      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:04:57.910122      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:04:58.910215      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:04:59.910856      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:05:00.911833      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:05:01.911873      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:05:02.911931      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:05:03.912524      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:05:04.912632      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:05:05.913162      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:05:06.914216      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:05:07.914401      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:05:08.914700      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:05:09.914819      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:05:10.914934      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:05:11.915037      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:05:12.926490      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:05:13.926501      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:05:14.926613      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:05:15.927467      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:05:16.927853      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:05:17.928596      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:05:18.928863      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:05:19.928897      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:05:20.928987      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:05:21.929982      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:05:22.932320      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:05:23.932869      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:05:24.932965      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:05:25.933180      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:05:26.934205      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:05:27.934475      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:05:28.934593      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:05:29.935017      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:05:30.935161      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:05:31.935227      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:05:32.935619      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:05:33.935722      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:05:34.935820      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:05:35.936776      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:05:36.936977      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:05:37.937175      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:05:38.938215      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:05:39.938640      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:05:40.938929      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:05:41.939517      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:05:42.940035      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:05:43.941110      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:05:44.941145      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:05:45.942209      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:05:46.942349      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:05:47.942446      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:05:48.942980      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:05:49.944031      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:05:50.944198      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:05:51.945136      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:05:52.950703      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:05:53.950917      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:05:54.951204      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:05:55.952270      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:05:56.952359      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:05:57.952464      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:05:58.952565      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:05:59.953136      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:06:00.953223      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:06:01.954061      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:06:02.955072      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:06:03.955367      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:06:04.955464      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:06:05.955951      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:06:06.955994      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:06:07.956085      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:06:08.956324      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:06:09.957188      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:06:10.957231      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:06:11.957744      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:06:12.958959      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:06:13.957999      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:06:14.958100      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:06:15.958324      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:06:16.958408      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:06:17.959220      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:06:18.959368      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:06:19.960638      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:06:20.960839      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:06:21.960813      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:06:22.962365      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:06:23.962459      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:06:24.962572      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:06:25.963198      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:06:26.963326      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:06:27.963444      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:06:28.963685      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:06:29.963787      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:06:30.964548      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:06:31.965115      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:06:32.966559      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:06:33.966173      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:06:34.966354      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:06:35.967321      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:06:36.968199      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:06:37.968294      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:06:38.968940      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:06:39.969150      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:06:40.969257      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:06:41.970038      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:06:42.970067      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:06:43.970371      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:06:44.970493      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:06:45.971216      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:06:46.971687      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:06:47.972106      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:06:48.971963      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:06:49.972081      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:06:50.972162      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:06:51.972802      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:06:52.972853      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:06:53.973671      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:06:54.973742      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:06:55.973981      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:06:56.974073      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:06:57.974164      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:06:58.974467      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:06:59.974567      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:07:00.974759      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 07/27/24 13:07:01.023
  Jul 27 13:07:01.029: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-5170" for this suite. @ 07/27/24 13:07:01.034
• [328.067 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1053
  STEP: Creating a kubernetes client @ 07/27/24 13:07:01.041
  Jul 27 13:07:01.041: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename kubectl @ 07/27/24 13:07:01.042
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:07:01.058
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:07:01.061
  STEP: create deployment with httpd image @ 07/27/24 13:07:01.064
  Jul 27 13:07:01.064: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-5037 create -f -'
  Jul 27 13:07:01.132: INFO: stderr: ""
  Jul 27 13:07:01.132: INFO: stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 07/27/24 13:07:01.132
  Jul 27 13:07:01.132: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-5037 diff -f -'
  E0727 13:07:01.974870      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:07:02.975255      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:07:03.975370      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:07:04.975619      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:07:05.422: INFO: rc: 1
  Jul 27 13:07:05.422: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-5037 delete -f -'
  Jul 27 13:07:05.470: INFO: stderr: ""
  Jul 27 13:07:05.470: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  Jul 27 13:07:05.470: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5037" for this suite. @ 07/27/24 13:07:05.475
• [4.440 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 07/27/24 13:07:05.481
  Jul 27 13:07:05.481: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename webhook @ 07/27/24 13:07:05.482
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:07:05.5
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:07:05.503
  STEP: Setting up server cert @ 07/27/24 13:07:05.528
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/27/24 13:07:05.696
  STEP: Deploying the webhook pod @ 07/27/24 13:07:05.705
  STEP: Wait for the deployment to be ready @ 07/27/24 13:07:05.719
  Jul 27 13:07:05.729: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0727 13:07:05.976296      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:07:06.976498      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/27/24 13:07:07.741
  STEP: Verifying the service has paired with the endpoint @ 07/27/24 13:07:07.759
  E0727 13:07:07.977213      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:07:08.759: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 07/27/24 13:07:08.767
  STEP: create a pod @ 07/27/24 13:07:08.781
  E0727 13:07:08.978088      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:07:09.978751      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 07/27/24 13:07:10.798
  Jul 27 13:07:10.798: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=webhook-7244 attach --namespace=webhook-7244 to-be-attached-pod -i -c=container1'
  Jul 27 13:07:10.850: INFO: rc: 1
  Jul 27 13:07:10.899: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7244" for this suite. @ 07/27/24 13:07:10.903
  STEP: Destroying namespace "webhook-markers-5828" for this suite. @ 07/27/24 13:07:10.911
• [5.436 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 07/27/24 13:07:10.917
  Jul 27 13:07:10.917: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename server-version @ 07/27/24 13:07:10.918
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:07:10.933
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:07:10.935
  STEP: Request ServerVersion @ 07/27/24 13:07:10.937
  STEP: Confirm major version @ 07/27/24 13:07:10.939
  Jul 27 13:07:10.939: INFO: Major version: 1
  STEP: Confirm minor version @ 07/27/24 13:07:10.939
  Jul 27 13:07:10.939: INFO: cleanMinorVersion: 29
  Jul 27 13:07:10.939: INFO: Minor version: 29
  Jul 27 13:07:10.939: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-5676" for this suite. @ 07/27/24 13:07:10.942
• [0.031 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 07/27/24 13:07:10.948
  Jul 27 13:07:10.948: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename field-validation @ 07/27/24 13:07:10.949
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:07:10.964
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:07:10.966
  Jul 27 13:07:10.969: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  W0727 13:07:10.969654      20 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc000fa2a10 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E0727 13:07:10.979623      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:07:11.980599      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:07:12.980813      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0727 13:07:13.503926      20 warnings.go:70] unknown field "alpha"
  W0727 13:07:13.503945      20 warnings.go:70] unknown field "beta"
  W0727 13:07:13.503949      20 warnings.go:70] unknown field "delta"
  W0727 13:07:13.503952      20 warnings.go:70] unknown field "epsilon"
  W0727 13:07:13.503956      20 warnings.go:70] unknown field "gamma"
  E0727 13:07:13.981170      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:07:14.046: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4086" for this suite. @ 07/27/24 13:07:14.049
• [3.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 07/27/24 13:07:14.057
  Jul 27 13:07:14.057: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename gc @ 07/27/24 13:07:14.057
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:07:14.073
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:07:14.076
  STEP: create the rc1 @ 07/27/24 13:07:14.082
  STEP: create the rc2 @ 07/27/24 13:07:14.087
  E0727 13:07:14.981207      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:07:15.981365      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:07:16.981465      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:07:17.985658      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:07:18.986776      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:07:19.987212      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 07/27/24 13:07:20.099
  STEP: delete the rc simpletest-rc-to-be-deleted @ 07/27/24 13:07:20.603
  STEP: wait for the rc to be deleted @ 07/27/24 13:07:20.612
  E0727 13:07:20.988103      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:07:21.989182      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:07:23.002933      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:07:24.003392      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:07:25.003471      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:07:25.623: INFO: 66 pods remaining
  Jul 27 13:07:25.623: INFO: 66 pods has nil DeletionTimestamp
  Jul 27 13:07:25.623: INFO: 
  E0727 13:07:26.004233      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:07:27.004313      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:07:28.004374      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:07:29.004503      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:07:30.004738      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 07/27/24 13:07:30.623
  W0727 13:07:30.628931      20 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Jul 27 13:07:30.628: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jul 27 13:07:30.629: INFO: Deleting pod "simpletest-rc-to-be-deleted-26fjt" in namespace "gc-2145"
  Jul 27 13:07:30.641: INFO: Deleting pod "simpletest-rc-to-be-deleted-2rz67" in namespace "gc-2145"
  Jul 27 13:07:30.654: INFO: Deleting pod "simpletest-rc-to-be-deleted-4mzx7" in namespace "gc-2145"
  Jul 27 13:07:30.671: INFO: Deleting pod "simpletest-rc-to-be-deleted-62jks" in namespace "gc-2145"
  Jul 27 13:07:30.682: INFO: Deleting pod "simpletest-rc-to-be-deleted-67x86" in namespace "gc-2145"
  Jul 27 13:07:30.694: INFO: Deleting pod "simpletest-rc-to-be-deleted-6tvt4" in namespace "gc-2145"
  Jul 27 13:07:30.709: INFO: Deleting pod "simpletest-rc-to-be-deleted-75p9d" in namespace "gc-2145"
  Jul 27 13:07:30.721: INFO: Deleting pod "simpletest-rc-to-be-deleted-79q6g" in namespace "gc-2145"
  Jul 27 13:07:30.736: INFO: Deleting pod "simpletest-rc-to-be-deleted-7cnm2" in namespace "gc-2145"
  Jul 27 13:07:30.750: INFO: Deleting pod "simpletest-rc-to-be-deleted-7fswb" in namespace "gc-2145"
  Jul 27 13:07:30.765: INFO: Deleting pod "simpletest-rc-to-be-deleted-7k98x" in namespace "gc-2145"
  Jul 27 13:07:30.780: INFO: Deleting pod "simpletest-rc-to-be-deleted-7qk4j" in namespace "gc-2145"
  Jul 27 13:07:30.792: INFO: Deleting pod "simpletest-rc-to-be-deleted-7tbs6" in namespace "gc-2145"
  Jul 27 13:07:30.803: INFO: Deleting pod "simpletest-rc-to-be-deleted-8dtf4" in namespace "gc-2145"
  Jul 27 13:07:30.818: INFO: Deleting pod "simpletest-rc-to-be-deleted-8gj8c" in namespace "gc-2145"
  Jul 27 13:07:30.832: INFO: Deleting pod "simpletest-rc-to-be-deleted-969rv" in namespace "gc-2145"
  Jul 27 13:07:30.845: INFO: Deleting pod "simpletest-rc-to-be-deleted-97xq5" in namespace "gc-2145"
  Jul 27 13:07:30.859: INFO: Deleting pod "simpletest-rc-to-be-deleted-9j8vd" in namespace "gc-2145"
  Jul 27 13:07:30.873: INFO: Deleting pod "simpletest-rc-to-be-deleted-bc5h7" in namespace "gc-2145"
  Jul 27 13:07:30.887: INFO: Deleting pod "simpletest-rc-to-be-deleted-bjtz4" in namespace "gc-2145"
  Jul 27 13:07:30.904: INFO: Deleting pod "simpletest-rc-to-be-deleted-brslj" in namespace "gc-2145"
  Jul 27 13:07:30.916: INFO: Deleting pod "simpletest-rc-to-be-deleted-bst6b" in namespace "gc-2145"
  Jul 27 13:07:30.927: INFO: Deleting pod "simpletest-rc-to-be-deleted-c89q6" in namespace "gc-2145"
  Jul 27 13:07:30.943: INFO: Deleting pod "simpletest-rc-to-be-deleted-cgsb4" in namespace "gc-2145"
  Jul 27 13:07:30.960: INFO: Deleting pod "simpletest-rc-to-be-deleted-ctpf7" in namespace "gc-2145"
  Jul 27 13:07:30.974: INFO: Deleting pod "simpletest-rc-to-be-deleted-d7dpx" in namespace "gc-2145"
  Jul 27 13:07:30.985: INFO: Deleting pod "simpletest-rc-to-be-deleted-dbc6g" in namespace "gc-2145"
  Jul 27 13:07:30.996: INFO: Deleting pod "simpletest-rc-to-be-deleted-dbrjj" in namespace "gc-2145"
  E0727 13:07:31.005130      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:07:31.011: INFO: Deleting pod "simpletest-rc-to-be-deleted-dcdxh" in namespace "gc-2145"
  Jul 27 13:07:31.023: INFO: Deleting pod "simpletest-rc-to-be-deleted-dgdcr" in namespace "gc-2145"
  Jul 27 13:07:31.052: INFO: Deleting pod "simpletest-rc-to-be-deleted-dj9hp" in namespace "gc-2145"
  Jul 27 13:07:31.068: INFO: Deleting pod "simpletest-rc-to-be-deleted-dvrgv" in namespace "gc-2145"
  Jul 27 13:07:31.084: INFO: Deleting pod "simpletest-rc-to-be-deleted-fl5sv" in namespace "gc-2145"
  Jul 27 13:07:31.099: INFO: Deleting pod "simpletest-rc-to-be-deleted-fzl4c" in namespace "gc-2145"
  Jul 27 13:07:31.111: INFO: Deleting pod "simpletest-rc-to-be-deleted-gc5dp" in namespace "gc-2145"
  Jul 27 13:07:31.124: INFO: Deleting pod "simpletest-rc-to-be-deleted-gfjhh" in namespace "gc-2145"
  Jul 27 13:07:31.137: INFO: Deleting pod "simpletest-rc-to-be-deleted-gkgl5" in namespace "gc-2145"
  Jul 27 13:07:31.151: INFO: Deleting pod "simpletest-rc-to-be-deleted-gpwpz" in namespace "gc-2145"
  Jul 27 13:07:31.165: INFO: Deleting pod "simpletest-rc-to-be-deleted-grkwb" in namespace "gc-2145"
  Jul 27 13:07:31.176: INFO: Deleting pod "simpletest-rc-to-be-deleted-gs8v6" in namespace "gc-2145"
  Jul 27 13:07:31.194: INFO: Deleting pod "simpletest-rc-to-be-deleted-gxg4w" in namespace "gc-2145"
  Jul 27 13:07:31.204: INFO: Deleting pod "simpletest-rc-to-be-deleted-hms2v" in namespace "gc-2145"
  Jul 27 13:07:31.219: INFO: Deleting pod "simpletest-rc-to-be-deleted-hnhr2" in namespace "gc-2145"
  Jul 27 13:07:31.233: INFO: Deleting pod "simpletest-rc-to-be-deleted-hvsm6" in namespace "gc-2145"
  Jul 27 13:07:31.249: INFO: Deleting pod "simpletest-rc-to-be-deleted-j2jpj" in namespace "gc-2145"
  Jul 27 13:07:31.264: INFO: Deleting pod "simpletest-rc-to-be-deleted-j7tzz" in namespace "gc-2145"
  Jul 27 13:07:31.285: INFO: Deleting pod "simpletest-rc-to-be-deleted-jf5j2" in namespace "gc-2145"
  Jul 27 13:07:31.302: INFO: Deleting pod "simpletest-rc-to-be-deleted-jk5sh" in namespace "gc-2145"
  Jul 27 13:07:31.321: INFO: Deleting pod "simpletest-rc-to-be-deleted-jktfn" in namespace "gc-2145"
  Jul 27 13:07:31.341: INFO: Deleting pod "simpletest-rc-to-be-deleted-k6mw8" in namespace "gc-2145"
  Jul 27 13:07:31.353: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2145" for this suite. @ 07/27/24 13:07:31.357
• [17.308 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 07/27/24 13:07:31.366
  Jul 27 13:07:31.366: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename subjectreview @ 07/27/24 13:07:31.367
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:07:31.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:07:31.414
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-4001" @ 07/27/24 13:07:31.417
  Jul 27 13:07:31.422: INFO: saUsername: "system:serviceaccount:subjectreview-4001:e2e"
  Jul 27 13:07:31.422: INFO: saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-4001"}
  Jul 27 13:07:31.422: INFO: saUID: "f204eb59-5946-4633-89c7-4192632fa2ad"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-4001:e2e" @ 07/27/24 13:07:31.422
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-4001:e2e" @ 07/27/24 13:07:31.422
  Jul 27 13:07:31.424: INFO: sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-4001:e2e" api 'list' configmaps in "subjectreview-4001" namespace @ 07/27/24 13:07:31.424
  Jul 27 13:07:31.425: INFO: SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-4001:e2e" @ 07/27/24 13:07:31.425
  Jul 27 13:07:31.427: INFO: lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  Jul 27 13:07:31.427: INFO: LocalSubjectAccessReview has been verified
  Jul 27 13:07:31.427: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-4001" for this suite. @ 07/27/24 13:07:31.431
• [0.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 07/27/24 13:07:31.441
  Jul 27 13:07:31.441: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename container-probe @ 07/27/24 13:07:31.442
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:07:31.454
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:07:31.458
  STEP: Creating pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820 @ 07/27/24 13:07:31.466
  E0727 13:07:32.022528      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:07:33.028261      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/27/24 13:07:33.493
  Jul 27 13:07:33.496: INFO: Initial restart count of pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 is 0
  Jul 27 13:07:33.499: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:07:34.028336      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:07:35.028466      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:07:35.504: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:07:36.028614      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:07:37.028751      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:07:37.509: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:07:38.029756      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:07:39.029872      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:07:39.513: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:07:40.030547      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:07:41.033449      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:07:41.517: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:07:42.033365      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:07:43.034305      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:07:43.521: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:07:44.035310      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:07:45.035478      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:07:45.526: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:07:46.035563      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:07:47.036338      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:07:47.531: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:07:48.036429      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:07:49.036624      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:07:49.536: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:07:50.036651      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:07:51.036831      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:07:51.541: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:07:52.037144      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:07:53.038196      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:07:53.546: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:07:54.038464      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:07:55.039529      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:07:55.550: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:07:56.040550      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:07:57.040753      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:07:57.556: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:07:58.041622      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:07:59.042199      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:07:59.561: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:08:00.042549      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:08:01.042752      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:08:01.567: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:08:02.042823      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:08:03.042991      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:08:03.572: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:08:04.043292      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:08:05.043626      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:08:05.577: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:08:06.044691      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:08:07.044785      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:08:07.581: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:08:08.045145      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:08:09.045184      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:08:09.587: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:08:10.045965      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:08:11.046062      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:08:11.592: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:08:12.046988      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:08:13.047111      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:08:13.597: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:08:14.047343      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:08:15.047432      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:08:15.603: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:08:16.047537      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:08:17.047994      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:08:17.608: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:08:18.048610      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:08:19.049212      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:08:19.613: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:08:20.050219      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:08:21.050382      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:08:21.618: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:08:22.050706      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:08:23.050800      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:08:23.623: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:08:24.051840      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:08:25.051924      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:08:25.627: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:08:26.052853      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:08:27.053068      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:08:27.632: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:08:28.053714      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:08:29.053874      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:08:29.637: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:08:30.054276      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:08:31.055148      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:08:31.642: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:08:32.056126      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:08:33.056223      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:08:33.647: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:08:34.056537      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:08:35.056708      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:08:35.651: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:08:36.057030      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:08:37.057135      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:08:37.655: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:08:38.058143      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:08:39.058340      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:08:39.660: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:08:40.059104      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:08:41.059219      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:08:41.665: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:08:42.060217      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:08:43.060379      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:08:43.670: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:08:44.060598      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:08:45.061498      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:08:45.675: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:08:46.061999      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:08:47.062120      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:08:47.679: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:08:48.063101      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:08:49.063310      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:08:49.683: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:08:50.064103      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:08:51.064214      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:08:51.688: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:08:52.064688      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:08:53.064780      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:08:53.693: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:08:54.065688      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:08:55.066199      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:08:55.699: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:08:56.066897      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:08:57.067799      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:08:57.704: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:08:58.068528      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:08:59.068751      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:08:59.709: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:09:00.068995      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:09:01.069155      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:09:01.714: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:09:02.070214      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:09:03.070573      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:09:03.720: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:09:04.070941      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:09:05.071023      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:09:05.724: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:09:06.071249      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:09:07.071352      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:09:07.730: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:09:08.071442      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:09:09.071736      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:09:09.735: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:09:10.071882      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:09:11.072239      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:09:11.741: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:09:12.072742      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:09:13.072831      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:09:13.746: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:09:14.073694      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:09:15.073787      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:09:15.751: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:09:16.074530      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:09:17.074617      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:09:17.755: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:09:18.074778      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:09:19.074989      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:09:19.760: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:09:20.075510      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:09:21.075597      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:09:21.764: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:09:22.076249      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:09:23.076563      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:09:23.770: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:09:24.077502      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:09:25.077589      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:09:25.774: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:09:26.078065      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:09:27.078151      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:09:27.779: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:09:28.079023      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:09:29.079197      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:09:29.784: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:09:30.079754      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:09:31.079951      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:09:31.789: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:09:32.080663      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:09:33.080747      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:09:33.795: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:09:34.081631      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:09:35.082192      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:09:35.800: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:09:36.083068      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:09:37.083129      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:09:37.805: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:09:38.083905      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:09:39.084095      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:09:39.810: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:09:40.084558      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:09:41.084974      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:09:41.814: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:09:42.085156      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:09:43.086211      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:09:43.819: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:09:44.086980      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:09:45.087222      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:09:45.824: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:09:46.087635      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:09:47.088444      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:09:47.828: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:09:48.089270      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:09:49.089361      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:09:49.833: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:09:50.089882      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:09:51.090238      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:09:51.838: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:09:52.090383      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:09:53.090555      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:09:53.843: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:09:54.090741      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:09:55.091527      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:09:55.848: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:09:56.092137      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:09:57.092177      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:09:57.854: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:09:58.092418      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:09:59.092705      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:09:59.858: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:10:00.093252      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:10:01.094224      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:10:01.863: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:10:02.094932      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:10:03.095239      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:10:03.869: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:10:04.095313      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:10:05.095535      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:10:05.875: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:10:06.096297      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:10:07.096412      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:10:07.878: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:10:08.097226      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:10:09.098200      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:10:09.882: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:10:10.098256      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:10:11.098442      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:10:11.888: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:10:12.098605      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:10:13.099567      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:10:13.893: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:10:14.100132      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:10:15.100246      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:10:15.899: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:10:16.100492      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:10:17.100719      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:10:17.903: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:10:18.101555      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:10:19.102196      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:10:19.908: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:10:20.102290      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:10:21.102450      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:10:21.912: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:10:22.102852      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:10:23.103046      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:10:23.917: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:10:24.103156      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:10:25.103228      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:10:25.922: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:10:26.103743      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:10:27.103926      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:10:27.927: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:10:28.104603      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:10:29.104774      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:10:29.932: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:10:30.104877      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:10:31.105088      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:10:31.938: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:10:32.105151      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:10:33.105217      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:10:33.943: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:10:34.105351      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:10:35.105452      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:10:35.947: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:10:36.105930      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:10:37.106041      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:10:37.952: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:10:38.106915      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:10:39.107224      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:10:39.957: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:10:40.107590      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:10:41.107702      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:10:41.962: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:10:42.108142      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:10:43.108934      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:10:43.967: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:10:44.109628      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:10:45.110296      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:10:45.972: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:10:46.110372      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:10:47.110613      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:10:47.977: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:10:48.111598      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:10:49.111693      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:10:49.982: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:10:50.112725      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:10:51.112892      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:10:51.987: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:10:52.113666      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:10:53.113759      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:10:53.993: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:10:54.114488      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:10:55.114583      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:10:55.998: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:10:56.115460      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:10:57.115859      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:10:58.002: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:10:58.115909      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:10:59.115965      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:11:00.007: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:11:00.116523      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:11:01.116622      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:11:02.012: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:11:02.117609      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:11:03.117694      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:11:04.017: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:11:04.118439      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:11:05.118637      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:11:06.022: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:11:06.119221      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:11:07.119376      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:11:08.027: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:11:08.120219      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:11:09.121249      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:11:10.032: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:11:10.121335      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:11:11.121431      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:11:12.037: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:11:12.122321      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:11:13.122431      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:11:14.041: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:11:14.123179      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:11:15.123304      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:11:16.047: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:11:16.124044      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:11:17.124148      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:11:18.053: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:11:18.125037      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:11:19.125137      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:11:20.058: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:11:20.125853      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:11:21.126210      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:11:22.063: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:11:22.127036      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:11:23.127279      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:11:24.069: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:11:24.127378      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:11:25.127624      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:11:26.074: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:11:26.127720      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:11:27.128051      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:11:28.079: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:11:28.128870      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:11:29.129086      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:11:30.085: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:11:30.129470      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:11:31.130208      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:11:32.091: INFO: Get pod busybox-ee03e50a-4a94-438f-a934-2e6b5be3c354 in namespace container-probe-7820
  E0727 13:11:32.130566      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:11:33.130893      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 07/27/24 13:11:34.092
  Jul 27 13:11:34.108: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7820" for this suite. @ 07/27/24 13:11:34.112
• [242.679 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 07/27/24 13:11:34.12
  Jul 27 13:11:34.120: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename configmap @ 07/27/24 13:11:34.121
  E0727 13:11:34.131174      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:11:34.135
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:11:34.138
  STEP: Creating configMap with name configmap-test-volume-map-b3f12a63-a36b-4d0d-b8c7-14b57fe34962 @ 07/27/24 13:11:34.14
  STEP: Creating a pod to test consume configMaps @ 07/27/24 13:11:34.144
  E0727 13:11:35.132042      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:11:36.132134      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:11:37.132338      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:11:38.132448      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/27/24 13:11:38.168
  Jul 27 13:11:38.172: INFO: Trying to get logs from node ip-172-31-18-96 pod pod-configmaps-0994765b-a965-40b1-9a1d-3356f644af70 container agnhost-container: <nil>
  STEP: delete the pod @ 07/27/24 13:11:38.188
  Jul 27 13:11:38.206: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6524" for this suite. @ 07/27/24 13:11:38.209
• [4.097 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 07/27/24 13:11:38.218
  Jul 27 13:11:38.218: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename container-probe @ 07/27/24 13:11:38.218
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:11:38.232
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:11:38.234
  STEP: Creating pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678 @ 07/27/24 13:11:38.237
  E0727 13:11:39.133161      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:11:40.134234      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/27/24 13:11:40.254
  Jul 27 13:11:40.258: INFO: Initial restart count of pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 is 0
  Jul 27 13:11:40.261: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:11:41.134622      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:11:42.134459      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:11:42.267: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:11:43.134583      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:11:44.134855      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:11:44.272: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:11:45.134944      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:11:46.135148      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:11:46.278: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:11:47.135293      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:11:48.135752      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:11:48.283: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:11:49.136711      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:11:50.136924      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:11:50.289: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:11:51.137129      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:11:52.138202      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:11:52.293: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:11:53.138302      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:11:54.138492      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:11:54.298: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:11:55.138984      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:11:56.139370      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:11:56.303: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:11:57.139476      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:11:58.139907      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:11:58.307: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:11:59.140092      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:12:00.140247      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:12:00.313: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:12:01.140399      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:12:02.140748      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:12:02.318: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:12:03.141698      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:12:04.141762      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:12:04.323: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:12:05.141858      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:12:06.141954      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:12:06.329: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:12:07.142100      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:12:08.142640      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:12:08.334: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:12:09.142868      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:12:10.143084      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:12:10.340: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:12:11.143177      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:12:12.143426      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:12:12.345: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:12:13.144388      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:12:14.144491      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:12:14.350: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:12:15.144578      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:12:16.144774      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:12:16.356: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:12:17.144958      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:12:18.145138      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:12:18.360: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:12:19.145246      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:12:20.146203      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:12:20.366: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:12:21.147267      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:12:22.147631      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:12:22.372: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:12:23.147738      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:12:24.147943      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:12:24.376: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:12:25.148164      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:12:26.148246      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:12:26.382: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:12:27.148378      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:12:28.148461      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:12:28.388: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:12:29.149441      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:12:30.150224      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:12:30.392: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:12:31.150325      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:12:32.151294      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:12:32.398: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:12:33.151390      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:12:34.152368      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:12:34.403: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:12:35.152480      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:12:36.152663      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:12:36.409: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:12:37.153132      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:12:38.154192      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:12:38.414: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:12:39.154862      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:12:40.155037      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:12:40.419: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:12:41.156117      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:12:42.156356      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:12:42.424: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:12:43.156458      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:12:44.156627      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:12:44.429: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:12:45.157696      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:12:46.158436      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:12:46.434: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:12:47.159330      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:12:48.159444      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:12:48.438: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:12:49.159603      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:12:50.160659      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:12:50.443: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:12:51.160811      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:12:52.161140      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:12:52.448: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:12:53.161143      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:12:54.162217      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:12:54.454: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:12:55.162760      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:12:56.162929      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:12:56.460: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:12:57.163477      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:12:58.163570      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:12:58.465: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:12:59.164007      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:13:00.164346      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:13:00.471: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:13:01.164995      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:13:02.165140      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:13:02.476: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:13:03.165615      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:13:04.165724      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:13:04.482: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:13:05.166220      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:13:06.166402      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:13:06.487: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:13:07.167026      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:13:08.167290      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:13:08.492: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:13:09.168035      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:13:10.168188      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:13:10.496: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:13:11.168275      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:13:12.168407      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:13:12.501: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:13:13.169070      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:13:14.169218      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:13:14.507: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:13:15.170217      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:13:16.170815      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:13:16.511: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:13:17.171414      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:13:18.171731      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:13:18.516: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:13:19.172649      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:13:20.172747      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:13:20.521: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:13:21.173139      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:13:22.174201      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:13:22.526: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:13:23.175188      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:13:24.175376      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:13:24.531: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:13:25.175493      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:13:26.175703      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:13:26.535: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:13:27.176416      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:13:28.176534      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:13:28.540: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:13:29.176646      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:13:30.176756      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:13:30.545: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:13:31.176976      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:13:32.177139      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:13:32.550: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:13:33.177240      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:13:34.178276      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:13:34.556: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:13:35.178815      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:13:36.178995      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:13:36.560: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:13:37.179103      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:13:38.179368      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:13:38.567: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:13:39.179728      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:13:40.179923      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:13:40.571: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:13:41.180258      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:13:42.180399      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:13:42.576: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:13:43.180443      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:13:44.180552      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:13:44.581: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:13:45.181135      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:13:46.181232      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:13:46.586: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:13:47.181323      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:13:48.181432      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:13:48.591: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:13:49.182222      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:13:50.182306      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:13:50.596: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:13:51.182402      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:13:52.182817      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:13:52.601: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:13:53.182916      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:13:54.183160      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:13:54.607: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:13:55.183591      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:13:56.183804      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:13:56.611: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:13:57.183940      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:13:58.184263      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:13:58.617: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:13:59.185125      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:14:00.185177      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:14:00.621: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:14:01.185260      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:14:02.186197      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:14:02.627: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:14:03.186301      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:14:04.186848      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:14:04.633: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:14:05.186938      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:14:06.187146      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:14:06.638: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:14:07.187748      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:14:08.187851      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:14:08.643: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:14:09.188208      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:14:10.188307      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:14:10.648: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:14:11.188640      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:14:12.188962      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:14:12.653: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:14:13.189092      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:14:14.189147      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:14:14.658: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:14:15.190208      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:14:16.190383      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:14:16.663: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:14:17.191132      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:14:18.191858      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:14:18.668: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:14:19.192584      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:14:20.192684      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:14:20.673: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:14:21.193506      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:14:22.193604      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:14:22.679: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:14:23.193751      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:14:24.193861      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:14:24.685: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:14:25.194941      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:14:26.195049      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:14:26.690: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:14:27.196012      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:14:28.196119      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:14:28.695: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:14:29.196784      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:14:30.197116      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:14:30.699: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:14:31.197139      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:14:32.197239      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:14:32.704: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:14:33.198047      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:14:34.198222      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:14:34.709: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:14:35.198276      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:14:36.198436      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:14:36.714: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:14:37.199245      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:14:38.199330      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:14:38.719: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:14:39.199736      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:14:40.199974      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:14:40.723: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:14:41.200384      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:14:42.200424      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:14:42.728: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:14:43.200544      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:14:44.200639      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:14:44.733: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:14:45.201145      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:14:46.201148      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:14:46.738: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:14:47.202263      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:14:48.202574      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:14:48.744: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:14:49.202742      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:14:50.202831      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:14:50.749: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:14:51.203663      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:14:52.203934      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:14:52.753: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:14:53.204494      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:14:54.204676      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:14:54.758: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:14:55.205526      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:14:56.205622      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:14:56.763: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:14:57.205786      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:14:58.206085      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:14:58.768: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:14:59.206845      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:15:00.207024      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:15:00.772: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:15:01.207118      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:15:02.207387      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:15:02.777: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:15:03.208290      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:15:04.209135      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:15:04.783: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:15:05.209149      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:15:06.209168      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:15:06.789: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:15:07.209793      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:15:08.209918      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:15:08.793: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:15:09.210317      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:15:10.211005      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:15:10.798: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:15:11.211088      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:15:12.211930      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:15:12.804: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:15:13.212879      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:15:14.212992      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:15:14.808: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:15:15.213135      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:15:16.214195      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:15:16.814: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:15:17.215230      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:15:18.215544      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:15:18.819: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:15:19.215668      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:15:20.215875      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:15:20.824: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:15:21.216698      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:15:22.216799      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:15:22.828: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:15:23.217464      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:15:24.218236      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:15:24.834: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:15:25.218456      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:15:26.218968      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:15:26.841: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:15:27.219770      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:15:28.219849      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:15:28.847: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:15:29.219938      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:15:30.220025      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:15:30.851: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:15:31.220622      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:15:32.220926      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:15:32.856: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:15:33.221145      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:15:34.221231      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:15:34.862: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:15:35.222237      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:15:36.222439      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:15:36.867: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:15:37.223276      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:15:38.223400      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:15:38.872: INFO: Get pod test-webserver-43e2d739-2b67-472b-a304-db20c0eeeda3 in namespace container-probe-5678
  E0727 13:15:39.224366      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:15:40.224554      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 07/27/24 13:15:40.873
  Jul 27 13:15:40.891: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5678" for this suite. @ 07/27/24 13:15:40.895
• [242.683 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 07/27/24 13:15:40.902
  Jul 27 13:15:40.902: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename projected @ 07/27/24 13:15:40.902
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:15:40.917
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:15:40.92
  STEP: Creating the pod @ 07/27/24 13:15:40.922
  E0727 13:15:41.224927      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:15:42.225770      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:15:43.226240      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:15:43.485: INFO: Successfully updated pod "annotationupdate2e5a22ed-39bf-4959-b068-7fd809f2d305"
  E0727 13:15:44.226822      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:15:45.227048      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:15:45.500: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1467" for this suite. @ 07/27/24 13:15:45.504
• [4.609 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:155
  STEP: Creating a kubernetes client @ 07/27/24 13:15:45.511
  Jul 27 13:15:45.511: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename secrets @ 07/27/24 13:15:45.512
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:15:45.528
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:15:45.53
  STEP: creating a secret @ 07/27/24 13:15:45.533
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 07/27/24 13:15:45.54
  STEP: patching the secret @ 07/27/24 13:15:45.543
  STEP: deleting the secret using a LabelSelector @ 07/27/24 13:15:45.552
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 07/27/24 13:15:45.56
  Jul 27 13:15:45.563: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4981" for this suite. @ 07/27/24 13:15:45.567
• [0.062 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:169
  STEP: Creating a kubernetes client @ 07/27/24 13:15:45.573
  Jul 27 13:15:45.573: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 07/27/24 13:15:45.574
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:15:45.588
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:15:45.59
  STEP: create the container to handle the HTTPGet hook request. @ 07/27/24 13:15:45.596
  E0727 13:15:46.227643      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:15:47.227741      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 07/27/24 13:15:47.619
  E0727 13:15:48.227879      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:15:49.227976      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 07/27/24 13:15:49.639
  STEP: delete the pod with lifecycle hook @ 07/27/24 13:15:49.655
  E0727 13:15:50.228070      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:15:51.228183      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:15:51.673: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-3402" for this suite. @ 07/27/24 13:15:51.677
• [6.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 07/27/24 13:15:51.684
  Jul 27 13:15:51.684: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename pods @ 07/27/24 13:15:51.685
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:15:51.701
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:15:51.703
  STEP: Create set of pods @ 07/27/24 13:15:51.706
  Jul 27 13:15:51.719: INFO: created test-pod-1
  Jul 27 13:15:51.726: INFO: created test-pod-2
  Jul 27 13:15:51.733: INFO: created test-pod-3
  STEP: waiting for all 3 pods to be running @ 07/27/24 13:15:51.733
  E0727 13:15:52.228293      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:15:53.228409      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for all pods to be deleted @ 07/27/24 13:15:53.782
  Jul 27 13:15:53.786: INFO: Pod quantity 3 is different from expected quantity 0
  E0727 13:15:54.228589      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:15:54.787: INFO: Pod quantity 2 is different from expected quantity 0
  E0727 13:15:55.228944      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:15:55.787: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1634" for this suite. @ 07/27/24 13:15:55.791
• [4.115 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:47
  STEP: Creating a kubernetes client @ 07/27/24 13:15:55.8
  Jul 27 13:15:55.800: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename secrets @ 07/27/24 13:15:55.8
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:15:55.812
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:15:55.814
  STEP: Creating secret with name secret-test-4a4a4d1a-9d2c-4fe2-9418-af8f0b665c11 @ 07/27/24 13:15:55.826
  STEP: Creating a pod to test consume secrets @ 07/27/24 13:15:55.832
  E0727 13:15:56.229810      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:15:57.230011      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:15:58.230366      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:15:59.231220      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/27/24 13:15:59.856
  Jul 27 13:15:59.859: INFO: Trying to get logs from node ip-172-31-18-96 pod pod-secrets-6e919348-f7b9-4d09-a24e-658e6a154ce2 container secret-env-test: <nil>
  STEP: delete the pod @ 07/27/24 13:15:59.866
  Jul 27 13:15:59.886: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2776" for this suite. @ 07/27/24 13:15:59.889
• [4.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1533
  STEP: Creating a kubernetes client @ 07/27/24 13:15:59.897
  Jul 27 13:15:59.897: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename services @ 07/27/24 13:15:59.897
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:15:59.909
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:15:59.912
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-5922 @ 07/27/24 13:15:59.914
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 07/27/24 13:15:59.93
  STEP: creating service externalsvc in namespace services-5922 @ 07/27/24 13:15:59.93
  STEP: creating replication controller externalsvc in namespace services-5922 @ 07/27/24 13:15:59.946
  I0727 13:15:59.954338      20 runners.go:197] Created replication controller with name: externalsvc, namespace: services-5922, replica count: 2
  E0727 13:16:00.232054      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:16:01.232989      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:16:02.233182      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0727 13:16:03.005083      20 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 07/27/24 13:16:03.01
  Jul 27 13:16:03.029: INFO: Creating new exec pod
  E0727 13:16:03.233897      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:16:04.234521      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:16:05.046: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=services-5922 exec execpod2cj6r -- /bin/sh -x -c nslookup nodeport-service.services-5922.svc.cluster.local'
  Jul 27 13:16:05.154: INFO: stderr: "+ nslookup nodeport-service.services-5922.svc.cluster.local\n"
  Jul 27 13:16:05.154: INFO: stdout: "Server:\t\t10.152.183.144\nAddress:\t10.152.183.144#53\n\nnodeport-service.services-5922.svc.cluster.local\tcanonical name = externalsvc.services-5922.svc.cluster.local.\nName:\texternalsvc.services-5922.svc.cluster.local\nAddress: 10.152.183.130\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-5922, will wait for the garbage collector to delete the pods @ 07/27/24 13:16:05.154
  Jul 27 13:16:05.216: INFO: Deleting ReplicationController externalsvc took: 7.664307ms
  E0727 13:16:05.235720      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:16:05.317: INFO: Terminating ReplicationController externalsvc pods took: 100.888834ms
  E0727 13:16:06.236692      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:16:07.237177      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:16:08.136: INFO: Cleaning up the NodePort to ExternalName test service
  Jul 27 13:16:08.148: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5922" for this suite. @ 07/27/24 13:16:08.153
• [8.264 seconds]
------------------------------
SS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 07/27/24 13:16:08.161
  Jul 27 13:16:08.161: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename endpointslice @ 07/27/24 13:16:08.161
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:16:08.176
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:16:08.181
  Jul 27 13:16:08.192: INFO: Endpoints addresses: [172.31.6.18 172.31.93.193] , ports: [6443]
  Jul 27 13:16:08.192: INFO: EndpointSlices addresses: [172.31.6.18 172.31.93.193] , ports: [6443]
  Jul 27 13:16:08.192: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-3887" for this suite. @ 07/27/24 13:16:08.196
• [0.041 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:163
  STEP: Creating a kubernetes client @ 07/27/24 13:16:08.202
  Jul 27 13:16:08.202: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename resourcequota @ 07/27/24 13:16:08.202
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:16:08.216
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:16:08.219
  STEP: Discovering how many secrets are in namespace by default @ 07/27/24 13:16:08.222
  E0727 13:16:08.238255      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:16:09.238355      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:16:10.238811      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:16:11.239851      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:16:12.240106      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 07/27/24 13:16:13.226
  E0727 13:16:13.240769      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:16:14.241412      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:16:15.241649      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:16:16.242032      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:16:17.242595      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 07/27/24 13:16:18.23
  STEP: Ensuring resource quota status is calculated @ 07/27/24 13:16:18.237
  E0727 13:16:18.242932      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:16:19.243090      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Secret @ 07/27/24 13:16:20.242
  E0727 13:16:20.243717      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota status captures secret creation @ 07/27/24 13:16:20.255
  E0727 13:16:21.244346      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:16:22.244417      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a secret @ 07/27/24 13:16:22.259
  STEP: Ensuring resource quota status released usage @ 07/27/24 13:16:22.266
  E0727 13:16:23.244531      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:16:24.244644      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:16:24.272: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6693" for this suite. @ 07/27/24 13:16:24.276
• [16.082 seconds]
------------------------------
SS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:228
  STEP: Creating a kubernetes client @ 07/27/24 13:16:24.284
  Jul 27 13:16:24.284: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename var-expansion @ 07/27/24 13:16:24.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:16:24.299
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:16:24.302
  STEP: creating the pod with failed condition @ 07/27/24 13:16:24.304
  E0727 13:16:25.244731      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:16:26.244826      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:16:27.245176      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:16:28.245277      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:16:29.245392      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:16:30.245438      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:16:31.245570      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:16:32.245663      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:16:33.245775      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:16:34.246079      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:16:35.246313      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:16:36.246386      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:16:37.246487      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:16:38.246602      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:16:39.247337      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:16:40.247417      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:16:41.247516      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:16:42.247675      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:16:43.247801      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:16:44.247894      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:16:45.248357      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:16:46.248456      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:16:47.248549      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:16:48.248860      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:16:49.249172      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:16:50.249276      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:16:51.249372      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:16:52.249477      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:16:53.250234      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:16:54.250330      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:16:55.250424      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:16:56.250985      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:16:57.251086      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:16:58.251336      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:16:59.251433      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:17:00.251518      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:17:01.251733      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:17:02.251791      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:17:03.252914      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:17:04.253112      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:17:05.253193      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:17:06.253302      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:17:07.254256      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:17:08.254651      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:17:09.254734      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:17:10.254842      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:17:11.254965      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:17:12.255099      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:17:13.255184      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:17:14.255406      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:17:15.255513      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:17:16.255600      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:17:17.255657      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:17:18.255910      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:17:19.256003      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:17:20.256110      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:17:21.256219      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:17:22.256246      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:17:23.257290      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:17:24.257396      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:17:25.258280      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:17:26.258353      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:17:27.258455      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:17:28.258547      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:17:29.258629      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:17:30.258731      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:17:31.259611      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:17:32.259709      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:17:33.259792      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:17:34.259898      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:17:35.259995      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:17:36.260104      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:17:37.261118      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:17:38.261316      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:17:39.261419      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:17:40.261510      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:17:41.261901      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:17:42.262273      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:17:43.262329      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:17:44.262650      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:17:45.263235      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:17:46.263335      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:17:47.264145      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:17:48.264238      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:17:49.264555      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:17:50.265609      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:17:51.265675      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:17:52.266202      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:17:53.267252      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:17:54.267423      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:17:55.268431      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:17:56.268581      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:17:57.269487      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:17:58.269838      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:17:59.270210      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:18:00.270475      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:18:01.270577      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:18:02.270807      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:18:03.271883      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:18:04.272666      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:18:05.273165      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:18:06.273244      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:18:07.273554      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:18:08.273662      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:18:09.274080      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:18:10.274309      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:18:11.274396      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:18:12.274720      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:18:13.274893      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:18:14.275233      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:18:15.276172      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:18:16.276276      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:18:17.276439      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:18:18.276757      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:18:19.277144      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:18:20.277248      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:18:21.278279      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:18:22.278602      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:18:23.279551      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:18:24.279691      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating the pod @ 07/27/24 13:18:24.315
  Jul 27 13:18:24.828: INFO: Successfully updated pod "var-expansion-9b679a32-5a89-410a-a37c-09ee1b838e4c"
  STEP: waiting for pod running @ 07/27/24 13:18:24.828
  E0727 13:18:25.280573      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:18:26.280648      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 07/27/24 13:18:26.837
  Jul 27 13:18:26.837: INFO: Deleting pod "var-expansion-9b679a32-5a89-410a-a37c-09ee1b838e4c" in namespace "var-expansion-6149"
  Jul 27 13:18:26.846: INFO: Wait up to 5m0s for pod "var-expansion-9b679a32-5a89-410a-a37c-09ee1b838e4c" to be fully deleted
  E0727 13:18:27.280767      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:18:28.281180      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:18:29.281717      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:18:30.282235      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:18:31.282571      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:18:32.282664      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:18:33.283410      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:18:34.283492      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:18:35.283555      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:18:36.283648      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:18:37.283746      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:18:38.283814      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:18:39.283956      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:18:40.284072      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:18:41.284189      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:18:42.284325      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:18:43.284448      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:18:44.284655      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:18:45.285250      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:18:46.285288      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:18:47.285402      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:18:48.285474      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:18:49.286233      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:18:50.286302      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:18:51.287224      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:18:52.287411      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:18:53.287933      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:18:54.288714      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:18:55.288790      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:18:56.288885      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:18:57.289584      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:18:58.289678      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:18:58.941: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6149" for this suite. @ 07/27/24 13:18:58.945
• [154.670 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 07/27/24 13:18:58.954
  Jul 27 13:18:58.954: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename daemonsets @ 07/27/24 13:18:58.955
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:18:58.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:18:58.973
  STEP: Creating simple DaemonSet "daemon-set" @ 07/27/24 13:18:58.999
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/27/24 13:18:59.004
  Jul 27 13:18:59.007: INFO: DaemonSet pods can't tolerate node ip-172-31-6-18 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 27 13:18:59.008: INFO: DaemonSet pods can't tolerate node ip-172-31-93-193 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 27 13:18:59.011: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul 27 13:18:59.011: INFO: Node ip-172-31-10-249 is running 0 daemon pod, expected 1
  E0727 13:18:59.290111      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:19:00.009: INFO: DaemonSet pods can't tolerate node ip-172-31-6-18 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 27 13:19:00.009: INFO: DaemonSet pods can't tolerate node ip-172-31-93-193 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 27 13:19:00.012: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jul 27 13:19:00.012: INFO: Node ip-172-31-18-96 is running 0 daemon pod, expected 1
  E0727 13:19:00.290204      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:19:01.009: INFO: DaemonSet pods can't tolerate node ip-172-31-6-18 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 27 13:19:01.009: INFO: DaemonSet pods can't tolerate node ip-172-31-93-193 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 27 13:19:01.013: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jul 27 13:19:01.013: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 07/27/24 13:19:01.017
  Jul 27 13:19:01.020: INFO: Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 07/27/24 13:19:01.02
  Jul 27 13:19:01.029: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 07/27/24 13:19:01.029
  Jul 27 13:19:01.030: INFO: Observed &DaemonSet event: ADDED
  Jul 27 13:19:01.030: INFO: Observed &DaemonSet event: MODIFIED
  Jul 27 13:19:01.030: INFO: Observed &DaemonSet event: MODIFIED
  Jul 27 13:19:01.031: INFO: Observed &DaemonSet event: MODIFIED
  Jul 27 13:19:01.031: INFO: Observed &DaemonSet event: MODIFIED
  Jul 27 13:19:01.031: INFO: Found daemon set daemon-set in namespace daemonsets-2058 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Jul 27 13:19:01.031: INFO: Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 07/27/24 13:19:01.031
  STEP: watching for the daemon set status to be patched @ 07/27/24 13:19:01.037
  Jul 27 13:19:01.038: INFO: Observed &DaemonSet event: ADDED
  Jul 27 13:19:01.038: INFO: Observed &DaemonSet event: MODIFIED
  Jul 27 13:19:01.038: INFO: Observed &DaemonSet event: MODIFIED
  Jul 27 13:19:01.038: INFO: Observed &DaemonSet event: MODIFIED
  Jul 27 13:19:01.039: INFO: Observed &DaemonSet event: MODIFIED
  Jul 27 13:19:01.039: INFO: Observed daemon set daemon-set in namespace daemonsets-2058 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Jul 27 13:19:01.039: INFO: Observed &DaemonSet event: MODIFIED
  Jul 27 13:19:01.039: INFO: Found daemon set daemon-set in namespace daemonsets-2058 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  Jul 27 13:19:01.039: INFO: Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 07/27/24 13:19:01.043
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2058, will wait for the garbage collector to delete the pods @ 07/27/24 13:19:01.043
  Jul 27 13:19:01.105: INFO: Deleting DaemonSet.extensions daemon-set took: 9.223909ms
  Jul 27 13:19:01.206: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.121719ms
  E0727 13:19:01.293978      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:19:02.294372      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:19:02.411: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul 27 13:19:02.411: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jul 27 13:19:02.414: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"30034"},"items":null}

  Jul 27 13:19:02.418: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"30034"},"items":null}

  Jul 27 13:19:02.431: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2058" for this suite. @ 07/27/24 13:19:02.434
• [3.487 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 07/27/24 13:19:02.442
  Jul 27 13:19:02.442: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename pods @ 07/27/24 13:19:02.442
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:19:02.457
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:19:02.459
  STEP: creating pod @ 07/27/24 13:19:02.461
  E0727 13:19:03.294476      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:19:04.294577      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:19:04.485: INFO: Pod pod-hostip-62407ba9-ca28-4220-a3e2-490bd4d9df54 has hostIP: 172.31.18.96
  Jul 27 13:19:04.485: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3557" for this suite. @ 07/27/24 13:19:04.489
• [2.054 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:708
  STEP: Creating a kubernetes client @ 07/27/24 13:19:04.495
  Jul 27 13:19:04.495: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename sched-pred @ 07/27/24 13:19:04.496
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:19:04.51
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:19:04.513
  Jul 27 13:19:04.515: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Jul 27 13:19:04.522: INFO: Waiting for terminating namespaces to be deleted...
  Jul 27 13:19:04.525: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-10-249 before test
  Jul 27 13:19:04.530: INFO: nginx-ingress-controller-kubernetes-worker-p6cd4 from ingress-nginx-kubernetes-worker started at 2024-07-27 11:55:45 +0000 UTC (1 container statuses recorded)
  Jul 27 13:19:04.530: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jul 27 13:19:04.530: INFO: calico-node-6pr7z from kube-system started at 2024-07-27 12:04:22 +0000 UTC (1 container statuses recorded)
  Jul 27 13:19:04.530: INFO: 	Container calico-node ready: true, restart count 0
  Jul 27 13:19:04.530: INFO: sonobuoy-e2e-job-984de38699c54bba from sonobuoy started at 2024-07-27 12:07:10 +0000 UTC (2 container statuses recorded)
  Jul 27 13:19:04.530: INFO: 	Container e2e ready: true, restart count 0
  Jul 27 13:19:04.530: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jul 27 13:19:04.530: INFO: sonobuoy-systemd-logs-daemon-set-871057d561a1403a-tr4gf from sonobuoy started at 2024-07-27 12:07:10 +0000 UTC (2 container statuses recorded)
  Jul 27 13:19:04.530: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jul 27 13:19:04.530: INFO: 	Container systemd-logs ready: true, restart count 0
  Jul 27 13:19:04.530: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-18-96 before test
  Jul 27 13:19:04.538: INFO: nginx-ingress-controller-kubernetes-worker-86xft from ingress-nginx-kubernetes-worker started at 2024-07-27 11:55:45 +0000 UTC (1 container statuses recorded)
  Jul 27 13:19:04.538: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jul 27 13:19:04.538: INFO: calico-node-92bdd from kube-system started at 2024-07-27 12:04:12 +0000 UTC (1 container statuses recorded)
  Jul 27 13:19:04.538: INFO: 	Container calico-node ready: true, restart count 0
  Jul 27 13:19:04.538: INFO: pod-hostip-62407ba9-ca28-4220-a3e2-490bd4d9df54 from pods-3557 started at 2024-07-27 13:19:02 +0000 UTC (1 container statuses recorded)
  Jul 27 13:19:04.538: INFO: 	Container test ready: true, restart count 0
  Jul 27 13:19:04.538: INFO: sonobuoy from sonobuoy started at 2024-07-27 12:07:08 +0000 UTC (1 container statuses recorded)
  Jul 27 13:19:04.538: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Jul 27 13:19:04.538: INFO: sonobuoy-systemd-logs-daemon-set-871057d561a1403a-jpdks from sonobuoy started at 2024-07-27 12:07:10 +0000 UTC (2 container statuses recorded)
  Jul 27 13:19:04.538: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jul 27 13:19:04.538: INFO: 	Container systemd-logs ready: true, restart count 0
  Jul 27 13:19:04.538: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-76-31 before test
  Jul 27 13:19:04.543: INFO: nginx-ingress-controller-kubernetes-worker-c4vwn from ingress-nginx-kubernetes-worker started at 2024-07-27 11:55:45 +0000 UTC (1 container statuses recorded)
  Jul 27 13:19:04.543: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jul 27 13:19:04.543: INFO: calico-node-qqqwn from kube-system started at 2024-07-27 12:03:51 +0000 UTC (1 container statuses recorded)
  Jul 27 13:19:04.543: INFO: 	Container calico-node ready: true, restart count 0
  Jul 27 13:19:04.543: INFO: coredns-bddfd76d7-6sbmv from kube-system started at 2024-07-27 11:55:45 +0000 UTC (1 container statuses recorded)
  Jul 27 13:19:04.543: INFO: 	Container coredns ready: true, restart count 0
  Jul 27 13:19:04.543: INFO: kube-state-metrics-6f48cdd76-wpnxn from kube-system started at 2024-07-27 11:55:45 +0000 UTC (1 container statuses recorded)
  Jul 27 13:19:04.543: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Jul 27 13:19:04.543: INFO: metrics-server-v0.6.3-69d7fbfdf8-wxphj from kube-system started at 2024-07-27 11:55:45 +0000 UTC (2 container statuses recorded)
  Jul 27 13:19:04.543: INFO: 	Container metrics-server ready: true, restart count 0
  Jul 27 13:19:04.543: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Jul 27 13:19:04.543: INFO: dashboard-metrics-scraper-5dd7cb5fc-89q9b from kubernetes-dashboard started at 2024-07-27 11:55:45 +0000 UTC (1 container statuses recorded)
  Jul 27 13:19:04.543: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Jul 27 13:19:04.543: INFO: kubernetes-dashboard-7b899cb9d9-crg8f from kubernetes-dashboard started at 2024-07-27 11:55:45 +0000 UTC (1 container statuses recorded)
  Jul 27 13:19:04.543: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Jul 27 13:19:04.543: INFO: sonobuoy-systemd-logs-daemon-set-871057d561a1403a-2666c from sonobuoy started at 2024-07-27 12:07:10 +0000 UTC (2 container statuses recorded)
  Jul 27 13:19:04.543: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jul 27 13:19:04.543: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 07/27/24 13:19:04.544
  E0727 13:19:05.294818      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:19:06.295055      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 07/27/24 13:19:06.566
  STEP: Trying to apply a random label on the found node. @ 07/27/24 13:19:06.583
  STEP: verifying the node has the label kubernetes.io/e2e-f5f58961-d352-4d00-b09a-671831a32ddb 95 @ 07/27/24 13:19:06.591
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 07/27/24 13:19:06.6
  E0727 13:19:07.295382      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:19:08.295474      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.31.10.249 on the node which pod4 resides and expect not scheduled @ 07/27/24 13:19:08.618
  E0727 13:19:09.295630      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:19:10.295853      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:19:11.296014      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:19:12.296110      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:19:13.297165      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:19:14.297179      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:19:15.298243      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:19:16.298335      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:19:17.299269      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:19:18.299591      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:19:19.299968      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:19:20.300169      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:19:21.301091      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:19:22.301185      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:19:23.301379      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:19:24.301457      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:19:25.302230      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:19:26.302348      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:19:27.303276      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:19:28.303388      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:19:29.303482      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:19:30.303584      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:19:31.303661      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:19:32.304570      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:19:33.305407      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:19:34.306370      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:19:35.306461      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:19:36.306544      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:19:37.307582      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:19:38.307849      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:19:39.308410      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:19:40.308617      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:19:41.308995      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:19:42.309388      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:19:43.309441      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:19:44.309536      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:19:45.309631      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:19:46.310211      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:19:47.310600      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:19:48.311049      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:19:49.311076      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:19:50.311271      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:19:51.311351      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:19:52.311552      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:19:53.311690      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:19:54.311775      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:19:55.311872      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:19:56.312722      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:19:57.313403      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:19:58.314221      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:19:59.315116      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:20:00.315557      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:20:01.315821      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:20:02.316383      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:20:03.316475      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:20:04.317581      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:20:05.317697      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:20:06.318228      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:20:07.318295      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:20:08.318461      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:20:09.319339      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:20:10.320120      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:20:11.320907      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:20:12.321360      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:20:13.322198      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:20:14.322290      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:20:15.323015      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:20:16.323223      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:20:17.324034      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:20:18.324146      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:20:19.324230      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:20:20.324521      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:20:21.324703      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:20:22.325135      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:20:23.326341      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:20:24.326538      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:20:25.327038      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:20:26.327245      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:20:27.327339      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:20:28.327538      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:20:29.328246      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:20:30.328352      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:20:31.329193      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:20:32.329361      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:20:33.330079      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:20:34.330260      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:20:35.330380      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:20:36.330995      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:20:37.332006      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:20:38.332108      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:20:39.333056      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:20:40.333141      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:20:41.333987      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:20:42.334375      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:20:43.334476      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:20:44.334652      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:20:45.335359      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:20:46.335570      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:20:47.336325      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:20:48.336714      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:20:49.337350      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:20:50.337453      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:20:51.338125      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:20:52.338371      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:20:53.339356      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:20:54.339462      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:20:55.339570      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:20:56.339834      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:20:57.340233      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:20:58.340901      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:20:59.341145      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:21:00.342206      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:21:01.343038      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:21:02.343362      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:21:03.344347      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:21:04.344478      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:21:05.345175      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:21:06.345276      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:21:07.345316      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:21:08.345532      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:21:09.346214      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:21:10.346406      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:21:11.347074      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:21:12.347314      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:21:13.348059      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:21:14.348247      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:21:15.348871      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:21:16.348972      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:21:17.349224      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:21:18.350217      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:21:19.350603      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:21:20.351662      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:21:21.351718      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:21:22.352574      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:21:23.352679      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:21:24.352928      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:21:25.353799      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:21:26.354224      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:21:27.354977      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:21:28.355197      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:21:29.356140      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:21:30.356340      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:21:31.356780      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:21:32.357399      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:21:33.357993      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:21:34.358094      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:21:35.358684      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:21:36.359362      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:21:37.359602      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:21:38.359918      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:21:39.360048      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:21:40.360128      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:21:41.360494      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:21:42.360347      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:21:43.360838      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:21:44.360959      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:21:45.361139      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:21:46.362207      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:21:47.362728      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:21:48.362822      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:21:49.363835      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:21:50.364020      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:21:51.364820      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:21:52.364888      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:21:53.365383      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:21:54.365478      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:21:55.365579      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:21:56.366220      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:21:57.367189      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:21:58.367329      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:21:59.368359      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:22:00.368418      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:22:01.368457      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:22:02.369413      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:22:03.369571      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:22:04.370205      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:22:05.370255      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:22:06.370464      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:22:07.370710      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:22:08.370783      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:22:09.371899      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:22:10.371924      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:22:11.372441      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:22:12.372530      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:22:13.372739      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:22:14.373517      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:22:15.374126      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:22:16.374218      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:22:17.375258      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:22:18.375444      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:22:19.375524      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:22:20.375640      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:22:21.375682      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:22:22.376187      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:22:23.377139      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:22:24.377255      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:22:25.377867      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:22:26.377975      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:22:27.378389      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:22:28.378745      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:22:29.379140      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:22:30.379319      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:22:31.379487      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:22:32.379591      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:22:33.380532      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:22:34.380953      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:22:35.381164      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:22:36.381234      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:22:37.381667      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:22:38.382421      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:22:39.382979      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:22:40.383069      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:22:41.383590      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:22:42.384035      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:22:43.384965      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:22:44.385141      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:22:45.386268      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:22:46.386435      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:22:47.386544      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:22:48.386716      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:22:49.387201      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:22:50.387369      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:22:51.387854      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:22:52.388072      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:22:53.388882      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:22:54.388981      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:22:55.389957      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:22:56.390165      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:22:57.390415      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:22:58.390891      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:22:59.391834      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:23:00.391906      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:23:01.392212      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:23:02.392327      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:23:03.393036      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:23:04.393147      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:23:05.394139      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:23:06.394253      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:23:07.394513      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:23:08.394745      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:23:09.395280      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:23:10.395490      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:23:11.396522      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:23:12.396655      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:23:13.397384      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:23:14.397493      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:23:15.397914      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:23:16.398217      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:23:17.399072      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:23:18.399314      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:23:19.400130      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:23:20.400254      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:23:21.400280      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:23:22.400646      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:23:23.401208      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:23:24.401299      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:23:25.402126      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:23:26.402230      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:23:27.402500      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:23:28.402893      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:23:29.403098      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:23:30.403188      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:23:31.403981      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:23:32.404401      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:23:33.404662      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:23:34.405082      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:23:35.406063      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:23:36.406625      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:23:37.407392      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:23:38.408398      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:23:39.409170      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:23:40.410213      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:23:41.410576      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:23:42.410624      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:23:43.411240      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:23:44.412220      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:23:45.412881      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:23:46.412995      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:23:47.413345      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:23:48.413449      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:23:49.413695      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:23:50.414199      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:23:51.414451      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:23:52.414623      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:23:53.415083      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:23:54.415196      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:23:55.415833      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:23:56.416005      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:23:57.416846      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:23:58.416951      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:23:59.417377      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:24:00.417479      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:24:01.418066      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:24:02.418431      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:24:03.419387      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:24:04.420198      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:24:05.420302      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:24:06.421160      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:24:07.422225      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:24:08.422474      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-f5f58961-d352-4d00-b09a-671831a32ddb off the node ip-172-31-10-249 @ 07/27/24 13:24:08.627
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-f5f58961-d352-4d00-b09a-671831a32ddb @ 07/27/24 13:24:08.644
  Jul 27 13:24:08.661: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-6829" for this suite. @ 07/27/24 13:24:08.673
• [304.186 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2199
  STEP: Creating a kubernetes client @ 07/27/24 13:24:08.682
  Jul 27 13:24:08.682: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename services @ 07/27/24 13:24:08.683
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:24:08.704
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:24:08.708
  STEP: creating service in namespace services-4478 @ 07/27/24 13:24:08.711
  STEP: creating service affinity-clusterip-transition in namespace services-4478 @ 07/27/24 13:24:08.711
  STEP: creating replication controller affinity-clusterip-transition in namespace services-4478 @ 07/27/24 13:24:08.721
  I0727 13:24:08.730073      20 runners.go:197] Created replication controller with name: affinity-clusterip-transition, namespace: services-4478, replica count: 3
  E0727 13:24:09.423387      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:24:10.423954      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:24:11.424167      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0727 13:24:11.780673      20 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jul 27 13:24:11.789: INFO: Creating new exec pod
  E0727 13:24:12.424698      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:24:13.424822      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:24:14.425053      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:24:14.805: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=services-4478 exec execpod-affinityg52g4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  Jul 27 13:24:14.901: INFO: stderr: "+ nc -v -t -w 2 affinity-clusterip-transition 80\n+ echo hostName\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  Jul 27 13:24:14.901: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul 27 13:24:14.901: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=services-4478 exec execpod-affinityg52g4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.22 80'
  Jul 27 13:24:14.988: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.22 80\nConnection to 10.152.183.22 80 port [tcp/http] succeeded!\n"
  Jul 27 13:24:14.988: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul 27 13:24:14.997: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=services-4478 exec execpod-affinityg52g4 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.22:80/ ; done'
  Jul 27 13:24:15.140: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.22:80/\n"
  Jul 27 13:24:15.140: INFO: stdout: "\naffinity-clusterip-transition-7bncp\naffinity-clusterip-transition-7bncp\naffinity-clusterip-transition-7bncp\naffinity-clusterip-transition-dmgz2\naffinity-clusterip-transition-d8sh8\naffinity-clusterip-transition-d8sh8\naffinity-clusterip-transition-d8sh8\naffinity-clusterip-transition-dmgz2\naffinity-clusterip-transition-d8sh8\naffinity-clusterip-transition-7bncp\naffinity-clusterip-transition-d8sh8\naffinity-clusterip-transition-dmgz2\naffinity-clusterip-transition-dmgz2\naffinity-clusterip-transition-d8sh8\naffinity-clusterip-transition-d8sh8\naffinity-clusterip-transition-dmgz2"
  Jul 27 13:24:15.140: INFO: Received response from host: affinity-clusterip-transition-7bncp
  Jul 27 13:24:15.140: INFO: Received response from host: affinity-clusterip-transition-7bncp
  Jul 27 13:24:15.140: INFO: Received response from host: affinity-clusterip-transition-7bncp
  Jul 27 13:24:15.140: INFO: Received response from host: affinity-clusterip-transition-dmgz2
  Jul 27 13:24:15.140: INFO: Received response from host: affinity-clusterip-transition-d8sh8
  Jul 27 13:24:15.140: INFO: Received response from host: affinity-clusterip-transition-d8sh8
  Jul 27 13:24:15.140: INFO: Received response from host: affinity-clusterip-transition-d8sh8
  Jul 27 13:24:15.140: INFO: Received response from host: affinity-clusterip-transition-dmgz2
  Jul 27 13:24:15.140: INFO: Received response from host: affinity-clusterip-transition-d8sh8
  Jul 27 13:24:15.140: INFO: Received response from host: affinity-clusterip-transition-7bncp
  Jul 27 13:24:15.140: INFO: Received response from host: affinity-clusterip-transition-d8sh8
  Jul 27 13:24:15.140: INFO: Received response from host: affinity-clusterip-transition-dmgz2
  Jul 27 13:24:15.140: INFO: Received response from host: affinity-clusterip-transition-dmgz2
  Jul 27 13:24:15.140: INFO: Received response from host: affinity-clusterip-transition-d8sh8
  Jul 27 13:24:15.140: INFO: Received response from host: affinity-clusterip-transition-d8sh8
  Jul 27 13:24:15.140: INFO: Received response from host: affinity-clusterip-transition-dmgz2
  Jul 27 13:24:15.150: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=services-4478 exec execpod-affinityg52g4 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.22:80/ ; done'
  Jul 27 13:24:15.278: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.22:80/\n"
  Jul 27 13:24:15.278: INFO: stdout: "\naffinity-clusterip-transition-d8sh8\naffinity-clusterip-transition-d8sh8\naffinity-clusterip-transition-d8sh8\naffinity-clusterip-transition-d8sh8\naffinity-clusterip-transition-d8sh8\naffinity-clusterip-transition-d8sh8\naffinity-clusterip-transition-d8sh8\naffinity-clusterip-transition-d8sh8\naffinity-clusterip-transition-d8sh8\naffinity-clusterip-transition-d8sh8\naffinity-clusterip-transition-d8sh8\naffinity-clusterip-transition-d8sh8\naffinity-clusterip-transition-d8sh8\naffinity-clusterip-transition-d8sh8\naffinity-clusterip-transition-d8sh8\naffinity-clusterip-transition-d8sh8"
  Jul 27 13:24:15.278: INFO: Received response from host: affinity-clusterip-transition-d8sh8
  Jul 27 13:24:15.278: INFO: Received response from host: affinity-clusterip-transition-d8sh8
  Jul 27 13:24:15.278: INFO: Received response from host: affinity-clusterip-transition-d8sh8
  Jul 27 13:24:15.278: INFO: Received response from host: affinity-clusterip-transition-d8sh8
  Jul 27 13:24:15.278: INFO: Received response from host: affinity-clusterip-transition-d8sh8
  Jul 27 13:24:15.278: INFO: Received response from host: affinity-clusterip-transition-d8sh8
  Jul 27 13:24:15.278: INFO: Received response from host: affinity-clusterip-transition-d8sh8
  Jul 27 13:24:15.278: INFO: Received response from host: affinity-clusterip-transition-d8sh8
  Jul 27 13:24:15.278: INFO: Received response from host: affinity-clusterip-transition-d8sh8
  Jul 27 13:24:15.278: INFO: Received response from host: affinity-clusterip-transition-d8sh8
  Jul 27 13:24:15.278: INFO: Received response from host: affinity-clusterip-transition-d8sh8
  Jul 27 13:24:15.278: INFO: Received response from host: affinity-clusterip-transition-d8sh8
  Jul 27 13:24:15.278: INFO: Received response from host: affinity-clusterip-transition-d8sh8
  Jul 27 13:24:15.278: INFO: Received response from host: affinity-clusterip-transition-d8sh8
  Jul 27 13:24:15.278: INFO: Received response from host: affinity-clusterip-transition-d8sh8
  Jul 27 13:24:15.278: INFO: Received response from host: affinity-clusterip-transition-d8sh8
  Jul 27 13:24:15.278: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-4478, will wait for the garbage collector to delete the pods @ 07/27/24 13:24:15.294
  Jul 27 13:24:15.356: INFO: Deleting ReplicationController affinity-clusterip-transition took: 8.130604ms
  E0727 13:24:15.425974      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:24:15.457: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 100.448224ms
  E0727 13:24:16.426221      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:24:17.426909      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:24:18.427924      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:24:18.678: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4478" for this suite. @ 07/27/24 13:24:18.682
• [10.006 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 07/27/24 13:24:18.688
  Jul 27 13:24:18.688: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename emptydir @ 07/27/24 13:24:18.689
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:24:18.7
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:24:18.703
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 07/27/24 13:24:18.706
  E0727 13:24:19.428048      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:24:20.428274      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:24:21.429308      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:24:22.429686      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/27/24 13:24:22.731
  Jul 27 13:24:22.735: INFO: Trying to get logs from node ip-172-31-18-96 pod pod-23b43d7d-a8df-4a7f-8e6c-1b5590810dd6 container test-container: <nil>
  STEP: delete the pod @ 07/27/24 13:24:22.75
  Jul 27 13:24:22.765: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3846" for this suite. @ 07/27/24 13:24:22.769
• [4.089 seconds]
------------------------------
SSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 07/27/24 13:24:22.777
  Jul 27 13:24:22.777: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename dns @ 07/27/24 13:24:22.778
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:24:22.79
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:24:22.792
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 07/27/24 13:24:22.794
  Jul 27 13:24:22.801: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-1778  6529de8d-633f-4884-85d3-55f5e0d45754 30930 0 2024-07-27 13:24:22 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2024-07-27 13:24:22 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-wtwjs,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.47,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-wtwjs,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  E0727 13:24:23.429780      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:24:24.430103      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS suffix list is configured on pod... @ 07/27/24 13:24:24.811
  Jul 27 13:24:24.811: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-1778 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 27 13:24:24.811: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  Jul 27 13:24:24.811: INFO: ExecWithOptions: Clientset creation
  Jul 27 13:24:24.811: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-1778/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 07/27/24 13:24:24.883
  Jul 27 13:24:24.883: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-1778 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 27 13:24:24.883: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  Jul 27 13:24:24.883: INFO: ExecWithOptions: Clientset creation
  Jul 27 13:24:24.883: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-1778/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jul 27 13:24:24.946: INFO: Deleting pod test-dns-nameservers...
  Jul 27 13:24:24.960: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1778" for this suite. @ 07/27/24 13:24:24.966
• [2.195 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 07/27/24 13:24:24.972
  Jul 27 13:24:24.972: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename projected @ 07/27/24 13:24:24.973
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:24:24.986
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:24:24.988
  STEP: Creating configMap with name configmap-projected-all-test-volume-064c5fa6-aa13-4ad5-8104-b37fe8fec862 @ 07/27/24 13:24:24.991
  STEP: Creating secret with name secret-projected-all-test-volume-0f71a256-6b1d-46ad-950f-dc15db7bc173 @ 07/27/24 13:24:24.995
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 07/27/24 13:24:24.999
  E0727 13:24:25.431041      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:24:26.432091      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/27/24 13:24:27.017
  Jul 27 13:24:27.022: INFO: Trying to get logs from node ip-172-31-18-96 pod projected-volume-995d2a3a-749f-4a08-af66-78ef3dac4d05 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 07/27/24 13:24:27.028
  Jul 27 13:24:27.042: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8647" for this suite. @ 07/27/24 13:24:27.045
• [2.079 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1863
  STEP: Creating a kubernetes client @ 07/27/24 13:24:27.052
  Jul 27 13:24:27.052: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename kubectl @ 07/27/24 13:24:27.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:24:27.066
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:24:27.069
  STEP: Starting the proxy @ 07/27/24 13:24:27.071
  Jul 27 13:24:27.071: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-7633 proxy --unix-socket=/tmp/kubectl-proxy-unix251723891/test'
  STEP: retrieving proxy /api/ output @ 07/27/24 13:24:27.104
  Jul 27 13:24:27.104: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7633" for this suite. @ 07/27/24 13:24:27.108
• [0.063 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 07/27/24 13:24:27.115
  Jul 27 13:24:27.116: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename downward-api @ 07/27/24 13:24:27.116
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:24:27.128
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:24:27.13
  STEP: Creating a pod to test downward API volume plugin @ 07/27/24 13:24:27.132
  E0727 13:24:27.432775      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:24:28.432851      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/27/24 13:24:29.149
  Jul 27 13:24:29.152: INFO: Trying to get logs from node ip-172-31-18-96 pod downwardapi-volume-da5066b7-1a2e-477a-8998-60ee4ba3a238 container client-container: <nil>
  STEP: delete the pod @ 07/27/24 13:24:29.159
  Jul 27 13:24:29.176: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7563" for this suite. @ 07/27/24 13:24:29.179
• [2.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:453
  STEP: Creating a kubernetes client @ 07/27/24 13:24:29.188
  Jul 27 13:24:29.188: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename resourcequota @ 07/27/24 13:24:29.189
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:24:29.2
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:24:29.202
  STEP: Counting existing ResourceQuota @ 07/27/24 13:24:29.205
  E0727 13:24:29.433664      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:24:30.434670      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:24:31.434869      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:24:32.435900      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:24:33.436004      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 07/27/24 13:24:34.209
  STEP: Ensuring resource quota status is calculated @ 07/27/24 13:24:34.215
  E0727 13:24:34.436278      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:24:35.436486      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicaSet @ 07/27/24 13:24:36.221
  STEP: Ensuring resource quota status captures replicaset creation @ 07/27/24 13:24:36.236
  E0727 13:24:36.436790      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:24:37.436810      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicaSet @ 07/27/24 13:24:38.24
  STEP: Ensuring resource quota status released usage @ 07/27/24 13:24:38.249
  E0727 13:24:38.436912      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:24:39.437239      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:24:40.254: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3211" for this suite. @ 07/27/24 13:24:40.257
• [11.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:103
  STEP: Creating a kubernetes client @ 07/27/24 13:24:40.265
  Jul 27 13:24:40.265: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename resourcequota @ 07/27/24 13:24:40.265
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:24:40.279
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:24:40.281
  STEP: Counting existing ResourceQuota @ 07/27/24 13:24:40.284
  E0727 13:24:40.437322      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:24:41.438032      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:24:42.438594      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:24:43.438676      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:24:44.439643      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 07/27/24 13:24:45.287
  STEP: Ensuring resource quota status is calculated @ 07/27/24 13:24:45.292
  E0727 13:24:45.440216      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:24:46.440443      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Service @ 07/27/24 13:24:47.297
  STEP: Creating a NodePort Service @ 07/27/24 13:24:47.313
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 07/27/24 13:24:47.334
  STEP: Ensuring resource quota status captures service creation @ 07/27/24 13:24:47.356
  E0727 13:24:47.441074      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:24:48.441178      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting Services @ 07/27/24 13:24:49.361
  STEP: Ensuring resource quota status released usage @ 07/27/24 13:24:49.4
  E0727 13:24:49.441859      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:24:50.441970      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:24:51.405: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7043" for this suite. @ 07/27/24 13:24:51.409
• [11.151 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:276
  STEP: Creating a kubernetes client @ 07/27/24 13:24:51.417
  Jul 27 13:24:51.417: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/27/24 13:24:51.417
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:24:51.431
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:24:51.434
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 07/27/24 13:24:51.436
  Jul 27 13:24:51.436: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  E0727 13:24:51.442647      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:24:52.443080      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:24:52.644: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  E0727 13:24:53.443241      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:24:54.443564      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:24:55.443667      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:24:56.444653      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:24:57.444656      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:24:57.593: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5648" for this suite. @ 07/27/24 13:24:57.598
• [6.188 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 07/27/24 13:24:57.604
  Jul 27 13:24:57.604: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename csiinlinevolumes @ 07/27/24 13:24:57.605
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:24:57.621
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:24:57.623
  STEP: creating @ 07/27/24 13:24:57.624
  STEP: getting @ 07/27/24 13:24:57.64
  STEP: listing in namespace @ 07/27/24 13:24:57.644
  STEP: patching @ 07/27/24 13:24:57.647
  STEP: deleting @ 07/27/24 13:24:57.661
  Jul 27 13:24:57.671: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-365" for this suite. @ 07/27/24 13:24:57.674
• [0.075 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 07/27/24 13:24:57.68
  Jul 27 13:24:57.680: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename replicaset @ 07/27/24 13:24:57.68
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:24:57.699
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:24:57.701
  STEP: Create a Replicaset @ 07/27/24 13:24:57.706
  STEP: Verify that the required pods have come up. @ 07/27/24 13:24:57.711
  Jul 27 13:24:57.713: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0727 13:24:58.445646      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:24:59.445863      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:25:00.445963      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:25:01.446170      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:25:02.446502      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:25:02.717: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/27/24 13:25:02.717
  STEP: Getting /status @ 07/27/24 13:25:02.717
  Jul 27 13:25:02.721: INFO: Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 07/27/24 13:25:02.721
  Jul 27 13:25:02.729: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 07/27/24 13:25:02.729
  Jul 27 13:25:02.731: INFO: Observed &ReplicaSet event: ADDED
  Jul 27 13:25:02.731: INFO: Observed &ReplicaSet event: MODIFIED
  Jul 27 13:25:02.731: INFO: Observed &ReplicaSet event: MODIFIED
  Jul 27 13:25:02.731: INFO: Observed &ReplicaSet event: MODIFIED
  Jul 27 13:25:02.731: INFO: Found replicaset test-rs in namespace replicaset-3463 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Jul 27 13:25:02.731: INFO: Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 07/27/24 13:25:02.731
  Jul 27 13:25:02.731: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Jul 27 13:25:02.737: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 07/27/24 13:25:02.737
  Jul 27 13:25:02.738: INFO: Observed &ReplicaSet event: ADDED
  Jul 27 13:25:02.738: INFO: Observed &ReplicaSet event: MODIFIED
  Jul 27 13:25:02.738: INFO: Observed &ReplicaSet event: MODIFIED
  Jul 27 13:25:02.738: INFO: Observed &ReplicaSet event: MODIFIED
  Jul 27 13:25:02.738: INFO: Observed replicaset test-rs in namespace replicaset-3463 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jul 27 13:25:02.738: INFO: Observed &ReplicaSet event: MODIFIED
  Jul 27 13:25:02.738: INFO: Found replicaset test-rs in namespace replicaset-3463 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  Jul 27 13:25:02.738: INFO: Replicaset test-rs has a patched status
  Jul 27 13:25:02.739: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3463" for this suite. @ 07/27/24 13:25:02.742
• [5.070 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 07/27/24 13:25:02.75
  Jul 27 13:25:02.750: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename emptydir-wrapper @ 07/27/24 13:25:02.75
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:25:02.771
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:25:02.774
  STEP: Creating 50 configmaps @ 07/27/24 13:25:02.776
  STEP: Creating RC which spawns configmap-volume pods @ 07/27/24 13:25:03.009
  Jul 27 13:25:03.126: INFO: Pod name wrapped-volume-race-1aa00964-0469-45ed-aa1c-d08a3cbd9ff4: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 07/27/24 13:25:03.126
  E0727 13:25:03.447343      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:25:04.447451      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating RC which spawns configmap-volume pods @ 07/27/24 13:25:05.177
  Jul 27 13:25:05.189: INFO: Pod name wrapped-volume-race-7e9b9729-3218-400f-923b-2e79ce4a3310: Found 0 pods out of 5
  E0727 13:25:05.447594      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:25:06.447927      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:25:07.448747      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:25:08.448817      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:25:09.449048      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:25:10.195: INFO: Pod name wrapped-volume-race-7e9b9729-3218-400f-923b-2e79ce4a3310: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 07/27/24 13:25:10.195
  STEP: Creating RC which spawns configmap-volume pods @ 07/27/24 13:25:10.216
  Jul 27 13:25:10.230: INFO: Pod name wrapped-volume-race-d31e9132-11ce-4486-94ab-e608957f1479: Found 0 pods out of 5
  E0727 13:25:10.449401      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:25:11.449520      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:25:12.450401      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:25:13.450519      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:25:14.450629      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:25:15.237: INFO: Pod name wrapped-volume-race-d31e9132-11ce-4486-94ab-e608957f1479: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 07/27/24 13:25:15.237
  STEP: deleting ReplicationController wrapped-volume-race-d31e9132-11ce-4486-94ab-e608957f1479 in namespace emptydir-wrapper-738, will wait for the garbage collector to delete the pods @ 07/27/24 13:25:15.255
  Jul 27 13:25:15.316: INFO: Deleting ReplicationController wrapped-volume-race-d31e9132-11ce-4486-94ab-e608957f1479 took: 8.050084ms
  Jul 27 13:25:15.417: INFO: Terminating ReplicationController wrapped-volume-race-d31e9132-11ce-4486-94ab-e608957f1479 pods took: 101.05089ms
  E0727 13:25:15.451354      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:25:16.452109      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-7e9b9729-3218-400f-923b-2e79ce4a3310 in namespace emptydir-wrapper-738, will wait for the garbage collector to delete the pods @ 07/27/24 13:25:16.918
  Jul 27 13:25:16.980: INFO: Deleting ReplicationController wrapped-volume-race-7e9b9729-3218-400f-923b-2e79ce4a3310 took: 8.168962ms
  Jul 27 13:25:17.081: INFO: Terminating ReplicationController wrapped-volume-race-7e9b9729-3218-400f-923b-2e79ce4a3310 pods took: 100.99588ms
  E0727 13:25:17.452435      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-1aa00964-0469-45ed-aa1c-d08a3cbd9ff4 in namespace emptydir-wrapper-738, will wait for the garbage collector to delete the pods @ 07/27/24 13:25:18.182
  Jul 27 13:25:18.243: INFO: Deleting ReplicationController wrapped-volume-race-1aa00964-0469-45ed-aa1c-d08a3cbd9ff4 took: 7.449274ms
  Jul 27 13:25:18.344: INFO: Terminating ReplicationController wrapped-volume-race-1aa00964-0469-45ed-aa1c-d08a3cbd9ff4 pods took: 100.396098ms
  E0727 13:25:18.452814      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:25:19.453266      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 07/27/24 13:25:19.944
  Jul 27 13:25:20.253: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-738" for this suite. @ 07/27/24 13:25:20.256
• [17.512 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 07/27/24 13:25:20.262
  Jul 27 13:25:20.262: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename projected @ 07/27/24 13:25:20.263
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:25:20.286
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:25:20.287
  STEP: Creating a pod to test downward API volume plugin @ 07/27/24 13:25:20.289
  E0727 13:25:20.453592      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:25:21.453677      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:25:22.453737      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:25:23.454200      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/27/24 13:25:24.314
  Jul 27 13:25:24.317: INFO: Trying to get logs from node ip-172-31-18-96 pod downwardapi-volume-8ee4f63a-8df9-4bc3-86a2-208a95e0fb90 container client-container: <nil>
  STEP: delete the pod @ 07/27/24 13:25:24.329
  Jul 27 13:25:24.346: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5746" for this suite. @ 07/27/24 13:25:24.35
• [4.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 07/27/24 13:25:24.358
  Jul 27 13:25:24.358: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename events @ 07/27/24 13:25:24.358
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:25:24.375
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:25:24.377
  STEP: Create set of events @ 07/27/24 13:25:24.381
  STEP: get a list of Events with a label in the current namespace @ 07/27/24 13:25:24.398
  STEP: delete a list of events @ 07/27/24 13:25:24.401
  Jul 27 13:25:24.401: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 07/27/24 13:25:24.424
  Jul 27 13:25:24.427: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-7507" for this suite. @ 07/27/24 13:25:24.43
• [0.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 07/27/24 13:25:24.439
  Jul 27 13:25:24.439: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename namespaces @ 07/27/24 13:25:24.44
  E0727 13:25:24.454415      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:25:24.46
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:25:24.463
  STEP: Updating Namespace "namespaces-7942" @ 07/27/24 13:25:24.464
  Jul 27 13:25:24.471: INFO: Namespace "namespaces-7942" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"0bbc8b59-ed09-445f-9767-6bc092ca0f0b", "kubernetes.io/metadata.name":"namespaces-7942", "namespaces-7942":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  Jul 27 13:25:24.471: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7942" for this suite. @ 07/27/24 13:25:24.475
• [0.042 seconds]
------------------------------
S
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 07/27/24 13:25:24.481
  Jul 27 13:25:24.481: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename deployment @ 07/27/24 13:25:24.482
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:25:24.5
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:25:24.502
  Jul 27 13:25:24.503: INFO: Creating deployment "webserver-deployment"
  Jul 27 13:25:24.509: INFO: Waiting for observed generation 1
  E0727 13:25:25.454966      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:25:26.455353      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:25:26.516: INFO: Waiting for all required pods to come up
  Jul 27 13:25:26.520: INFO: Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 07/27/24 13:25:26.52
  Jul 27 13:25:26.520: INFO: Waiting for deployment "webserver-deployment" to complete
  Jul 27 13:25:26.526: INFO: Updating deployment "webserver-deployment" with a non-existent image
  Jul 27 13:25:26.536: INFO: Updating deployment webserver-deployment
  Jul 27 13:25:26.536: INFO: Waiting for observed generation 2
  E0727 13:25:27.455728      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:25:28.456766      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:25:28.544: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  Jul 27 13:25:28.547: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
  Jul 27 13:25:28.550: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Jul 27 13:25:28.558: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  Jul 27 13:25:28.558: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
  Jul 27 13:25:28.562: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Jul 27 13:25:28.567: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  Jul 27 13:25:28.567: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
  Jul 27 13:25:28.577: INFO: Updating deployment webserver-deployment
  Jul 27 13:25:28.577: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  Jul 27 13:25:28.583: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
  Jul 27 13:25:28.587: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
  Jul 27 13:25:28.598: INFO: Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4588",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c5fe930c-f566-49a5-80b1-6922f7cf828f",
      ResourceVersion: (string) (len=5) "32195",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857683524,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683526,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683528,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 5,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683526,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683524,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=59) "ReplicaSet \"webserver-deployment-9b4f5bf69\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jul 27 13:25:28.611: INFO: New ReplicaSet "webserver-deployment-9b4f5bf69" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4588",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d5c5b0a7-eb2a-4da3-808c-476c873623ce",
      ResourceVersion: (string) (len=5) "32199",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857683526,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "c5fe930c-f566-49a5-80b1-6922f7cf828f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683526,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683528,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 63 35 66 65 39 33  30 63 2d 66 35 36 36 2d  |\"c5fe930c-f566-|
              00000120  34 39 61 35 2d 38 30 62  31 2d 36 39 32 32 66 37  |49a5-80b1-6922f7|
              00000130  63 66 38 32 38 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |cf828f\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jul 27 13:25:28.611: INFO: All old ReplicaSets of Deployment "webserver-deployment":
  Jul 27 13:25:28.612: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4588",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9df07c95-2edf-4555-b6c8-3e9d088bda40",
      ResourceVersion: (string) (len=5) "32196",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857683524,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "c5fe930c-f566-49a5-80b1-6922f7cf828f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683526,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683528,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 63 35 66 65 39 33  30 63 2d 66 35 36 36 2d  |\"c5fe930c-f566-|
              00000120  34 39 61 35 2d 38 30 62  31 2d 36 39 32 32 66 37  |49a5-80b1-6922f7|
              00000130  63 66 38 32 38 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |cf828f\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jul 27 13:25:28.623: INFO: Pod "webserver-deployment-557759b7c7-5btrg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-5btrg",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4588",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e676c9ed-64d9-42af-aaf5-168582b19e80",
      ResourceVersion: (string) (len=5) "32032",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857683524,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "9df07c95-2edf-4555-b6c8-3e9d088bda40",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683524,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 64  66 30 37 63 39 35 2d 32  |d\":\"9df07c95-2|
              00000090  65 64 66 2d 34 35 35 35  2d 62 36 63 38 2d 33 65  |edf-4555-b6c8-3e|
              000000a0  39 64 30 38 38 62 64 61  34 30 5c 22 7d 22 3a 7b  |9d088bda40\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 39 36  2e 37 37 5c 22 7d 22 3a  |2.168.96.77\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9ffpw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9ffpw",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-76-31",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683524,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683524,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.76.31",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.76.31"
        }
      },
      PodIP: (string) (len=13) "192.168.96.77",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.96.77"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857683524,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63857683525,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://b09f454248483c65b2932fc2f204fb1b997e2d15164e9499213ce5fbe2054b66",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 27 13:25:28.625: INFO: Pod "webserver-deployment-557759b7c7-5hdgg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-5hdgg",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4588",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a7cc0943-b6f5-4971-a340-898014d9ad61",
      ResourceVersion: (string) (len=5) "32217",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857683528,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "9df07c95-2edf-4555-b6c8-3e9d088bda40",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683528,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 64  66 30 37 63 39 35 2d 32  |d\":\"9df07c95-2|
              00000090  65 64 66 2d 34 35 35 35  2d 62 36 63 38 2d 33 65  |edf-4555-b6c8-3e|
              000000a0  39 64 30 38 38 62 64 61  34 30 5c 22 7d 22 3a 7b  |9d088bda40\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lzjm5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lzjm5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 27 13:25:28.627: INFO: Pod "webserver-deployment-557759b7c7-6p5ms" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-6p5ms",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4588",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ee0cfe63-e9a1-4713-b75b-9ae65088adb5",
      ResourceVersion: (string) (len=5) "32042",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857683524,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "9df07c95-2edf-4555-b6c8-3e9d088bda40",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683524,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 64  66 30 37 63 39 35 2d 32  |d\":\"9df07c95-2|
              00000090  65 64 66 2d 34 35 35 35  2d 62 36 63 38 2d 33 65  |edf-4555-b6c8-3e|
              000000a0  39 64 30 38 38 62 64 61  34 30 5c 22 7d 22 3a 7b  |9d088bda40\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 39 36  2e 37 35 5c 22 7d 22 3a  |2.168.96.75\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gzrm8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gzrm8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-76-31",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683524,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683524,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.76.31",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.76.31"
        }
      },
      PodIP: (string) (len=13) "192.168.96.75",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.96.75"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857683524,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63857683525,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://ebc4c599c931f7bffc6d2f08ca0e45edc9b0790fcc1f39446eb13a3bc18bf8fc",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 27 13:25:28.628: INFO: Pod "webserver-deployment-557759b7c7-7dqzt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-7dqzt",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4588",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6afddc03-6924-4e3e-8217-1f20813aeabd",
      ResourceVersion: (string) (len=5) "32216",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857683528,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "9df07c95-2edf-4555-b6c8-3e9d088bda40",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683528,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 64  66 30 37 63 39 35 2d 32  |d\":\"9df07c95-2|
              00000090  65 64 66 2d 34 35 35 35  2d 62 36 63 38 2d 33 65  |edf-4555-b6c8-3e|
              000000a0  39 64 30 38 38 62 64 61  34 30 5c 22 7d 22 3a 7b  |9d088bda40\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-h4bpp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-h4bpp",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 27 13:25:28.631: INFO: Pod "webserver-deployment-557759b7c7-9rqzn" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-9rqzn",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4588",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8247a979-54af-4565-a34c-6d3f060c5c6f",
      ResourceVersion: (string) (len=5) "32069",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857683524,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "9df07c95-2edf-4555-b6c8-3e9d088bda40",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683524,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 64  66 30 37 63 39 35 2d 32  |d\":\"9df07c95-2|
              00000090  65 64 66 2d 34 35 35 35  2d 62 36 63 38 2d 33 65  |edf-4555-b6c8-3e|
              000000a0  39 64 30 38 38 62 64 61  34 30 5c 22 7d 22 3a 7b  |9d088bda40\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  32 2e 31 35 36 5c 22 7d  |2.168.122.156\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pbzds",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pbzds",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-18-96",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683524,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683524,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.18.96",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.18.96"
        }
      },
      PodIP: (string) (len=15) "192.168.122.156",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.122.156"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857683524,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63857683525,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://27ab94923d39ce64e48f2fe90662e8e476b0db10274d60fbfb6108cb83f45ffa",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 27 13:25:28.634: INFO: Pod "webserver-deployment-557759b7c7-ccg8f" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-ccg8f",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4588",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d3c12935-c5de-458e-94b0-3c456b0000c4",
      ResourceVersion: (string) (len=5) "32037",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857683524,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "9df07c95-2edf-4555-b6c8-3e9d088bda40",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683524,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 64  66 30 37 63 39 35 2d 32  |d\":\"9df07c95-2|
              00000090  65 64 66 2d 34 35 35 35  2d 62 36 63 38 2d 33 65  |edf-4555-b6c8-3e|
              000000a0  39 64 30 38 38 62 64 61  34 30 5c 22 7d 22 3a 7b  |9d088bda40\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 39 36  2e 37 36 5c 22 7d 22 3a  |2.168.96.76\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gfzgp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gfzgp",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-76-31",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683524,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683524,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.76.31",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.76.31"
        }
      },
      PodIP: (string) (len=13) "192.168.96.76",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.96.76"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857683524,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63857683525,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://58807f927051814ce7ed966900f46a9e2c044efe7c5b2f589f5aa0c96bc25994",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 27 13:25:28.638: INFO: Pod "webserver-deployment-557759b7c7-g46qn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-g46qn",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4588",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "37e10ad1-ad33-4285-a0df-f1392e238a54",
      ResourceVersion: (string) (len=5) "32212",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857683528,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "9df07c95-2edf-4555-b6c8-3e9d088bda40",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683528,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 64  66 30 37 63 39 35 2d 32  |d\":\"9df07c95-2|
              00000090  65 64 66 2d 34 35 35 35  2d 62 36 63 38 2d 33 65  |edf-4555-b6c8-3e|
              000000a0  39 64 30 38 38 62 64 61  34 30 5c 22 7d 22 3a 7b  |9d088bda40\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-s6msl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-s6msl",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-10-249",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683528,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 27 13:25:28.641: INFO: Pod "webserver-deployment-557759b7c7-gb4kv" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-gb4kv",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4588",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e90f88bf-01c8-41f1-a98a-0d2317b456c1",
      ResourceVersion: (string) (len=5) "32078",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857683524,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "9df07c95-2edf-4555-b6c8-3e9d088bda40",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683524,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 64  66 30 37 63 39 35 2d 32  |d\":\"9df07c95-2|
              00000090  65 64 66 2d 34 35 35 35  2d 62 36 63 38 2d 33 65  |edf-4555-b6c8-3e|
              000000a0  39 64 30 38 38 62 64 61  34 30 5c 22 7d 22 3a 7b  |9d088bda40\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683526,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  32 2e 31 35 35 5c 22 7d  |2.168.122.155\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2tttq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2tttq",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-18-96",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683524,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683524,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.18.96",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.18.96"
        }
      },
      PodIP: (string) (len=15) "192.168.122.155",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.122.155"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857683524,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63857683525,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://f1ec2f8f9d462440d28131f6468948e6dac5dacda334b441160f6c8714d7dd6c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 27 13:25:28.645: INFO: Pod "webserver-deployment-557759b7c7-j45lv" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-j45lv",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4588",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "201caa67-dbac-4fd1-83cc-c26b9f90b9fc",
      ResourceVersion: (string) (len=5) "32014",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857683524,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "9df07c95-2edf-4555-b6c8-3e9d088bda40",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683524,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 64  66 30 37 63 39 35 2d 32  |d\":\"9df07c95-2|
              00000090  65 64 66 2d 34 35 35 35  2d 62 36 63 38 2d 33 65  |edf-4555-b6c8-3e|
              000000a0  39 64 30 38 38 62 64 61  34 30 5c 22 7d 22 3a 7b  |9d088bda40\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 39 37  2e 35 30 5c 22 7d 22 3a  |2.168.97.50\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-szlz8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-szlz8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-10-249",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683524,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683524,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.10.249",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.10.249"
        }
      },
      PodIP: (string) (len=13) "192.168.97.50",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.97.50"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857683524,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63857683525,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://de18c313c9e6cc180dedf9c9af4f5e03d840bb9aac8cb6185c241060b3b34168",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 27 13:25:28.649: INFO: Pod "webserver-deployment-557759b7c7-ksspk" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-ksspk",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4588",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "739514f7-02a9-4889-8947-207f89069a3a",
      ResourceVersion: (string) (len=5) "32004",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857683524,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "9df07c95-2edf-4555-b6c8-3e9d088bda40",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683524,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 64  66 30 37 63 39 35 2d 32  |d\":\"9df07c95-2|
              00000090  65 64 66 2d 34 35 35 35  2d 62 36 63 38 2d 33 65  |edf-4555-b6c8-3e|
              000000a0  39 64 30 38 38 62 64 61  34 30 5c 22 7d 22 3a 7b  |9d088bda40\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 39 37  2e 35 33 5c 22 7d 22 3a  |2.168.97.53\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lhghz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lhghz",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-10-249",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683524,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683524,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.10.249",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.10.249"
        }
      },
      PodIP: (string) (len=13) "192.168.97.53",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.97.53"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857683524,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63857683525,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://0cc0e2eee9e6eef60ff5e10d6b9debee526b4790afac10deaa82f3baa346d74a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 27 13:25:28.650: INFO: Pod "webserver-deployment-557759b7c7-lpff2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-lpff2",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4588",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "69e1c90a-4c46-48e3-825b-edaa4bae74e6",
      ResourceVersion: (string) (len=5) "32215",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857683528,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "9df07c95-2edf-4555-b6c8-3e9d088bda40",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683528,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 64  66 30 37 63 39 35 2d 32  |d\":\"9df07c95-2|
              00000090  65 64 66 2d 34 35 35 35  2d 62 36 63 38 2d 33 65  |edf-4555-b6c8-3e|
              000000a0  39 64 30 38 38 62 64 61  34 30 5c 22 7d 22 3a 7b  |9d088bda40\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8b6kj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8b6kj",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 27 13:25:28.651: INFO: Pod "webserver-deployment-557759b7c7-m79hz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-m79hz",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4588",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f1c475d6-4098-4d56-8708-3a6e500cc3a1",
      ResourceVersion: (string) (len=5) "32207",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857683528,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "9df07c95-2edf-4555-b6c8-3e9d088bda40",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683528,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 64  66 30 37 63 39 35 2d 32  |d\":\"9df07c95-2|
              00000090  65 64 66 2d 34 35 35 35  2d 62 36 63 38 2d 33 65  |edf-4555-b6c8-3e|
              000000a0  39 64 30 38 38 62 64 61  34 30 5c 22 7d 22 3a 7b  |9d088bda40\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jxjf4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jxjf4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-18-96",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683528,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 27 13:25:28.653: INFO: Pod "webserver-deployment-557759b7c7-nb576" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-nb576",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4588",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0fae6b78-6373-4bbc-b5bf-f02d40ec2bdd",
      ResourceVersion: (string) (len=5) "32213",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857683528,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "9df07c95-2edf-4555-b6c8-3e9d088bda40",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683528,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 64  66 30 37 63 39 35 2d 32  |d\":\"9df07c95-2|
              00000090  65 64 66 2d 34 35 35 35  2d 62 36 63 38 2d 33 65  |edf-4555-b6c8-3e|
              000000a0  39 64 30 38 38 62 64 61  34 30 5c 22 7d 22 3a 7b  |9d088bda40\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wql6f",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wql6f",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 27 13:25:28.654: INFO: Pod "webserver-deployment-557759b7c7-vd9lt" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-vd9lt",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4588",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bdcd91a8-021b-4430-80e7-b77bf9b90050",
      ResourceVersion: (string) (len=5) "32009",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857683524,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "9df07c95-2edf-4555-b6c8-3e9d088bda40",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683524,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 64  66 30 37 63 39 35 2d 32  |d\":\"9df07c95-2|
              00000090  65 64 66 2d 34 35 35 35  2d 62 36 63 38 2d 33 65  |edf-4555-b6c8-3e|
              000000a0  39 64 30 38 38 62 64 61  34 30 5c 22 7d 22 3a 7b  |9d088bda40\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 39 37  2e 35 32 5c 22 7d 22 3a  |2.168.97.52\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6x65m",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6x65m",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-10-249",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683524,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683524,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.10.249",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.10.249"
        }
      },
      PodIP: (string) (len=13) "192.168.97.52",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.97.52"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857683524,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63857683525,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://6724d88beda12061c2e25fb77bd9e15564997b93d1164e6141b1518159571323",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 27 13:25:28.656: INFO: Pod "webserver-deployment-557759b7c7-whmkh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-whmkh",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4588",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8c7a0ebf-6e09-4aa3-ab1c-18890b2641ff",
      ResourceVersion: (string) (len=5) "32202",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857683528,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "9df07c95-2edf-4555-b6c8-3e9d088bda40",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683528,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 64  66 30 37 63 39 35 2d 32  |d\":\"9df07c95-2|
              00000090  65 64 66 2d 34 35 35 35  2d 62 36 63 38 2d 33 65  |edf-4555-b6c8-3e|
              000000a0  39 64 30 38 38 62 64 61  34 30 5c 22 7d 22 3a 7b  |9d088bda40\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rlmkj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rlmkj",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-18-96",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683528,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 27 13:25:28.656: INFO: Pod "webserver-deployment-9b4f5bf69-2ndd9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-2ndd9",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4588",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e7d83620-f11c-4df6-bbaf-ac0453aa802f",
      ResourceVersion: (string) (len=5) "32181",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857683526,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d5c5b0a7-eb2a-4da3-808c-476c873623ce",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683526,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 35  63 35 62 30 61 37 2d 65  |d\":\"d5c5b0a7-e|
              00000090  62 32 61 2d 34 64 61 33  2d 38 30 38 63 2d 34 37  |b2a-4da3-808c-47|
              000000a0  36 63 38 37 33 36 32 33  63 65 5c 22 7d 22 3a 7b  |6c873623ce\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=707) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 39 37 2e 35 35  5c 22 7d 22 3a 7b 22 2e  |68.97.55\"}":{".|
              000002a0  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              000002b0  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              000002c0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8xvx7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8xvx7",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-10-249",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683526,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683526,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683526,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683526,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.10.249",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.10.249"
        }
      },
      PodIP: (string) (len=13) "192.168.97.55",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.97.55"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857683526,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 27 13:25:28.658: INFO: Pod "webserver-deployment-9b4f5bf69-94pmm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-94pmm",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4588",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cc0f7c51-3d07-4c51-8b80-1edf97212074",
      ResourceVersion: (string) (len=5) "32192",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857683526,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d5c5b0a7-eb2a-4da3-808c-476c873623ce",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683526,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 35  63 35 62 30 61 37 2d 65  |d\":\"d5c5b0a7-e|
              00000090  62 32 61 2d 34 64 61 33  2d 38 30 38 63 2d 34 37  |b2a-4da3-808c-47|
              000000a0  36 63 38 37 33 36 32 33  63 65 5c 22 7d 22 3a 7b  |6c873623ce\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683528,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 32 32 2e 31  35 38 5c 22 7d 22 3a 7b  |68.122.158\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-w4mfx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-w4mfx",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-18-96",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683526,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683526,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683526,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683526,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.18.96",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.18.96"
        }
      },
      PodIP: (string) (len=15) "192.168.122.158",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.122.158"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857683526,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 27 13:25:28.660: INFO: Pod "webserver-deployment-9b4f5bf69-d6b75" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-d6b75",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4588",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8056daeb-1a31-4def-b8f0-5ea5b4a1f466",
      ResourceVersion: (string) (len=5) "32190",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857683526,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d5c5b0a7-eb2a-4da3-808c-476c873623ce",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683526,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 35  63 35 62 30 61 37 2d 65  |d\":\"d5c5b0a7-e|
              00000090  62 32 61 2d 34 64 61 33  2d 38 30 38 63 2d 34 37  |b2a-4da3-808c-47|
              000000a0  36 63 38 37 33 36 32 33  63 65 5c 22 7d 22 3a 7b  |6c873623ce\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 32 32 2e 31  36 38 5c 22 7d 22 3a 7b  |68.122.168\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5mwg6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5mwg6",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-18-96",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683526,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683526,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683526,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683526,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.18.96",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.18.96"
        }
      },
      PodIP: (string) (len=15) "192.168.122.168",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.122.168"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857683526,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 27 13:25:28.663: INFO: Pod "webserver-deployment-9b4f5bf69-jlqgz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-jlqgz",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4588",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9b8e195e-ede4-4b28-8c5b-e0c1bb183532",
      ResourceVersion: (string) (len=5) "32185",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857683526,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d5c5b0a7-eb2a-4da3-808c-476c873623ce",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683526,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 35  63 35 62 30 61 37 2d 65  |d\":\"d5c5b0a7-e|
              00000090  62 32 61 2d 34 64 61 33  2d 38 30 38 63 2d 34 37  |b2a-4da3-808c-47|
              000000a0  36 63 38 37 33 36 32 33  63 65 5c 22 7d 22 3a 7b  |6c873623ce\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=707) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 39 36 2e 37 38  5c 22 7d 22 3a 7b 22 2e  |68.96.78\"}":{".|
              000002a0  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              000002b0  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              000002c0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7pj97",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7pj97",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-76-31",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683526,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683526,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683526,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683526,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.76.31",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.76.31"
        }
      },
      PodIP: (string) (len=13) "192.168.96.78",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.96.78"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857683526,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 27 13:25:28.667: INFO: Pod "webserver-deployment-9b4f5bf69-lgnwg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-lgnwg",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4588",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e66a253f-7e2e-4e62-ab11-756d6a9694a4",
      ResourceVersion: (string) (len=5) "32209",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857683528,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d5c5b0a7-eb2a-4da3-808c-476c873623ce",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683528,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 35  63 35 62 30 61 37 2d 65  |d\":\"d5c5b0a7-e|
              00000090  62 32 61 2d 34 64 61 33  2d 38 30 38 63 2d 34 37  |b2a-4da3-808c-47|
              000000a0  36 63 38 37 33 36 32 33  63 65 5c 22 7d 22 3a 7b  |6c873623ce\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qhqwn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qhqwn",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-76-31",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683528,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 27 13:25:28.670: INFO: Pod "webserver-deployment-9b4f5bf69-ncdvt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-ncdvt",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4588",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9ca3160a-6c4c-4bac-823f-ca8959b78791",
      ResourceVersion: (string) (len=5) "32211",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857683528,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d5c5b0a7-eb2a-4da3-808c-476c873623ce",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683528,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 35  63 35 62 30 61 37 2d 65  |d\":\"d5c5b0a7-e|
              00000090  62 32 61 2d 34 64 61 33  2d 38 30 38 63 2d 34 37  |b2a-4da3-808c-47|
              000000a0  36 63 38 37 33 36 32 33  63 65 5c 22 7d 22 3a 7b  |6c873623ce\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7w5h6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7w5h6",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 27 13:25:28.673: INFO: Pod "webserver-deployment-9b4f5bf69-t5j4t" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-t5j4t",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4588",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "453148ae-2305-4748-9319-b3bd2b993f1c",
      ResourceVersion: (string) (len=5) "32178",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857683526,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d5c5b0a7-eb2a-4da3-808c-476c873623ce",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683526,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 35  63 35 62 30 61 37 2d 65  |d\":\"d5c5b0a7-e|
              00000090  62 32 61 2d 34 64 61 33  2d 38 30 38 63 2d 34 37  |b2a-4da3-808c-47|
              000000a0  36 63 38 37 33 36 32 33  63 65 5c 22 7d 22 3a 7b  |6c873623ce\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=707) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 39 37 2e 35 34  5c 22 7d 22 3a 7b 22 2e  |68.97.54\"}":{".|
              000002a0  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              000002b0  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              000002c0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qqts4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qqts4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-10-249",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683526,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683526,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683526,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683526,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.10.249",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.10.249"
        }
      },
      PodIP: (string) (len=13) "192.168.97.54",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.97.54"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857683526,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 27 13:25:28.674: INFO: Pod "webserver-deployment-9b4f5bf69-vbnnx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-vbnnx",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4588",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "24c1210c-9264-44cc-96d6-f54ae7777220",
      ResourceVersion: (string) (len=5) "32208",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857683528,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d5c5b0a7-eb2a-4da3-808c-476c873623ce",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683528,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 35  63 35 62 30 61 37 2d 65  |d\":\"d5c5b0a7-e|
              00000090  62 32 61 2d 34 64 61 33  2d 38 30 38 63 2d 34 37  |b2a-4da3-808c-47|
              000000a0  36 63 38 37 33 36 32 33  63 65 5c 22 7d 22 3a 7b  |6c873623ce\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nfr4j",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nfr4j",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 27 13:25:28.675: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4588" for this suite. @ 07/27/24 13:25:28.686
• [4.220 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 07/27/24 13:25:28.704
  Jul 27 13:25:28.704: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename taint-multiple-pods @ 07/27/24 13:25:28.705
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:25:28.736
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:25:28.74
  Jul 27 13:25:28.754: INFO: Waiting up to 1m0s for all nodes to be ready
  E0727 13:25:29.457187      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:25:30.457266      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:25:31.458229      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:25:32.458331      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:25:33.458601      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:25:34.460085      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:25:35.460392      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:25:36.460536      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:25:37.460654      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:25:38.460840      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:25:39.460899      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:25:40.461115      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:25:41.461179      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:25:42.461490      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:25:43.461765      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:25:44.461827      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:25:45.461947      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:25:46.462008      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:25:47.462097      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:25:48.462218      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:25:49.462318      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:25:50.462421      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:25:51.462614      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:25:52.462635      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:25:53.462976      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:25:54.463194      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:25:55.464038      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:25:56.464107      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:25:57.464749      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:25:58.464849      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:25:59.465182      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:26:00.465253      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:26:01.465379      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:26:02.465685      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:26:03.465781      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:26:04.465859      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:26:05.466214      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:26:06.466311      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:26:07.466409      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:26:08.466481      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:26:09.466598      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:26:10.466770      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:26:11.467267      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:26:12.467694      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:26:13.467777      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:26:14.468043      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:26:15.468209      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:26:16.468424      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:26:17.468772      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:26:18.468978      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:26:19.469138      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:26:20.469171      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:26:21.470235      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:26:22.470706      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:26:23.470804      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:26:24.470997      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:26:25.471288      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:26:26.471399      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:26:27.472477      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:26:28.472652      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:26:28.755: INFO: Waiting for terminating namespaces to be deleted...
  Jul 27 13:26:28.758: INFO: Starting informer...
  STEP: Starting pods... @ 07/27/24 13:26:28.758
  Jul 27 13:26:28.975: INFO: Pod1 is running on ip-172-31-18-96. Tainting Node
  E0727 13:26:29.472803      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:26:30.472890      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:26:31.196: INFO: Pod2 is running on ip-172-31-18-96. Tainting Node
  STEP: Trying to apply a taint on the Node @ 07/27/24 13:26:31.196
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 07/27/24 13:26:31.205
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 07/27/24 13:26:31.208
  E0727 13:26:31.473894      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:26:32.474721      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:26:33.474902      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:26:34.475160      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:26:35.475264      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:26:36.475361      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:26:37.145: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
  E0727 13:26:37.476108      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:26:38.476230      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:26:39.476321      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:26:40.476494      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:26:41.476677      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:26:42.477742      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:26:43.478245      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:26:44.478343      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:26:45.478582      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:26:46.478681      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:26:47.479634      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:26:48.479801      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:26:49.480004      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:26:50.480198      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:26:51.480546      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:26:52.481445      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:26:53.482202      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:26:54.482296      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:26:55.482531      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:26:56.483391      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:26:57.176: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 07/27/24 13:26:57.186
  Jul 27 13:26:57.189: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-2350" for this suite. @ 07/27/24 13:26:57.192
• [88.502 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 07/27/24 13:26:57.206
  Jul 27 13:26:57.206: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename dns @ 07/27/24 13:26:57.206
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:26:57.229
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:26:57.23
  STEP: Creating a test headless service @ 07/27/24 13:26:57.232
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-605 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-605;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-605 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-605;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-605.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-605.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-605.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-605.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-605.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-605.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-605.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-605.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-605.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-605.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-605.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-605.svc;check="$$(dig +notcp +noall +answer +search 92.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.92_udp@PTR;check="$$(dig +tcp +noall +answer +search 92.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.92_tcp@PTR;sleep 1; done
   @ 07/27/24 13:26:57.249
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-605 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-605;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-605 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-605;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-605.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-605.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-605.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-605.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-605.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-605.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-605.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-605.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-605.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-605.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-605.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-605.svc;check="$$(dig +notcp +noall +answer +search 92.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.92_udp@PTR;check="$$(dig +tcp +noall +answer +search 92.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.92_tcp@PTR;sleep 1; done
   @ 07/27/24 13:26:57.249
  STEP: creating a pod to probe DNS @ 07/27/24 13:26:57.249
  STEP: submitting the pod to kubernetes @ 07/27/24 13:26:57.249
  E0727 13:26:57.483775      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:26:58.483982      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/27/24 13:26:59.273
  STEP: looking for the results for each expected name from probers @ 07/27/24 13:26:59.276
  Jul 27 13:26:59.281: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-605/dns-test-b4c07dd9-fb8a-4718-9985-7413e9aab02d: the server could not find the requested resource (get pods dns-test-b4c07dd9-fb8a-4718-9985-7413e9aab02d)
  Jul 27 13:26:59.286: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-605/dns-test-b4c07dd9-fb8a-4718-9985-7413e9aab02d: the server could not find the requested resource (get pods dns-test-b4c07dd9-fb8a-4718-9985-7413e9aab02d)
  Jul 27 13:26:59.289: INFO: Unable to read wheezy_udp@dns-test-service.dns-605 from pod dns-605/dns-test-b4c07dd9-fb8a-4718-9985-7413e9aab02d: the server could not find the requested resource (get pods dns-test-b4c07dd9-fb8a-4718-9985-7413e9aab02d)
  Jul 27 13:26:59.292: INFO: Unable to read wheezy_tcp@dns-test-service.dns-605 from pod dns-605/dns-test-b4c07dd9-fb8a-4718-9985-7413e9aab02d: the server could not find the requested resource (get pods dns-test-b4c07dd9-fb8a-4718-9985-7413e9aab02d)
  Jul 27 13:26:59.296: INFO: Unable to read wheezy_udp@dns-test-service.dns-605.svc from pod dns-605/dns-test-b4c07dd9-fb8a-4718-9985-7413e9aab02d: the server could not find the requested resource (get pods dns-test-b4c07dd9-fb8a-4718-9985-7413e9aab02d)
  Jul 27 13:26:59.299: INFO: Unable to read wheezy_tcp@dns-test-service.dns-605.svc from pod dns-605/dns-test-b4c07dd9-fb8a-4718-9985-7413e9aab02d: the server could not find the requested resource (get pods dns-test-b4c07dd9-fb8a-4718-9985-7413e9aab02d)
  Jul 27 13:26:59.302: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-605.svc from pod dns-605/dns-test-b4c07dd9-fb8a-4718-9985-7413e9aab02d: the server could not find the requested resource (get pods dns-test-b4c07dd9-fb8a-4718-9985-7413e9aab02d)
  Jul 27 13:26:59.307: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-605.svc from pod dns-605/dns-test-b4c07dd9-fb8a-4718-9985-7413e9aab02d: the server could not find the requested resource (get pods dns-test-b4c07dd9-fb8a-4718-9985-7413e9aab02d)
  Jul 27 13:26:59.323: INFO: Unable to read jessie_udp@dns-test-service from pod dns-605/dns-test-b4c07dd9-fb8a-4718-9985-7413e9aab02d: the server could not find the requested resource (get pods dns-test-b4c07dd9-fb8a-4718-9985-7413e9aab02d)
  Jul 27 13:26:59.327: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-605/dns-test-b4c07dd9-fb8a-4718-9985-7413e9aab02d: the server could not find the requested resource (get pods dns-test-b4c07dd9-fb8a-4718-9985-7413e9aab02d)
  Jul 27 13:26:59.331: INFO: Unable to read jessie_udp@dns-test-service.dns-605 from pod dns-605/dns-test-b4c07dd9-fb8a-4718-9985-7413e9aab02d: the server could not find the requested resource (get pods dns-test-b4c07dd9-fb8a-4718-9985-7413e9aab02d)
  Jul 27 13:26:59.334: INFO: Unable to read jessie_tcp@dns-test-service.dns-605 from pod dns-605/dns-test-b4c07dd9-fb8a-4718-9985-7413e9aab02d: the server could not find the requested resource (get pods dns-test-b4c07dd9-fb8a-4718-9985-7413e9aab02d)
  Jul 27 13:26:59.338: INFO: Unable to read jessie_udp@dns-test-service.dns-605.svc from pod dns-605/dns-test-b4c07dd9-fb8a-4718-9985-7413e9aab02d: the server could not find the requested resource (get pods dns-test-b4c07dd9-fb8a-4718-9985-7413e9aab02d)
  Jul 27 13:26:59.342: INFO: Unable to read jessie_tcp@dns-test-service.dns-605.svc from pod dns-605/dns-test-b4c07dd9-fb8a-4718-9985-7413e9aab02d: the server could not find the requested resource (get pods dns-test-b4c07dd9-fb8a-4718-9985-7413e9aab02d)
  Jul 27 13:26:59.345: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-605.svc from pod dns-605/dns-test-b4c07dd9-fb8a-4718-9985-7413e9aab02d: the server could not find the requested resource (get pods dns-test-b4c07dd9-fb8a-4718-9985-7413e9aab02d)
  Jul 27 13:26:59.349: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-605.svc from pod dns-605/dns-test-b4c07dd9-fb8a-4718-9985-7413e9aab02d: the server could not find the requested resource (get pods dns-test-b4c07dd9-fb8a-4718-9985-7413e9aab02d)
  Jul 27 13:26:59.362: INFO: Lookups using dns-605/dns-test-b4c07dd9-fb8a-4718-9985-7413e9aab02d failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-605 wheezy_tcp@dns-test-service.dns-605 wheezy_udp@dns-test-service.dns-605.svc wheezy_tcp@dns-test-service.dns-605.svc wheezy_udp@_http._tcp.dns-test-service.dns-605.svc wheezy_tcp@_http._tcp.dns-test-service.dns-605.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-605 jessie_tcp@dns-test-service.dns-605 jessie_udp@dns-test-service.dns-605.svc jessie_tcp@dns-test-service.dns-605.svc jessie_udp@_http._tcp.dns-test-service.dns-605.svc jessie_tcp@_http._tcp.dns-test-service.dns-605.svc]

  Jul 27 13:26:59.372: INFO: Pod client logs for webserver: 
  Jul 27 13:26:59.378: INFO: Pod client logs for querier: 
  Jul 27 13:26:59.384: INFO: Pod client logs for jessie-querier: 
  E0727 13:26:59.484569      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:27:00.484680      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:27:01.484824      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:27:02.485811      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:27:03.486436      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:27:04.362: INFO: DNS probes using dns-605/dns-test-b4c07dd9-fb8a-4718-9985-7413e9aab02d succeeded

  STEP: deleting the pod @ 07/27/24 13:27:04.363
  STEP: deleting the test service @ 07/27/24 13:27:04.376
  STEP: deleting the test headless service @ 07/27/24 13:27:04.398
  Jul 27 13:27:04.410: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-605" for this suite. @ 07/27/24 13:27:04.414
• [7.214 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1455
  STEP: Creating a kubernetes client @ 07/27/24 13:27:04.42
  Jul 27 13:27:04.420: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename services @ 07/27/24 13:27:04.421
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:27:04.438
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:27:04.44
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-997 @ 07/27/24 13:27:04.441
  STEP: changing the ExternalName service to type=NodePort @ 07/27/24 13:27:04.446
  STEP: creating replication controller externalname-service in namespace services-997 @ 07/27/24 13:27:04.462
  I0727 13:27:04.472544      20 runners.go:197] Created replication controller with name: externalname-service, namespace: services-997, replica count: 2
  E0727 13:27:04.486734      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:27:05.487462      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:27:06.488432      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:27:07.488772      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0727 13:27:07.523039      20 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jul 27 13:27:07.523: INFO: Creating new exec pod
  E0727 13:27:08.488883      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:27:09.489531      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:27:10.489612      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:27:10.546: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=services-997 exec execpodjwfwj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Jul 27 13:27:10.650: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Jul 27 13:27:10.650: INFO: stdout: "externalname-service-bjxfx"
  Jul 27 13:27:10.650: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=services-997 exec execpodjwfwj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.165 80'
  Jul 27 13:27:10.744: INFO: stderr: "+ nc -v -t -w 2 10.152.183.165 80\n+ echo hostName\nConnection to 10.152.183.165 80 port [tcp/http] succeeded!\n"
  Jul 27 13:27:10.744: INFO: stdout: "externalname-service-bjxfx"
  Jul 27 13:27:10.744: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=services-997 exec execpodjwfwj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.76.31 31343'
  Jul 27 13:27:10.833: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.76.31 31343\nConnection to 172.31.76.31 31343 port [tcp/*] succeeded!\n"
  Jul 27 13:27:10.833: INFO: stdout: "externalname-service-httmx"
  Jul 27 13:27:10.833: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=services-997 exec execpodjwfwj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.10.249 31343'
  Jul 27 13:27:10.925: INFO: stderr: "+ nc -v -t -w 2 172.31.10.249 31343\n+ echo hostName\nConnection to 172.31.10.249 31343 port [tcp/*] succeeded!\n"
  Jul 27 13:27:10.925: INFO: stdout: "externalname-service-httmx"
  Jul 27 13:27:10.925: INFO: Cleaning up the ExternalName to NodePort test service
  Jul 27 13:27:10.950: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-997" for this suite. @ 07/27/24 13:27:10.955
• [6.542 seconds]
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1416
  STEP: Creating a kubernetes client @ 07/27/24 13:27:10.962
  Jul 27 13:27:10.962: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename services @ 07/27/24 13:27:10.963
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:27:10.981
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:27:10.983
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-9934 @ 07/27/24 13:27:10.985
  STEP: changing the ExternalName service to type=ClusterIP @ 07/27/24 13:27:10.989
  STEP: creating replication controller externalname-service in namespace services-9934 @ 07/27/24 13:27:11
  I0727 13:27:11.006827      20 runners.go:197] Created replication controller with name: externalname-service, namespace: services-9934, replica count: 2
  E0727 13:27:11.490525      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:27:12.491210      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:27:13.491370      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0727 13:27:14.058042      20 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jul 27 13:27:14.058: INFO: Creating new exec pod
  E0727 13:27:14.491465      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:27:15.491546      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:27:16.491875      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:27:17.079: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=services-9934 exec execpodc4cxk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Jul 27 13:27:17.172: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Jul 27 13:27:17.172: INFO: stdout: ""
  E0727 13:27:17.492167      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:27:18.080: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=services-9934 exec execpodc4cxk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Jul 27 13:27:18.176: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Jul 27 13:27:18.176: INFO: stdout: ""
  E0727 13:27:18.492466      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:27:19.080: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=services-9934 exec execpodc4cxk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Jul 27 13:27:19.173: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Jul 27 13:27:19.173: INFO: stdout: "externalname-service-vszsd"
  Jul 27 13:27:19.173: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=services-9934 exec execpodc4cxk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.57 80'
  Jul 27 13:27:19.268: INFO: stderr: "+ nc -v -t -w 2 10.152.183.57 80\n+ echo hostName\nConnection to 10.152.183.57 80 port [tcp/http] succeeded!\n"
  Jul 27 13:27:19.268: INFO: stdout: "externalname-service-vszsd"
  Jul 27 13:27:19.268: INFO: Cleaning up the ExternalName to ClusterIP test service
  Jul 27 13:27:19.286: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9934" for this suite. @ 07/27/24 13:27:19.29
• [8.334 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 07/27/24 13:27:19.297
  Jul 27 13:27:19.297: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename webhook @ 07/27/24 13:27:19.298
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:27:19.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:27:19.319
  STEP: Setting up server cert @ 07/27/24 13:27:19.341
  E0727 13:27:19.492956      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/27/24 13:27:19.742
  STEP: Deploying the webhook pod @ 07/27/24 13:27:19.75
  STEP: Wait for the deployment to be ready @ 07/27/24 13:27:19.762
  Jul 27 13:27:19.769: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0727 13:27:20.493167      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:27:21.493267      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/27/24 13:27:21.78
  STEP: Verifying the service has paired with the endpoint @ 07/27/24 13:27:21.79
  E0727 13:27:22.493739      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:27:22.791: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jul 27 13:27:22.798: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-2274-crds.webhook.example.com via the AdmissionRegistration API @ 07/27/24 13:27:23.307
  STEP: Creating a custom resource that should be mutated by the webhook @ 07/27/24 13:27:23.32
  E0727 13:27:23.494655      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:27:24.494869      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:27:25.494908      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:27:25.898: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1909" for this suite. @ 07/27/24 13:27:25.902
  STEP: Destroying namespace "webhook-markers-8164" for this suite. @ 07/27/24 13:27:25.909
• [6.619 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 07/27/24 13:27:25.916
  Jul 27 13:27:25.916: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename daemonsets @ 07/27/24 13:27:25.916
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:27:25.933
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:27:25.935
  STEP: Creating simple DaemonSet "daemon-set" @ 07/27/24 13:27:25.956
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/27/24 13:27:25.96
  Jul 27 13:27:25.963: INFO: DaemonSet pods can't tolerate node ip-172-31-6-18 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 27 13:27:25.963: INFO: DaemonSet pods can't tolerate node ip-172-31-93-193 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 27 13:27:25.965: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul 27 13:27:25.966: INFO: Node ip-172-31-10-249 is running 0 daemon pod, expected 1
  E0727 13:27:26.501113      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:27:26.966: INFO: DaemonSet pods can't tolerate node ip-172-31-6-18 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 27 13:27:26.966: INFO: DaemonSet pods can't tolerate node ip-172-31-93-193 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 27 13:27:26.969: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jul 27 13:27:26.969: INFO: Node ip-172-31-18-96 is running 0 daemon pod, expected 1
  E0727 13:27:27.501549      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:27:27.965: INFO: DaemonSet pods can't tolerate node ip-172-31-6-18 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 27 13:27:27.965: INFO: DaemonSet pods can't tolerate node ip-172-31-93-193 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 27 13:27:27.968: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jul 27 13:27:27.968: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 07/27/24 13:27:27.97
  STEP: DeleteCollection of the DaemonSets @ 07/27/24 13:27:27.975
  STEP: Verify that ReplicaSets have been deleted @ 07/27/24 13:27:27.983
  Jul 27 13:27:27.994: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"33337"},"items":null}

  Jul 27 13:27:28.002: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"33338"},"items":[{"metadata":{"name":"daemon-set-n2p54","generateName":"daemon-set-","namespace":"daemonsets-4557","uid":"05218b82-3d0b-4d95-b4a8-5dfdf9c12ac8","resourceVersion":"33330","creationTimestamp":"2024-07-27T13:27:25Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"17a4d116-cbc5-43b3-b22b-c7748e9285a4","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-07-27T13:27:25Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"17a4d116-cbc5-43b3-b22b-c7748e9285a4\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-07-27T13:27:27Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.122.160\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-shsbx","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-shsbx","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-18-96","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-18-96"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-27T13:27:27Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-27T13:27:25Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-27T13:27:27Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-27T13:27:27Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-27T13:27:25Z"}],"hostIP":"172.31.18.96","hostIPs":[{"ip":"172.31.18.96"}],"podIP":"192.168.122.160","podIPs":[{"ip":"192.168.122.160"}],"startTime":"2024-07-27T13:27:25Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-07-27T13:27:26Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://bc79a47e460940e5d13d12a42b5bc734f646a86c59a10265562793a3bf4ecb89","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-p5t92","generateName":"daemon-set-","namespace":"daemonsets-4557","uid":"be27f5b1-9324-44d8-b44c-9d6df0ea554b","resourceVersion":"33338","creationTimestamp":"2024-07-27T13:27:25Z","deletionTimestamp":"2024-07-27T13:27:57Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"17a4d116-cbc5-43b3-b22b-c7748e9285a4","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-07-27T13:27:25Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"17a4d116-cbc5-43b3-b22b-c7748e9285a4\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-07-27T13:27:26Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.97.58\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-l926f","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-l926f","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-10-249","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-10-249"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-27T13:27:26Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-27T13:27:25Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-27T13:27:26Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-27T13:27:26Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-27T13:27:25Z"}],"hostIP":"172.31.10.249","hostIPs":[{"ip":"172.31.10.249"}],"podIP":"192.168.97.58","podIPs":[{"ip":"192.168.97.58"}],"startTime":"2024-07-27T13:27:25Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-07-27T13:27:26Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://2c1d3b2f39709b0729dbba9ec484ebd26bc01e82d26e57569d1ced12c6dd8879","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-t4f59","generateName":"daemon-set-","namespace":"daemonsets-4557","uid":"7b34d687-321b-43d0-a8d5-795c8cbbdd01","resourceVersion":"33322","creationTimestamp":"2024-07-27T13:27:25Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"17a4d116-cbc5-43b3-b22b-c7748e9285a4","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-07-27T13:27:25Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"17a4d116-cbc5-43b3-b22b-c7748e9285a4\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-07-27T13:27:26Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.96.79\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-p5flh","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-p5flh","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-76-31","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-76-31"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-27T13:27:26Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-27T13:27:25Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-27T13:27:26Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-27T13:27:26Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-27T13:27:25Z"}],"hostIP":"172.31.76.31","hostIPs":[{"ip":"172.31.76.31"}],"podIP":"192.168.96.79","podIPs":[{"ip":"192.168.96.79"}],"startTime":"2024-07-27T13:27:25Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-07-27T13:27:26Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://ae955c8ba697c3f2029ffc0727a8ca2ae795409d16c6de091b381b751eee53ef","started":true}],"qosClass":"BestEffort"}}]}

  Jul 27 13:27:28.016: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4557" for this suite. @ 07/27/24 13:27:28.019
• [2.109 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 07/27/24 13:27:28.025
  Jul 27 13:27:28.025: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename deployment @ 07/27/24 13:27:28.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:27:28.042
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:27:28.044
  Jul 27 13:27:28.045: INFO: Creating deployment "test-recreate-deployment"
  Jul 27 13:27:28.050: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
  Jul 27 13:27:28.063: INFO: deployment "test-recreate-deployment" doesn't have the required revision set
  E0727 13:27:28.502609      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:27:29.502829      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:27:30.071: INFO: Waiting deployment "test-recreate-deployment" to complete
  Jul 27 13:27:30.074: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
  Jul 27 13:27:30.084: INFO: Updating deployment test-recreate-deployment
  Jul 27 13:27:30.084: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  Jul 27 13:27:30.161: INFO: Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1599",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8b9ec841-ac4c-4678-ab0a-9aeda3e152ca",
      ResourceVersion: (string) (len=5) "33414",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857683648,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683650,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683650,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683650,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683650,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683650,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683648,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-76fb77d45\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jul 27 13:27:30.164: INFO: New ReplicaSet "test-recreate-deployment-76fb77d45" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1599",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0c1be529-a923-4b4c-b0b1-bfabe629b83a",
      ResourceVersion: (string) (len=5) "33412",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857683650,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "8b9ec841-ac4c-4678-ab0a-9aeda3e152ca",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683650,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 38 62 39 65 63 38  34 31 2d 61 63 34 63 2d  |\"8b9ec841-ac4c-|
              00000120  34 36 37 38 2d 61 62 30  61 2d 39 61 65 64 61 33  |4678-ab0a-9aeda3|
              00000130  65 31 35 32 63 61 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |e152ca\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683650,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jul 27 13:27:30.166: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
  Jul 27 13:27:30.166: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-5cf87b5b86",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1599",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d16a8df1-73e6-4dfd-98bd-95794bb6d4a5",
      ResourceVersion: (string) (len=5) "33403",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857683648,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "8b9ec841-ac4c-4678-ab0a-9aeda3e152ca",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683650,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 38 62 39 65 63 38  34 31 2d 61 63 34 63 2d  |\"8b9ec841-ac4c-|
              00000120  34 36 37 38 2d 61 62 30  61 2d 39 61 65 64 61 33  |4678-ab0a-9aeda3|
              00000130  65 31 35 32 63 61 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |e152ca\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683650,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jul 27 13:27:30.171: INFO: Pod "test-recreate-deployment-76fb77d45-mvdhr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-76fb77d45-mvdhr",
      GenerateName: (string) (len=35) "test-recreate-deployment-76fb77d45-",
      Namespace: (string) (len=15) "deployment-1599",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ee7234e6-0fd8-47b8-9f06-ca20f69114ee",
      ResourceVersion: (string) (len=5) "33415",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857683650,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45",
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
          UID: (types.UID) (len=36) "0c1be529-a923-4b4c-b0b1-bfabe629b83a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683650,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 63  31 62 65 35 32 39 2d 61  |d\":\"0c1be529-a|
              00000090  39 32 33 2d 34 62 34 63  2d 62 30 62 31 2d 62 66  |923-4b4c-b0b1-bf|
              000000a0  61 62 65 36 32 39 62 38  33 61 5c 22 7d 22 3a 7b  |abe629b83a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683650,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-47thj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-47thj",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-18-96",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683650,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683650,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683650,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683650,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683650,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.18.96",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.18.96"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857683650,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 27 13:27:30.172: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1599" for this suite. @ 07/27/24 13:27:30.175
• [2.156 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 07/27/24 13:27:30.182
  Jul 27 13:27:30.182: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename gc @ 07/27/24 13:27:30.182
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:27:30.199
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:27:30.201
  STEP: create the rc @ 07/27/24 13:27:30.207
  W0727 13:27:30.211408      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0727 13:27:30.502843      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:27:31.503313      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:27:32.507128      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:27:33.507894      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:27:34.511634      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:27:35.513756      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 07/27/24 13:27:36.216
  STEP: wait for the rc to be deleted @ 07/27/24 13:27:36.234
  E0727 13:27:36.513821      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:27:37.514760      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:27:38.514942      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:27:39.515038      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:27:40.515159      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 07/27/24 13:27:41.248
  E0727 13:27:41.515673      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:27:42.515694      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:27:43.515914      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:27:44.516095      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:27:45.516910      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:27:46.517131      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:27:47.517477      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:27:48.517527      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:27:49.518373      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:27:50.518553      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:27:51.518743      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:27:52.519765      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:27:53.519878      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:27:54.520073      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:27:55.520259      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:27:56.521145      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:27:57.521746      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:27:58.521840      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:27:59.522498      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:28:00.522594      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:28:01.522788      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:28:02.523641      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:28:03.523759      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:28:04.524132      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:28:05.524244      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:28:06.524423      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:28:07.524544      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:28:08.524678      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:28:09.525496      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:28:10.526210      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 07/27/24 13:28:11.257
  W0727 13:28:11.261664      20 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Jul 27 13:28:11.261: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jul 27 13:28:11.261: INFO: Deleting pod "simpletest.rc-29drs" in namespace "gc-6085"
  Jul 27 13:28:11.275: INFO: Deleting pod "simpletest.rc-2bjft" in namespace "gc-6085"
  Jul 27 13:28:11.288: INFO: Deleting pod "simpletest.rc-2dl9n" in namespace "gc-6085"
  Jul 27 13:28:11.301: INFO: Deleting pod "simpletest.rc-2n25f" in namespace "gc-6085"
  Jul 27 13:28:11.312: INFO: Deleting pod "simpletest.rc-2q9bt" in namespace "gc-6085"
  Jul 27 13:28:11.326: INFO: Deleting pod "simpletest.rc-2s5wk" in namespace "gc-6085"
  Jul 27 13:28:11.341: INFO: Deleting pod "simpletest.rc-2v6th" in namespace "gc-6085"
  Jul 27 13:28:11.354: INFO: Deleting pod "simpletest.rc-2w5pk" in namespace "gc-6085"
  Jul 27 13:28:11.368: INFO: Deleting pod "simpletest.rc-49tc8" in namespace "gc-6085"
  Jul 27 13:28:11.378: INFO: Deleting pod "simpletest.rc-4dgrk" in namespace "gc-6085"
  Jul 27 13:28:11.391: INFO: Deleting pod "simpletest.rc-4gqqr" in namespace "gc-6085"
  Jul 27 13:28:11.405: INFO: Deleting pod "simpletest.rc-4hzng" in namespace "gc-6085"
  Jul 27 13:28:11.418: INFO: Deleting pod "simpletest.rc-4k9kx" in namespace "gc-6085"
  Jul 27 13:28:11.432: INFO: Deleting pod "simpletest.rc-4qtpg" in namespace "gc-6085"
  Jul 27 13:28:11.445: INFO: Deleting pod "simpletest.rc-587g7" in namespace "gc-6085"
  Jul 27 13:28:11.459: INFO: Deleting pod "simpletest.rc-5d4lg" in namespace "gc-6085"
  Jul 27 13:28:11.471: INFO: Deleting pod "simpletest.rc-5ft44" in namespace "gc-6085"
  Jul 27 13:28:11.485: INFO: Deleting pod "simpletest.rc-5sf44" in namespace "gc-6085"
  Jul 27 13:28:11.503: INFO: Deleting pod "simpletest.rc-6kflh" in namespace "gc-6085"
  Jul 27 13:28:11.517: INFO: Deleting pod "simpletest.rc-6rbk5" in namespace "gc-6085"
  E0727 13:28:11.526686      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:28:11.530: INFO: Deleting pod "simpletest.rc-745wv" in namespace "gc-6085"
  Jul 27 13:28:11.553: INFO: Deleting pod "simpletest.rc-779b8" in namespace "gc-6085"
  Jul 27 13:28:11.567: INFO: Deleting pod "simpletest.rc-77d27" in namespace "gc-6085"
  Jul 27 13:28:11.581: INFO: Deleting pod "simpletest.rc-782gc" in namespace "gc-6085"
  Jul 27 13:28:11.595: INFO: Deleting pod "simpletest.rc-784bk" in namespace "gc-6085"
  Jul 27 13:28:11.609: INFO: Deleting pod "simpletest.rc-7cw5z" in namespace "gc-6085"
  Jul 27 13:28:11.622: INFO: Deleting pod "simpletest.rc-7n5ph" in namespace "gc-6085"
  Jul 27 13:28:11.644: INFO: Deleting pod "simpletest.rc-7nsp6" in namespace "gc-6085"
  Jul 27 13:28:11.658: INFO: Deleting pod "simpletest.rc-7pjfs" in namespace "gc-6085"
  Jul 27 13:28:11.673: INFO: Deleting pod "simpletest.rc-7z965" in namespace "gc-6085"
  Jul 27 13:28:11.686: INFO: Deleting pod "simpletest.rc-8j64h" in namespace "gc-6085"
  Jul 27 13:28:11.702: INFO: Deleting pod "simpletest.rc-8lf6z" in namespace "gc-6085"
  Jul 27 13:28:11.715: INFO: Deleting pod "simpletest.rc-8qmvj" in namespace "gc-6085"
  Jul 27 13:28:11.729: INFO: Deleting pod "simpletest.rc-9cnq7" in namespace "gc-6085"
  Jul 27 13:28:11.747: INFO: Deleting pod "simpletest.rc-9dx2s" in namespace "gc-6085"
  Jul 27 13:28:11.779: INFO: Deleting pod "simpletest.rc-bfx6j" in namespace "gc-6085"
  Jul 27 13:28:11.802: INFO: Deleting pod "simpletest.rc-btv7k" in namespace "gc-6085"
  Jul 27 13:28:11.815: INFO: Deleting pod "simpletest.rc-cmpkm" in namespace "gc-6085"
  Jul 27 13:28:11.829: INFO: Deleting pod "simpletest.rc-cqvwm" in namespace "gc-6085"
  Jul 27 13:28:11.843: INFO: Deleting pod "simpletest.rc-crq96" in namespace "gc-6085"
  Jul 27 13:28:11.856: INFO: Deleting pod "simpletest.rc-cxvrs" in namespace "gc-6085"
  Jul 27 13:28:11.866: INFO: Deleting pod "simpletest.rc-d6jdx" in namespace "gc-6085"
  Jul 27 13:28:11.881: INFO: Deleting pod "simpletest.rc-dswqs" in namespace "gc-6085"
  Jul 27 13:28:11.892: INFO: Deleting pod "simpletest.rc-f24n4" in namespace "gc-6085"
  Jul 27 13:28:11.907: INFO: Deleting pod "simpletest.rc-f2t6j" in namespace "gc-6085"
  Jul 27 13:28:11.921: INFO: Deleting pod "simpletest.rc-fjtdf" in namespace "gc-6085"
  Jul 27 13:28:11.939: INFO: Deleting pod "simpletest.rc-fmmwf" in namespace "gc-6085"
  Jul 27 13:28:11.954: INFO: Deleting pod "simpletest.rc-hcm2p" in namespace "gc-6085"
  Jul 27 13:28:11.974: INFO: Deleting pod "simpletest.rc-hrqxq" in namespace "gc-6085"
  Jul 27 13:28:12.000: INFO: Deleting pod "simpletest.rc-htxpw" in namespace "gc-6085"
  Jul 27 13:28:12.014: INFO: Deleting pod "simpletest.rc-j7dfb" in namespace "gc-6085"
  Jul 27 13:28:12.028: INFO: Deleting pod "simpletest.rc-j9llh" in namespace "gc-6085"
  Jul 27 13:28:12.050: INFO: Deleting pod "simpletest.rc-jrxr6" in namespace "gc-6085"
  Jul 27 13:28:12.070: INFO: Deleting pod "simpletest.rc-lfl29" in namespace "gc-6085"
  Jul 27 13:28:12.084: INFO: Deleting pod "simpletest.rc-m9kvr" in namespace "gc-6085"
  Jul 27 13:28:12.103: INFO: Deleting pod "simpletest.rc-mg47s" in namespace "gc-6085"
  Jul 27 13:28:12.125: INFO: Deleting pod "simpletest.rc-mmgfj" in namespace "gc-6085"
  Jul 27 13:28:12.148: INFO: Deleting pod "simpletest.rc-mnwdm" in namespace "gc-6085"
  Jul 27 13:28:12.185: INFO: Deleting pod "simpletest.rc-msptc" in namespace "gc-6085"
  Jul 27 13:28:12.198: INFO: Deleting pod "simpletest.rc-mzpjs" in namespace "gc-6085"
  Jul 27 13:28:12.211: INFO: Deleting pod "simpletest.rc-njlrn" in namespace "gc-6085"
  Jul 27 13:28:12.253: INFO: Deleting pod "simpletest.rc-nq445" in namespace "gc-6085"
  Jul 27 13:28:12.272: INFO: Deleting pod "simpletest.rc-nxcx2" in namespace "gc-6085"
  Jul 27 13:28:12.285: INFO: Deleting pod "simpletest.rc-p9m64" in namespace "gc-6085"
  Jul 27 13:28:12.302: INFO: Deleting pod "simpletest.rc-pmvd4" in namespace "gc-6085"
  Jul 27 13:28:12.324: INFO: Deleting pod "simpletest.rc-psnlr" in namespace "gc-6085"
  Jul 27 13:28:12.339: INFO: Deleting pod "simpletest.rc-px77v" in namespace "gc-6085"
  Jul 27 13:28:12.353: INFO: Deleting pod "simpletest.rc-pxmll" in namespace "gc-6085"
  Jul 27 13:28:12.373: INFO: Deleting pod "simpletest.rc-q6mqq" in namespace "gc-6085"
  Jul 27 13:28:12.389: INFO: Deleting pod "simpletest.rc-q7mhc" in namespace "gc-6085"
  Jul 27 13:28:12.405: INFO: Deleting pod "simpletest.rc-qdw8z" in namespace "gc-6085"
  Jul 27 13:28:12.421: INFO: Deleting pod "simpletest.rc-qf85t" in namespace "gc-6085"
  Jul 27 13:28:12.462: INFO: Deleting pod "simpletest.rc-qgskv" in namespace "gc-6085"
  Jul 27 13:28:12.515: INFO: Deleting pod "simpletest.rc-qh8n2" in namespace "gc-6085"
  E0727 13:28:12.527183      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:28:12.565: INFO: Deleting pod "simpletest.rc-qmdpt" in namespace "gc-6085"
  Jul 27 13:28:12.617: INFO: Deleting pod "simpletest.rc-qqxvh" in namespace "gc-6085"
  Jul 27 13:28:12.663: INFO: Deleting pod "simpletest.rc-r9qh9" in namespace "gc-6085"
  Jul 27 13:28:12.711: INFO: Deleting pod "simpletest.rc-rbm87" in namespace "gc-6085"
  Jul 27 13:28:12.762: INFO: Deleting pod "simpletest.rc-rd8jm" in namespace "gc-6085"
  Jul 27 13:28:12.821: INFO: Deleting pod "simpletest.rc-rgq7n" in namespace "gc-6085"
  Jul 27 13:28:12.878: INFO: Deleting pod "simpletest.rc-s8r24" in namespace "gc-6085"
  Jul 27 13:28:12.918: INFO: Deleting pod "simpletest.rc-s94gv" in namespace "gc-6085"
  Jul 27 13:28:12.963: INFO: Deleting pod "simpletest.rc-tn87b" in namespace "gc-6085"
  Jul 27 13:28:13.012: INFO: Deleting pod "simpletest.rc-tpp49" in namespace "gc-6085"
  Jul 27 13:28:13.064: INFO: Deleting pod "simpletest.rc-v4lh2" in namespace "gc-6085"
  Jul 27 13:28:13.113: INFO: Deleting pod "simpletest.rc-vgkx6" in namespace "gc-6085"
  Jul 27 13:28:13.160: INFO: Deleting pod "simpletest.rc-vgmjf" in namespace "gc-6085"
  Jul 27 13:28:13.228: INFO: Deleting pod "simpletest.rc-vgwg8" in namespace "gc-6085"
  Jul 27 13:28:13.295: INFO: Deleting pod "simpletest.rc-vkvl4" in namespace "gc-6085"
  Jul 27 13:28:13.319: INFO: Deleting pod "simpletest.rc-wjshb" in namespace "gc-6085"
  Jul 27 13:28:13.389: INFO: Deleting pod "simpletest.rc-wqh6p" in namespace "gc-6085"
  Jul 27 13:28:13.416: INFO: Deleting pod "simpletest.rc-wqzbc" in namespace "gc-6085"
  Jul 27 13:28:13.462: INFO: Deleting pod "simpletest.rc-wttks" in namespace "gc-6085"
  Jul 27 13:28:13.520: INFO: Deleting pod "simpletest.rc-x98sp" in namespace "gc-6085"
  E0727 13:28:13.529228      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:28:13.565: INFO: Deleting pod "simpletest.rc-xb2pp" in namespace "gc-6085"
  Jul 27 13:28:13.619: INFO: Deleting pod "simpletest.rc-xbhmt" in namespace "gc-6085"
  Jul 27 13:28:13.668: INFO: Deleting pod "simpletest.rc-xsl62" in namespace "gc-6085"
  Jul 27 13:28:13.719: INFO: Deleting pod "simpletest.rc-xtnlz" in namespace "gc-6085"
  Jul 27 13:28:13.759: INFO: Deleting pod "simpletest.rc-z5k52" in namespace "gc-6085"
  Jul 27 13:28:13.814: INFO: Deleting pod "simpletest.rc-znw8c" in namespace "gc-6085"
  Jul 27 13:28:13.863: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6085" for this suite. @ 07/27/24 13:28:13.905
• [43.776 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 07/27/24 13:28:13.958
  Jul 27 13:28:13.958: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename downward-api @ 07/27/24 13:28:13.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:28:13.981
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:28:13.984
  STEP: Creating a pod to test downward API volume plugin @ 07/27/24 13:28:13.989
  E0727 13:28:14.530243      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:28:15.530698      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:28:16.531172      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:28:17.531524      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/27/24 13:28:18.028
  Jul 27 13:28:18.031: INFO: Trying to get logs from node ip-172-31-18-96 pod downwardapi-volume-00bc03b2-2f7f-4daa-82a4-17393e97265c container client-container: <nil>
  STEP: delete the pod @ 07/27/24 13:28:18.038
  Jul 27 13:28:18.055: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4664" for this suite. @ 07/27/24 13:28:18.058
• [4.107 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 07/27/24 13:28:18.065
  Jul 27 13:28:18.065: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename downward-api @ 07/27/24 13:28:18.066
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:28:18.082
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:28:18.084
  STEP: Creating a pod to test downward API volume plugin @ 07/27/24 13:28:18.086
  E0727 13:28:18.532206      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:28:19.532495      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:28:20.533354      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:28:21.533525      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/27/24 13:28:22.109
  Jul 27 13:28:22.111: INFO: Trying to get logs from node ip-172-31-18-96 pod downwardapi-volume-9b8bccc7-3e48-4dc6-bcc9-acf5c6ea5a69 container client-container: <nil>
  STEP: delete the pod @ 07/27/24 13:28:22.117
  Jul 27 13:28:22.138: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5116" for this suite. @ 07/27/24 13:28:22.142
• [4.083 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 07/27/24 13:28:22.149
  Jul 27 13:28:22.149: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename webhook @ 07/27/24 13:28:22.149
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:28:22.169
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:28:22.171
  STEP: Setting up server cert @ 07/27/24 13:28:22.194
  E0727 13:28:22.533628      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/27/24 13:28:22.615
  STEP: Deploying the webhook pod @ 07/27/24 13:28:22.625
  STEP: Wait for the deployment to be ready @ 07/27/24 13:28:22.637
  Jul 27 13:28:22.643: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0727 13:28:23.533929      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:28:24.534020      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/27/24 13:28:24.655
  STEP: Verifying the service has paired with the endpoint @ 07/27/24 13:28:24.666
  E0727 13:28:25.534214      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:28:25.666: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 07/27/24 13:28:25.734
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/27/24 13:28:25.758
  STEP: Deleting the collection of validation webhooks @ 07/27/24 13:28:25.78
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/27/24 13:28:25.836
  Jul 27 13:28:25.880: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7700" for this suite. @ 07/27/24 13:28:25.889
  STEP: Destroying namespace "webhook-markers-2469" for this suite. @ 07/27/24 13:28:25.895
• [3.755 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 07/27/24 13:28:25.905
  Jul 27 13:28:25.905: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename projected @ 07/27/24 13:28:25.906
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:28:25.925
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:28:25.927
  STEP: Creating projection with secret that has name projected-secret-test-8b3deda8-b4d5-4a4a-a632-0ee6022d40c6 @ 07/27/24 13:28:25.928
  STEP: Creating a pod to test consume secrets @ 07/27/24 13:28:25.933
  E0727 13:28:26.534366      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:28:27.534446      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:28:28.534957      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:28:29.535126      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/27/24 13:28:29.952
  Jul 27 13:28:29.956: INFO: Trying to get logs from node ip-172-31-18-96 pod pod-projected-secrets-e076eb33-6bd8-467e-9e0d-2c98b586dee8 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 07/27/24 13:28:29.962
  Jul 27 13:28:29.983: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8126" for this suite. @ 07/27/24 13:28:29.986
• [4.088 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:194
  STEP: Creating a kubernetes client @ 07/27/24 13:28:29.993
  Jul 27 13:28:29.993: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/27/24 13:28:29.994
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:28:30.009
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:28:30.011
  Jul 27 13:28:30.013: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  E0727 13:28:30.535765      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 07/27/24 13:28:31.226
  Jul 27 13:28:31.226: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=crd-publish-openapi-6172 --namespace=crd-publish-openapi-6172 create -f -'
  E0727 13:28:31.536180      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:28:32.536479      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:28:33.291: INFO: stderr: ""
  Jul 27 13:28:33.291: INFO: stdout: "e2e-test-crd-publish-openapi-4052-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Jul 27 13:28:33.292: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=crd-publish-openapi-6172 --namespace=crd-publish-openapi-6172 delete e2e-test-crd-publish-openapi-4052-crds test-cr'
  Jul 27 13:28:33.341: INFO: stderr: ""
  Jul 27 13:28:33.341: INFO: stdout: "e2e-test-crd-publish-openapi-4052-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  Jul 27 13:28:33.341: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=crd-publish-openapi-6172 --namespace=crd-publish-openapi-6172 apply -f -'
  Jul 27 13:28:33.393: INFO: stderr: ""
  Jul 27 13:28:33.393: INFO: stdout: "e2e-test-crd-publish-openapi-4052-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Jul 27 13:28:33.393: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=crd-publish-openapi-6172 --namespace=crd-publish-openapi-6172 delete e2e-test-crd-publish-openapi-4052-crds test-cr'
  Jul 27 13:28:33.442: INFO: stderr: ""
  Jul 27 13:28:33.442: INFO: stdout: "e2e-test-crd-publish-openapi-4052-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 07/27/24 13:28:33.442
  Jul 27 13:28:33.442: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=crd-publish-openapi-6172 explain e2e-test-crd-publish-openapi-4052-crds'
  Jul 27 13:28:33.485: INFO: stderr: ""
  Jul 27 13:28:33.485: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-4052-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0727 13:28:33.537110      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:28:34.538137      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:28:34.754: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6172" for this suite. @ 07/27/24 13:28:34.761
• [4.778 seconds]
------------------------------
SS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 07/27/24 13:28:34.771
  Jul 27 13:28:34.771: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename subpath @ 07/27/24 13:28:34.772
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:28:34.787
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:28:34.79
  STEP: Setting up data @ 07/27/24 13:28:34.792
  STEP: Creating pod pod-subpath-test-downwardapi-7j2r @ 07/27/24 13:28:34.802
  STEP: Creating a pod to test atomic-volume-subpath @ 07/27/24 13:28:34.802
  E0727 13:28:35.538263      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:28:36.538408      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:28:37.538451      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:28:38.538542      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:28:39.538655      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:28:40.539087      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:28:41.539204      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:28:42.539501      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:28:43.540177      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:28:44.540277      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:28:45.540404      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:28:46.540604      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:28:47.540647      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:28:48.540715      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:28:49.541237      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:28:50.541341      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:28:51.542205      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:28:52.542614      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:28:53.543614      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:28:54.543708      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:28:55.543803      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:28:56.543894      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:28:57.544785      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:28:58.545043      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/27/24 13:28:58.879
  Jul 27 13:28:58.882: INFO: Trying to get logs from node ip-172-31-18-96 pod pod-subpath-test-downwardapi-7j2r container test-container-subpath-downwardapi-7j2r: <nil>
  STEP: delete the pod @ 07/27/24 13:28:58.893
  STEP: Deleting pod pod-subpath-test-downwardapi-7j2r @ 07/27/24 13:28:58.913
  Jul 27 13:28:58.913: INFO: Deleting pod "pod-subpath-test-downwardapi-7j2r" in namespace "subpath-9841"
  Jul 27 13:28:58.916: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9841" for this suite. @ 07/27/24 13:28:58.92
• [24.155 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 07/27/24 13:28:58.927
  Jul 27 13:28:58.927: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename watch @ 07/27/24 13:28:58.927
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:28:58.94
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:28:58.943
  STEP: creating a new configmap @ 07/27/24 13:28:58.945
  STEP: modifying the configmap once @ 07/27/24 13:28:58.949
  STEP: modifying the configmap a second time @ 07/27/24 13:28:58.956
  STEP: deleting the configmap @ 07/27/24 13:28:58.963
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 07/27/24 13:28:58.969
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 07/27/24 13:28:58.97
  Jul 27 13:28:58.970: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-4145  54fa2eab-32c3-42c4-9ec9-64138ca0386e 36305 0 2024-07-27 13:28:58 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-07-27 13:28:58 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jul 27 13:28:58.970: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-4145  54fa2eab-32c3-42c4-9ec9-64138ca0386e 36306 0 2024-07-27 13:28:58 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-07-27 13:28:58 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jul 27 13:28:58.971: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-4145" for this suite. @ 07/27/24 13:28:58.974
• [0.055 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 07/27/24 13:28:58.982
  Jul 27 13:28:58.982: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename webhook @ 07/27/24 13:28:58.982
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:28:58.994
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:28:58.996
  STEP: Setting up server cert @ 07/27/24 13:28:59.021
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/27/24 13:28:59.255
  STEP: Deploying the webhook pod @ 07/27/24 13:28:59.265
  STEP: Wait for the deployment to be ready @ 07/27/24 13:28:59.278
  Jul 27 13:28:59.284: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0727 13:28:59.545166      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:29:00.545254      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/27/24 13:29:01.296
  STEP: Verifying the service has paired with the endpoint @ 07/27/24 13:29:01.309
  E0727 13:29:01.545806      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:29:02.309: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 07/27/24 13:29:02.316
  STEP: Registering slow webhook via the AdmissionRegistration API @ 07/27/24 13:29:02.316
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 07/27/24 13:29:02.33
  E0727 13:29:02.546436      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 07/27/24 13:29:03.34
  STEP: Registering slow webhook via the AdmissionRegistration API @ 07/27/24 13:29:03.34
  E0727 13:29:03.546873      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is longer than webhook latency @ 07/27/24 13:29:04.368
  STEP: Registering slow webhook via the AdmissionRegistration API @ 07/27/24 13:29:04.368
  E0727 13:29:04.546967      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:29:05.547651      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:29:06.547746      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:29:07.548558      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:29:08.548666      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 07/27/24 13:29:09.402
  STEP: Registering slow webhook via the AdmissionRegistration API @ 07/27/24 13:29:09.402
  E0727 13:29:09.549310      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:29:10.549401      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:29:11.550240      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:29:12.550334      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:29:13.550417      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:29:14.491: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-123" for this suite. @ 07/27/24 13:29:14.497
  STEP: Destroying namespace "webhook-markers-2986" for this suite. @ 07/27/24 13:29:14.503
• [15.527 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 07/27/24 13:29:14.511
  Jul 27 13:29:14.511: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename container-probe @ 07/27/24 13:29:14.511
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:29:14.532
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:29:14.534
  STEP: Creating pod busybox-e75fcaa2-d028-4e9d-9e76-112d2c06f9eb in namespace container-probe-2704 @ 07/27/24 13:29:14.536
  E0727 13:29:14.550584      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:29:15.550754      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:29:16.550736      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/27/24 13:29:16.553
  Jul 27 13:29:16.557: INFO: Initial restart count of pod busybox-e75fcaa2-d028-4e9d-9e76-112d2c06f9eb is 0
  Jul 27 13:29:16.560: INFO: Get pod busybox-e75fcaa2-d028-4e9d-9e76-112d2c06f9eb in namespace container-probe-2704
  E0727 13:29:17.551775      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:29:18.551866      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:29:18.565: INFO: Get pod busybox-e75fcaa2-d028-4e9d-9e76-112d2c06f9eb in namespace container-probe-2704
  E0727 13:29:19.552165      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:29:20.552256      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:29:20.571: INFO: Get pod busybox-e75fcaa2-d028-4e9d-9e76-112d2c06f9eb in namespace container-probe-2704
  E0727 13:29:21.553169      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:29:22.553537      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:29:22.575: INFO: Get pod busybox-e75fcaa2-d028-4e9d-9e76-112d2c06f9eb in namespace container-probe-2704
  E0727 13:29:23.553651      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:29:24.554245      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:29:24.581: INFO: Get pod busybox-e75fcaa2-d028-4e9d-9e76-112d2c06f9eb in namespace container-probe-2704
  E0727 13:29:25.554311      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:29:26.554407      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:29:26.585: INFO: Get pod busybox-e75fcaa2-d028-4e9d-9e76-112d2c06f9eb in namespace container-probe-2704
  E0727 13:29:27.555021      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:29:28.555107      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:29:28.591: INFO: Get pod busybox-e75fcaa2-d028-4e9d-9e76-112d2c06f9eb in namespace container-probe-2704
  E0727 13:29:29.555303      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:29:30.555414      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:29:30.595: INFO: Get pod busybox-e75fcaa2-d028-4e9d-9e76-112d2c06f9eb in namespace container-probe-2704
  E0727 13:29:31.555485      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:29:32.555733      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:29:32.600: INFO: Get pod busybox-e75fcaa2-d028-4e9d-9e76-112d2c06f9eb in namespace container-probe-2704
  E0727 13:29:33.556300      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:29:34.557282      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:29:34.606: INFO: Get pod busybox-e75fcaa2-d028-4e9d-9e76-112d2c06f9eb in namespace container-probe-2704
  E0727 13:29:35.557365      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:29:36.558372      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:29:36.611: INFO: Get pod busybox-e75fcaa2-d028-4e9d-9e76-112d2c06f9eb in namespace container-probe-2704
  E0727 13:29:37.559044      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:29:38.559929      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:29:38.616: INFO: Get pod busybox-e75fcaa2-d028-4e9d-9e76-112d2c06f9eb in namespace container-probe-2704
  E0727 13:29:39.560329      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:29:40.560426      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:29:40.621: INFO: Get pod busybox-e75fcaa2-d028-4e9d-9e76-112d2c06f9eb in namespace container-probe-2704
  E0727 13:29:41.561159      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:29:42.561526      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:29:42.625: INFO: Get pod busybox-e75fcaa2-d028-4e9d-9e76-112d2c06f9eb in namespace container-probe-2704
  E0727 13:29:43.561764      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:29:44.561862      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:29:44.630: INFO: Get pod busybox-e75fcaa2-d028-4e9d-9e76-112d2c06f9eb in namespace container-probe-2704
  E0727 13:29:45.562908      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:29:46.563023      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:29:46.635: INFO: Get pod busybox-e75fcaa2-d028-4e9d-9e76-112d2c06f9eb in namespace container-probe-2704
  E0727 13:29:47.563552      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:29:48.563652      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:29:48.639: INFO: Get pod busybox-e75fcaa2-d028-4e9d-9e76-112d2c06f9eb in namespace container-probe-2704
  E0727 13:29:49.563947      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:29:50.564041      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:29:50.644: INFO: Get pod busybox-e75fcaa2-d028-4e9d-9e76-112d2c06f9eb in namespace container-probe-2704
  E0727 13:29:51.565095      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:29:52.565611      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:29:52.649: INFO: Get pod busybox-e75fcaa2-d028-4e9d-9e76-112d2c06f9eb in namespace container-probe-2704
  E0727 13:29:53.566335      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:29:54.566396      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:29:54.655: INFO: Get pod busybox-e75fcaa2-d028-4e9d-9e76-112d2c06f9eb in namespace container-probe-2704
  E0727 13:29:55.566545      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:29:56.566749      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:29:56.660: INFO: Get pod busybox-e75fcaa2-d028-4e9d-9e76-112d2c06f9eb in namespace container-probe-2704
  E0727 13:29:57.567820      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:29:58.567996      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:29:58.665: INFO: Get pod busybox-e75fcaa2-d028-4e9d-9e76-112d2c06f9eb in namespace container-probe-2704
  E0727 13:29:59.568107      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:30:00.568318      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:30:00.670: INFO: Get pod busybox-e75fcaa2-d028-4e9d-9e76-112d2c06f9eb in namespace container-probe-2704
  E0727 13:30:01.569159      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:30:02.569642      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:30:02.675: INFO: Get pod busybox-e75fcaa2-d028-4e9d-9e76-112d2c06f9eb in namespace container-probe-2704
  E0727 13:30:03.570256      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:30:04.570356      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:30:04.680: INFO: Get pod busybox-e75fcaa2-d028-4e9d-9e76-112d2c06f9eb in namespace container-probe-2704
  E0727 13:30:05.570556      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:30:06.570653      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:30:06.685: INFO: Get pod busybox-e75fcaa2-d028-4e9d-9e76-112d2c06f9eb in namespace container-probe-2704
  Jul 27 13:30:06.685: INFO: Restart count of pod container-probe-2704/busybox-e75fcaa2-d028-4e9d-9e76-112d2c06f9eb is now 1 (50.127847425s elapsed)
  STEP: deleting the pod @ 07/27/24 13:30:06.685
  Jul 27 13:30:06.698: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2704" for this suite. @ 07/27/24 13:30:06.704
• [52.200 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 07/27/24 13:30:06.711
  Jul 27 13:30:06.711: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename ingressclass @ 07/27/24 13:30:06.711
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:30:06.727
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:30:06.729
  STEP: getting /apis @ 07/27/24 13:30:06.732
  STEP: getting /apis/networking.k8s.io @ 07/27/24 13:30:06.734
  STEP: getting /apis/networking.k8s.iov1 @ 07/27/24 13:30:06.735
  STEP: creating @ 07/27/24 13:30:06.736
  STEP: getting @ 07/27/24 13:30:06.75
  STEP: listing @ 07/27/24 13:30:06.754
  STEP: watching @ 07/27/24 13:30:06.757
  Jul 27 13:30:06.757: INFO: starting watch
  STEP: patching @ 07/27/24 13:30:06.757
  STEP: updating @ 07/27/24 13:30:06.763
  Jul 27 13:30:06.768: INFO: waiting for watch events with expected annotations
  Jul 27 13:30:06.768: INFO: saw patched and updated annotations
  STEP: deleting @ 07/27/24 13:30:06.768
  STEP: deleting a collection @ 07/27/24 13:30:06.78
  Jul 27 13:30:06.800: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-9896" for this suite. @ 07/27/24 13:30:06.803
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:163
  STEP: Creating a kubernetes client @ 07/27/24 13:30:06.811
  Jul 27 13:30:06.811: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename svcaccounts @ 07/27/24 13:30:06.811
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:30:06.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:30:06.826
  Jul 27 13:30:06.852: INFO: created pod pod-service-account-defaultsa
  Jul 27 13:30:06.852: INFO: pod pod-service-account-defaultsa service account token volume mount: true
  Jul 27 13:30:06.858: INFO: created pod pod-service-account-mountsa
  Jul 27 13:30:06.858: INFO: pod pod-service-account-mountsa service account token volume mount: true
  Jul 27 13:30:06.864: INFO: created pod pod-service-account-nomountsa
  Jul 27 13:30:06.864: INFO: pod pod-service-account-nomountsa service account token volume mount: false
  Jul 27 13:30:06.870: INFO: created pod pod-service-account-defaultsa-mountspec
  Jul 27 13:30:06.870: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  Jul 27 13:30:06.877: INFO: created pod pod-service-account-mountsa-mountspec
  Jul 27 13:30:06.877: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
  Jul 27 13:30:06.884: INFO: created pod pod-service-account-nomountsa-mountspec
  Jul 27 13:30:06.884: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  Jul 27 13:30:06.892: INFO: created pod pod-service-account-defaultsa-nomountspec
  Jul 27 13:30:06.892: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  Jul 27 13:30:06.902: INFO: created pod pod-service-account-mountsa-nomountspec
  Jul 27 13:30:06.902: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  Jul 27 13:30:06.909: INFO: created pod pod-service-account-nomountsa-nomountspec
  Jul 27 13:30:06.909: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  Jul 27 13:30:06.909: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-757" for this suite. @ 07/27/24 13:30:06.917
• [0.114 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:177
  STEP: Creating a kubernetes client @ 07/27/24 13:30:06.924
  Jul 27 13:30:06.924: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename crd-webhook @ 07/27/24 13:30:06.925
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:30:06.943
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:30:06.945
  STEP: Setting up server cert @ 07/27/24 13:30:06.947
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 07/27/24 13:30:07.342
  STEP: Deploying the custom resource conversion webhook pod @ 07/27/24 13:30:07.353
  STEP: Wait for the deployment to be ready @ 07/27/24 13:30:07.367
  Jul 27 13:30:07.375: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0727 13:30:07.570731      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:30:08.570888      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/27/24 13:30:09.387
  STEP: Verifying the service has paired with the endpoint @ 07/27/24 13:30:09.398
  E0727 13:30:09.571266      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:30:10.399: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Jul 27 13:30:10.407: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  E0727 13:30:10.571921      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:30:11.572729      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:30:12.573547      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 07/27/24 13:30:12.967
  STEP: Create a v2 custom resource @ 07/27/24 13:30:12.985
  STEP: List CRs in v1 @ 07/27/24 13:30:13.011
  STEP: List CRs in v2 @ 07/27/24 13:30:13.016
  E0727 13:30:13.574112      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:30:13.584: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-7651" for this suite. @ 07/27/24 13:30:13.594
• [6.678 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1399
  STEP: Creating a kubernetes client @ 07/27/24 13:30:13.602
  Jul 27 13:30:13.602: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename kubectl @ 07/27/24 13:30:13.603
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:30:13.621
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:30:13.624
  Jul 27 13:30:13.627: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-3668 create -f -'
  Jul 27 13:30:13.711: INFO: stderr: ""
  Jul 27 13:30:13.711: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  Jul 27 13:30:13.711: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-3668 create -f -'
  Jul 27 13:30:13.801: INFO: stderr: ""
  Jul 27 13:30:13.801: INFO: stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 07/27/24 13:30:13.801
  E0727 13:30:14.575229      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:30:14.807: INFO: Selector matched 1 pods for map[app:agnhost]
  Jul 27 13:30:14.807: INFO: Found 1 / 1
  Jul 27 13:30:14.807: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Jul 27 13:30:14.811: INFO: Selector matched 1 pods for map[app:agnhost]
  Jul 27 13:30:14.811: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Jul 27 13:30:14.811: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-3668 describe pod agnhost-primary-jj985'
  Jul 27 13:30:14.863: INFO: stderr: ""
  Jul 27 13:30:14.863: INFO: stdout: "Name:             agnhost-primary-jj985\nNamespace:        kubectl-3668\nPriority:         0\nService Account:  default\nNode:             ip-172-31-18-96/172.31.18.96\nStart Time:       Sat, 27 Jul 2024 13:30:13 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               192.168.122.149\nIPs:\n  IP:           192.168.122.149\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://f49028c8444ff83717dee415a91cae7406d9c760518514fd2955babb302df124\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.47\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Sat, 27 Jul 2024 13:30:14 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-b7d8k (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-b7d8k:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-3668/agnhost-primary-jj985 to ip-172-31-18-96\n  Normal  Pulled     0s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.47\" already present on machine\n  Normal  Created    0s    kubelet            Created container agnhost-primary\n  Normal  Started    0s    kubelet            Started container agnhost-primary\n"
  Jul 27 13:30:14.864: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-3668 describe rc agnhost-primary'
  Jul 27 13:30:14.919: INFO: stderr: ""
  Jul 27 13:30:14.919: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-3668\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.47\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  1s    replication-controller  Created pod: agnhost-primary-jj985\n"
  Jul 27 13:30:14.919: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-3668 describe service agnhost-primary'
  Jul 27 13:30:14.971: INFO: stderr: ""
  Jul 27 13:30:14.971: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-3668\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.152.183.246\nIPs:               10.152.183.246\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         192.168.122.149:6379\nSession Affinity:  None\nEvents:            <none>\n"
  Jul 27 13:30:14.975: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-3668 describe node ip-172-31-10-249'
  Jul 27 13:30:15.043: INFO: stderr: ""
  Jul 27 13:30:15.043: INFO: stdout: "Name:               ip-172-31-10-249\nRoles:              <none>\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    juju-application=kubernetes-worker\n                    juju-charm=kubernetes-worker\n                    juju.io/cloud=ec2\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ip-172-31-10-249\n                    kubernetes.io/os=linux\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Sat, 27 Jul 2024 11:51:14 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  ip-172-31-10-249\n  AcquireTime:     <unset>\n  RenewTime:       Sat, 27 Jul 2024 13:30:09 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Sat, 27 Jul 2024 12:04:25 +0000   Sat, 27 Jul 2024 12:04:25 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Sat, 27 Jul 2024 13:26:54 +0000   Sat, 27 Jul 2024 11:51:14 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Sat, 27 Jul 2024 13:26:54 +0000   Sat, 27 Jul 2024 11:51:14 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Sat, 27 Jul 2024 13:26:54 +0000   Sat, 27 Jul 2024 11:51:14 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Sat, 27 Jul 2024 13:26:54 +0000   Sat, 27 Jul 2024 11:52:56 +0000   KubeletReady                 kubelet is posting ready status. AppArmor enabled\nAddresses:\n  InternalIP:  172.31.10.249\n  Hostname:    ip-172-31-10-249\nCapacity:\n  cpu:                2\n  ephemeral-storage:  16069568Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7958136Ki\n  pods:               110\nAllocatable:\n  cpu:                2\n  ephemeral-storage:  14809713845\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7855736Ki\n  pods:               110\nSystem Info:\n  Machine ID:                      ec2d29e3a4f3f8744adebdfa4bb6cece\n  System UUID:                     ec2d29e3-a4f3-f874-4ade-bdfa4bb6cece\n  Boot ID:                         418acfcf-b97e-4b2a-9c3a-4bd9f602991a\n  Kernel Version:                  6.5.0-1023-aws\n  OS Image:                        Ubuntu 22.04.4 LTS\n  Operating System:                linux\n  Architecture:                    amd64\n  Container Runtime Version:       containerd://1.6.8\n  Kubelet Version:                 v1.29.7\n  Kube-Proxy Version:              v1.29.7\nNon-terminated Pods:               (4 in total)\n  Namespace                        Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                        ----                                                       ------------  ----------  ---------------  -------------  ---\n  ingress-nginx-kubernetes-worker  nginx-ingress-controller-kubernetes-worker-p6cd4           0 (0%)        0 (0%)      0 (0%)           0 (0%)         94m\n  kube-system                      calico-node-6pr7z                                          250m (12%)    0 (0%)      0 (0%)           0 (0%)         85m\n  sonobuoy                         sonobuoy-e2e-job-984de38699c54bba                          0 (0%)        0 (0%)      0 (0%)           0 (0%)         83m\n  sonobuoy                         sonobuoy-systemd-logs-daemon-set-871057d561a1403a-tr4gf    0 (0%)        0 (0%)      0 (0%)           0 (0%)         83m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                250m (12%)  0 (0%)\n  memory             0 (0%)      0 (0%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:              <none>\n"
  Jul 27 13:30:15.043: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-3668 describe namespace kubectl-3668'
  Jul 27 13:30:15.097: INFO: stderr: ""
  Jul 27 13:30:15.097: INFO: stdout: "Name:         kubectl-3668\nLabels:       e2e-framework=kubectl\n              e2e-run=0bbc8b59-ed09-445f-9767-6bc092ca0f0b\n              kubernetes.io/metadata.name=kubectl-3668\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  Jul 27 13:30:15.097: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3668" for this suite. @ 07/27/24 13:30:15.1
• [1.504 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 07/27/24 13:30:15.107
  Jul 27 13:30:15.107: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename webhook @ 07/27/24 13:30:15.108
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:30:15.122
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:30:15.124
  STEP: Setting up server cert @ 07/27/24 13:30:15.15
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/27/24 13:30:15.401
  STEP: Deploying the webhook pod @ 07/27/24 13:30:15.407
  STEP: Wait for the deployment to be ready @ 07/27/24 13:30:15.42
  Jul 27 13:30:15.430: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0727 13:30:15.575339      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:30:16.575466      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/27/24 13:30:17.439
  STEP: Verifying the service has paired with the endpoint @ 07/27/24 13:30:17.451
  E0727 13:30:17.576402      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:30:18.452: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 07/27/24 13:30:18.461
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/27/24 13:30:18.474
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 07/27/24 13:30:18.479
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/27/24 13:30:18.489
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 07/27/24 13:30:18.5
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/27/24 13:30:18.507
  Jul 27 13:30:18.559: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-890" for this suite. @ 07/27/24 13:30:18.565
  STEP: Destroying namespace "webhook-markers-3256" for this suite. @ 07/27/24 13:30:18.573
  E0727 13:30:18.577158      20 retrywatcher.go:129] "Watch failed" err="context canceled"
• [3.472 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 07/27/24 13:30:18.58
  Jul 27 13:30:18.580: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename pod-network-test @ 07/27/24 13:30:18.58
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:30:18.594
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:30:18.597
  STEP: Performing setup for networking test in namespace pod-network-test-9541 @ 07/27/24 13:30:18.599
  STEP: creating a selector @ 07/27/24 13:30:18.599
  STEP: Creating the service pods in kubernetes @ 07/27/24 13:30:18.599
  Jul 27 13:30:18.599: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0727 13:30:19.577321      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:30:20.577704      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:30:21.577832      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:30:22.578194      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:30:23.578283      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:30:24.578393      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:30:25.578509      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:30:26.578571      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:30:27.578770      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:30:28.578865      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:30:29.579372      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:30:30.579708      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:30:31.579779      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:30:32.580856      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:30:33.581906      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:30:34.581975      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:30:35.582292      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:30:36.582979      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:30:37.583575      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:30:38.583741      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:30:39.583824      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:30:40.584038      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 07/27/24 13:30:40.717
  E0727 13:30:41.584757      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:30:42.585148      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:30:42.748: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Jul 27 13:30:42.748: INFO: Going to poll 192.168.97.39 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Jul 27 13:30:42.751: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.97.39 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9541 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 27 13:30:42.751: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  Jul 27 13:30:42.751: INFO: ExecWithOptions: Clientset creation
  Jul 27 13:30:42.751: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9541/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.97.39+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0727 13:30:43.585281      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:30:43.804: INFO: Found all 1 expected endpoints: [netserver-0]
  Jul 27 13:30:43.804: INFO: Going to poll 192.168.122.152 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Jul 27 13:30:43.808: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.122.152 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9541 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 27 13:30:43.808: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  Jul 27 13:30:43.808: INFO: ExecWithOptions: Clientset creation
  Jul 27 13:30:43.808: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9541/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.122.152+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0727 13:30:44.586201      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:30:44.860: INFO: Found all 1 expected endpoints: [netserver-1]
  Jul 27 13:30:44.860: INFO: Going to poll 192.168.96.101 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Jul 27 13:30:44.865: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.96.101 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9541 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 27 13:30:44.865: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  Jul 27 13:30:44.865: INFO: ExecWithOptions: Clientset creation
  Jul 27 13:30:44.865: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9541/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.96.101+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0727 13:30:45.586321      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:30:45.912: INFO: Found all 1 expected endpoints: [netserver-2]
  Jul 27 13:30:45.912: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9541" for this suite. @ 07/27/24 13:30:45.917
• [27.345 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 07/27/24 13:30:45.925
  Jul 27 13:30:45.925: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename secrets @ 07/27/24 13:30:45.926
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:30:45.942
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:30:45.944
  STEP: Creating secret with name s-test-opt-del-8ffeeb91-7a01-454a-9fd8-0a59a080ff69 @ 07/27/24 13:30:45.95
  STEP: Creating secret with name s-test-opt-upd-23a6ce78-12ea-40ca-ba71-eab5b55d1180 @ 07/27/24 13:30:45.955
  STEP: Creating the pod @ 07/27/24 13:30:45.959
  E0727 13:30:46.586422      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:30:47.586518      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-8ffeeb91-7a01-454a-9fd8-0a59a080ff69 @ 07/27/24 13:30:48.011
  STEP: Updating secret s-test-opt-upd-23a6ce78-12ea-40ca-ba71-eab5b55d1180 @ 07/27/24 13:30:48.018
  STEP: Creating secret with name s-test-opt-create-67c912ff-640d-4ce6-a5e8-38c7b43f7c86 @ 07/27/24 13:30:48.024
  STEP: waiting to observe update in volume @ 07/27/24 13:30:48.028
  E0727 13:30:48.586933      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:30:49.587016      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:30:50.587631      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:30:51.587738      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:30:52.064: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3444" for this suite. @ 07/27/24 13:30:52.068
• [6.150 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 07/27/24 13:30:52.075
  Jul 27 13:30:52.075: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename emptydir @ 07/27/24 13:30:52.076
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:30:52.089
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:30:52.093
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 07/27/24 13:30:52.096
  E0727 13:30:52.588188      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:30:53.588300      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:30:54.588401      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:30:55.588504      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/27/24 13:30:56.119
  Jul 27 13:30:56.122: INFO: Trying to get logs from node ip-172-31-10-249 pod pod-981d42b2-b538-4f5c-ae49-9c4d71459e45 container test-container: <nil>
  STEP: delete the pod @ 07/27/24 13:30:56.139
  Jul 27 13:30:56.155: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-511" for this suite. @ 07/27/24 13:30:56.159
• [4.090 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 07/27/24 13:30:56.165
  Jul 27 13:30:56.165: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename downward-api @ 07/27/24 13:30:56.166
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:30:56.188
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:30:56.19
  STEP: Creating a pod to test downward API volume plugin @ 07/27/24 13:30:56.192
  E0727 13:30:56.589138      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:30:57.589830      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:30:58.590280      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:30:59.590402      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/27/24 13:31:00.22
  Jul 27 13:31:00.224: INFO: Trying to get logs from node ip-172-31-10-249 pod downwardapi-volume-0eb93f0c-905e-426c-ba39-b330f65b73d1 container client-container: <nil>
  STEP: delete the pod @ 07/27/24 13:31:00.231
  Jul 27 13:31:00.246: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5269" for this suite. @ 07/27/24 13:31:00.249
• [4.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 07/27/24 13:31:00.256
  Jul 27 13:31:00.256: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename init-container @ 07/27/24 13:31:00.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:31:00.27
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:31:00.272
  STEP: creating the pod @ 07/27/24 13:31:00.274
  Jul 27 13:31:00.275: INFO: PodSpec: initContainers in spec.initContainers
  E0727 13:31:00.590989      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:31:01.591095      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:31:02.591578      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:31:03.591687      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:31:03.656: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-3602" for this suite. @ 07/27/24 13:31:03.66
• [3.412 seconds]
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:46
  STEP: Creating a kubernetes client @ 07/27/24 13:31:03.668
  Jul 27 13:31:03.668: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename configmap @ 07/27/24 13:31:03.669
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:31:03.682
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:31:03.687
  STEP: Creating configMap configmap-3755/configmap-test-8736ae07-d03f-4c64-9152-a11770cd4255 @ 07/27/24 13:31:03.689
  STEP: Creating a pod to test consume configMaps @ 07/27/24 13:31:03.694
  E0727 13:31:04.591786      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:31:05.592098      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/27/24 13:31:05.713
  Jul 27 13:31:05.720: INFO: Trying to get logs from node ip-172-31-10-249 pod pod-configmaps-a704b383-e1b3-4512-b948-0b27913f42f1 container env-test: <nil>
  STEP: delete the pod @ 07/27/24 13:31:05.728
  Jul 27 13:31:05.745: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3755" for this suite. @ 07/27/24 13:31:05.752
• [2.092 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 07/27/24 13:31:05.76
  Jul 27 13:31:05.760: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename podtemplate @ 07/27/24 13:31:05.761
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:31:05.805
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:31:05.816
  STEP: Create set of pod templates @ 07/27/24 13:31:05.837
  Jul 27 13:31:05.845: INFO: created test-podtemplate-1
  Jul 27 13:31:05.852: INFO: created test-podtemplate-2
  Jul 27 13:31:05.864: INFO: created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 07/27/24 13:31:05.864
  STEP: delete collection of pod templates @ 07/27/24 13:31:05.87
  Jul 27 13:31:05.870: INFO: requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 07/27/24 13:31:05.901
  Jul 27 13:31:05.901: INFO: requesting list of pod templates to confirm quantity
  Jul 27 13:31:05.904: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-493" for this suite. @ 07/27/24 13:31:05.909
• [0.167 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:357
  STEP: Creating a kubernetes client @ 07/27/24 13:31:05.928
  Jul 27 13:31:05.928: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename kubectl @ 07/27/24 13:31:05.928
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:31:05.944
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:31:05.946
  STEP: creating a replication controller @ 07/27/24 13:31:05.949
  Jul 27 13:31:05.949: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-5351 create -f -'
  Jul 27 13:31:06.044: INFO: stderr: ""
  Jul 27 13:31:06.044: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 07/27/24 13:31:06.044
  Jul 27 13:31:06.044: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-5351 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jul 27 13:31:06.091: INFO: stderr: ""
  Jul 27 13:31:06.091: INFO: stdout: "update-demo-nautilus-dsfrs update-demo-nautilus-qltqm "
  Jul 27 13:31:06.091: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-5351 get pods update-demo-nautilus-dsfrs -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jul 27 13:31:06.133: INFO: stderr: ""
  Jul 27 13:31:06.133: INFO: stdout: ""
  Jul 27 13:31:06.133: INFO: update-demo-nautilus-dsfrs is created but not running
  E0727 13:31:06.592540      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:31:07.593600      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:31:08.593713      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:31:09.594225      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:31:10.595244      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:31:11.135: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-5351 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jul 27 13:31:11.179: INFO: stderr: ""
  Jul 27 13:31:11.179: INFO: stdout: "update-demo-nautilus-dsfrs update-demo-nautilus-qltqm "
  Jul 27 13:31:11.179: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-5351 get pods update-demo-nautilus-dsfrs -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jul 27 13:31:11.223: INFO: stderr: ""
  Jul 27 13:31:11.223: INFO: stdout: "true"
  Jul 27 13:31:11.224: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-5351 get pods update-demo-nautilus-dsfrs -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jul 27 13:31:11.268: INFO: stderr: ""
  Jul 27 13:31:11.268: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jul 27 13:31:11.268: INFO: validating pod update-demo-nautilus-dsfrs
  Jul 27 13:31:11.273: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jul 27 13:31:11.274: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jul 27 13:31:11.274: INFO: update-demo-nautilus-dsfrs is verified up and running
  Jul 27 13:31:11.274: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-5351 get pods update-demo-nautilus-qltqm -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jul 27 13:31:11.317: INFO: stderr: ""
  Jul 27 13:31:11.318: INFO: stdout: "true"
  Jul 27 13:31:11.318: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-5351 get pods update-demo-nautilus-qltqm -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jul 27 13:31:11.361: INFO: stderr: ""
  Jul 27 13:31:11.361: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jul 27 13:31:11.361: INFO: validating pod update-demo-nautilus-qltqm
  Jul 27 13:31:11.366: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jul 27 13:31:11.366: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jul 27 13:31:11.366: INFO: update-demo-nautilus-qltqm is verified up and running
  STEP: scaling down the replication controller @ 07/27/24 13:31:11.366
  Jul 27 13:31:11.367: INFO: scanned /root for discovery docs: <nil>
  Jul 27 13:31:11.367: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-5351 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E0727 13:31:11.596860      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:31:12.427: INFO: stderr: ""
  Jul 27 13:31:12.427: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 07/27/24 13:31:12.427
  Jul 27 13:31:12.428: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-5351 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jul 27 13:31:12.473: INFO: stderr: ""
  Jul 27 13:31:12.473: INFO: stdout: "update-demo-nautilus-dsfrs "
  Jul 27 13:31:12.473: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-5351 get pods update-demo-nautilus-dsfrs -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jul 27 13:31:12.517: INFO: stderr: ""
  Jul 27 13:31:12.517: INFO: stdout: "true"
  Jul 27 13:31:12.517: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-5351 get pods update-demo-nautilus-dsfrs -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jul 27 13:31:12.561: INFO: stderr: ""
  Jul 27 13:31:12.561: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jul 27 13:31:12.561: INFO: validating pod update-demo-nautilus-dsfrs
  Jul 27 13:31:12.566: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jul 27 13:31:12.566: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jul 27 13:31:12.566: INFO: update-demo-nautilus-dsfrs is verified up and running
  STEP: scaling up the replication controller @ 07/27/24 13:31:12.566
  Jul 27 13:31:12.567: INFO: scanned /root for discovery docs: <nil>
  Jul 27 13:31:12.567: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-5351 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E0727 13:31:12.597690      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:31:13.598225      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:31:13.630: INFO: stderr: ""
  Jul 27 13:31:13.630: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 07/27/24 13:31:13.63
  Jul 27 13:31:13.630: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-5351 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jul 27 13:31:13.675: INFO: stderr: ""
  Jul 27 13:31:13.675: INFO: stdout: "update-demo-nautilus-dsfrs update-demo-nautilus-qn4rf "
  Jul 27 13:31:13.675: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-5351 get pods update-demo-nautilus-dsfrs -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jul 27 13:31:13.718: INFO: stderr: ""
  Jul 27 13:31:13.718: INFO: stdout: "true"
  Jul 27 13:31:13.718: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-5351 get pods update-demo-nautilus-dsfrs -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jul 27 13:31:13.762: INFO: stderr: ""
  Jul 27 13:31:13.762: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jul 27 13:31:13.762: INFO: validating pod update-demo-nautilus-dsfrs
  Jul 27 13:31:13.767: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jul 27 13:31:13.767: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jul 27 13:31:13.767: INFO: update-demo-nautilus-dsfrs is verified up and running
  Jul 27 13:31:13.768: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-5351 get pods update-demo-nautilus-qn4rf -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jul 27 13:31:13.810: INFO: stderr: ""
  Jul 27 13:31:13.810: INFO: stdout: "true"
  Jul 27 13:31:13.811: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-5351 get pods update-demo-nautilus-qn4rf -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jul 27 13:31:13.856: INFO: stderr: ""
  Jul 27 13:31:13.856: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jul 27 13:31:13.856: INFO: validating pod update-demo-nautilus-qn4rf
  Jul 27 13:31:13.862: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jul 27 13:31:13.862: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jul 27 13:31:13.862: INFO: update-demo-nautilus-qn4rf is verified up and running
  STEP: using delete to clean up resources @ 07/27/24 13:31:13.862
  Jul 27 13:31:13.862: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-5351 delete --grace-period=0 --force -f -'
  Jul 27 13:31:13.911: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jul 27 13:31:13.911: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Jul 27 13:31:13.911: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-5351 get rc,svc -l name=update-demo --no-headers'
  Jul 27 13:31:13.960: INFO: stderr: "No resources found in kubectl-5351 namespace.\n"
  Jul 27 13:31:13.960: INFO: stdout: ""
  Jul 27 13:31:13.960: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-5351 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Jul 27 13:31:14.006: INFO: stderr: ""
  Jul 27 13:31:14.007: INFO: stdout: ""
  Jul 27 13:31:14.007: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5351" for this suite. @ 07/27/24 13:31:14.011
• [8.090 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 07/27/24 13:31:14.018
  Jul 27 13:31:14.018: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename namespaces @ 07/27/24 13:31:14.019
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:31:14.034
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:31:14.037
  STEP: Creating a test namespace @ 07/27/24 13:31:14.039
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:31:14.052
  STEP: Creating a service in the namespace @ 07/27/24 13:31:14.055
  STEP: Deleting the namespace @ 07/27/24 13:31:14.066
  STEP: Waiting for the namespace to be removed. @ 07/27/24 13:31:14.084
  E0727 13:31:14.598571      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:31:15.599040      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:31:16.600027      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:31:17.600536      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:31:18.600721      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:31:19.601089      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 07/27/24 13:31:20.089
  STEP: Verifying there is no service in the namespace @ 07/27/24 13:31:20.105
  Jul 27 13:31:20.112: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9257" for this suite. @ 07/27/24 13:31:20.115
  STEP: Destroying namespace "nsdeletetest-58" for this suite. @ 07/27/24 13:31:20.121
  Jul 27 13:31:20.125: INFO: Namespace nsdeletetest-58 was already deleted
  STEP: Destroying namespace "nsdeletetest-4539" for this suite. @ 07/27/24 13:31:20.125
• [6.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 07/27/24 13:31:20.133
  Jul 27 13:31:20.133: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename projected @ 07/27/24 13:31:20.133
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:31:20.147
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:31:20.149
  STEP: Creating a pod to test downward API volume plugin @ 07/27/24 13:31:20.151
  E0727 13:31:20.602048      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:31:21.602163      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:31:22.603080      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:31:23.603154      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/27/24 13:31:24.174
  Jul 27 13:31:24.179: INFO: Trying to get logs from node ip-172-31-18-96 pod downwardapi-volume-8cee960e-244c-4ecb-9569-21adc81e7274 container client-container: <nil>
  STEP: delete the pod @ 07/27/24 13:31:24.186
  Jul 27 13:31:24.204: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3243" for this suite. @ 07/27/24 13:31:24.208
• [4.082 seconds]
------------------------------
SSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:214
  STEP: Creating a kubernetes client @ 07/27/24 13:31:24.214
  Jul 27 13:31:24.214: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 07/27/24 13:31:24.215
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:31:24.23
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:31:24.232
  STEP: create the container to handle the HTTPGet hook request. @ 07/27/24 13:31:24.238
  E0727 13:31:24.603428      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:31:25.603597      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 07/27/24 13:31:26.261
  E0727 13:31:26.604319      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:31:27.604857      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 07/27/24 13:31:28.28
  E0727 13:31:28.605452      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:31:29.606239      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 07/27/24 13:31:30.296
  Jul 27 13:31:30.313: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-5948" for this suite. @ 07/27/24 13:31:30.317
• [6.109 seconds]
------------------------------
SS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 07/27/24 13:31:30.324
  Jul 27 13:31:30.324: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename runtimeclass @ 07/27/24 13:31:30.324
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:31:30.338
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:31:30.34
  STEP: getting /apis @ 07/27/24 13:31:30.342
  STEP: getting /apis/node.k8s.io @ 07/27/24 13:31:30.345
  STEP: getting /apis/node.k8s.io/v1 @ 07/27/24 13:31:30.346
  STEP: creating @ 07/27/24 13:31:30.347
  STEP: watching @ 07/27/24 13:31:30.364
  Jul 27 13:31:30.364: INFO: starting watch
  STEP: getting @ 07/27/24 13:31:30.369
  STEP: listing @ 07/27/24 13:31:30.372
  STEP: patching @ 07/27/24 13:31:30.376
  STEP: updating @ 07/27/24 13:31:30.38
  Jul 27 13:31:30.384: INFO: waiting for watch events with expected annotations
  STEP: deleting @ 07/27/24 13:31:30.384
  STEP: deleting a collection @ 07/27/24 13:31:30.396
  Jul 27 13:31:30.412: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-4608" for this suite. @ 07/27/24 13:31:30.415
• [0.098 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 07/27/24 13:31:30.422
  Jul 27 13:31:30.422: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename emptydir @ 07/27/24 13:31:30.423
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:31:30.437
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:31:30.441
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 07/27/24 13:31:30.444
  E0727 13:31:30.606818      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:31:31.607149      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:31:32.607909      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:31:33.608010      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/27/24 13:31:34.468
  Jul 27 13:31:34.472: INFO: Trying to get logs from node ip-172-31-18-96 pod pod-3eb5dc1d-1c27-4ee8-b47e-39c0796f1c25 container test-container: <nil>
  STEP: delete the pod @ 07/27/24 13:31:34.48
  Jul 27 13:31:34.497: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4623" for this suite. @ 07/27/24 13:31:34.502
• [4.086 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:234
  STEP: Creating a kubernetes client @ 07/27/24 13:31:34.509
  Jul 27 13:31:34.509: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename resourcequota @ 07/27/24 13:31:34.51
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:31:34.524
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:31:34.526
  STEP: Counting existing ResourceQuota @ 07/27/24 13:31:34.528
  E0727 13:31:34.608800      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:31:35.609044      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:31:36.609471      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:31:37.610139      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:31:38.611116      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 07/27/24 13:31:39.532
  STEP: Ensuring resource quota status is calculated @ 07/27/24 13:31:39.538
  E0727 13:31:39.612093      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:31:40.612189      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod that fits quota @ 07/27/24 13:31:41.544
  STEP: Ensuring ResourceQuota status captures the pod usage @ 07/27/24 13:31:41.561
  E0727 13:31:41.612894      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:31:42.613520      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 07/27/24 13:31:43.566
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 07/27/24 13:31:43.568
  STEP: Ensuring a pod cannot update its resource requirements @ 07/27/24 13:31:43.57
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 07/27/24 13:31:43.574
  E0727 13:31:43.613979      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:31:44.615003      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 07/27/24 13:31:45.579
  STEP: Ensuring resource quota status released the pod usage @ 07/27/24 13:31:45.596
  E0727 13:31:45.616032      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:31:46.616149      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:31:47.601: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8369" for this suite. @ 07/27/24 13:31:47.604
• [13.104 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 07/27/24 13:31:47.614
  Jul 27 13:31:47.614: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename deployment @ 07/27/24 13:31:47.614
  E0727 13:31:47.616905      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:31:47.631
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:31:47.633
  STEP: creating a Deployment @ 07/27/24 13:31:47.64
  STEP: waiting for Deployment to be created @ 07/27/24 13:31:47.646
  STEP: waiting for all Replicas to be Ready @ 07/27/24 13:31:47.647
  Jul 27 13:31:47.648: INFO: observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jul 27 13:31:47.648: INFO: observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jul 27 13:31:47.657: INFO: observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jul 27 13:31:47.657: INFO: observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jul 27 13:31:47.669: INFO: observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jul 27 13:31:47.669: INFO: observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jul 27 13:31:47.705: INFO: observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jul 27 13:31:47.705: INFO: observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jul 27 13:31:48.473: INFO: observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Jul 27 13:31:48.473: INFO: observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  E0727 13:31:48.617313      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:31:48.760: INFO: observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 07/27/24 13:31:48.76
  Jul 27 13:31:48.769: INFO: observed event type ADDED
  STEP: waiting for Replicas to scale @ 07/27/24 13:31:48.769
  Jul 27 13:31:48.770: INFO: observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 0
  Jul 27 13:31:48.770: INFO: observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 0
  Jul 27 13:31:48.770: INFO: observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 0
  Jul 27 13:31:48.770: INFO: observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 0
  Jul 27 13:31:48.770: INFO: observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 0
  Jul 27 13:31:48.770: INFO: observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 0
  Jul 27 13:31:48.770: INFO: observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 0
  Jul 27 13:31:48.770: INFO: observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 0
  Jul 27 13:31:48.770: INFO: observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 1
  Jul 27 13:31:48.770: INFO: observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 1
  Jul 27 13:31:48.770: INFO: observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 2
  Jul 27 13:31:48.770: INFO: observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 2
  Jul 27 13:31:48.771: INFO: observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 2
  Jul 27 13:31:48.771: INFO: observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 2
  Jul 27 13:31:48.780: INFO: observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 2
  Jul 27 13:31:48.780: INFO: observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 2
  Jul 27 13:31:48.799: INFO: observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 2
  Jul 27 13:31:48.799: INFO: observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 2
  Jul 27 13:31:48.808: INFO: observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 1
  Jul 27 13:31:48.808: INFO: observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 1
  Jul 27 13:31:48.821: INFO: observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 1
  Jul 27 13:31:48.821: INFO: observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 1
  E0727 13:31:49.618271      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:31:49.777: INFO: observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 2
  Jul 27 13:31:49.777: INFO: observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 2
  Jul 27 13:31:49.802: INFO: observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 1
  STEP: listing Deployments @ 07/27/24 13:31:49.802
  Jul 27 13:31:49.806: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 07/27/24 13:31:49.806
  Jul 27 13:31:49.816: INFO: observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 07/27/24 13:31:49.816
  Jul 27 13:31:49.822: INFO: observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jul 27 13:31:49.827: INFO: observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jul 27 13:31:49.846: INFO: observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jul 27 13:31:49.860: INFO: observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jul 27 13:31:49.875: INFO: observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  E0727 13:31:50.619257      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:31:50.782: INFO: observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Jul 27 13:31:50.806: INFO: observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Jul 27 13:31:50.823: INFO: observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Jul 27 13:31:50.857: INFO: observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Jul 27 13:31:50.870: INFO: observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Jul 27 13:31:51.493: INFO: observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 07/27/24 13:31:51.513
  STEP: fetching the DeploymentStatus @ 07/27/24 13:31:51.522
  Jul 27 13:31:51.529: INFO: observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 1
  Jul 27 13:31:51.529: INFO: observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 1
  Jul 27 13:31:51.529: INFO: observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 1
  Jul 27 13:31:51.529: INFO: observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 1
  Jul 27 13:31:51.529: INFO: observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 1
  Jul 27 13:31:51.529: INFO: observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 2
  Jul 27 13:31:51.529: INFO: observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 2
  Jul 27 13:31:51.529: INFO: observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 2
  Jul 27 13:31:51.529: INFO: observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 2
  Jul 27 13:31:51.529: INFO: observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 2
  Jul 27 13:31:51.529: INFO: observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 3
  STEP: deleting the Deployment @ 07/27/24 13:31:51.529
  Jul 27 13:31:51.540: INFO: observed event type MODIFIED
  Jul 27 13:31:51.540: INFO: observed event type MODIFIED
  Jul 27 13:31:51.540: INFO: observed event type MODIFIED
  Jul 27 13:31:51.540: INFO: observed event type MODIFIED
  Jul 27 13:31:51.540: INFO: observed event type MODIFIED
  Jul 27 13:31:51.540: INFO: observed event type MODIFIED
  Jul 27 13:31:51.541: INFO: observed event type MODIFIED
  Jul 27 13:31:51.541: INFO: observed event type MODIFIED
  Jul 27 13:31:51.541: INFO: observed event type MODIFIED
  Jul 27 13:31:51.541: INFO: observed event type MODIFIED
  Jul 27 13:31:51.541: INFO: observed event type MODIFIED
  Jul 27 13:31:51.541: INFO: observed event type MODIFIED
  Jul 27 13:31:51.541: INFO: observed event type MODIFIED
  Jul 27 13:31:51.541: INFO: observed event type MODIFIED
  Jul 27 13:31:51.545: INFO: Log out all the ReplicaSets if there is no deployment created
  Jul 27 13:31:51.548: INFO: ReplicaSet "test-deployment-64fd565c98":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-64fd565c98",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9578",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "011ec72c-526a-41ab-ab64-a0fa25795bd5",
      ResourceVersion: (string) (len=5) "37986",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857683908,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "7932d325-54a7-4d64-a68f-10a47c2b8486",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683911,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 37 39 33 32  64 33 32 35 2d 35 34 61  |":\"7932d325-54a|
              00000130  37 2d 34 64 36 34 2d 61  36 38 66 2d 31 30 61 34  |7-4d64-a68f-10a4|
              00000140  37 63 32 62 38 34 38 36  5c 22 7d 22 3a 7b 7d 7d  |7c2b8486\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683911,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=25) "registry.k8s.io/pause:3.9",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Jul 27 13:31:51.563: INFO: pod: "test-deployment-64fd565c98-4zcn7":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-64fd565c98-4zcn7",
      GenerateName: (string) (len=27) "test-deployment-64fd565c98-",
      Namespace: (string) (len=15) "deployment-9578",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c9907388-22b4-42d4-8614-09a669721acb",
      ResourceVersion: (string) (len=5) "37982",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857683908,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857683913,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-64fd565c98",
          UID: (types.UID) (len=36) "011ec72c-526a-41ab-ab64-a0fa25795bd5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683908,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  30 31 31 65 63 37 32 63  |uid\":\"011ec72c|
              000000a0  2d 35 32 36 61 2d 34 31  61 62 2d 61 62 36 34 2d  |-526a-41ab-ab64-|
              000000b0  61 30 66 61 32 35 37 39  35 62 64 35 5c 22 7d 22  |a0fa25795bd5\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683909,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  32 2e 31 37 37 5c 22 7d  |2.168.122.177\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vjrvt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vjrvt",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-18-96",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683909,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683908,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683909,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683909,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683908,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.18.96",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.18.96"
        }
      },
      PodIP: (string) (len=15) "192.168.122.177",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.122.177"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857683908,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63857683909,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=77) "containerd://326671a8c1fe45aa966fb609aee65b9d1f99a092c42f30a1ec95bbfff45957d6",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Jul 27 13:31:51.564: INFO: pod: "test-deployment-64fd565c98-57qjd":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-64fd565c98-57qjd",
      GenerateName: (string) (len=27) "test-deployment-64fd565c98-",
      Namespace: (string) (len=15) "deployment-9578",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "eaedcf0b-871c-4452-b1d1-9e66c30fa6fe",
      ResourceVersion: (string) (len=5) "37979",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857683909,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857683912,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-64fd565c98",
          UID: (types.UID) (len=36) "011ec72c-526a-41ab-ab64-a0fa25795bd5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683909,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  30 31 31 65 63 37 32 63  |uid\":\"011ec72c|
              000000a0  2d 35 32 36 61 2d 34 31  61 62 2d 61 62 36 34 2d  |-526a-41ab-ab64-|
              000000b0  61 30 66 61 32 35 37 39  35 62 64 35 5c 22 7d 22  |a0fa25795bd5\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683911,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 39 37  2e 33 30 5c 22 7d 22 3a  |2.168.97.30\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ztkht",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ztkht",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-10-249",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683911,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683909,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683911,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683911,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683909,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.10.249",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.10.249"
        }
      },
      PodIP: (string) (len=13) "192.168.97.30",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.97.30"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857683909,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63857683910,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=77) "containerd://bd5c26e67f04ed4743cf03bf3ffb4bd44542544279551e625312cc2710d6e505",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Jul 27 13:31:51.565: INFO: ReplicaSet "test-deployment-79ff746c4":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-79ff746c4",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9578",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2c8590b0-fba9-4f68-b18d-f6de0bcb7502",
      ResourceVersion: (string) (len=5) "37977",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857683909,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "7932d325-54a7-4d64-a68f-10a47c2b8486",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 37 39 33 32  64 33 32 35 2d 35 34 61  |":\"7932d325-54a|
              00000130  37 2d 34 64 36 34 2d 61  36 38 66 2d 31 30 61 34  |7-4d64-a68f-10a4|
              00000140  37 63 32 62 38 34 38 36  5c 22 7d 22 3a 7b 7d 7d  |7c2b8486\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683911,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Jul 27 13:31:51.573: INFO: pod: "test-deployment-79ff746c4-clrr5":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-clrr5",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-9578",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a9b81b2b-098c-4afb-949c-f03858579566",
      ResourceVersion: (string) (len=5) "37976",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857683910,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "2c8590b0-fba9-4f68-b18d-f6de0bcb7502",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  32 63 38 35 39 30 62 30  |uid\":\"2c8590b0|
              000000a0  2d 66 62 61 39 2d 34 66  36 38 2d 62 31 38 64 2d  |-fba9-4f68-b18d-|
              000000b0  66 36 64 65 30 62 63 62  37 35 30 32 5c 22 7d 22  |f6de0bcb7502\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683911,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 39 37  2e 33 34 5c 22 7d 22 3a  |2.168.97.34\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2cp99",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2cp99",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-10-249",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683911,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683911,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683911,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.10.249",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.10.249"
        }
      },
      PodIP: (string) (len=13) "192.168.97.34",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.97.34"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857683910,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63857683911,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://2f00ceb3cc70f9dc2a2e8ac49e9f82282e9c5cc6685af51f91d5c34ebd5cba57",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Jul 27 13:31:51.575: INFO: pod: "test-deployment-79ff746c4-k7bxx":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-k7bxx",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-9578",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "eb4c5146-140d-40c8-b492-15cde7dae7cf",
      ResourceVersion: (string) (len=5) "37942",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857683909,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "2c8590b0-fba9-4f68-b18d-f6de0bcb7502",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683909,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  32 63 38 35 39 30 62 30  |uid\":\"2c8590b0|
              000000a0  2d 66 62 61 39 2d 34 66  36 38 2d 62 31 38 64 2d  |-fba9-4f68-b18d-|
              000000b0  66 36 64 65 30 62 63 62  37 35 30 32 5c 22 7d 22  |f6de0bcb7502\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  32 2e 31 38 30 5c 22 7d  |2.168.122.180\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-b877s",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-b877s",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-18-96",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683909,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683909,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.18.96",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.18.96"
        }
      },
      PodIP: (string) (len=15) "192.168.122.180",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.122.180"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857683909,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63857683910,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://ce288ce4a3a2f1fb38c75198a0bbafffff806498df38600796bf97a952c3ab00",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Jul 27 13:31:51.579: INFO: ReplicaSet "test-deployment-7fcc79b8c7":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-7fcc79b8c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9578",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4abefdfc-421f-4d91-8e42-76de87147f58",
      ResourceVersion: (string) (len=5) "37891",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857683907,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fcc79b8c7",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "7932d325-54a7-4d64-a68f-10a47c2b8486",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683909,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 37 39 33 32  64 33 32 35 2d 35 34 61  |":\"7932d325-54a|
              00000130  37 2d 34 64 36 34 2d 61  36 38 66 2d 31 30 61 34  |7-4d64-a68f-10a4|
              00000140  37 63 32 62 38 34 38 36  5c 22 7d 22 3a 7b 7d 7d  |7c2b8486\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857683909,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "7fcc79b8c7",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "7fcc79b8c7",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Jul 27 13:31:51.583: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9578" for this suite. @ 07/27/24 13:31:51.587
• [3.980 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:399
  STEP: Creating a kubernetes client @ 07/27/24 13:31:51.594
  Jul 27 13:31:51.594: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename kubectl @ 07/27/24 13:31:51.595
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:31:51.617
  E0727 13:31:51.619695      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:31:51.62
  STEP: creating all guestbook components @ 07/27/24 13:31:51.624
  Jul 27 13:31:51.624: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  Jul 27 13:31:51.624: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-4160 create -f -'
  Jul 27 13:31:51.711: INFO: stderr: ""
  Jul 27 13:31:51.711: INFO: stdout: "service/agnhost-replica created\n"
  Jul 27 13:31:51.711: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  Jul 27 13:31:51.711: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-4160 create -f -'
  Jul 27 13:31:51.805: INFO: stderr: ""
  Jul 27 13:31:51.805: INFO: stdout: "service/agnhost-primary created\n"
  Jul 27 13:31:51.805: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  Jul 27 13:31:51.805: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-4160 create -f -'
  Jul 27 13:31:51.910: INFO: stderr: ""
  Jul 27 13:31:51.910: INFO: stdout: "service/frontend created\n"
  Jul 27 13:31:51.911: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  Jul 27 13:31:51.911: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-4160 create -f -'
  Jul 27 13:31:51.977: INFO: stderr: ""
  Jul 27 13:31:51.977: INFO: stdout: "deployment.apps/frontend created\n"
  Jul 27 13:31:51.977: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Jul 27 13:31:51.977: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-4160 create -f -'
  Jul 27 13:31:52.056: INFO: stderr: ""
  Jul 27 13:31:52.056: INFO: stdout: "deployment.apps/agnhost-primary created\n"
  Jul 27 13:31:52.056: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Jul 27 13:31:52.056: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-4160 create -f -'
  Jul 27 13:31:52.129: INFO: stderr: ""
  Jul 27 13:31:52.129: INFO: stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 07/27/24 13:31:52.129
  Jul 27 13:31:52.129: INFO: Waiting for all frontend pods to be Running.
  E0727 13:31:52.621229      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:31:53.621762      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:31:54.621824      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:31:55.621931      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:31:56.622037      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:31:57.180: INFO: Waiting for frontend to serve content.
  Jul 27 13:31:57.190: INFO: Trying to add a new entry to the guestbook.
  Jul 27 13:31:57.202: INFO: Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 07/27/24 13:31:57.211
  Jul 27 13:31:57.211: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-4160 delete --grace-period=0 --force -f -'
  Jul 27 13:31:57.269: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jul 27 13:31:57.269: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 07/27/24 13:31:57.269
  Jul 27 13:31:57.269: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-4160 delete --grace-period=0 --force -f -'
  Jul 27 13:31:57.332: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jul 27 13:31:57.332: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 07/27/24 13:31:57.332
  Jul 27 13:31:57.332: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-4160 delete --grace-period=0 --force -f -'
  Jul 27 13:31:57.391: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jul 27 13:31:57.391: INFO: stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 07/27/24 13:31:57.391
  Jul 27 13:31:57.391: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-4160 delete --grace-period=0 --force -f -'
  Jul 27 13:31:57.439: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jul 27 13:31:57.439: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 07/27/24 13:31:57.439
  Jul 27 13:31:57.440: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-4160 delete --grace-period=0 --force -f -'
  Jul 27 13:31:57.502: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jul 27 13:31:57.502: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 07/27/24 13:31:57.502
  Jul 27 13:31:57.502: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-4160 delete --grace-period=0 --force -f -'
  Jul 27 13:31:57.561: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jul 27 13:31:57.561: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  Jul 27 13:31:57.562: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4160" for this suite. @ 07/27/24 13:31:57.567
• [5.979 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 07/27/24 13:31:57.574
  Jul 27 13:31:57.574: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename emptydir @ 07/27/24 13:31:57.575
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:31:57.59
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:31:57.593
  STEP: Creating a pod to test emptydir volume type on node default medium @ 07/27/24 13:31:57.596
  E0727 13:31:57.622746      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:31:58.622848      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:31:59.623596      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:32:00.624201      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/27/24 13:32:01.62
  E0727 13:32:01.624368      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:32:01.624: INFO: Trying to get logs from node ip-172-31-10-249 pod pod-3476f339-e2d5-4aed-8c1a-5b2bd4144b6b container test-container: <nil>
  STEP: delete the pod @ 07/27/24 13:32:01.63
  Jul 27 13:32:01.644: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1785" for this suite. @ 07/27/24 13:32:01.648
• [4.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 07/27/24 13:32:01.655
  Jul 27 13:32:01.655: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename watch @ 07/27/24 13:32:01.655
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:32:01.669
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:32:01.671
  STEP: creating a watch on configmaps with a certain label @ 07/27/24 13:32:01.674
  STEP: creating a new configmap @ 07/27/24 13:32:01.675
  STEP: modifying the configmap once @ 07/27/24 13:32:01.68
  STEP: changing the label value of the configmap @ 07/27/24 13:32:01.687
  STEP: Expecting to observe a delete notification for the watched object @ 07/27/24 13:32:01.694
  Jul 27 13:32:01.694: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-791  f670224b-675b-4590-b765-d99c8d56af21 38342 0 2024-07-27 13:32:01 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-07-27 13:32:01 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jul 27 13:32:01.694: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-791  f670224b-675b-4590-b765-d99c8d56af21 38343 0 2024-07-27 13:32:01 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-07-27 13:32:01 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jul 27 13:32:01.694: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-791  f670224b-675b-4590-b765-d99c8d56af21 38344 0 2024-07-27 13:32:01 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-07-27 13:32:01 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 07/27/24 13:32:01.694
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 07/27/24 13:32:01.701
  E0727 13:32:02.624513      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:32:03.624637      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:32:04.624903      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:32:05.624986      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:32:06.625187      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:32:07.625712      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:32:08.626194      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:32:09.626391      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:32:10.626490      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:32:11.626572      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: changing the label value of the configmap back @ 07/27/24 13:32:11.702
  STEP: modifying the configmap a third time @ 07/27/24 13:32:11.711
  STEP: deleting the configmap @ 07/27/24 13:32:11.719
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 07/27/24 13:32:11.726
  Jul 27 13:32:11.726: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-791  f670224b-675b-4590-b765-d99c8d56af21 38418 0 2024-07-27 13:32:01 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-07-27 13:32:11 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jul 27 13:32:11.726: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-791  f670224b-675b-4590-b765-d99c8d56af21 38419 0 2024-07-27 13:32:01 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-07-27 13:32:11 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jul 27 13:32:11.727: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-791  f670224b-675b-4590-b765-d99c8d56af21 38420 0 2024-07-27 13:32:01 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-07-27 13:32:11 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jul 27 13:32:11.727: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-791" for this suite. @ 07/27/24 13:32:11.73
• [10.084 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 07/27/24 13:32:11.739
  Jul 27 13:32:11.739: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename gc @ 07/27/24 13:32:11.739
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:32:11.754
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:32:11.758
  STEP: create the rc @ 07/27/24 13:32:11.764
  W0727 13:32:11.770564      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0727 13:32:12.626648      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:32:13.626994      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:32:14.627280      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:32:15.633270      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 07/27/24 13:32:15.777
  STEP: wait for the rc to be deleted @ 07/27/24 13:32:15.784
  E0727 13:32:16.634225      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:32:16.812: INFO: 80 pods remaining
  Jul 27 13:32:16.812: INFO: 80 pods has nil DeletionTimestamp
  Jul 27 13:32:16.812: INFO: 
  E0727 13:32:17.634689      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:32:17.802: INFO: 71 pods remaining
  Jul 27 13:32:17.802: INFO: 70 pods has nil DeletionTimestamp
  Jul 27 13:32:17.802: INFO: 
  E0727 13:32:18.641270      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:32:18.799: INFO: 60 pods remaining
  Jul 27 13:32:18.799: INFO: 60 pods has nil DeletionTimestamp
  Jul 27 13:32:18.799: INFO: 
  E0727 13:32:19.642256      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:32:19.794: INFO: 40 pods remaining
  Jul 27 13:32:19.794: INFO: 40 pods has nil DeletionTimestamp
  Jul 27 13:32:19.794: INFO: 
  E0727 13:32:20.642289      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:32:20.796: INFO: 31 pods remaining
  Jul 27 13:32:20.796: INFO: 30 pods has nil DeletionTimestamp
  Jul 27 13:32:20.796: INFO: 
  E0727 13:32:21.642509      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:32:21.793: INFO: 20 pods remaining
  Jul 27 13:32:21.793: INFO: 20 pods has nil DeletionTimestamp
  Jul 27 13:32:21.793: INFO: 
  E0727 13:32:22.643209      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 07/27/24 13:32:22.804
  W0727 13:32:22.814295      20 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Jul 27 13:32:22.814: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jul 27 13:32:22.815: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-693" for this suite. @ 07/27/24 13:32:22.823
• [11.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 07/27/24 13:32:22.83
  Jul 27 13:32:22.830: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename secrets @ 07/27/24 13:32:22.831
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:32:22.848
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:32:22.851
  STEP: Creating secret with name secret-test-92422e05-8b1b-470a-a541-e1f23d26dffc @ 07/27/24 13:32:22.854
  STEP: Creating a pod to test consume secrets @ 07/27/24 13:32:22.86
  E0727 13:32:23.643876      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:32:24.643973      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:32:25.644098      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:32:26.644327      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/27/24 13:32:26.886
  Jul 27 13:32:26.890: INFO: Trying to get logs from node ip-172-31-18-96 pod pod-secrets-2cd8d7d1-f19b-4f9d-b7cc-309e9ac88909 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/27/24 13:32:26.896
  Jul 27 13:32:26.911: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3148" for this suite. @ 07/27/24 13:32:26.914
• [4.091 seconds]
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 07/27/24 13:32:26.921
  Jul 27 13:32:26.921: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename hostport @ 07/27/24 13:32:26.922
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:32:26.934
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:32:26.936
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 07/27/24 13:32:26.943
  E0727 13:32:27.644524      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:32:28.644637      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.31.76.31 on the node which pod1 resides and expect scheduled @ 07/27/24 13:32:28.968
  E0727 13:32:29.645162      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:32:30.645234      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.31.76.31 but use UDP protocol on the node which pod2 resides @ 07/27/24 13:32:30.982
  E0727 13:32:31.645690      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:32:32.646670      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:32:33.647433      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:32:34.647534      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 07/27/24 13:32:35.013
  Jul 27 13:32:35.013: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.31.76.31 http://127.0.0.1:54323/hostname] Namespace:hostport-7750 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 27 13:32:35.013: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  Jul 27 13:32:35.013: INFO: ExecWithOptions: Clientset creation
  Jul 27 13:32:35.013: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-7750/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.31.76.31+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.76.31, port: 54323 @ 07/27/24 13:32:35.067
  Jul 27 13:32:35.067: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.31.76.31:54323/hostname] Namespace:hostport-7750 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 27 13:32:35.067: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  Jul 27 13:32:35.068: INFO: ExecWithOptions: Clientset creation
  Jul 27 13:32:35.068: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-7750/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.31.76.31%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.76.31, port: 54323 UDP @ 07/27/24 13:32:35.115
  Jul 27 13:32:35.116: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.31.76.31 54323] Namespace:hostport-7750 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 27 13:32:35.116: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  Jul 27 13:32:35.116: INFO: ExecWithOptions: Clientset creation
  Jul 27 13:32:35.116: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-7750/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.31.76.31+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  E0727 13:32:35.647616      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:32:36.647863      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:32:37.648904      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:32:38.649171      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:32:39.649277      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:32:40.168: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-7750" for this suite. @ 07/27/24 13:32:40.173
• [13.259 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:94
  STEP: Creating a kubernetes client @ 07/27/24 13:32:40.181
  Jul 27 13:32:40.181: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename configmap @ 07/27/24 13:32:40.181
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:32:40.193
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:32:40.196
  STEP: Creating configMap configmap-3897/configmap-test-3f996367-f3fe-40be-ab63-e077ddcfa15e @ 07/27/24 13:32:40.198
  STEP: Creating a pod to test consume configMaps @ 07/27/24 13:32:40.204
  E0727 13:32:40.649961      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:32:41.650656      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:32:42.650772      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:32:43.651488      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/27/24 13:32:44.228
  Jul 27 13:32:44.232: INFO: Trying to get logs from node ip-172-31-18-96 pod pod-configmaps-fe56f34c-3a80-4bb4-8a71-71244ad34361 container env-test: <nil>
  STEP: delete the pod @ 07/27/24 13:32:44.239
  Jul 27 13:32:44.255: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3897" for this suite. @ 07/27/24 13:32:44.258
• [4.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 07/27/24 13:32:44.267
  Jul 27 13:32:44.267: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename cronjob @ 07/27/24 13:32:44.267
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:32:44.285
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:32:44.287
  STEP: Creating a cronjob @ 07/27/24 13:32:44.29
  STEP: Ensuring more than one job is running at a time @ 07/27/24 13:32:44.295
  E0727 13:32:44.651573      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:32:45.651724      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:32:46.652421      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:32:47.652529      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:32:48.652613      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:32:49.652753      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:32:50.653315      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:32:51.653689      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:32:52.653816      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:32:53.653903      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:32:54.654977      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:32:55.655131      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:32:56.655160      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:32:57.655952      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:32:58.656610      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:32:59.656912      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:33:00.657957      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:33:01.658315      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:33:02.659169      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:33:03.659354      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:33:04.659908      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:33:05.660382      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:33:06.661349      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:33:07.661453      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:33:08.662224      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:33:09.662311      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:33:10.662410      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:33:11.662693      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:33:12.663620      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:33:13.663712      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:33:14.664748      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:33:15.664873      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:33:16.665827      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:33:17.666753      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:33:18.666871      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:33:19.667062      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:33:20.668104      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:33:21.668468      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:33:22.668523      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:33:23.668736      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:33:24.669733      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:33:25.669856      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:33:26.670454      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:33:27.670550      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:33:28.671470      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:33:29.671539      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:33:30.672029      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:33:31.672708      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:33:32.672801      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:33:33.672957      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:33:34.673166      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:33:35.673314      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:33:36.674210      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:33:37.674315      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:33:38.674398      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:33:39.674516      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:33:40.675267      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:33:41.675803      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:33:42.675908      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:33:43.675994      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:33:44.676095      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:33:45.676188      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:33:46.676300      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:33:47.676379      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:33:48.676474      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:33:49.676613      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:33:50.677587      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:33:51.677757      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:33:52.678653      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:33:53.678872      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:33:54.679749      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:33:55.679813      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:33:56.680836      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:33:57.681658      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:33:58.681765      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:33:59.681853      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 07/27/24 13:34:00.3
  STEP: Removing cronjob @ 07/27/24 13:34:00.303
  Jul 27 13:34:00.310: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3151" for this suite. @ 07/27/24 13:34:00.314
• [76.056 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:332
  STEP: Creating a kubernetes client @ 07/27/24 13:34:00.323
  Jul 27 13:34:00.324: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename statefulset @ 07/27/24 13:34:00.324
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:34:00.344
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:34:00.347
  STEP: Creating service test in namespace statefulset-4408 @ 07/27/24 13:34:00.35
  STEP: Creating a new StatefulSet @ 07/27/24 13:34:00.362
  Jul 27 13:34:00.373: INFO: Found 0 stateful pods, waiting for 3
  E0727 13:34:00.682798      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:34:01.683724      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:34:02.684684      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:34:03.684841      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:34:04.685073      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:34:05.685151      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:34:06.685251      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:34:07.686226      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:34:08.686323      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:34:09.686645      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:34:10.374: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Jul 27 13:34:10.374: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Jul 27 13:34:10.374: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 07/27/24 13:34:10.385
  Jul 27 13:34:10.406: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 07/27/24 13:34:10.406
  E0727 13:34:10.686696      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:34:11.686739      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:34:12.687746      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:34:13.687845      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:34:14.688054      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:34:15.688165      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:34:16.688325      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:34:17.688610      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:34:18.688714      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:34:19.689032      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 07/27/24 13:34:20.414
  STEP: Performing a canary update @ 07/27/24 13:34:20.415
  Jul 27 13:34:20.436: INFO: Updating stateful set ss2
  Jul 27 13:34:20.449: INFO: Waiting for Pod statefulset-4408/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0727 13:34:20.689390      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:34:21.689840      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:34:22.690726      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:34:23.690808      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:34:24.691780      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:34:25.691880      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:34:26.692620      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:34:27.692823      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:34:28.693102      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:34:29.693163      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 07/27/24 13:34:30.445
  Jul 27 13:34:30.487: INFO: Found 2 stateful pods, waiting for 3
  E0727 13:34:30.693656      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:34:31.694511      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:34:32.694660      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:34:33.694766      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:34:34.695153      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:34:35.695323      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:34:36.695637      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:34:37.696698      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:34:38.696809      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:34:39.697055      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:34:40.483: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Jul 27 13:34:40.483: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Jul 27 13:34:40.483: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 07/27/24 13:34:40.491
  Jul 27 13:34:40.511: INFO: Updating stateful set ss2
  Jul 27 13:34:40.520: INFO: Waiting for Pod statefulset-4408/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0727 13:34:40.697514      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:34:41.698026      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:34:42.698940      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:34:43.699517      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:34:44.699563      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:34:45.699694      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:34:46.699923      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:34:47.700717      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:34:48.701169      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:34:49.702202      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:34:50.540: INFO: Updating stateful set ss2
  Jul 27 13:34:50.553: INFO: Waiting for StatefulSet statefulset-4408/ss2 to complete update
  Jul 27 13:34:50.553: INFO: Waiting for Pod statefulset-4408/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0727 13:34:50.703188      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:34:51.703259      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:34:52.703460      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:34:53.704456      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:34:54.704590      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:34:55.704857      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:34:56.705069      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:34:57.706119      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:34:58.706407      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:34:59.706966      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:35:00.549: INFO: Deleting all statefulset in ns statefulset-4408
  Jul 27 13:35:00.553: INFO: Scaling statefulset ss2 to 0
  E0727 13:35:00.707857      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:35:01.708344      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:35:02.708445      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:35:03.708564      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:35:04.708637      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:35:05.708748      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:35:06.708924      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:35:07.709075      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:35:08.709165      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:35:09.710198      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:35:10.568: INFO: Waiting for statefulset status.replicas updated to 0
  Jul 27 13:35:10.572: INFO: Deleting statefulset ss2
  Jul 27 13:35:10.587: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4408" for this suite. @ 07/27/24 13:35:10.591
• [70.274 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 07/27/24 13:35:10.598
  Jul 27 13:35:10.598: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename replicaset @ 07/27/24 13:35:10.598
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:35:10.613
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:35:10.616
  STEP: Create a ReplicaSet @ 07/27/24 13:35:10.618
  STEP: Verify that the required pods have come up @ 07/27/24 13:35:10.623
  Jul 27 13:35:10.626: INFO: Pod name sample-pod: Found 0 pods out of 3
  E0727 13:35:10.711052      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:35:11.711837      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:35:12.712733      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:35:13.712822      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:35:14.712923      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:35:15.631: INFO: Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 07/27/24 13:35:15.631
  Jul 27 13:35:15.636: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 07/27/24 13:35:15.636
  STEP: DeleteCollection of the ReplicaSets @ 07/27/24 13:35:15.64
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 07/27/24 13:35:15.649
  Jul 27 13:35:15.654: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1345" for this suite. @ 07/27/24 13:35:15.658
• [5.071 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:309
  STEP: Creating a kubernetes client @ 07/27/24 13:35:15.669
  Jul 27 13:35:15.669: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/27/24 13:35:15.67
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:35:15.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:35:15.695
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 07/27/24 13:35:15.697
  Jul 27 13:35:15.698: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  E0727 13:35:15.713034      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:35:16.713539      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:35:17.713670      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:35:18.713882      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:35:19.714804      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 07/27/24 13:35:20.527
  Jul 27 13:35:20.527: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  E0727 13:35:20.715671      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:35:21.716570      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:35:21.861: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  E0727 13:35:22.716652      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:35:23.716799      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:35:24.716978      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:35:25.717817      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:35:26.720132      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:35:26.773: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9973" for this suite. @ 07/27/24 13:35:26.779
• [11.117 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3129
  STEP: Creating a kubernetes client @ 07/27/24 13:35:26.786
  Jul 27 13:35:26.786: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename services @ 07/27/24 13:35:26.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:35:26.8
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:35:26.803
  STEP: fetching services @ 07/27/24 13:35:26.805
  Jul 27 13:35:26.809: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3140" for this suite. @ 07/27/24 13:35:26.813
• [0.033 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 07/27/24 13:35:26.82
  Jul 27 13:35:26.820: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename gc @ 07/27/24 13:35:26.82
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:35:26.831
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:35:26.833
  STEP: create the deployment @ 07/27/24 13:35:26.836
  W0727 13:35:26.842101      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 07/27/24 13:35:26.842
  STEP: delete the deployment @ 07/27/24 13:35:27.346
  STEP: wait for all rs to be garbage collected @ 07/27/24 13:35:27.354
  STEP: expected 0 rs, got 1 rs @ 07/27/24 13:35:27.358
  STEP: expected 0 pods, got 2 pods @ 07/27/24 13:35:27.362
  E0727 13:35:27.720123      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 07/27/24 13:35:27.866
  W0727 13:35:27.874688      20 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Jul 27 13:35:27.874: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jul 27 13:35:27.874: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4859" for this suite. @ 07/27/24 13:35:27.881
• [1.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 07/27/24 13:35:27.888
  Jul 27 13:35:27.888: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename deployment @ 07/27/24 13:35:27.889
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:35:27.904
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:35:27.906
  STEP: creating a Deployment @ 07/27/24 13:35:27.912
  Jul 27 13:35:27.912: INFO: Creating simple deployment test-deployment-f9bjf
  Jul 27 13:35:27.931: INFO: deployment "test-deployment-f9bjf" doesn't have the required revision set
  E0727 13:35:28.720571      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:35:29.720749      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Getting /status @ 07/27/24 13:35:29.947
  Jul 27 13:35:29.951: INFO: Deployment test-deployment-f9bjf has Conditions: [{Available True 2024-07-27 13:35:28 +0000 UTC 2024-07-27 13:35:28 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2024-07-27 13:35:28 +0000 UTC 2024-07-27 13:35:27 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-f9bjf-5d576bd769" has successfully progressed.}]
  STEP: updating Deployment Status @ 07/27/24 13:35:29.951
  Jul 27 13:35:29.962: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.July, 27, 13, 35, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 27, 13, 35, 28, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 27, 13, 35, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 27, 13, 35, 27, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-f9bjf-5d576bd769\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 07/27/24 13:35:29.962
  Jul 27 13:35:29.964: INFO: Observed &Deployment event: ADDED
  Jul 27 13:35:29.964: INFO: Observed Deployment test-deployment-f9bjf in namespace deployment-8542 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-27 13:35:27 +0000 UTC 2024-07-27 13:35:27 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-f9bjf-5d576bd769"}
  Jul 27 13:35:29.964: INFO: Observed &Deployment event: MODIFIED
  Jul 27 13:35:29.964: INFO: Observed Deployment test-deployment-f9bjf in namespace deployment-8542 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-27 13:35:27 +0000 UTC 2024-07-27 13:35:27 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-f9bjf-5d576bd769"}
  Jul 27 13:35:29.964: INFO: Observed Deployment test-deployment-f9bjf in namespace deployment-8542 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-07-27 13:35:27 +0000 UTC 2024-07-27 13:35:27 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Jul 27 13:35:29.964: INFO: Observed &Deployment event: MODIFIED
  Jul 27 13:35:29.964: INFO: Observed Deployment test-deployment-f9bjf in namespace deployment-8542 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-07-27 13:35:27 +0000 UTC 2024-07-27 13:35:27 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Jul 27 13:35:29.964: INFO: Observed Deployment test-deployment-f9bjf in namespace deployment-8542 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-27 13:35:27 +0000 UTC 2024-07-27 13:35:27 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-f9bjf-5d576bd769" is progressing.}
  Jul 27 13:35:29.964: INFO: Observed &Deployment event: MODIFIED
  Jul 27 13:35:29.964: INFO: Observed Deployment test-deployment-f9bjf in namespace deployment-8542 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-07-27 13:35:28 +0000 UTC 2024-07-27 13:35:28 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Jul 27 13:35:29.964: INFO: Observed Deployment test-deployment-f9bjf in namespace deployment-8542 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-27 13:35:28 +0000 UTC 2024-07-27 13:35:27 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-f9bjf-5d576bd769" has successfully progressed.}
  Jul 27 13:35:29.964: INFO: Observed &Deployment event: MODIFIED
  Jul 27 13:35:29.964: INFO: Observed Deployment test-deployment-f9bjf in namespace deployment-8542 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-07-27 13:35:28 +0000 UTC 2024-07-27 13:35:28 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Jul 27 13:35:29.964: INFO: Observed Deployment test-deployment-f9bjf in namespace deployment-8542 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-27 13:35:28 +0000 UTC 2024-07-27 13:35:27 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-f9bjf-5d576bd769" has successfully progressed.}
  Jul 27 13:35:29.964: INFO: Found Deployment test-deployment-f9bjf in namespace deployment-8542 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jul 27 13:35:29.964: INFO: Deployment test-deployment-f9bjf has an updated status
  STEP: patching the Statefulset Status @ 07/27/24 13:35:29.964
  Jul 27 13:35:29.964: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Jul 27 13:35:29.971: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 07/27/24 13:35:29.971
  Jul 27 13:35:29.973: INFO: Observed &Deployment event: ADDED
  Jul 27 13:35:29.973: INFO: Observed deployment test-deployment-f9bjf in namespace deployment-8542 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-27 13:35:27 +0000 UTC 2024-07-27 13:35:27 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-f9bjf-5d576bd769"}
  Jul 27 13:35:29.973: INFO: Observed &Deployment event: MODIFIED
  Jul 27 13:35:29.973: INFO: Observed deployment test-deployment-f9bjf in namespace deployment-8542 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-27 13:35:27 +0000 UTC 2024-07-27 13:35:27 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-f9bjf-5d576bd769"}
  Jul 27 13:35:29.973: INFO: Observed deployment test-deployment-f9bjf in namespace deployment-8542 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-07-27 13:35:27 +0000 UTC 2024-07-27 13:35:27 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Jul 27 13:35:29.973: INFO: Observed &Deployment event: MODIFIED
  Jul 27 13:35:29.973: INFO: Observed deployment test-deployment-f9bjf in namespace deployment-8542 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-07-27 13:35:27 +0000 UTC 2024-07-27 13:35:27 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Jul 27 13:35:29.973: INFO: Observed deployment test-deployment-f9bjf in namespace deployment-8542 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-27 13:35:27 +0000 UTC 2024-07-27 13:35:27 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-f9bjf-5d576bd769" is progressing.}
  Jul 27 13:35:29.973: INFO: Observed &Deployment event: MODIFIED
  Jul 27 13:35:29.973: INFO: Observed deployment test-deployment-f9bjf in namespace deployment-8542 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-07-27 13:35:28 +0000 UTC 2024-07-27 13:35:28 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Jul 27 13:35:29.973: INFO: Observed deployment test-deployment-f9bjf in namespace deployment-8542 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-27 13:35:28 +0000 UTC 2024-07-27 13:35:27 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-f9bjf-5d576bd769" has successfully progressed.}
  Jul 27 13:35:29.974: INFO: Observed &Deployment event: MODIFIED
  Jul 27 13:35:29.974: INFO: Observed deployment test-deployment-f9bjf in namespace deployment-8542 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-07-27 13:35:28 +0000 UTC 2024-07-27 13:35:28 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Jul 27 13:35:29.974: INFO: Observed deployment test-deployment-f9bjf in namespace deployment-8542 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-27 13:35:28 +0000 UTC 2024-07-27 13:35:27 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-f9bjf-5d576bd769" has successfully progressed.}
  Jul 27 13:35:29.974: INFO: Observed deployment test-deployment-f9bjf in namespace deployment-8542 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jul 27 13:35:29.974: INFO: Observed &Deployment event: MODIFIED
  Jul 27 13:35:29.974: INFO: Found deployment test-deployment-f9bjf in namespace deployment-8542 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  Jul 27 13:35:29.974: INFO: Deployment test-deployment-f9bjf has a patched status
  Jul 27 13:35:29.977: INFO: Deployment "test-deployment-f9bjf":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-f9bjf",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8542",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3c39572e-d1b9-4bb5-8235-8eed55a6bd34",
      ResourceVersion: (string) (len=5) "41882",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857684127,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857684127,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857684129,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857684129,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857684129,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857684129,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-f9bjf-5d576bd769\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jul 27 13:35:29.982: INFO: New ReplicaSet "test-deployment-f9bjf-5d576bd769" of Deployment "test-deployment-f9bjf":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-f9bjf-5d576bd769",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8542",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "27fc5e23-0f17-4ca8-8d29-f86fe7168d49",
      ResourceVersion: (string) (len=5) "41877",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857684127,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-f9bjf",
          UID: (types.UID) (len=36) "3c39572e-d1b9-4bb5-8235-8eed55a6bd34",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857684127,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 33 63 33  |k:{\"uid\":\"3c3|
              00000120  39 35 37 32 65 2d 64 31  62 39 2d 34 62 62 35 2d  |9572e-d1b9-4bb5-|
              00000130  38 32 33 35 2d 38 65 65  64 35 35 61 36 62 64 33  |8235-8eed55a6bd3|
              00000140  34 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |4\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857684128,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jul 27 13:35:29.987: INFO: Pod "test-deployment-f9bjf-5d576bd769-xpqrz" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-f9bjf-5d576bd769-xpqrz",
      GenerateName: (string) (len=33) "test-deployment-f9bjf-5d576bd769-",
      Namespace: (string) (len=15) "deployment-8542",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cabd9b19-d401-41c6-b6c7-5706c1eb0e89",
      ResourceVersion: (string) (len=5) "41876",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857684127,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-f9bjf-5d576bd769",
          UID: (types.UID) (len=36) "27fc5e23-0f17-4ca8-8d29-f86fe7168d49",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857684127,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 32 37 66 63 35 65 32  33 2d 30 66 31 37 2d 34  |"27fc5e23-0f17-4|
              000000a0  63 61 38 2d 38 64 32 39  2d 66 38 36 66 65 37 31  |ca8-8d29-f86fe71|
              000000b0  36 38 64 34 39 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |68d49\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857684128,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  32 2e 31 34 35 5c 22 7d  |2.168.122.145\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gmkxf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gmkxf",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-18-96",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857684128,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857684127,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857684128,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857684128,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857684127,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.18.96",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.18.96"
        }
      },
      PodIP: (string) (len=15) "192.168.122.145",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.122.145"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857684127,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63857684128,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://ddfb28797fa3fb728d674e6722de8e6c9b1260822ed1e5c551ce7669256dee1d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 27 13:35:29.989: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8542" for this suite. @ 07/27/24 13:35:29.994
• [2.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3649
  STEP: Creating a kubernetes client @ 07/27/24 13:35:30.001
  Jul 27 13:35:30.001: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename services @ 07/27/24 13:35:30.002
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:35:30.015
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:35:30.017
  STEP: creating service multiprotocol-test in namespace services-920 @ 07/27/24 13:35:30.022
  STEP: creating pod pod1 in namespace services-920 @ 07/27/24 13:35:30.032
  STEP: Creating pod pod1 in namespace services-920 @ 07/27/24 13:35:30.032
  E0727 13:35:30.721181      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:35:31.721545      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-920 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 07/27/24 13:35:32.058
  Jul 27 13:35:32.069: INFO: successfully validated that service multiprotocol-test in namespace services-920 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 07/27/24 13:35:32.069
  Jul 27 13:35:32.069: INFO: Creating new exec pod
  E0727 13:35:32.721609      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:35:33.722225      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:35:34.083: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=services-920 exec execpod9z9h9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.186 80'
  Jul 27 13:35:34.173: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.186 80\nConnection to 10.152.183.186 80 port [tcp/http] succeeded!\n"
  Jul 27 13:35:34.173: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul 27 13:35:34.173: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=services-920 exec execpod9z9h9 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.186 80'
  E0727 13:35:34.723210      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:35:35.723283      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:35:36.723420      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:35:37.723516      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:35:38.272: INFO: stderr: "+ nc -v -u -w 2 10.152.183.186 80\n+ echo hostName\nConnection to 10.152.183.186 80 port [udp/*] succeeded!\n"
  Jul 27 13:35:38.272: INFO: stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 07/27/24 13:35:38.272
  Jul 27 13:35:38.281: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=services-920 exec execpod9z9h9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.186 80'
  Jul 27 13:35:38.379: INFO: stderr: "+ nc -v -t -w 2 10.152.183.186 80\n+ echo hostName\nConnection to 10.152.183.186 80 port [tcp/http] succeeded!\n"
  Jul 27 13:35:38.379: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul 27 13:35:38.380: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=services-920 exec execpod9z9h9 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.186 80'
  E0727 13:35:38.724225      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:35:39.724287      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:35:40.725276      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:35:41.725767      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:35:42.470: INFO: stderr: "+ nc -v -u -w 2+  10.152.183.186 80\necho hostName\nConnection to 10.152.183.186 80 port [udp/*] succeeded!\n"
  Jul 27 13:35:42.470: INFO: stdout: ""
  Jul 27 13:35:42.470: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=services-920 exec execpod9z9h9 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.186 80'
  E0727 13:35:42.725980      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:35:43.726394      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:35:44.727311      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:35:45.727413      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:35:46.566: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.186 80\nConnection to 10.152.183.186 80 port [udp/*] succeeded!\n"
  Jul 27 13:35:46.566: INFO: stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 07/27/24 13:35:46.566
  Jul 27 13:35:46.576: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=services-920 exec execpod9z9h9 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.186 80'
  E0727 13:35:46.728067      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:35:47.729127      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:35:48.729445      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:35:49.729548      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:35:50.676: INFO: stderr: "+ + echonc -v hostName -u\n -w 2 10.152.183.186 80\nConnection to 10.152.183.186 80 port [udp/*] succeeded!\n"
  Jul 27 13:35:50.676: INFO: stdout: "pod1"
  Jul 27 13:35:50.676: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=services-920 exec execpod9z9h9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.186 80'
  E0727 13:35:50.729982      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:35:51.730716      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:35:52.730779      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:35:52.764: INFO: rc: 1
  Jul 27 13:35:52.764: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=services-920 exec execpod9z9h9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.186 80:
  Command stdout:

  stderr:
  + nc -v -t -w 2 10.152.183.186 80
  + echo hostName
  nc: connect to 10.152.183.186 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Jul 27 13:35:52.764: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=services-920 exec execpod9z9h9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.186 80'
  E0727 13:35:53.731594      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:35:54.732125      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:35:54.857: INFO: rc: 1
  Jul 27 13:35:54.857: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=services-920 exec execpod9z9h9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.186 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.152.183.186 80
  nc: connect to 10.152.183.186 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Jul 27 13:35:54.857: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=services-920 exec execpod9z9h9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.186 80'
  E0727 13:35:55.732618      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:35:56.732911      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:35:56.948: INFO: rc: 1
  Jul 27 13:35:56.948: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=services-920 exec execpod9z9h9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.186 80:
  Command stdout:

  stderr:
  + nc -v -t -w 2 10.152.183.186 80
  + echo hostName
  nc: connect to 10.152.183.186 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Jul 27 13:35:56.948: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-920" for this suite. @ 07/27/24 13:35:56.953
• [26.959 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3154
  STEP: Creating a kubernetes client @ 07/27/24 13:35:56.96
  Jul 27 13:35:56.960: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename services @ 07/27/24 13:35:56.961
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:35:56.977
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:35:56.979
  STEP: creating an Endpoint @ 07/27/24 13:35:56.985
  STEP: waiting for available Endpoint @ 07/27/24 13:35:56.992
  STEP: listing all Endpoints @ 07/27/24 13:35:56.993
  STEP: updating the Endpoint @ 07/27/24 13:35:56.996
  STEP: fetching the Endpoint @ 07/27/24 13:35:57.002
  STEP: patching the Endpoint @ 07/27/24 13:35:57.007
  STEP: fetching the Endpoint @ 07/27/24 13:35:57.014
  STEP: deleting the Endpoint by Collection @ 07/27/24 13:35:57.017
  STEP: waiting for Endpoint deletion @ 07/27/24 13:35:57.025
  STEP: fetching the Endpoint @ 07/27/24 13:35:57.027
  Jul 27 13:35:57.030: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9938" for this suite. @ 07/27/24 13:35:57.033
• [0.080 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:69
  STEP: Creating a kubernetes client @ 07/27/24 13:35:57.04
  Jul 27 13:35:57.040: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/27/24 13:35:57.041
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:35:57.058
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:35:57.06
  Jul 27 13:35:57.063: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  E0727 13:35:57.733399      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 07/27/24 13:35:58.319
  Jul 27 13:35:58.319: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=crd-publish-openapi-3500 --namespace=crd-publish-openapi-3500 create -f -'
  E0727 13:35:58.733449      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:35:59.734258      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:36:00.389: INFO: stderr: ""
  Jul 27 13:36:00.389: INFO: stdout: "e2e-test-crd-publish-openapi-6544-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Jul 27 13:36:00.389: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=crd-publish-openapi-3500 --namespace=crd-publish-openapi-3500 delete e2e-test-crd-publish-openapi-6544-crds test-foo'
  Jul 27 13:36:00.451: INFO: stderr: ""
  Jul 27 13:36:00.451: INFO: stdout: "e2e-test-crd-publish-openapi-6544-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  Jul 27 13:36:00.451: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=crd-publish-openapi-3500 --namespace=crd-publish-openapi-3500 apply -f -'
  Jul 27 13:36:00.505: INFO: stderr: ""
  Jul 27 13:36:00.505: INFO: stdout: "e2e-test-crd-publish-openapi-6544-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Jul 27 13:36:00.505: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=crd-publish-openapi-3500 --namespace=crd-publish-openapi-3500 delete e2e-test-crd-publish-openapi-6544-crds test-foo'
  Jul 27 13:36:00.554: INFO: stderr: ""
  Jul 27 13:36:00.554: INFO: stdout: "e2e-test-crd-publish-openapi-6544-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 07/27/24 13:36:00.554
  Jul 27 13:36:00.554: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=crd-publish-openapi-3500 --namespace=crd-publish-openapi-3500 create -f -'
  Jul 27 13:36:00.597: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 07/27/24 13:36:00.597
  Jul 27 13:36:00.597: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=crd-publish-openapi-3500 --namespace=crd-publish-openapi-3500 create -f -'
  Jul 27 13:36:00.639: INFO: rc: 1
  Jul 27 13:36:00.639: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=crd-publish-openapi-3500 --namespace=crd-publish-openapi-3500 apply -f -'
  Jul 27 13:36:00.688: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 07/27/24 13:36:00.688
  Jul 27 13:36:00.688: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=crd-publish-openapi-3500 --namespace=crd-publish-openapi-3500 create -f -'
  Jul 27 13:36:00.732: INFO: rc: 1
  Jul 27 13:36:00.732: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=crd-publish-openapi-3500 --namespace=crd-publish-openapi-3500 apply -f -'
  E0727 13:36:00.734623      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:36:00.783: INFO: rc: 1
  STEP: kubectl explain works to explain CR properties @ 07/27/24 13:36:00.783
  Jul 27 13:36:00.783: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=crd-publish-openapi-3500 explain e2e-test-crd-publish-openapi-6544-crds'
  Jul 27 13:36:00.824: INFO: stderr: ""
  Jul 27 13:36:00.824: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-6544-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 07/27/24 13:36:00.825
  Jul 27 13:36:00.825: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=crd-publish-openapi-3500 explain e2e-test-crd-publish-openapi-6544-crds.metadata'
  Jul 27 13:36:00.868: INFO: stderr: ""
  Jul 27 13:36:00.868: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-6544-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  Jul 27 13:36:00.869: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=crd-publish-openapi-3500 explain e2e-test-crd-publish-openapi-6544-crds.spec'
  Jul 27 13:36:00.912: INFO: stderr: ""
  Jul 27 13:36:00.912: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-6544-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  Jul 27 13:36:00.912: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=crd-publish-openapi-3500 explain e2e-test-crd-publish-openapi-6544-crds.spec.bars'
  Jul 27 13:36:00.952: INFO: stderr: ""
  Jul 27 13:36:00.952: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-6544-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 07/27/24 13:36:00.952
  Jul 27 13:36:00.953: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=crd-publish-openapi-3500 explain e2e-test-crd-publish-openapi-6544-crds.spec.bars2'
  Jul 27 13:36:00.994: INFO: rc: 1
  E0727 13:36:01.734709      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:36:02.316: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3500" for this suite. @ 07/27/24 13:36:02.323
• [5.303 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:277
  STEP: Creating a kubernetes client @ 07/27/24 13:36:02.352
  Jul 27 13:36:02.352: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename svcaccounts @ 07/27/24 13:36:02.353
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:36:02.367
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:36:02.371
  STEP: Creating a pod to test service account token:  @ 07/27/24 13:36:02.373
  E0727 13:36:02.735521      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:36:03.736379      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:36:04.737102      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:36:05.737169      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/27/24 13:36:06.399
  Jul 27 13:36:06.404: INFO: Trying to get logs from node ip-172-31-18-96 pod test-pod-88397616-6919-4b6c-9f01-e906dd48a95e container agnhost-container: <nil>
  STEP: delete the pod @ 07/27/24 13:36:06.42
  Jul 27 13:36:06.439: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-726" for this suite. @ 07/27/24 13:36:06.444
• [4.103 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:153
  STEP: Creating a kubernetes client @ 07/27/24 13:36:06.455
  Jul 27 13:36:06.455: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/27/24 13:36:06.456
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:36:06.473
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:36:06.478
  Jul 27 13:36:06.481: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  E0727 13:36:06.737269      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:36:07.738066      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 07/27/24 13:36:07.835
  Jul 27 13:36:07.836: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=crd-publish-openapi-6466 --namespace=crd-publish-openapi-6466 create -f -'
  E0727 13:36:08.738227      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:36:09.738308      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:36:09.893: INFO: stderr: ""
  Jul 27 13:36:09.893: INFO: stdout: "e2e-test-crd-publish-openapi-2202-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Jul 27 13:36:09.893: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=crd-publish-openapi-6466 --namespace=crd-publish-openapi-6466 delete e2e-test-crd-publish-openapi-2202-crds test-cr'
  Jul 27 13:36:09.952: INFO: stderr: ""
  Jul 27 13:36:09.952: INFO: stdout: "e2e-test-crd-publish-openapi-2202-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  Jul 27 13:36:09.952: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=crd-publish-openapi-6466 --namespace=crd-publish-openapi-6466 apply -f -'
  Jul 27 13:36:10.008: INFO: stderr: ""
  Jul 27 13:36:10.008: INFO: stdout: "e2e-test-crd-publish-openapi-2202-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Jul 27 13:36:10.008: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=crd-publish-openapi-6466 --namespace=crd-publish-openapi-6466 delete e2e-test-crd-publish-openapi-2202-crds test-cr'
  Jul 27 13:36:10.057: INFO: stderr: ""
  Jul 27 13:36:10.057: INFO: stdout: "e2e-test-crd-publish-openapi-2202-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 07/27/24 13:36:10.057
  Jul 27 13:36:10.057: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=crd-publish-openapi-6466 explain e2e-test-crd-publish-openapi-2202-crds'
  Jul 27 13:36:10.098: INFO: stderr: ""
  Jul 27 13:36:10.098: INFO: stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-2202-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  E0727 13:36:10.739308      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:36:11.281: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6466" for this suite. @ 07/27/24 13:36:11.288
• [4.839 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:321
  STEP: Creating a kubernetes client @ 07/27/24 13:36:11.295
  Jul 27 13:36:11.295: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename statefulset @ 07/27/24 13:36:11.295
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:36:11.312
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:36:11.313
  STEP: Creating service test in namespace statefulset-2533 @ 07/27/24 13:36:11.315
  STEP: Creating a new StatefulSet @ 07/27/24 13:36:11.32
  Jul 27 13:36:11.329: INFO: Found 0 stateful pods, waiting for 3
  E0727 13:36:11.739349      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:36:12.739592      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:36:13.740274      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:36:14.740350      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:36:15.740547      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:36:16.740655      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:36:17.740714      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:36:18.740803      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:36:19.741166      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:36:20.741527      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:36:21.331: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Jul 27 13:36:21.331: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Jul 27 13:36:21.331: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  Jul 27 13:36:21.340: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=statefulset-2533 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jul 27 13:36:21.433: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jul 27 13:36:21.433: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jul 27 13:36:21.433: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0727 13:36:21.742179      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:36:22.742976      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:36:23.743170      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:36:24.743563      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:36:25.744338      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:36:26.745195      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:36:27.745300      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:36:28.746237      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:36:29.746421      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:36:30.746689      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 07/27/24 13:36:31.441
  Jul 27 13:36:31.461: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 07/27/24 13:36:31.462
  E0727 13:36:31.747698      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:36:32.747786      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:36:33.748879      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:36:34.748972      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:36:35.749144      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:36:36.750206      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:36:37.751119      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:36:38.751225      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:36:39.752019      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:36:40.752118      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating Pods in reverse ordinal order @ 07/27/24 13:36:41.47
  Jul 27 13:36:41.474: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=statefulset-2533 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jul 27 13:36:41.574: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jul 27 13:36:41.574: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jul 27 13:36:41.574: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0727 13:36:41.753096      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:36:42.754090      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:36:43.754184      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:36:44.754247      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:36:45.754350      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:36:46.754569      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:36:47.754724      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:36:48.755026      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:36:49.755400      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:36:50.755743      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Rolling back to a previous revision @ 07/27/24 13:36:51.588
  Jul 27 13:36:51.588: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=statefulset-2533 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jul 27 13:36:51.685: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jul 27 13:36:51.685: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jul 27 13:36:51.685: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0727 13:36:51.756035      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:36:52.757035      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:36:53.757151      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:36:54.757264      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:36:55.757361      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:36:56.757432      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:36:57.757621      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:36:58.758226      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:36:59.758309      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:37:00.758519      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:37:01.712: INFO: Updating stateful set ss2
  E0727 13:37:01.758924      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:37:02.759008      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:37:03.759075      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:37:04.759189      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:37:05.759295      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:37:06.759408      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:37:07.759460      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:37:08.759613      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:37:09.759903      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:37:10.760002      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Rolling back update in reverse ordinal order @ 07/27/24 13:37:11.72
  Jul 27 13:37:11.724: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=statefulset-2533 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0727 13:37:11.760897      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:37:11.815: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jul 27 13:37:11.815: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jul 27 13:37:11.815: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0727 13:37:12.761328      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:37:13.761432      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:37:14.761480      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:37:15.761598      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:37:16.761698      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:37:17.761776      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:37:18.761858      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:37:19.761979      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:37:20.762196      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:37:21.762793      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:37:21.830: INFO: Deleting all statefulset in ns statefulset-2533
  Jul 27 13:37:21.833: INFO: Scaling statefulset ss2 to 0
  E0727 13:37:22.763788      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:37:23.764041      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:37:24.764121      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:37:25.764263      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:37:26.764361      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:37:27.764454      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:37:28.764632      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:37:29.764764      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:37:30.764886      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:37:31.765828      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:37:31.847: INFO: Waiting for statefulset status.replicas updated to 0
  Jul 27 13:37:31.850: INFO: Deleting statefulset ss2
  Jul 27 13:37:31.863: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2533" for this suite. @ 07/27/24 13:37:31.869
• [80.580 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 07/27/24 13:37:31.875
  Jul 27 13:37:31.875: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename discovery @ 07/27/24 13:37:31.876
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:37:31.894
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:37:31.895
  STEP: Setting up server cert @ 07/27/24 13:37:31.897
  STEP: Requesting APIResourceList from "/api/v1" @ 07/27/24 13:37:32.061
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 07/27/24 13:37:32.062
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 07/27/24 13:37:32.063
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 07/27/24 13:37:32.064
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 07/27/24 13:37:32.065
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 07/27/24 13:37:32.066
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 07/27/24 13:37:32.067
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 07/27/24 13:37:32.068
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 07/27/24 13:37:32.069
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 07/27/24 13:37:32.07
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 07/27/24 13:37:32.072
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 07/27/24 13:37:32.073
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 07/27/24 13:37:32.074
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 07/27/24 13:37:32.075
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 07/27/24 13:37:32.076
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 07/27/24 13:37:32.076
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 07/27/24 13:37:32.077
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 07/27/24 13:37:32.078
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 07/27/24 13:37:32.079
  Jul 27 13:37:32.080: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-6484" for this suite. @ 07/27/24 13:37:32.085
• [0.228 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:147
  STEP: Creating a kubernetes client @ 07/27/24 13:37:32.104
  Jul 27 13:37:32.104: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename kubelet-test @ 07/27/24 13:37:32.104
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:37:32.121
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:37:32.124
  STEP: Waiting for pod completion @ 07/27/24 13:37:32.136
  E0727 13:37:32.766297      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:37:33.766638      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:37:34.767492      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:37:35.767579      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:37:36.161: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-1012" for this suite. @ 07/27/24 13:37:36.165
• [4.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:572
  STEP: Creating a kubernetes client @ 07/27/24 13:37:36.172
  Jul 27 13:37:36.172: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename job @ 07/27/24 13:37:36.172
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:37:36.188
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:37:36.19
  STEP: Creating a job @ 07/27/24 13:37:36.192
  STEP: Ensuring job reaches completions @ 07/27/24 13:37:36.197
  E0727 13:37:36.767741      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:37:37.767808      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:37:38.767905      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:37:39.768393      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:37:40.768888      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:37:41.769311      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:37:42.770277      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:37:43.770353      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:37:44.201: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6955" for this suite. @ 07/27/24 13:37:44.205
• [8.040 seconds]
------------------------------
SSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:96
  STEP: Creating a kubernetes client @ 07/27/24 13:37:44.212
  Jul 27 13:37:44.212: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename secrets @ 07/27/24 13:37:44.212
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:37:44.231
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:37:44.233
  STEP: creating secret secrets-9825/secret-test-4eaab7db-9776-457c-8099-71cee8bcc44c @ 07/27/24 13:37:44.235
  STEP: Creating a pod to test consume secrets @ 07/27/24 13:37:44.239
  E0727 13:37:44.770473      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:37:45.770714      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/27/24 13:37:46.257
  Jul 27 13:37:46.261: INFO: Trying to get logs from node ip-172-31-18-96 pod pod-configmaps-f8f614a7-6092-433d-9f0d-2a1573e63adb container env-test: <nil>
  STEP: delete the pod @ 07/27/24 13:37:46.267
  Jul 27 13:37:46.283: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9825" for this suite. @ 07/27/24 13:37:46.287
• [2.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1280
  STEP: Creating a kubernetes client @ 07/27/24 13:37:46.293
  Jul 27 13:37:46.293: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename services @ 07/27/24 13:37:46.293
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:37:46.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:37:46.312
  STEP: creating service nodeport-test with type=NodePort in namespace services-1409 @ 07/27/24 13:37:46.314
  STEP: creating replication controller nodeport-test in namespace services-1409 @ 07/27/24 13:37:46.328
  I0727 13:37:46.335221      20 runners.go:197] Created replication controller with name: nodeport-test, namespace: services-1409, replica count: 2
  E0727 13:37:46.771253      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:37:47.771325      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:37:48.771676      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0727 13:37:49.386210      20 runners.go:197] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jul 27 13:37:49.386: INFO: Creating new exec pod
  E0727 13:37:49.771768      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:37:50.772501      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:37:51.773494      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:37:52.408: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=services-1409 exec execpodlrqvp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Jul 27 13:37:52.529: INFO: stderr: "+ nc -v -t -w+ echo hostName\n 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Jul 27 13:37:52.529: INFO: stdout: ""
  E0727 13:37:52.774255      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:37:53.408: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=services-1409 exec execpodlrqvp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Jul 27 13:37:53.500: INFO: stderr: "+ nc -v -t -w 2 nodeport-test 80\n+ echo hostName\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Jul 27 13:37:53.500: INFO: stdout: "nodeport-test-6wwrb"
  Jul 27 13:37:53.500: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=services-1409 exec execpodlrqvp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.156 80'
  Jul 27 13:37:53.588: INFO: stderr: "+ nc -v -t -w 2 10.152.183.156 80\n+ echo hostName\nConnection to 10.152.183.156 80 port [tcp/http] succeeded!\n"
  Jul 27 13:37:53.588: INFO: stdout: "nodeport-test-llpfs"
  Jul 27 13:37:53.588: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=services-1409 exec execpodlrqvp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.18.96 30773'
  Jul 27 13:37:53.684: INFO: stderr: "+ nc -v -t -w 2 172.31.18.96 30773\n+ echo hostName\nConnection to 172.31.18.96 30773 port [tcp/*] succeeded!\n"
  Jul 27 13:37:53.684: INFO: stdout: ""
  E0727 13:37:53.774716      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:37:54.588: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=services-1409 exec execpodlrqvp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.18.96 30773'
  Jul 27 13:37:54.675: INFO: stderr: "+ nc -v -t -w 2 172.31.18.96 30773\nConnection to 172.31.18.96 30773 port [tcp/*] succeeded!\n+ echo hostName\n"
  Jul 27 13:37:54.675: INFO: stdout: ""
  E0727 13:37:54.775024      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:37:55.589: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=services-1409 exec execpodlrqvp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.18.96 30773'
  Jul 27 13:37:55.675: INFO: stderr: "+ nc -v -t -w 2 172.31.18.96 30773\nConnection to 172.31.18.96 30773 port [tcp/*] succeeded!\n+ echo hostName\n"
  Jul 27 13:37:55.675: INFO: stdout: ""
  E0727 13:37:55.776048      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:37:56.588: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=services-1409 exec execpodlrqvp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.18.96 30773'
  Jul 27 13:37:56.676: INFO: stderr: "+ nc -v -t -w 2 172.31.18.96 30773\n+ echo hostName\nConnection to 172.31.18.96 30773 port [tcp/*] succeeded!\n"
  Jul 27 13:37:56.676: INFO: stdout: "nodeport-test-llpfs"
  Jul 27 13:37:56.676: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=services-1409 exec execpodlrqvp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.76.31 30773'
  Jul 27 13:37:56.765: INFO: stderr: "+ nc -v -t -w 2 172.31.76.31 30773\n+ echo hostName\nConnection to 172.31.76.31 30773 port [tcp/*] succeeded!\n"
  Jul 27 13:37:56.765: INFO: stdout: "nodeport-test-6wwrb"
  Jul 27 13:37:56.765: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1409" for this suite. @ 07/27/24 13:37:56.77
  E0727 13:37:56.776325      20 retrywatcher.go:129] "Watch failed" err="context canceled"
• [10.483 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 07/27/24 13:37:56.776
  Jul 27 13:37:56.776: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename crd-watch @ 07/27/24 13:37:56.777
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:37:56.795
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:37:56.797
  Jul 27 13:37:56.799: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  E0727 13:37:57.776684      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:37:58.777474      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating first CR  @ 07/27/24 13:37:59.332
  Jul 27 13:37:59.337: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-07-27T13:37:59Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-07-27T13:37:59Z]] name:name1 resourceVersion:43130 uid:eac31144-265f-4fe0-98c7-d2c784398a14] num:map[num1:9223372036854775807 num2:1000000]]}
  E0727 13:37:59.778232      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:38:00.778304      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:38:01.778682      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:38:02.778775      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:38:03.778883      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:38:04.779098      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:38:05.779304      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:38:06.779507      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:38:07.779868      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:38:08.779960      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating second CR @ 07/27/24 13:38:09.338
  Jul 27 13:38:09.344: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-07-27T13:38:09Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-07-27T13:38:09Z]] name:name2 resourceVersion:43200 uid:7d75a079-2117-42ce-b692-7e9bb67117c2] num:map[num1:9223372036854775807 num2:1000000]]}
  E0727 13:38:09.780005      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:38:10.780212      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:38:11.780803      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:38:12.781802      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:38:13.781905      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:38:14.782605      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:38:15.782750      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:38:16.782947      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:38:17.783799      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:38:18.784721      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying first CR @ 07/27/24 13:38:19.345
  Jul 27 13:38:19.352: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-07-27T13:37:59Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-07-27T13:38:19Z]] name:name1 resourceVersion:43220 uid:eac31144-265f-4fe0-98c7-d2c784398a14] num:map[num1:9223372036854775807 num2:1000000]]}
  E0727 13:38:19.785754      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:38:20.785851      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:38:21.786294      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:38:22.786671      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:38:23.786990      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:38:24.787096      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:38:25.787300      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:38:26.787475      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:38:27.787640      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:38:28.788601      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying second CR @ 07/27/24 13:38:29.352
  Jul 27 13:38:29.359: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-07-27T13:38:09Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-07-27T13:38:29Z]] name:name2 resourceVersion:43240 uid:7d75a079-2117-42ce-b692-7e9bb67117c2] num:map[num1:9223372036854775807 num2:1000000]]}
  E0727 13:38:29.789538      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:38:30.789634      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:38:31.789696      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:38:32.789786      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:38:33.789880      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:38:34.790892      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:38:35.791294      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:38:36.791380      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:38:37.792136      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:38:38.793221      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting first CR @ 07/27/24 13:38:39.36
  Jul 27 13:38:39.369: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-07-27T13:37:59Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-07-27T13:38:19Z]] name:name1 resourceVersion:43260 uid:eac31144-265f-4fe0-98c7-d2c784398a14] num:map[num1:9223372036854775807 num2:1000000]]}
  E0727 13:38:39.793861      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:38:40.793973      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:38:41.794396      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:38:42.794668      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:38:43.794853      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:38:44.795129      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:38:45.795397      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:38:46.795488      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:38:47.795583      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:38:48.795758      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting second CR @ 07/27/24 13:38:49.37
  Jul 27 13:38:49.379: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-07-27T13:38:09Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-07-27T13:38:29Z]] name:name2 resourceVersion:43280 uid:7d75a079-2117-42ce-b692-7e9bb67117c2] num:map[num1:9223372036854775807 num2:1000000]]}
  E0727 13:38:49.795944      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:38:50.796134      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:38:51.796254      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:38:52.796376      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:38:53.796568      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:38:54.796672      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:38:55.796785      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:38:56.796906      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:38:57.796967      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:38:58.797136      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:38:59.797793      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:38:59.896: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-8695" for this suite. @ 07/27/24 13:38:59.9
• [63.130 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 07/27/24 13:38:59.907
  Jul 27 13:38:59.907: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename limitrange @ 07/27/24 13:38:59.908
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:38:59.926
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:38:59.927
  STEP: Creating a LimitRange @ 07/27/24 13:38:59.929
  STEP: Setting up watch @ 07/27/24 13:38:59.929
  STEP: Submitting a LimitRange @ 07/27/24 13:39:00.035
  STEP: Verifying LimitRange creation was observed @ 07/27/24 13:39:00.042
  STEP: Fetching the LimitRange to ensure it has proper values @ 07/27/24 13:39:00.042
  Jul 27 13:39:00.046: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Jul 27 13:39:00.046: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 07/27/24 13:39:00.046
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 07/27/24 13:39:00.05
  Jul 27 13:39:00.053: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Jul 27 13:39:00.053: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 07/27/24 13:39:00.053
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 07/27/24 13:39:00.061
  Jul 27 13:39:00.063: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  Jul 27 13:39:00.063: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 07/27/24 13:39:00.063
  STEP: Failing to create a Pod with more than max resources @ 07/27/24 13:39:00.065
  STEP: Updating a LimitRange @ 07/27/24 13:39:00.066
  STEP: Verifying LimitRange updating is effective @ 07/27/24 13:39:00.071
  E0727 13:39:00.797881      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:39:01.798891      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 07/27/24 13:39:02.076
  STEP: Failing to create a Pod with more than max resources @ 07/27/24 13:39:02.084
  STEP: Deleting a LimitRange @ 07/27/24 13:39:02.086
  STEP: Verifying the LimitRange was deleted @ 07/27/24 13:39:02.094
  E0727 13:39:02.799915      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:39:03.800021      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:39:04.800068      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:39:05.800666      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:39:06.800784      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:39:07.099: INFO: limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 07/27/24 13:39:07.099
  Jul 27 13:39:07.107: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-7771" for this suite. @ 07/27/24 13:39:07.115
• [7.214 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 07/27/24 13:39:07.121
  Jul 27 13:39:07.121: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename webhook @ 07/27/24 13:39:07.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:39:07.137
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:39:07.14
  STEP: Setting up server cert @ 07/27/24 13:39:07.161
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/27/24 13:39:07.348
  STEP: Deploying the webhook pod @ 07/27/24 13:39:07.357
  STEP: Wait for the deployment to be ready @ 07/27/24 13:39:07.369
  Jul 27 13:39:07.378: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0727 13:39:07.800898      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:39:08.800992      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/27/24 13:39:09.389
  STEP: Verifying the service has paired with the endpoint @ 07/27/24 13:39:09.399
  E0727 13:39:09.801971      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:39:10.399: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 07/27/24 13:39:10.407
  STEP: create a configmap that should be updated by the webhook @ 07/27/24 13:39:10.42
  Jul 27 13:39:10.473: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-37" for this suite. @ 07/27/24 13:39:10.479
  STEP: Destroying namespace "webhook-markers-3105" for this suite. @ 07/27/24 13:39:10.486
• [3.371 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 07/27/24 13:39:10.496
  Jul 27 13:39:10.496: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename configmap @ 07/27/24 13:39:10.496
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:39:10.512
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:39:10.514
  STEP: Creating configMap with name configmap-test-upd-dff4cc05-0c20-4dbd-bd33-c708641a706e @ 07/27/24 13:39:10.518
  STEP: Creating the pod @ 07/27/24 13:39:10.523
  E0727 13:39:10.802068      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:39:11.802981      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating configmap configmap-test-upd-dff4cc05-0c20-4dbd-bd33-c708641a706e @ 07/27/24 13:39:12.55
  STEP: waiting to observe update in volume @ 07/27/24 13:39:12.555
  E0727 13:39:12.803532      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:39:13.803675      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:39:14.804577      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:39:15.804691      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:39:16.805680      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:39:17.805741      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:39:18.806212      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:39:19.806312      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:39:20.807139      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:39:21.807482      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:39:22.808514      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:39:23.808638      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:39:24.809696      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:39:25.809794      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:39:26.810447      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:39:27.810554      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:39:28.810581      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:39:29.811629      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:39:30.812659      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:39:31.812779      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:39:32.813452      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:39:33.813536      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:39:34.813560      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:39:35.813653      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:39:36.814701      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:39:37.814937      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:39:38.815733      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:39:39.815988      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:39:40.817033      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:39:41.817782      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:39:42.818388      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:39:43.818650      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:39:44.819428      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:39:45.819518      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:39:46.820091      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:39:47.821071      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:39:48.821713      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:39:49.822945      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:39:50.823048      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:39:51.823263      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:39:52.823941      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:39:53.824061      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:39:54.825114      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:39:55.825253      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:39:56.825648      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:39:57.825718      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:39:58.826347      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:39:59.826946      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:40:00.827036      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:40:01.827383      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:40:02.828028      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:40:03.828253      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:40:04.829162      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:40:05.829258      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:40:06.829488      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:40:07.829595      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:40:08.830235      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:40:09.830336      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:40:10.831046      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:40:11.832112      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:40:12.832572      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:40:13.833528      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:40:14.833990      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:40:15.834101      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:40:16.825: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9791" for this suite. @ 07/27/24 13:40:16.83
  E0727 13:40:16.834771      20 retrywatcher.go:129] "Watch failed" err="context canceled"
• [66.341 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:142
  STEP: Creating a kubernetes client @ 07/27/24 13:40:16.837
  Jul 27 13:40:16.837: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename crd-webhook @ 07/27/24 13:40:16.838
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:40:16.854
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:40:16.856
  STEP: Setting up server cert @ 07/27/24 13:40:16.858
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 07/27/24 13:40:17.201
  STEP: Deploying the custom resource conversion webhook pod @ 07/27/24 13:40:17.21
  STEP: Wait for the deployment to be ready @ 07/27/24 13:40:17.222
  Jul 27 13:40:17.230: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0727 13:40:17.834935      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:40:18.835277      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/27/24 13:40:19.241
  STEP: Verifying the service has paired with the endpoint @ 07/27/24 13:40:19.25
  E0727 13:40:19.835452      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:40:20.250: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Jul 27 13:40:20.259: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  E0727 13:40:20.836419      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:40:21.836576      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 07/27/24 13:40:22.809
  STEP: v2 custom resource should be converted @ 07/27/24 13:40:22.814
  E0727 13:40:22.836776      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:40:23.369: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-6968" for this suite. @ 07/27/24 13:40:23.372
• [6.542 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 07/27/24 13:40:23.38
  Jul 27 13:40:23.380: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename pods @ 07/27/24 13:40:23.38
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:40:23.399
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:40:23.401
  STEP: Create a pod @ 07/27/24 13:40:23.403
  E0727 13:40:23.837260      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:40:24.837286      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 07/27/24 13:40:25.421
  Jul 27 13:40:25.432: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
  Jul 27 13:40:25.432: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4795" for this suite. @ 07/27/24 13:40:25.437
• [2.065 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 07/27/24 13:40:25.445
  Jul 27 13:40:25.445: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename taint-single-pod @ 07/27/24 13:40:25.445
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:40:25.46
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:40:25.462
  Jul 27 13:40:25.464: INFO: Waiting up to 1m0s for all nodes to be ready
  E0727 13:40:25.838244      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:40:26.838436      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:40:27.839064      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:40:28.839252      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:40:29.840115      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:40:30.840438      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:40:31.841402      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:40:32.841588      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:40:33.842225      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:40:34.842316      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:40:35.842465      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:40:36.842529      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:40:37.842644      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:40:38.842801      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:40:39.842915      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:40:40.842993      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:40:41.843225      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:40:42.843308      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:40:43.843844      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:40:44.843915      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:40:45.844002      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:40:46.844269      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:40:47.844775      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:40:48.844873      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:40:49.845630      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:40:50.845693      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:40:51.846201      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:40:52.846309      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:40:53.846422      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:40:54.846520      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:40:55.846651      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:40:56.846740      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:40:57.847412      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:40:58.847624      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:40:59.847731      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:41:00.848061      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:41:01.848634      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:41:02.848730      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:41:03.848844      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:41:04.849040      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:41:05.849566      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:41:06.849668      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:41:07.849916      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:41:08.850217      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:41:09.851006      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:41:10.851091      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:41:11.851124      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:41:12.851873      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:41:13.851940      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:41:14.852116      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:41:15.852820      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:41:16.853060      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:41:17.853795      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:41:18.853907      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:41:19.854170      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:41:20.854286      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:41:21.854773      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:41:22.854880      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:41:23.854966      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:41:24.855063      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:41:25.464: INFO: Waiting for terminating namespaces to be deleted...
  Jul 27 13:41:25.469: INFO: Starting informer...
  STEP: Starting pod... @ 07/27/24 13:41:25.469
  Jul 27 13:41:25.682: INFO: Pod is running on ip-172-31-18-96. Tainting Node
  STEP: Trying to apply a taint on the Node @ 07/27/24 13:41:25.682
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 07/27/24 13:41:25.691
  STEP: Waiting short time to make sure Pod is queued for deletion @ 07/27/24 13:41:25.695
  Jul 27 13:41:25.695: INFO: Pod wasn't evicted. Proceeding
  Jul 27 13:41:25.695: INFO: Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 07/27/24 13:41:25.703
  STEP: Waiting some time to make sure that toleration time passed. @ 07/27/24 13:41:25.706
  E0727 13:41:25.856034      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:41:26.856193      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:41:27.856314      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:41:28.856391      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:41:29.856507      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:41:30.856642      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:41:31.857102      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:41:32.858148      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:41:33.858239      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:41:34.858313      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:41:35.858396      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:41:36.858480      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:41:37.858588      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:41:38.858769      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:41:39.859067      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:41:40.859206      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:41:41.859660      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:41:42.859850      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:41:43.860062      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:41:44.860188      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:41:45.860960      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:41:46.861135      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:41:47.861942      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:41:48.862613      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:41:49.862800      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:41:50.862993      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:41:51.863396      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:41:52.863698      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:41:53.863884      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:41:54.864069      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:41:55.864314      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:41:56.864850      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:41:57.865129      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:41:58.865227      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:41:59.865334      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:42:00.866202      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:42:01.866432      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:42:02.866728      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:42:03.866826      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:42:04.867132      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:42:05.867361      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:42:06.867582      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:42:07.867817      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:42:08.867931      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:42:09.868115      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:42:10.868238      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:42:11.868301      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:42:12.868659      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:42:13.868862      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:42:14.869108      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:42:15.869145      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:42:16.870211      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:42:17.870308      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:42:18.871185      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:42:19.871271      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:42:20.871887      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:42:21.872764      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:42:22.872857      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:42:23.873068      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:42:24.873185      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:42:25.873258      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:42:26.874115      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:42:27.874223      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:42:28.874420      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:42:29.874536      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:42:30.874627      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:42:31.874840      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:42:32.875015      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:42:33.875124      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:42:34.875228      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:42:35.875411      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:42:36.875581      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:42:37.875858      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:42:38.876052      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:42:39.876366      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:42:40.707: INFO: Pod wasn't evicted. Test successful
  Jul 27 13:42:40.707: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-3000" for this suite. @ 07/27/24 13:42:40.712
• [135.276 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 07/27/24 13:42:40.72
  Jul 27 13:42:40.720: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename events @ 07/27/24 13:42:40.721
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:42:40.74
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:42:40.741
  STEP: creating a test event @ 07/27/24 13:42:40.743
  STEP: listing events in all namespaces @ 07/27/24 13:42:40.75
  STEP: listing events in test namespace @ 07/27/24 13:42:40.753
  STEP: listing events with field selection filtering on source @ 07/27/24 13:42:40.755
  STEP: listing events with field selection filtering on reportingController @ 07/27/24 13:42:40.758
  STEP: getting the test event @ 07/27/24 13:42:40.762
  STEP: patching the test event @ 07/27/24 13:42:40.765
  STEP: getting the test event @ 07/27/24 13:42:40.773
  STEP: updating the test event @ 07/27/24 13:42:40.776
  STEP: getting the test event @ 07/27/24 13:42:40.783
  STEP: deleting the test event @ 07/27/24 13:42:40.786
  STEP: listing events in all namespaces @ 07/27/24 13:42:40.793
  STEP: listing events in test namespace @ 07/27/24 13:42:40.796
  Jul 27 13:42:40.799: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-6288" for this suite. @ 07/27/24 13:42:40.803
• [0.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 07/27/24 13:42:40.811
  Jul 27 13:42:40.811: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/27/24 13:42:40.812
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:42:40.827
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:42:40.829
  Jul 27 13:42:40.831: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  E0727 13:42:40.877094      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:42:41.368: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-5844" for this suite. @ 07/27/24 13:42:41.375
• [0.572 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:139
  STEP: Creating a kubernetes client @ 07/27/24 13:42:41.384
  Jul 27 13:42:41.384: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename configmap @ 07/27/24 13:42:41.384
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:42:41.409
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:42:41.411
  STEP: Creating configMap that has name configmap-test-emptyKey-a8b768d2-50b7-475e-bb8e-9643b1ab2bec @ 07/27/24 13:42:41.413
  Jul 27 13:42:41.414: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7272" for this suite. @ 07/27/24 13:42:41.418
• [0.040 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 07/27/24 13:42:41.424
  Jul 27 13:42:41.424: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename emptydir @ 07/27/24 13:42:41.425
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:42:41.442
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:42:41.444
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 07/27/24 13:42:41.446
  E0727 13:42:41.877829      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:42:42.877981      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:42:43.878713      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:42:44.878980      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/27/24 13:42:45.465
  Jul 27 13:42:45.469: INFO: Trying to get logs from node ip-172-31-10-249 pod pod-ae90776b-69cc-413c-83d2-c921a621c506 container test-container: <nil>
  STEP: delete the pod @ 07/27/24 13:42:45.483
  Jul 27 13:42:45.500: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3799" for this suite. @ 07/27/24 13:42:45.504
• [4.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 07/27/24 13:42:45.511
  Jul 27 13:42:45.511: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename csistoragecapacity @ 07/27/24 13:42:45.512
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:42:45.528
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:42:45.531
  STEP: getting /apis @ 07/27/24 13:42:45.532
  STEP: getting /apis/storage.k8s.io @ 07/27/24 13:42:45.535
  STEP: getting /apis/storage.k8s.io/v1 @ 07/27/24 13:42:45.536
  STEP: creating @ 07/27/24 13:42:45.537
  STEP: watching @ 07/27/24 13:42:45.553
  Jul 27 13:42:45.553: INFO: starting watch
  STEP: getting @ 07/27/24 13:42:45.558
  STEP: listing in namespace @ 07/27/24 13:42:45.561
  STEP: listing across namespaces @ 07/27/24 13:42:45.564
  STEP: patching @ 07/27/24 13:42:45.567
  STEP: updating @ 07/27/24 13:42:45.571
  Jul 27 13:42:45.578: INFO: waiting for watch events with expected annotations in namespace
  Jul 27 13:42:45.578: INFO: waiting for watch events with expected annotations across namespace
  STEP: deleting @ 07/27/24 13:42:45.578
  STEP: deleting a collection @ 07/27/24 13:42:45.59
  Jul 27 13:42:45.604: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-2247" for this suite. @ 07/27/24 13:42:45.607
• [0.103 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1838
  STEP: Creating a kubernetes client @ 07/27/24 13:42:45.615
  Jul 27 13:42:45.615: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename kubectl @ 07/27/24 13:42:45.615
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:42:45.633
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:42:45.635
  STEP: starting the proxy server @ 07/27/24 13:42:45.637
  Jul 27 13:42:45.637: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-1732 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 07/27/24 13:42:45.669
  Jul 27 13:42:45.674: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1732" for this suite. @ 07/27/24 13:42:45.678
• [0.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 07/27/24 13:42:45.686
  Jul 27 13:42:45.686: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename proxy @ 07/27/24 13:42:45.686
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:42:45.703
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:42:45.704
  STEP: starting an echo server on multiple ports @ 07/27/24 13:42:45.715
  STEP: creating replication controller proxy-service-thpdt in namespace proxy-8786 @ 07/27/24 13:42:45.715
  I0727 13:42:45.723247      20 runners.go:197] Created replication controller with name: proxy-service-thpdt, namespace: proxy-8786, replica count: 1
  E0727 13:42:45.879905      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0727 13:42:46.774049      20 runners.go:197] proxy-service-thpdt Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E0727 13:42:46.880386      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0727 13:42:47.774193      20 runners.go:197] proxy-service-thpdt Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jul 27 13:42:47.777: INFO: setup took 2.070991288s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 07/27/24 13:42:47.777
  Jul 27 13:42:47.784: INFO: (0) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:160/proxy/: foo (200; 6.6716ms)
  Jul 27 13:42:47.785: INFO: (0) /api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:160/proxy/: foo (200; 7.702753ms)
  Jul 27 13:42:47.785: INFO: (0) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:1080/proxy/rewriteme">test<... (200; 7.64379ms)
  Jul 27 13:42:47.785: INFO: (0) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:162/proxy/: bar (200; 7.607958ms)
  Jul 27 13:42:47.786: INFO: (0) /api/v1/namespaces/proxy-8786/services/proxy-service-thpdt:portname2/proxy/: bar (200; 8.816506ms)
  Jul 27 13:42:47.786: INFO: (0) /api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:162/proxy/: bar (200; 8.982277ms)
  Jul 27 13:42:47.787: INFO: (0) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr/proxy/rewriteme">test</a> (200; 8.854202ms)
  Jul 27 13:42:47.787: INFO: (0) /api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:462/proxy/: tls qux (200; 9.376873ms)
  Jul 27 13:42:47.787: INFO: (0) /api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:1080/proxy/rewriteme">... (200; 9.54923ms)
  Jul 27 13:42:47.787: INFO: (0) /api/v1/namespaces/proxy-8786/services/http:proxy-service-thpdt:portname1/proxy/: foo (200; 9.56918ms)
  Jul 27 13:42:47.787: INFO: (0) /api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:443/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:443/proxy/tlsrewritem... (200; 9.98593ms)
  Jul 27 13:42:47.788: INFO: (0) /api/v1/namespaces/proxy-8786/services/https:proxy-service-thpdt:tlsportname1/proxy/: tls baz (200; 10.241765ms)
  Jul 27 13:42:47.788: INFO: (0) /api/v1/namespaces/proxy-8786/services/proxy-service-thpdt:portname1/proxy/: foo (200; 10.298051ms)
  Jul 27 13:42:47.788: INFO: (0) /api/v1/namespaces/proxy-8786/services/http:proxy-service-thpdt:portname2/proxy/: bar (200; 10.543477ms)
  Jul 27 13:42:47.789: INFO: (0) /api/v1/namespaces/proxy-8786/services/https:proxy-service-thpdt:tlsportname2/proxy/: tls qux (200; 11.778575ms)
  Jul 27 13:42:47.789: INFO: (0) /api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:460/proxy/: tls baz (200; 11.926374ms)
  Jul 27 13:42:47.793: INFO: (1) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:160/proxy/: foo (200; 3.512952ms)
  Jul 27 13:42:47.793: INFO: (1) /api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:160/proxy/: foo (200; 3.675689ms)
  Jul 27 13:42:47.793: INFO: (1) /api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:1080/proxy/rewriteme">... (200; 3.936104ms)
  Jul 27 13:42:47.794: INFO: (1) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:162/proxy/: bar (200; 4.310035ms)
  Jul 27 13:42:47.795: INFO: (1) /api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:460/proxy/: tls baz (200; 4.885599ms)
  Jul 27 13:42:47.795: INFO: (1) /api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:443/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:443/proxy/tlsrewritem... (200; 5.268426ms)
  Jul 27 13:42:47.795: INFO: (1) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr/proxy/rewriteme">test</a> (200; 5.294312ms)
  Jul 27 13:42:47.795: INFO: (1) /api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:162/proxy/: bar (200; 5.742951ms)
  Jul 27 13:42:47.796: INFO: (1) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:1080/proxy/rewriteme">test<... (200; 5.837802ms)
  Jul 27 13:42:47.796: INFO: (1) /api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:462/proxy/: tls qux (200; 6.02654ms)
  Jul 27 13:42:47.796: INFO: (1) /api/v1/namespaces/proxy-8786/services/http:proxy-service-thpdt:portname2/proxy/: bar (200; 6.80085ms)
  Jul 27 13:42:47.797: INFO: (1) /api/v1/namespaces/proxy-8786/services/proxy-service-thpdt:portname1/proxy/: foo (200; 7.031325ms)
  Jul 27 13:42:47.797: INFO: (1) /api/v1/namespaces/proxy-8786/services/http:proxy-service-thpdt:portname1/proxy/: foo (200; 7.333945ms)
  Jul 27 13:42:47.797: INFO: (1) /api/v1/namespaces/proxy-8786/services/proxy-service-thpdt:portname2/proxy/: bar (200; 7.776219ms)
  Jul 27 13:42:47.798: INFO: (1) /api/v1/namespaces/proxy-8786/services/https:proxy-service-thpdt:tlsportname2/proxy/: tls qux (200; 8.023218ms)
  Jul 27 13:42:47.798: INFO: (1) /api/v1/namespaces/proxy-8786/services/https:proxy-service-thpdt:tlsportname1/proxy/: tls baz (200; 8.667397ms)
  Jul 27 13:42:47.802: INFO: (2) /api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:1080/proxy/rewriteme">... (200; 3.603549ms)
  Jul 27 13:42:47.802: INFO: (2) /api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:460/proxy/: tls baz (200; 4.054729ms)
  Jul 27 13:42:47.804: INFO: (2) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:162/proxy/: bar (200; 5.583496ms)
  Jul 27 13:42:47.804: INFO: (2) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:160/proxy/: foo (200; 5.806034ms)
  Jul 27 13:42:47.805: INFO: (2) /api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:160/proxy/: foo (200; 7.024164ms)
  Jul 27 13:42:47.809: INFO: (2) /api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:443/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:443/proxy/tlsrewritem... (200; 10.21336ms)
  Jul 27 13:42:47.809: INFO: (2) /api/v1/namespaces/proxy-8786/services/http:proxy-service-thpdt:portname1/proxy/: foo (200; 10.405577ms)
  Jul 27 13:42:47.809: INFO: (2) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:1080/proxy/rewriteme">test<... (200; 10.36447ms)
  Jul 27 13:42:47.809: INFO: (2) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr/proxy/rewriteme">test</a> (200; 10.488091ms)
  Jul 27 13:42:47.809: INFO: (2) /api/v1/namespaces/proxy-8786/services/http:proxy-service-thpdt:portname2/proxy/: bar (200; 10.432004ms)
  Jul 27 13:42:47.809: INFO: (2) /api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:462/proxy/: tls qux (200; 10.461036ms)
  Jul 27 13:42:47.809: INFO: (2) /api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:162/proxy/: bar (200; 10.43971ms)
  Jul 27 13:42:47.809: INFO: (2) /api/v1/namespaces/proxy-8786/services/proxy-service-thpdt:portname1/proxy/: foo (200; 10.795453ms)
  Jul 27 13:42:47.810: INFO: (2) /api/v1/namespaces/proxy-8786/services/https:proxy-service-thpdt:tlsportname1/proxy/: tls baz (200; 11.596213ms)
  Jul 27 13:42:47.811: INFO: (2) /api/v1/namespaces/proxy-8786/services/https:proxy-service-thpdt:tlsportname2/proxy/: tls qux (200; 12.231525ms)
  Jul 27 13:42:47.811: INFO: (2) /api/v1/namespaces/proxy-8786/services/proxy-service-thpdt:portname2/proxy/: bar (200; 12.579015ms)
  Jul 27 13:42:47.815: INFO: (3) /api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:460/proxy/: tls baz (200; 3.30599ms)
  Jul 27 13:42:47.815: INFO: (3) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:162/proxy/: bar (200; 3.397575ms)
  Jul 27 13:42:47.816: INFO: (3) /api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:162/proxy/: bar (200; 4.325267ms)
  Jul 27 13:42:47.817: INFO: (3) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:160/proxy/: foo (200; 5.15131ms)
  Jul 27 13:42:47.817: INFO: (3) /api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:462/proxy/: tls qux (200; 5.727101ms)
  Jul 27 13:42:47.818: INFO: (3) /api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:160/proxy/: foo (200; 5.939492ms)
  Jul 27 13:42:47.818: INFO: (3) /api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:1080/proxy/rewriteme">... (200; 6.105605ms)
  Jul 27 13:42:47.818: INFO: (3) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr/proxy/rewriteme">test</a> (200; 6.225212ms)
  Jul 27 13:42:47.818: INFO: (3) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:1080/proxy/rewriteme">test<... (200; 6.296775ms)
  Jul 27 13:42:47.818: INFO: (3) /api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:443/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:443/proxy/tlsrewritem... (200; 6.364833ms)
  Jul 27 13:42:47.818: INFO: (3) /api/v1/namespaces/proxy-8786/services/http:proxy-service-thpdt:portname2/proxy/: bar (200; 6.568757ms)
  Jul 27 13:42:47.819: INFO: (3) /api/v1/namespaces/proxy-8786/services/https:proxy-service-thpdt:tlsportname2/proxy/: tls qux (200; 6.808682ms)
  Jul 27 13:42:47.819: INFO: (3) /api/v1/namespaces/proxy-8786/services/proxy-service-thpdt:portname2/proxy/: bar (200; 7.640341ms)
  Jul 27 13:42:47.819: INFO: (3) /api/v1/namespaces/proxy-8786/services/https:proxy-service-thpdt:tlsportname1/proxy/: tls baz (200; 7.447546ms)
  Jul 27 13:42:47.820: INFO: (3) /api/v1/namespaces/proxy-8786/services/http:proxy-service-thpdt:portname1/proxy/: foo (200; 7.750406ms)
  Jul 27 13:42:47.820: INFO: (3) /api/v1/namespaces/proxy-8786/services/proxy-service-thpdt:portname1/proxy/: foo (200; 8.553232ms)
  Jul 27 13:42:47.824: INFO: (4) /api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:1080/proxy/rewriteme">... (200; 3.812358ms)
  Jul 27 13:42:47.824: INFO: (4) /api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:462/proxy/: tls qux (200; 3.880341ms)
  Jul 27 13:42:47.824: INFO: (4) /api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:460/proxy/: tls baz (200; 4.273017ms)
  Jul 27 13:42:47.825: INFO: (4) /api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:162/proxy/: bar (200; 4.446632ms)
  Jul 27 13:42:47.826: INFO: (4) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:160/proxy/: foo (200; 5.6775ms)
  Jul 27 13:42:47.826: INFO: (4) /api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:443/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:443/proxy/tlsrewritem... (200; 5.783169ms)
  Jul 27 13:42:47.826: INFO: (4) /api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:160/proxy/: foo (200; 6.179631ms)
  Jul 27 13:42:47.826: INFO: (4) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:162/proxy/: bar (200; 6.166572ms)
  Jul 27 13:42:47.826: INFO: (4) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr/proxy/rewriteme">test</a> (200; 6.156199ms)
  Jul 27 13:42:47.827: INFO: (4) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:1080/proxy/rewriteme">test<... (200; 6.178285ms)
  Jul 27 13:42:47.827: INFO: (4) /api/v1/namespaces/proxy-8786/services/http:proxy-service-thpdt:portname1/proxy/: foo (200; 6.926955ms)
  Jul 27 13:42:47.827: INFO: (4) /api/v1/namespaces/proxy-8786/services/https:proxy-service-thpdt:tlsportname1/proxy/: tls baz (200; 6.972344ms)
  Jul 27 13:42:47.828: INFO: (4) /api/v1/namespaces/proxy-8786/services/proxy-service-thpdt:portname2/proxy/: bar (200; 8.041241ms)
  Jul 27 13:42:47.828: INFO: (4) /api/v1/namespaces/proxy-8786/services/proxy-service-thpdt:portname1/proxy/: foo (200; 8.120627ms)
  Jul 27 13:42:47.828: INFO: (4) /api/v1/namespaces/proxy-8786/services/https:proxy-service-thpdt:tlsportname2/proxy/: tls qux (200; 8.044268ms)
  Jul 27 13:42:47.829: INFO: (4) /api/v1/namespaces/proxy-8786/services/http:proxy-service-thpdt:portname2/proxy/: bar (200; 8.89084ms)
  Jul 27 13:42:47.833: INFO: (5) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:162/proxy/: bar (200; 3.533175ms)
  Jul 27 13:42:47.833: INFO: (5) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:1080/proxy/rewriteme">test<... (200; 3.454672ms)
  Jul 27 13:42:47.834: INFO: (5) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:160/proxy/: foo (200; 4.654781ms)
  Jul 27 13:42:47.834: INFO: (5) /api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:162/proxy/: bar (200; 4.596084ms)
  Jul 27 13:42:47.834: INFO: (5) /api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:1080/proxy/rewriteme">... (200; 4.774792ms)
  Jul 27 13:42:47.834: INFO: (5) /api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:443/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:443/proxy/tlsrewritem... (200; 4.995068ms)
  Jul 27 13:42:47.835: INFO: (5) /api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:462/proxy/: tls qux (200; 5.527072ms)
  Jul 27 13:42:47.835: INFO: (5) /api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:460/proxy/: tls baz (200; 5.508962ms)
  Jul 27 13:42:47.835: INFO: (5) /api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:160/proxy/: foo (200; 5.958582ms)
  Jul 27 13:42:47.836: INFO: (5) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr/proxy/rewriteme">test</a> (200; 6.25536ms)
  Jul 27 13:42:47.836: INFO: (5) /api/v1/namespaces/proxy-8786/services/https:proxy-service-thpdt:tlsportname2/proxy/: tls qux (200; 6.333249ms)
  Jul 27 13:42:47.836: INFO: (5) /api/v1/namespaces/proxy-8786/services/http:proxy-service-thpdt:portname2/proxy/: bar (200; 6.614805ms)
  Jul 27 13:42:47.836: INFO: (5) /api/v1/namespaces/proxy-8786/services/proxy-service-thpdt:portname1/proxy/: foo (200; 6.85387ms)
  Jul 27 13:42:47.837: INFO: (5) /api/v1/namespaces/proxy-8786/services/http:proxy-service-thpdt:portname1/proxy/: foo (200; 7.265295ms)
  Jul 27 13:42:47.837: INFO: (5) /api/v1/namespaces/proxy-8786/services/proxy-service-thpdt:portname2/proxy/: bar (200; 7.51536ms)
  Jul 27 13:42:47.837: INFO: (5) /api/v1/namespaces/proxy-8786/services/https:proxy-service-thpdt:tlsportname1/proxy/: tls baz (200; 7.947311ms)
  Jul 27 13:42:47.840: INFO: (6) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:162/proxy/: bar (200; 2.978654ms)
  Jul 27 13:42:47.842: INFO: (6) /api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:1080/proxy/rewriteme">... (200; 4.599539ms)
  Jul 27 13:42:47.843: INFO: (6) /api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:162/proxy/: bar (200; 5.263181ms)
  Jul 27 13:42:47.843: INFO: (6) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:1080/proxy/rewriteme">test<... (200; 5.623758ms)
  Jul 27 13:42:47.843: INFO: (6) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:160/proxy/: foo (200; 5.702092ms)
  Jul 27 13:42:47.843: INFO: (6) /api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:160/proxy/: foo (200; 5.856346ms)
  Jul 27 13:42:47.844: INFO: (6) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr/proxy/rewriteme">test</a> (200; 6.128781ms)
  Jul 27 13:42:47.844: INFO: (6) /api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:443/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:443/proxy/tlsrewritem... (200; 6.079121ms)
  Jul 27 13:42:47.844: INFO: (6) /api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:462/proxy/: tls qux (200; 6.213302ms)
  Jul 27 13:42:47.844: INFO: (6) /api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:460/proxy/: tls baz (200; 6.308952ms)
  Jul 27 13:42:47.844: INFO: (6) /api/v1/namespaces/proxy-8786/services/https:proxy-service-thpdt:tlsportname2/proxy/: tls qux (200; 6.817354ms)
  Jul 27 13:42:47.845: INFO: (6) /api/v1/namespaces/proxy-8786/services/proxy-service-thpdt:portname2/proxy/: bar (200; 7.031162ms)
  Jul 27 13:42:47.845: INFO: (6) /api/v1/namespaces/proxy-8786/services/https:proxy-service-thpdt:tlsportname1/proxy/: tls baz (200; 7.328527ms)
  Jul 27 13:42:47.845: INFO: (6) /api/v1/namespaces/proxy-8786/services/proxy-service-thpdt:portname1/proxy/: foo (200; 7.296964ms)
  Jul 27 13:42:47.845: INFO: (6) /api/v1/namespaces/proxy-8786/services/http:proxy-service-thpdt:portname1/proxy/: foo (200; 7.483976ms)
  Jul 27 13:42:47.845: INFO: (6) /api/v1/namespaces/proxy-8786/services/http:proxy-service-thpdt:portname2/proxy/: bar (200; 7.644677ms)
  Jul 27 13:42:47.849: INFO: (7) /api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:462/proxy/: tls qux (200; 3.116233ms)
  Jul 27 13:42:47.849: INFO: (7) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr/proxy/rewriteme">test</a> (200; 3.559937ms)
  Jul 27 13:42:47.849: INFO: (7) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:162/proxy/: bar (200; 3.670995ms)
  Jul 27 13:42:47.850: INFO: (7) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:1080/proxy/rewriteme">test<... (200; 4.617362ms)
  Jul 27 13:42:47.850: INFO: (7) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:160/proxy/: foo (200; 4.809517ms)
  Jul 27 13:42:47.851: INFO: (7) /api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:162/proxy/: bar (200; 5.206109ms)
  Jul 27 13:42:47.851: INFO: (7) /api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:460/proxy/: tls baz (200; 5.470351ms)
  Jul 27 13:42:47.851: INFO: (7) /api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:443/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:443/proxy/tlsrewritem... (200; 5.604159ms)
  Jul 27 13:42:47.851: INFO: (7) /api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:160/proxy/: foo (200; 5.830096ms)
  Jul 27 13:42:47.851: INFO: (7) /api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:1080/proxy/rewriteme">... (200; 5.873118ms)
  Jul 27 13:42:47.852: INFO: (7) /api/v1/namespaces/proxy-8786/services/http:proxy-service-thpdt:portname2/proxy/: bar (200; 6.141316ms)
  Jul 27 13:42:47.852: INFO: (7) /api/v1/namespaces/proxy-8786/services/proxy-service-thpdt:portname1/proxy/: foo (200; 6.140787ms)
  Jul 27 13:42:47.852: INFO: (7) /api/v1/namespaces/proxy-8786/services/https:proxy-service-thpdt:tlsportname1/proxy/: tls baz (200; 6.756851ms)
  Jul 27 13:42:47.853: INFO: (7) /api/v1/namespaces/proxy-8786/services/http:proxy-service-thpdt:portname1/proxy/: foo (200; 7.072718ms)
  Jul 27 13:42:47.853: INFO: (7) /api/v1/namespaces/proxy-8786/services/https:proxy-service-thpdt:tlsportname2/proxy/: tls qux (200; 7.298204ms)
  Jul 27 13:42:47.854: INFO: (7) /api/v1/namespaces/proxy-8786/services/proxy-service-thpdt:portname2/proxy/: bar (200; 7.976577ms)
  Jul 27 13:42:47.857: INFO: (8) /api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:460/proxy/: tls baz (200; 2.983747ms)
  Jul 27 13:42:47.858: INFO: (8) /api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:160/proxy/: foo (200; 4.034289ms)
  Jul 27 13:42:47.860: INFO: (8) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:1080/proxy/rewriteme">test<... (200; 5.931206ms)
  Jul 27 13:42:47.860: INFO: (8) /api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:1080/proxy/rewriteme">... (200; 5.899489ms)
  Jul 27 13:42:47.860: INFO: (8) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:160/proxy/: foo (200; 5.92246ms)
  Jul 27 13:42:47.860: INFO: (8) /api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:462/proxy/: tls qux (200; 5.810415ms)
  Jul 27 13:42:47.860: INFO: (8) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr/proxy/rewriteme">test</a> (200; 5.767329ms)
  Jul 27 13:42:47.860: INFO: (8) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:162/proxy/: bar (200; 5.857027ms)
  Jul 27 13:42:47.860: INFO: (8) /api/v1/namespaces/proxy-8786/services/http:proxy-service-thpdt:portname1/proxy/: foo (200; 6.26909ms)
  Jul 27 13:42:47.860: INFO: (8) /api/v1/namespaces/proxy-8786/services/http:proxy-service-thpdt:portname2/proxy/: bar (200; 6.576954ms)
  Jul 27 13:42:47.861: INFO: (8) /api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:443/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:443/proxy/tlsrewritem... (200; 6.660154ms)
  Jul 27 13:42:47.861: INFO: (8) /api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:162/proxy/: bar (200; 6.711695ms)
  Jul 27 13:42:47.861: INFO: (8) /api/v1/namespaces/proxy-8786/services/proxy-service-thpdt:portname1/proxy/: foo (200; 7.157918ms)
  Jul 27 13:42:47.861: INFO: (8) /api/v1/namespaces/proxy-8786/services/https:proxy-service-thpdt:tlsportname2/proxy/: tls qux (200; 7.293721ms)
  Jul 27 13:42:47.861: INFO: (8) /api/v1/namespaces/proxy-8786/services/https:proxy-service-thpdt:tlsportname1/proxy/: tls baz (200; 7.418431ms)
  Jul 27 13:42:47.862: INFO: (8) /api/v1/namespaces/proxy-8786/services/proxy-service-thpdt:portname2/proxy/: bar (200; 7.946323ms)
  Jul 27 13:42:47.865: INFO: (9) /api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:443/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:443/proxy/tlsrewritem... (200; 2.970673ms)
  Jul 27 13:42:47.866: INFO: (9) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr/proxy/rewriteme">test</a> (200; 4.382057ms)
  Jul 27 13:42:47.867: INFO: (9) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:162/proxy/: bar (200; 4.548759ms)
  Jul 27 13:42:47.867: INFO: (9) /api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:162/proxy/: bar (200; 4.741159ms)
  Jul 27 13:42:47.867: INFO: (9) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:1080/proxy/rewriteme">test<... (200; 5.461512ms)
  Jul 27 13:42:47.867: INFO: (9) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:160/proxy/: foo (200; 5.395606ms)
  Jul 27 13:42:47.868: INFO: (9) /api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:460/proxy/: tls baz (200; 5.63782ms)
  Jul 27 13:42:47.868: INFO: (9) /api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:462/proxy/: tls qux (200; 5.987427ms)
  Jul 27 13:42:47.868: INFO: (9) /api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:1080/proxy/rewriteme">... (200; 6.272159ms)
  Jul 27 13:42:47.869: INFO: (9) /api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:160/proxy/: foo (200; 6.576785ms)
  Jul 27 13:42:47.869: INFO: (9) /api/v1/namespaces/proxy-8786/services/proxy-service-thpdt:portname2/proxy/: bar (200; 7.186578ms)
  Jul 27 13:42:47.869: INFO: (9) /api/v1/namespaces/proxy-8786/services/https:proxy-service-thpdt:tlsportname2/proxy/: tls qux (200; 7.552744ms)
  Jul 27 13:42:47.870: INFO: (9) /api/v1/namespaces/proxy-8786/services/http:proxy-service-thpdt:portname1/proxy/: foo (200; 7.750421ms)
  Jul 27 13:42:47.870: INFO: (9) /api/v1/namespaces/proxy-8786/services/https:proxy-service-thpdt:tlsportname1/proxy/: tls baz (200; 7.90814ms)
  Jul 27 13:42:47.870: INFO: (9) /api/v1/namespaces/proxy-8786/services/http:proxy-service-thpdt:portname2/proxy/: bar (200; 7.955763ms)
  Jul 27 13:42:47.870: INFO: (9) /api/v1/namespaces/proxy-8786/services/proxy-service-thpdt:portname1/proxy/: foo (200; 8.148078ms)
  Jul 27 13:42:47.874: INFO: (10) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:160/proxy/: foo (200; 4.107161ms)
  Jul 27 13:42:47.875: INFO: (10) /api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:1080/proxy/rewriteme">... (200; 4.960871ms)
  Jul 27 13:42:47.876: INFO: (10) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr/proxy/rewriteme">test</a> (200; 5.447438ms)
  Jul 27 13:42:47.876: INFO: (10) /api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:443/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:443/proxy/tlsrewritem... (200; 5.435362ms)
  Jul 27 13:42:47.876: INFO: (10) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:1080/proxy/rewriteme">test<... (200; 5.73434ms)
  Jul 27 13:42:47.876: INFO: (10) /api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:160/proxy/: foo (200; 5.688851ms)
  Jul 27 13:42:47.876: INFO: (10) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:162/proxy/: bar (200; 5.675077ms)
  Jul 27 13:42:47.876: INFO: (10) /api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:162/proxy/: bar (200; 5.794923ms)
  Jul 27 13:42:47.877: INFO: (10) /api/v1/namespaces/proxy-8786/services/https:proxy-service-thpdt:tlsportname1/proxy/: tls baz (200; 6.481465ms)
  Jul 27 13:42:47.877: INFO: (10) /api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:462/proxy/: tls qux (200; 6.330302ms)
  Jul 27 13:42:47.877: INFO: (10) /api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:460/proxy/: tls baz (200; 6.416832ms)
  Jul 27 13:42:47.877: INFO: (10) /api/v1/namespaces/proxy-8786/services/https:proxy-service-thpdt:tlsportname2/proxy/: tls qux (200; 6.8516ms)
  Jul 27 13:42:47.877: INFO: (10) /api/v1/namespaces/proxy-8786/services/proxy-service-thpdt:portname2/proxy/: bar (200; 7.323493ms)
  Jul 27 13:42:47.878: INFO: (10) /api/v1/namespaces/proxy-8786/services/http:proxy-service-thpdt:portname2/proxy/: bar (200; 7.278219ms)
  Jul 27 13:42:47.878: INFO: (10) /api/v1/namespaces/proxy-8786/services/proxy-service-thpdt:portname1/proxy/: foo (200; 7.42341ms)
  Jul 27 13:42:47.878: INFO: (10) /api/v1/namespaces/proxy-8786/services/http:proxy-service-thpdt:portname1/proxy/: foo (200; 7.757324ms)
  E0727 13:42:47.881231      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:42:47.881: INFO: (11) /api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:1080/proxy/rewriteme">... (200; 3.086506ms)
  Jul 27 13:42:47.882: INFO: (11) /api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:462/proxy/: tls qux (200; 3.282908ms)
  Jul 27 13:42:47.884: INFO: (11) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:1080/proxy/rewriteme">test<... (200; 5.126398ms)
  Jul 27 13:42:47.884: INFO: (11) /api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:160/proxy/: foo (200; 5.278798ms)
  Jul 27 13:42:47.884: INFO: (11) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr/proxy/rewriteme">test</a> (200; 5.364736ms)
  Jul 27 13:42:47.884: INFO: (11) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:162/proxy/: bar (200; 5.430702ms)
  Jul 27 13:42:47.884: INFO: (11) /api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:460/proxy/: tls baz (200; 5.762205ms)
  Jul 27 13:42:47.884: INFO: (11) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:160/proxy/: foo (200; 6.171558ms)
  Jul 27 13:42:47.885: INFO: (11) /api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:162/proxy/: bar (200; 6.132389ms)
  Jul 27 13:42:47.885: INFO: (11) /api/v1/namespaces/proxy-8786/services/proxy-service-thpdt:portname2/proxy/: bar (200; 6.356836ms)
  Jul 27 13:42:47.885: INFO: (11) /api/v1/namespaces/proxy-8786/services/proxy-service-thpdt:portname1/proxy/: foo (200; 6.301644ms)
  Jul 27 13:42:47.885: INFO: (11) /api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:443/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:443/proxy/tlsrewritem... (200; 6.6864ms)
  Jul 27 13:42:47.885: INFO: (11) /api/v1/namespaces/proxy-8786/services/http:proxy-service-thpdt:portname1/proxy/: foo (200; 6.999982ms)
  Jul 27 13:42:47.886: INFO: (11) /api/v1/namespaces/proxy-8786/services/https:proxy-service-thpdt:tlsportname2/proxy/: tls qux (200; 7.257601ms)
  Jul 27 13:42:47.886: INFO: (11) /api/v1/namespaces/proxy-8786/services/https:proxy-service-thpdt:tlsportname1/proxy/: tls baz (200; 7.470008ms)
  Jul 27 13:42:47.886: INFO: (11) /api/v1/namespaces/proxy-8786/services/http:proxy-service-thpdt:portname2/proxy/: bar (200; 7.960715ms)
  Jul 27 13:42:47.889: INFO: (12) /api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:460/proxy/: tls baz (200; 3.117567ms)
  Jul 27 13:42:47.891: INFO: (12) /api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:1080/proxy/rewriteme">... (200; 4.821368ms)
  Jul 27 13:42:47.892: INFO: (12) /api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:160/proxy/: foo (200; 5.130991ms)
  Jul 27 13:42:47.892: INFO: (12) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:160/proxy/: foo (200; 5.538745ms)
  Jul 27 13:42:47.892: INFO: (12) /api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:443/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:443/proxy/tlsrewritem... (200; 5.714475ms)
  Jul 27 13:42:47.893: INFO: (12) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:1080/proxy/rewriteme">test<... (200; 6.168098ms)
  Jul 27 13:42:47.893: INFO: (12) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr/proxy/rewriteme">test</a> (200; 6.048601ms)
  Jul 27 13:42:47.893: INFO: (12) /api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:162/proxy/: bar (200; 6.025344ms)
  Jul 27 13:42:47.893: INFO: (12) /api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:462/proxy/: tls qux (200; 6.442529ms)
  Jul 27 13:42:47.894: INFO: (12) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:162/proxy/: bar (200; 7.07246ms)
  Jul 27 13:42:47.894: INFO: (12) /api/v1/namespaces/proxy-8786/services/http:proxy-service-thpdt:portname2/proxy/: bar (200; 7.33124ms)
  Jul 27 13:42:47.894: INFO: (12) /api/v1/namespaces/proxy-8786/services/https:proxy-service-thpdt:tlsportname2/proxy/: tls qux (200; 7.698531ms)
  Jul 27 13:42:47.894: INFO: (12) /api/v1/namespaces/proxy-8786/services/http:proxy-service-thpdt:portname1/proxy/: foo (200; 7.79806ms)
  Jul 27 13:42:47.894: INFO: (12) /api/v1/namespaces/proxy-8786/services/https:proxy-service-thpdt:tlsportname1/proxy/: tls baz (200; 7.749889ms)
  Jul 27 13:42:47.895: INFO: (12) /api/v1/namespaces/proxy-8786/services/proxy-service-thpdt:portname2/proxy/: bar (200; 8.086242ms)
  Jul 27 13:42:47.895: INFO: (12) /api/v1/namespaces/proxy-8786/services/proxy-service-thpdt:portname1/proxy/: foo (200; 8.188771ms)
  Jul 27 13:42:47.898: INFO: (13) /api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:462/proxy/: tls qux (200; 3.16646ms)
  Jul 27 13:42:47.898: INFO: (13) /api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:162/proxy/: bar (200; 3.452347ms)
  Jul 27 13:42:47.898: INFO: (13) /api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:443/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:443/proxy/tlsrewritem... (200; 3.421678ms)
  Jul 27 13:42:47.900: INFO: (13) /api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:1080/proxy/rewriteme">... (200; 4.852355ms)
  Jul 27 13:42:47.900: INFO: (13) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:162/proxy/: bar (200; 4.790065ms)
  Jul 27 13:42:47.900: INFO: (13) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:160/proxy/: foo (200; 5.33083ms)
  Jul 27 13:42:47.900: INFO: (13) /api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:160/proxy/: foo (200; 5.313098ms)
  Jul 27 13:42:47.901: INFO: (13) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr/proxy/rewriteme">test</a> (200; 5.496266ms)
  Jul 27 13:42:47.901: INFO: (13) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:1080/proxy/rewriteme">test<... (200; 5.674369ms)
  Jul 27 13:42:47.901: INFO: (13) /api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:460/proxy/: tls baz (200; 5.939371ms)
  Jul 27 13:42:47.901: INFO: (13) /api/v1/namespaces/proxy-8786/services/http:proxy-service-thpdt:portname2/proxy/: bar (200; 6.232679ms)
  Jul 27 13:42:47.902: INFO: (13) /api/v1/namespaces/proxy-8786/services/https:proxy-service-thpdt:tlsportname1/proxy/: tls baz (200; 6.705094ms)
  Jul 27 13:42:47.902: INFO: (13) /api/v1/namespaces/proxy-8786/services/proxy-service-thpdt:portname2/proxy/: bar (200; 6.893503ms)
  Jul 27 13:42:47.902: INFO: (13) /api/v1/namespaces/proxy-8786/services/https:proxy-service-thpdt:tlsportname2/proxy/: tls qux (200; 6.981646ms)
  Jul 27 13:42:47.903: INFO: (13) /api/v1/namespaces/proxy-8786/services/http:proxy-service-thpdt:portname1/proxy/: foo (200; 7.747254ms)
  Jul 27 13:42:47.903: INFO: (13) /api/v1/namespaces/proxy-8786/services/proxy-service-thpdt:portname1/proxy/: foo (200; 8.00042ms)
  Jul 27 13:42:47.906: INFO: (14) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:162/proxy/: bar (200; 3.081821ms)
  Jul 27 13:42:47.907: INFO: (14) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr/proxy/rewriteme">test</a> (200; 4.330553ms)
  Jul 27 13:42:47.907: INFO: (14) /api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:462/proxy/: tls qux (200; 4.400554ms)
  Jul 27 13:42:47.907: INFO: (14) /api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:443/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:443/proxy/tlsrewritem... (200; 4.218788ms)
  Jul 27 13:42:47.908: INFO: (14) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:160/proxy/: foo (200; 5.146666ms)
  Jul 27 13:42:47.908: INFO: (14) /api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:460/proxy/: tls baz (200; 5.13676ms)
  Jul 27 13:42:47.908: INFO: (14) /api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:160/proxy/: foo (200; 5.320723ms)
  Jul 27 13:42:47.909: INFO: (14) /api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:162/proxy/: bar (200; 5.685531ms)
  Jul 27 13:42:47.910: INFO: (14) /api/v1/namespaces/proxy-8786/services/http:proxy-service-thpdt:portname1/proxy/: foo (200; 6.578567ms)
  Jul 27 13:42:47.910: INFO: (14) /api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:1080/proxy/rewriteme">... (200; 6.610992ms)
  Jul 27 13:42:47.910: INFO: (14) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:1080/proxy/rewriteme">test<... (200; 6.631315ms)
  Jul 27 13:42:47.910: INFO: (14) /api/v1/namespaces/proxy-8786/services/https:proxy-service-thpdt:tlsportname2/proxy/: tls qux (200; 7.133702ms)
  Jul 27 13:42:47.910: INFO: (14) /api/v1/namespaces/proxy-8786/services/https:proxy-service-thpdt:tlsportname1/proxy/: tls baz (200; 7.388877ms)
  Jul 27 13:42:47.911: INFO: (14) /api/v1/namespaces/proxy-8786/services/proxy-service-thpdt:portname2/proxy/: bar (200; 7.500563ms)
  Jul 27 13:42:47.911: INFO: (14) /api/v1/namespaces/proxy-8786/services/http:proxy-service-thpdt:portname2/proxy/: bar (200; 8.465254ms)
  Jul 27 13:42:47.912: INFO: (14) /api/v1/namespaces/proxy-8786/services/proxy-service-thpdt:portname1/proxy/: foo (200; 8.427866ms)
  Jul 27 13:42:47.916: INFO: (15) /api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:162/proxy/: bar (200; 4.363043ms)
  Jul 27 13:42:47.917: INFO: (15) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr/proxy/rewriteme">test</a> (200; 5.116245ms)
  Jul 27 13:42:47.918: INFO: (15) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:162/proxy/: bar (200; 6.034917ms)
  Jul 27 13:42:47.918: INFO: (15) /api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:1080/proxy/rewriteme">... (200; 6.318912ms)
  Jul 27 13:42:47.918: INFO: (15) /api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:462/proxy/: tls qux (200; 6.465991ms)
  Jul 27 13:42:47.918: INFO: (15) /api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:160/proxy/: foo (200; 6.359864ms)
  Jul 27 13:42:47.918: INFO: (15) /api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:460/proxy/: tls baz (200; 6.325287ms)
  Jul 27 13:42:47.918: INFO: (15) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:160/proxy/: foo (200; 6.519505ms)
  Jul 27 13:42:47.919: INFO: (15) /api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:443/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:443/proxy/tlsrewritem... (200; 6.585087ms)
  Jul 27 13:42:47.919: INFO: (15) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:1080/proxy/rewriteme">test<... (200; 6.851875ms)
  Jul 27 13:42:47.919: INFO: (15) /api/v1/namespaces/proxy-8786/services/proxy-service-thpdt:portname1/proxy/: foo (200; 7.108945ms)
  Jul 27 13:42:47.919: INFO: (15) /api/v1/namespaces/proxy-8786/services/https:proxy-service-thpdt:tlsportname1/proxy/: tls baz (200; 7.180221ms)
  Jul 27 13:42:47.919: INFO: (15) /api/v1/namespaces/proxy-8786/services/http:proxy-service-thpdt:portname2/proxy/: bar (200; 7.202394ms)
  Jul 27 13:42:47.919: INFO: (15) /api/v1/namespaces/proxy-8786/services/http:proxy-service-thpdt:portname1/proxy/: foo (200; 7.629277ms)
  Jul 27 13:42:47.920: INFO: (15) /api/v1/namespaces/proxy-8786/services/https:proxy-service-thpdt:tlsportname2/proxy/: tls qux (200; 8.005855ms)
  Jul 27 13:42:47.920: INFO: (15) /api/v1/namespaces/proxy-8786/services/proxy-service-thpdt:portname2/proxy/: bar (200; 7.905138ms)
  Jul 27 13:42:47.923: INFO: (16) /api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:160/proxy/: foo (200; 3.475211ms)
  Jul 27 13:42:47.924: INFO: (16) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr/proxy/rewriteme">test</a> (200; 3.552678ms)
  Jul 27 13:42:47.924: INFO: (16) /api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:462/proxy/: tls qux (200; 3.931346ms)
  Jul 27 13:42:47.925: INFO: (16) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:160/proxy/: foo (200; 4.84147ms)
  Jul 27 13:42:47.925: INFO: (16) /api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:162/proxy/: bar (200; 5.135902ms)
  Jul 27 13:42:47.926: INFO: (16) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:162/proxy/: bar (200; 5.640528ms)
  Jul 27 13:42:47.926: INFO: (16) /api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:1080/proxy/rewriteme">... (200; 5.539031ms)
  Jul 27 13:42:47.926: INFO: (16) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:1080/proxy/rewriteme">test<... (200; 5.6852ms)
  Jul 27 13:42:47.926: INFO: (16) /api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:460/proxy/: tls baz (200; 5.918069ms)
  Jul 27 13:42:47.926: INFO: (16) /api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:443/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:443/proxy/tlsrewritem... (200; 6.18386ms)
  Jul 27 13:42:47.927: INFO: (16) /api/v1/namespaces/proxy-8786/services/http:proxy-service-thpdt:portname2/proxy/: bar (200; 7.207124ms)
  Jul 27 13:42:47.927: INFO: (16) /api/v1/namespaces/proxy-8786/services/https:proxy-service-thpdt:tlsportname2/proxy/: tls qux (200; 6.986652ms)
  Jul 27 13:42:47.927: INFO: (16) /api/v1/namespaces/proxy-8786/services/proxy-service-thpdt:portname1/proxy/: foo (200; 7.168458ms)
  Jul 27 13:42:47.928: INFO: (16) /api/v1/namespaces/proxy-8786/services/http:proxy-service-thpdt:portname1/proxy/: foo (200; 7.601009ms)
  Jul 27 13:42:47.928: INFO: (16) /api/v1/namespaces/proxy-8786/services/proxy-service-thpdt:portname2/proxy/: bar (200; 8.067285ms)
  Jul 27 13:42:47.928: INFO: (16) /api/v1/namespaces/proxy-8786/services/https:proxy-service-thpdt:tlsportname1/proxy/: tls baz (200; 8.252152ms)
  Jul 27 13:42:47.932: INFO: (17) /api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:460/proxy/: tls baz (200; 3.119022ms)
  Jul 27 13:42:47.932: INFO: (17) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:162/proxy/: bar (200; 3.477174ms)
  Jul 27 13:42:47.933: INFO: (17) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr/proxy/rewriteme">test</a> (200; 3.935704ms)
  Jul 27 13:42:47.934: INFO: (17) /api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:160/proxy/: foo (200; 4.823559ms)
  Jul 27 13:42:47.934: INFO: (17) /api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:162/proxy/: bar (200; 5.124527ms)
  Jul 27 13:42:47.934: INFO: (17) /api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:1080/proxy/rewriteme">... (200; 5.644934ms)
  Jul 27 13:42:47.935: INFO: (17) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:1080/proxy/rewriteme">test<... (200; 5.958795ms)
  Jul 27 13:42:47.935: INFO: (17) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:160/proxy/: foo (200; 6.295199ms)
  Jul 27 13:42:47.935: INFO: (17) /api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:443/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:443/proxy/tlsrewritem... (200; 6.655678ms)
  Jul 27 13:42:47.936: INFO: (17) /api/v1/namespaces/proxy-8786/services/https:proxy-service-thpdt:tlsportname1/proxy/: tls baz (200; 7.051627ms)
  Jul 27 13:42:47.936: INFO: (17) /api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:462/proxy/: tls qux (200; 7.107116ms)
  Jul 27 13:42:47.936: INFO: (17) /api/v1/namespaces/proxy-8786/services/http:proxy-service-thpdt:portname2/proxy/: bar (200; 7.372493ms)
  Jul 27 13:42:47.936: INFO: (17) /api/v1/namespaces/proxy-8786/services/https:proxy-service-thpdt:tlsportname2/proxy/: tls qux (200; 7.641045ms)
  Jul 27 13:42:47.937: INFO: (17) /api/v1/namespaces/proxy-8786/services/http:proxy-service-thpdt:portname1/proxy/: foo (200; 7.711229ms)
  Jul 27 13:42:47.937: INFO: (17) /api/v1/namespaces/proxy-8786/services/proxy-service-thpdt:portname1/proxy/: foo (200; 8.018299ms)
  Jul 27 13:42:47.937: INFO: (17) /api/v1/namespaces/proxy-8786/services/proxy-service-thpdt:portname2/proxy/: bar (200; 8.162403ms)
  Jul 27 13:42:47.940: INFO: (18) /api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:162/proxy/: bar (200; 2.866021ms)
  Jul 27 13:42:47.941: INFO: (18) /api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:462/proxy/: tls qux (200; 3.572715ms)
  Jul 27 13:42:47.941: INFO: (18) /api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:443/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:443/proxy/tlsrewritem... (200; 3.549594ms)
  Jul 27 13:42:47.942: INFO: (18) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:160/proxy/: foo (200; 4.599134ms)
  Jul 27 13:42:47.942: INFO: (18) /api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:1080/proxy/rewriteme">... (200; 4.876578ms)
  Jul 27 13:42:47.943: INFO: (18) /api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:160/proxy/: foo (200; 5.374433ms)
  Jul 27 13:42:47.943: INFO: (18) /api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:460/proxy/: tls baz (200; 5.617529ms)
  Jul 27 13:42:47.943: INFO: (18) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:162/proxy/: bar (200; 5.610751ms)
  Jul 27 13:42:47.943: INFO: (18) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr/proxy/rewriteme">test</a> (200; 5.973662ms)
  Jul 27 13:42:47.943: INFO: (18) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:1080/proxy/rewriteme">test<... (200; 6.073965ms)
  Jul 27 13:42:47.944: INFO: (18) /api/v1/namespaces/proxy-8786/services/proxy-service-thpdt:portname2/proxy/: bar (200; 7.04409ms)
  Jul 27 13:42:47.945: INFO: (18) /api/v1/namespaces/proxy-8786/services/http:proxy-service-thpdt:portname2/proxy/: bar (200; 7.300006ms)
  Jul 27 13:42:47.945: INFO: (18) /api/v1/namespaces/proxy-8786/services/https:proxy-service-thpdt:tlsportname1/proxy/: tls baz (200; 7.276973ms)
  Jul 27 13:42:47.945: INFO: (18) /api/v1/namespaces/proxy-8786/services/proxy-service-thpdt:portname1/proxy/: foo (200; 7.675437ms)
  Jul 27 13:42:47.945: INFO: (18) /api/v1/namespaces/proxy-8786/services/http:proxy-service-thpdt:portname1/proxy/: foo (200; 8.054472ms)
  Jul 27 13:42:47.946: INFO: (18) /api/v1/namespaces/proxy-8786/services/https:proxy-service-thpdt:tlsportname2/proxy/: tls qux (200; 8.244349ms)
  Jul 27 13:42:47.949: INFO: (19) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:1080/proxy/rewriteme">test<... (200; 3.662514ms)
  Jul 27 13:42:47.950: INFO: (19) /api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:162/proxy/: bar (200; 3.89846ms)
  Jul 27 13:42:47.950: INFO: (19) /api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:460/proxy/: tls baz (200; 4.270566ms)
  Jul 27 13:42:47.951: INFO: (19) /api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:160/proxy/: foo (200; 4.83299ms)
  Jul 27 13:42:47.951: INFO: (19) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:160/proxy/: foo (200; 5.068325ms)
  Jul 27 13:42:47.951: INFO: (19) /api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/http:proxy-service-thpdt-2pwfr:1080/proxy/rewriteme">... (200; 5.483968ms)
  Jul 27 13:42:47.951: INFO: (19) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr/proxy/rewriteme">test</a> (200; 5.430334ms)
  Jul 27 13:42:47.952: INFO: (19) /api/v1/namespaces/proxy-8786/pods/proxy-service-thpdt-2pwfr:162/proxy/: bar (200; 5.689072ms)
  Jul 27 13:42:47.952: INFO: (19) /api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:443/proxy/: <a href="/api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:443/proxy/tlsrewritem... (200; 5.771002ms)
  Jul 27 13:42:47.952: INFO: (19) /api/v1/namespaces/proxy-8786/pods/https:proxy-service-thpdt-2pwfr:462/proxy/: tls qux (200; 6.060652ms)
  Jul 27 13:42:47.952: INFO: (19) /api/v1/namespaces/proxy-8786/services/https:proxy-service-thpdt:tlsportname1/proxy/: tls baz (200; 6.688981ms)
  Jul 27 13:42:47.953: INFO: (19) /api/v1/namespaces/proxy-8786/services/http:proxy-service-thpdt:portname2/proxy/: bar (200; 7.087385ms)
  Jul 27 13:42:47.953: INFO: (19) /api/v1/namespaces/proxy-8786/services/http:proxy-service-thpdt:portname1/proxy/: foo (200; 7.336088ms)
  Jul 27 13:42:47.953: INFO: (19) /api/v1/namespaces/proxy-8786/services/https:proxy-service-thpdt:tlsportname2/proxy/: tls qux (200; 7.396435ms)
  Jul 27 13:42:47.954: INFO: (19) /api/v1/namespaces/proxy-8786/services/proxy-service-thpdt:portname2/proxy/: bar (200; 7.828398ms)
  Jul 27 13:42:47.954: INFO: (19) /api/v1/namespaces/proxy-8786/services/proxy-service-thpdt:portname1/proxy/: foo (200; 8.787021ms)
  STEP: deleting ReplicationController proxy-service-thpdt in namespace proxy-8786, will wait for the garbage collector to delete the pods @ 07/27/24 13:42:47.955
  Jul 27 13:42:48.016: INFO: Deleting ReplicationController proxy-service-thpdt took: 8.018248ms
  Jul 27 13:42:48.117: INFO: Terminating ReplicationController proxy-service-thpdt pods took: 100.466499ms
  E0727 13:42:48.881583      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:42:49.881988      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:42:50.617: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-8786" for this suite. @ 07/27/24 13:42:50.62
• [4.942 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 07/27/24 13:42:50.629
  Jul 27 13:42:50.629: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename replicaset @ 07/27/24 13:42:50.63
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:42:50.649
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:42:50.651
  Jul 27 13:42:50.653: INFO: Creating ReplicaSet my-hostname-basic-12d5b36a-c052-45b7-80bb-8571937f377a
  Jul 27 13:42:50.662: INFO: Pod name my-hostname-basic-12d5b36a-c052-45b7-80bb-8571937f377a: Found 0 pods out of 1
  E0727 13:42:50.883022      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:42:51.883945      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:42:52.884067      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:42:53.884167      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:42:54.884261      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:42:55.666: INFO: Pod name my-hostname-basic-12d5b36a-c052-45b7-80bb-8571937f377a: Found 1 pods out of 1
  Jul 27 13:42:55.666: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-12d5b36a-c052-45b7-80bb-8571937f377a" is running
  Jul 27 13:42:55.670: INFO: Pod "my-hostname-basic-12d5b36a-c052-45b7-80bb-8571937f377a-mjgfh" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-27 13:42:51 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-27 13:42:50 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-27 13:42:51 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-27 13:42:51 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-27 13:42:50 +0000 UTC Reason: Message:}])
  Jul 27 13:42:55.670: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 07/27/24 13:42:55.67
  Jul 27 13:42:55.680: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9000" for this suite. @ 07/27/24 13:42:55.683
• [5.061 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 07/27/24 13:42:55.69
  Jul 27 13:42:55.690: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename daemonsets @ 07/27/24 13:42:55.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:42:55.708
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:42:55.709
  Jul 27 13:42:55.732: INFO: Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/27/24 13:42:55.739
  Jul 27 13:42:55.742: INFO: DaemonSet pods can't tolerate node ip-172-31-6-18 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 27 13:42:55.742: INFO: DaemonSet pods can't tolerate node ip-172-31-93-193 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 27 13:42:55.746: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul 27 13:42:55.746: INFO: Node ip-172-31-10-249 is running 0 daemon pod, expected 1
  E0727 13:42:55.885230      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:42:56.744: INFO: DaemonSet pods can't tolerate node ip-172-31-6-18 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 27 13:42:56.744: INFO: DaemonSet pods can't tolerate node ip-172-31-93-193 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 27 13:42:56.747: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jul 27 13:42:56.747: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 07/27/24 13:42:56.759
  STEP: Check that daemon pods images are updated. @ 07/27/24 13:42:56.769
  Jul 27 13:42:56.773: INFO: Wrong image for pod: daemon-set-cm7sl. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jul 27 13:42:56.773: INFO: Wrong image for pod: daemon-set-jm8p6. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jul 27 13:42:56.773: INFO: Wrong image for pod: daemon-set-wjvbv. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jul 27 13:42:56.779: INFO: DaemonSet pods can't tolerate node ip-172-31-6-18 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 27 13:42:56.779: INFO: DaemonSet pods can't tolerate node ip-172-31-93-193 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0727 13:42:56.885377      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:42:57.773: INFO: Wrong image for pod: daemon-set-jm8p6. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jul 27 13:42:57.773: INFO: Pod daemon-set-rq494 is not available
  Jul 27 13:42:57.773: INFO: Wrong image for pod: daemon-set-wjvbv. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jul 27 13:42:57.777: INFO: DaemonSet pods can't tolerate node ip-172-31-6-18 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 27 13:42:57.777: INFO: DaemonSet pods can't tolerate node ip-172-31-93-193 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0727 13:42:57.886244      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:42:58.773: INFO: Pod daemon-set-8x5gz is not available
  Jul 27 13:42:58.773: INFO: Wrong image for pod: daemon-set-jm8p6. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jul 27 13:42:58.776: INFO: DaemonSet pods can't tolerate node ip-172-31-6-18 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 27 13:42:58.776: INFO: DaemonSet pods can't tolerate node ip-172-31-93-193 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0727 13:42:58.886861      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:42:59.777: INFO: DaemonSet pods can't tolerate node ip-172-31-6-18 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 27 13:42:59.777: INFO: DaemonSet pods can't tolerate node ip-172-31-93-193 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0727 13:42:59.887595      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:43:00.776: INFO: DaemonSet pods can't tolerate node ip-172-31-6-18 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 27 13:43:00.776: INFO: DaemonSet pods can't tolerate node ip-172-31-93-193 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Check that daemon pods are still running on every node of the cluster. @ 07/27/24 13:43:00.776
  Jul 27 13:43:00.780: INFO: DaemonSet pods can't tolerate node ip-172-31-6-18 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 27 13:43:00.780: INFO: DaemonSet pods can't tolerate node ip-172-31-93-193 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 27 13:43:00.784: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jul 27 13:43:00.784: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 07/27/24 13:43:00.799
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7414, will wait for the garbage collector to delete the pods @ 07/27/24 13:43:00.799
  Jul 27 13:43:00.864: INFO: Deleting DaemonSet.extensions daemon-set took: 5.577406ms
  E0727 13:43:00.890458      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:43:00.964: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.579885ms
  E0727 13:43:01.890650      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:43:02.569: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul 27 13:43:02.569: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jul 27 13:43:02.572: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"44473"},"items":null}

  Jul 27 13:43:02.575: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"44473"},"items":null}

  Jul 27 13:43:02.586: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7414" for this suite. @ 07/27/24 13:43:02.59
• [6.907 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:488
  STEP: Creating a kubernetes client @ 07/27/24 13:43:02.597
  Jul 27 13:43:02.597: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename security-context-test @ 07/27/24 13:43:02.598
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:43:02.615
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:43:02.618
  E0727 13:43:02.891028      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:43:03.891060      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:43:04.891661      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:43:05.891751      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:43:06.643: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-7655" for this suite. @ 07/27/24 13:43:06.647
• [4.057 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 07/27/24 13:43:06.655
  Jul 27 13:43:06.655: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename downward-api @ 07/27/24 13:43:06.655
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:43:06.672
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:43:06.674
  STEP: Creating the pod @ 07/27/24 13:43:06.675
  E0727 13:43:06.891826      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:43:07.891947      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:43:08.892048      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:43:09.228: INFO: Successfully updated pod "annotationupdate2ffb963f-116b-4a2d-ac78-e170caa1517a"
  E0727 13:43:09.892092      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:43:10.892285      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:43:11.892502      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:43:12.893098      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:43:13.251: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1680" for this suite. @ 07/27/24 13:43:13.255
• [6.610 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 07/27/24 13:43:13.265
  Jul 27 13:43:13.265: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename csi-storageclass @ 07/27/24 13:43:13.265
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:43:13.281
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:43:13.282
  STEP: Creating a StorageClass @ 07/27/24 13:43:13.284
  STEP: Get StorageClass "e2e-ts9rx" @ 07/27/24 13:43:13.288
  STEP: Patching the StorageClass "e2e-ts9rx" @ 07/27/24 13:43:13.291
  STEP: Delete StorageClass "e2e-ts9rx" @ 07/27/24 13:43:13.296
  STEP: Confirm deletion of StorageClass "e2e-ts9rx" @ 07/27/24 13:43:13.301
  STEP: Create a replacement StorageClass @ 07/27/24 13:43:13.304
  STEP: Updating StorageClass "e2e-v2-hp97j" @ 07/27/24 13:43:13.308
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-hp97j=updated" @ 07/27/24 13:43:13.315
  STEP: Deleting StorageClass "e2e-v2-hp97j" via DeleteCollection @ 07/27/24 13:43:13.318
  STEP: Confirm deletion of StorageClass "e2e-v2-hp97j" @ 07/27/24 13:43:13.325
  Jul 27 13:43:13.328: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-7722" for this suite. @ 07/27/24 13:43:13.331
• [0.072 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 07/27/24 13:43:13.337
  Jul 27 13:43:13.337: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename emptydir @ 07/27/24 13:43:13.338
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:43:13.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:43:13.356
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 07/27/24 13:43:13.358
  E0727 13:43:13.893976      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:43:14.894048      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:43:15.894329      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:43:16.895267      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/27/24 13:43:17.383
  Jul 27 13:43:17.386: INFO: Trying to get logs from node ip-172-31-10-249 pod pod-5a1e1184-4be4-4af7-8f1f-51ecb01a24dd container test-container: <nil>
  STEP: delete the pod @ 07/27/24 13:43:17.392
  Jul 27 13:43:17.409: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7150" for this suite. @ 07/27/24 13:43:17.412
• [4.082 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 07/27/24 13:43:17.419
  Jul 27 13:43:17.419: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename container-probe @ 07/27/24 13:43:17.42
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:43:17.436
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:43:17.438
  E0727 13:43:17.895355      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:43:18.895547      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:43:19.896399      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:43:20.896583      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:43:21.897507      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:43:22.897595      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:43:23.897705      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:43:24.897779      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:43:25.897884      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:43:26.898129      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:43:27.898901      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:43:28.898989      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:43:29.899973      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:43:30.900818      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:43:31.901866      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:43:32.901962      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:43:33.902065      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:43:34.902268      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:43:35.903158      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:43:36.903382      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:43:37.904215      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:43:38.904319      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:43:39.510: INFO: Container started at 2024-07-27 13:43:18 +0000 UTC, pod became ready at 2024-07-27 13:43:37 +0000 UTC
  Jul 27 13:43:39.511: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3991" for this suite. @ 07/27/24 13:43:39.514
• [22.103 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 07/27/24 13:43:39.522
  Jul 27 13:43:39.522: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename downward-api @ 07/27/24 13:43:39.523
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:43:39.546
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:43:39.548
  STEP: Creating a pod to test downward api env vars @ 07/27/24 13:43:39.55
  E0727 13:43:39.904443      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:43:40.904627      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:43:41.905111      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:43:42.906146      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/27/24 13:43:43.572
  Jul 27 13:43:43.575: INFO: Trying to get logs from node ip-172-31-18-96 pod downward-api-70f3a7f4-1523-4330-bd15-444a40a2e6b1 container dapi-container: <nil>
  STEP: delete the pod @ 07/27/24 13:43:43.583
  Jul 27 13:43:43.600: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9263" for this suite. @ 07/27/24 13:43:43.603
• [4.089 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2177
  STEP: Creating a kubernetes client @ 07/27/24 13:43:43.611
  Jul 27 13:43:43.611: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename services @ 07/27/24 13:43:43.612
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:43:43.629
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:43:43.63
  STEP: creating service in namespace services-9531 @ 07/27/24 13:43:43.632
  STEP: creating service affinity-clusterip in namespace services-9531 @ 07/27/24 13:43:43.632
  STEP: creating replication controller affinity-clusterip in namespace services-9531 @ 07/27/24 13:43:43.641
  I0727 13:43:43.649354      20 runners.go:197] Created replication controller with name: affinity-clusterip, namespace: services-9531, replica count: 3
  E0727 13:43:43.906881      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:43:44.907480      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:43:45.907656      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0727 13:43:46.700170      20 runners.go:197] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jul 27 13:43:46.707: INFO: Creating new exec pod
  E0727 13:43:46.907792      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:43:47.908695      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:43:48.908928      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:43:49.722: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=services-9531 exec execpod-affinity26zdf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  Jul 27 13:43:49.822: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  Jul 27 13:43:49.822: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul 27 13:43:49.822: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=services-9531 exec execpod-affinity26zdf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.41 80'
  E0727 13:43:49.908943      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:43:49.912: INFO: stderr: "+ nc -v -t -w 2 10.152.183.41 80\n+ echo hostName\nConnection to 10.152.183.41 80 port [tcp/http] succeeded!\n"
  Jul 27 13:43:49.912: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul 27 13:43:49.912: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=services-9531 exec execpod-affinity26zdf -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.41:80/ ; done'
  Jul 27 13:43:50.056: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.41:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.41:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.41:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.41:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.41:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.41:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.41:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.41:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.41:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.41:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.41:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.41:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.41:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.41:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.41:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.41:80/\n"
  Jul 27 13:43:50.056: INFO: stdout: "\naffinity-clusterip-gjs28\naffinity-clusterip-gjs28\naffinity-clusterip-gjs28\naffinity-clusterip-gjs28\naffinity-clusterip-gjs28\naffinity-clusterip-gjs28\naffinity-clusterip-gjs28\naffinity-clusterip-gjs28\naffinity-clusterip-gjs28\naffinity-clusterip-gjs28\naffinity-clusterip-gjs28\naffinity-clusterip-gjs28\naffinity-clusterip-gjs28\naffinity-clusterip-gjs28\naffinity-clusterip-gjs28\naffinity-clusterip-gjs28"
  Jul 27 13:43:50.056: INFO: Received response from host: affinity-clusterip-gjs28
  Jul 27 13:43:50.056: INFO: Received response from host: affinity-clusterip-gjs28
  Jul 27 13:43:50.056: INFO: Received response from host: affinity-clusterip-gjs28
  Jul 27 13:43:50.056: INFO: Received response from host: affinity-clusterip-gjs28
  Jul 27 13:43:50.056: INFO: Received response from host: affinity-clusterip-gjs28
  Jul 27 13:43:50.056: INFO: Received response from host: affinity-clusterip-gjs28
  Jul 27 13:43:50.056: INFO: Received response from host: affinity-clusterip-gjs28
  Jul 27 13:43:50.056: INFO: Received response from host: affinity-clusterip-gjs28
  Jul 27 13:43:50.056: INFO: Received response from host: affinity-clusterip-gjs28
  Jul 27 13:43:50.056: INFO: Received response from host: affinity-clusterip-gjs28
  Jul 27 13:43:50.056: INFO: Received response from host: affinity-clusterip-gjs28
  Jul 27 13:43:50.056: INFO: Received response from host: affinity-clusterip-gjs28
  Jul 27 13:43:50.056: INFO: Received response from host: affinity-clusterip-gjs28
  Jul 27 13:43:50.056: INFO: Received response from host: affinity-clusterip-gjs28
  Jul 27 13:43:50.056: INFO: Received response from host: affinity-clusterip-gjs28
  Jul 27 13:43:50.056: INFO: Received response from host: affinity-clusterip-gjs28
  Jul 27 13:43:50.056: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-9531, will wait for the garbage collector to delete the pods @ 07/27/24 13:43:50.072
  Jul 27 13:43:50.133: INFO: Deleting ReplicationController affinity-clusterip took: 6.654853ms
  Jul 27 13:43:50.233: INFO: Terminating ReplicationController affinity-clusterip pods took: 100.139072ms
  E0727 13:43:50.909313      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:43:51.909549      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:43:52.851: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9531" for this suite. @ 07/27/24 13:43:52.854
• [9.249 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 07/27/24 13:43:52.861
  Jul 27 13:43:52.861: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename controllerrevisions @ 07/27/24 13:43:52.861
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:43:52.882
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:43:52.884
  STEP: Creating DaemonSet "e2e-rpx5w-daemon-set" @ 07/27/24 13:43:52.904
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/27/24 13:43:52.908
  E0727 13:43:52.909647      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:43:52.911: INFO: DaemonSet pods can't tolerate node ip-172-31-6-18 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 27 13:43:52.911: INFO: DaemonSet pods can't tolerate node ip-172-31-93-193 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 27 13:43:52.917: INFO: Number of nodes with available pods controlled by daemonset e2e-rpx5w-daemon-set: 0
  Jul 27 13:43:52.917: INFO: Node ip-172-31-10-249 is running 0 daemon pod, expected 1
  E0727 13:43:53.910168      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:43:53.912: INFO: DaemonSet pods can't tolerate node ip-172-31-6-18 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 27 13:43:53.912: INFO: DaemonSet pods can't tolerate node ip-172-31-93-193 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 27 13:43:53.916: INFO: Number of nodes with available pods controlled by daemonset e2e-rpx5w-daemon-set: 3
  Jul 27 13:43:53.916: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset e2e-rpx5w-daemon-set
  STEP: Confirm DaemonSet "e2e-rpx5w-daemon-set" successfully created with "daemonset-name=e2e-rpx5w-daemon-set" label @ 07/27/24 13:43:53.919
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-rpx5w-daemon-set" @ 07/27/24 13:43:53.927
  Jul 27 13:43:53.930: INFO: Located ControllerRevision: "e2e-rpx5w-daemon-set-58b89679bf"
  STEP: Patching ControllerRevision "e2e-rpx5w-daemon-set-58b89679bf" @ 07/27/24 13:43:53.933
  Jul 27 13:43:53.939: INFO: e2e-rpx5w-daemon-set-58b89679bf has been patched
  STEP: Create a new ControllerRevision @ 07/27/24 13:43:53.939
  Jul 27 13:43:53.945: INFO: Created ControllerRevision: e2e-rpx5w-daemon-set-f9df8d9cc
  STEP: Confirm that there are two ControllerRevisions @ 07/27/24 13:43:53.945
  Jul 27 13:43:53.945: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jul 27 13:43:53.948: INFO: Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-rpx5w-daemon-set-58b89679bf" @ 07/27/24 13:43:53.948
  STEP: Confirm that there is only one ControllerRevision @ 07/27/24 13:43:53.954
  Jul 27 13:43:53.955: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jul 27 13:43:53.957: INFO: Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-rpx5w-daemon-set-f9df8d9cc" @ 07/27/24 13:43:53.96
  Jul 27 13:43:53.971: INFO: e2e-rpx5w-daemon-set-f9df8d9cc has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 07/27/24 13:43:53.971
  W0727 13:43:53.978404      20 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 07/27/24 13:43:53.978
  Jul 27 13:43:53.978: INFO: Requesting list of ControllerRevisions to confirm quantity
  E0727 13:43:54.910989      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:43:54.979: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jul 27 13:43:54.984: INFO: Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-rpx5w-daemon-set-f9df8d9cc=updated" @ 07/27/24 13:43:54.984
  STEP: Confirm that there is only one ControllerRevision @ 07/27/24 13:43:54.992
  Jul 27 13:43:54.992: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jul 27 13:43:54.995: INFO: Found 1 ControllerRevisions
  Jul 27 13:43:54.998: INFO: ControllerRevision "e2e-rpx5w-daemon-set-85466ffdc6" has revision 3
  STEP: Deleting DaemonSet "e2e-rpx5w-daemon-set" @ 07/27/24 13:43:55
  STEP: deleting DaemonSet.extensions e2e-rpx5w-daemon-set in namespace controllerrevisions-6730, will wait for the garbage collector to delete the pods @ 07/27/24 13:43:55
  Jul 27 13:43:55.062: INFO: Deleting DaemonSet.extensions e2e-rpx5w-daemon-set took: 8.635806ms
  Jul 27 13:43:55.163: INFO: Terminating DaemonSet.extensions e2e-rpx5w-daemon-set pods took: 100.443972ms
  E0727 13:43:55.912023      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:43:56.566: INFO: Number of nodes with available pods controlled by daemonset e2e-rpx5w-daemon-set: 0
  Jul 27 13:43:56.566: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-rpx5w-daemon-set
  Jul 27 13:43:56.568: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"45041"},"items":null}

  Jul 27 13:43:56.571: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"45041"},"items":null}

  Jul 27 13:43:56.582: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-6730" for this suite. @ 07/27/24 13:43:56.586
• [3.731 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 07/27/24 13:43:56.592
  Jul 27 13:43:56.592: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename deployment @ 07/27/24 13:43:56.593
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:43:56.61
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:43:56.612
  Jul 27 13:43:56.614: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
  Jul 27 13:43:56.623: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0727 13:43:56.912786      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:43:57.912914      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:43:58.913162      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:43:59.913238      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:44:00.913320      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:44:01.627: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/27/24 13:44:01.627
  Jul 27 13:44:01.627: INFO: Creating deployment "test-rolling-update-deployment"
  Jul 27 13:44:01.632: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  Jul 27 13:44:01.640: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  E0727 13:44:01.913599      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:44:02.913661      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:44:03.648: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
  Jul 27 13:44:03.651: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  Jul 27 13:44:03.661: INFO: Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7266",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0c4b3235-486c-4e13-bc54-bb14d1a4ba2c",
      ResourceVersion: (string) (len=5) "45166",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857684641,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857684641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857684642,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857684641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857684641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857684642,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857684641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-7ddb77f68b\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jul 27 13:44:03.666: INFO: New ReplicaSet "test-rolling-update-deployment-7ddb77f68b" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-7ddb77f68b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7266",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e4cf194c-2727-4264-871c-0f8fc5344284",
      ResourceVersion: (string) (len=5) "45156",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857684641,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "0c4b3235-486c-4e13-bc54-bb14d1a4ba2c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857684641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 63 34 62 33 32  33 35 2d 34 38 36 63 2d  |\"0c4b3235-486c-|
              00000120  34 65 31 33 2d 62 63 35  34 2d 62 62 31 34 64 31  |4e13-bc54-bb14d1|
              00000130  61 34 62 61 32 63 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |a4ba2c\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857684642,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b",
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jul 27 13:44:03.667: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
  Jul 27 13:44:03.667: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7266",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1058357d-3512-4c75-b122-ea1e4458450f",
      ResourceVersion: (string) (len=5) "45165",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857684636,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "0c4b3235-486c-4e13-bc54-bb14d1a4ba2c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857684636,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857684642,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 30 63 34 62 33 32 33  |"uid\":\"0c4b323|
              000000b0  35 2d 34 38 36 63 2d 34  65 31 33 2d 62 63 35 34  |5-486c-4e13-bc54|
              000000c0  2d 62 62 31 34 64 31 61  34 62 61 32 63 5c 22 7d  |-bb14d1a4ba2c\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857684642,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jul 27 13:44:03.672: INFO: Pod "test-rolling-update-deployment-7ddb77f68b-kzs48" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-7ddb77f68b-kzs48",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-7ddb77f68b-",
      Namespace: (string) (len=15) "deployment-7266",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5b1afc44-ec89-499c-9286-a46d5f07f8cc",
      ResourceVersion: (string) (len=5) "45155",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857684641,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-7ddb77f68b",
          UID: (types.UID) (len=36) "e4cf194c-2727-4264-871c-0f8fc5344284",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857684641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 34  63 66 31 39 34 63 2d 32  |d\":\"e4cf194c-2|
              00000090  37 32 37 2d 34 32 36 34  2d 38 37 31 63 2d 30 66  |727-4264-871c-0f|
              000000a0  38 66 63 35 33 34 34 32  38 34 5c 22 7d 22 3a 7b  |8fc5344284\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857684642,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  32 2e 31 38 39 5c 22 7d  |2.168.122.189\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rqxnj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rqxnj",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-18-96",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857684642,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857684641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857684642,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857684642,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857684641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.18.96",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.18.96"
        }
      },
      PodIP: (string) (len=15) "192.168.122.189",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.122.189"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857684641,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63857684642,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253",
          ContainerID: (string) (len=77) "containerd://6531a6fce8851d92a61822533f019be6b23ed049dce6a83fa1a64309f603c2a9",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 27 13:44:03.673: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7266" for this suite. @ 07/27/24 13:44:03.677
• [7.091 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 07/27/24 13:44:03.683
  Jul 27 13:44:03.683: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename init-container @ 07/27/24 13:44:03.684
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:44:03.702
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:44:03.704
  STEP: creating the pod @ 07/27/24 13:44:03.706
  Jul 27 13:44:03.706: INFO: PodSpec: initContainers in spec.initContainers
  E0727 13:44:03.914005      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:44:04.914219      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:44:05.914849      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:44:06.737: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-7109" for this suite. @ 07/27/24 13:44:06.741
• [3.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 07/27/24 13:44:06.748
  Jul 27 13:44:06.748: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename daemonsets @ 07/27/24 13:44:06.749
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:44:06.766
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:44:06.767
  STEP: Creating a simple DaemonSet "daemon-set" @ 07/27/24 13:44:06.784
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/27/24 13:44:06.789
  Jul 27 13:44:06.793: INFO: DaemonSet pods can't tolerate node ip-172-31-6-18 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 27 13:44:06.793: INFO: DaemonSet pods can't tolerate node ip-172-31-93-193 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 27 13:44:06.796: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul 27 13:44:06.796: INFO: Node ip-172-31-10-249 is running 0 daemon pod, expected 1
  E0727 13:44:06.915243      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:44:07.793: INFO: DaemonSet pods can't tolerate node ip-172-31-6-18 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 27 13:44:07.793: INFO: DaemonSet pods can't tolerate node ip-172-31-93-193 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 27 13:44:07.798: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jul 27 13:44:07.798: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 07/27/24 13:44:07.801
  Jul 27 13:44:07.815: INFO: DaemonSet pods can't tolerate node ip-172-31-6-18 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 27 13:44:07.816: INFO: DaemonSet pods can't tolerate node ip-172-31-93-193 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 27 13:44:07.820: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jul 27 13:44:07.820: INFO: Node ip-172-31-10-249 is running 0 daemon pod, expected 1
  E0727 13:44:07.916167      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:44:08.815: INFO: DaemonSet pods can't tolerate node ip-172-31-6-18 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 27 13:44:08.815: INFO: DaemonSet pods can't tolerate node ip-172-31-93-193 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 27 13:44:08.818: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jul 27 13:44:08.818: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 07/27/24 13:44:08.818
  STEP: Deleting DaemonSet "daemon-set" @ 07/27/24 13:44:08.824
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-243, will wait for the garbage collector to delete the pods @ 07/27/24 13:44:08.824
  Jul 27 13:44:08.884: INFO: Deleting DaemonSet.extensions daemon-set took: 7.042036ms
  E0727 13:44:08.916718      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:44:08.986: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.088991ms
  E0727 13:44:09.917300      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:44:10.690: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul 27 13:44:10.690: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jul 27 13:44:10.694: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"45341"},"items":null}

  Jul 27 13:44:10.697: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"45341"},"items":null}

  Jul 27 13:44:10.709: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-243" for this suite. @ 07/27/24 13:44:10.712
• [3.970 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 07/27/24 13:44:10.719
  Jul 27 13:44:10.719: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename projected @ 07/27/24 13:44:10.72
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:44:10.736
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:44:10.737
  STEP: Creating projection with secret that has name projected-secret-test-c133eaf6-76a8-471a-8233-67a54ad8672c @ 07/27/24 13:44:10.739
  STEP: Creating a pod to test consume secrets @ 07/27/24 13:44:10.743
  E0727 13:44:10.917870      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:44:11.918104      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:44:12.919796      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:44:13.919818      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/27/24 13:44:14.762
  Jul 27 13:44:14.766: INFO: Trying to get logs from node ip-172-31-18-96 pod pod-projected-secrets-47ad3db8-daee-4b5e-8dc4-14cd50249cf5 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 07/27/24 13:44:14.772
  Jul 27 13:44:14.787: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5930" for this suite. @ 07/27/24 13:44:14.79
• [4.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 07/27/24 13:44:14.798
  Jul 27 13:44:14.798: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename dns @ 07/27/24 13:44:14.798
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:44:14.815
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:44:14.817
  STEP: Creating a test headless service @ 07/27/24 13:44:14.819
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9960.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-9960.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9960.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9960.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-9960.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-9960.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-9960.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-9960.svc.cluster.local;sleep 1; done
   @ 07/27/24 13:44:14.825
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9960.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-9960.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9960.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-9960.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-9960.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-9960.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-9960.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-9960.svc.cluster.local;sleep 1; done
   @ 07/27/24 13:44:14.825
  STEP: creating a pod to probe DNS @ 07/27/24 13:44:14.825
  STEP: submitting the pod to kubernetes @ 07/27/24 13:44:14.825
  E0727 13:44:14.920761      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:44:15.920849      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/27/24 13:44:16.847
  STEP: looking for the results for each expected name from probers @ 07/27/24 13:44:16.85
  Jul 27 13:44:16.856: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-9960.svc.cluster.local from pod dns-9960/dns-test-c90b697c-2910-4c0e-9fb4-2562e757723a: the server could not find the requested resource (get pods dns-test-c90b697c-2910-4c0e-9fb4-2562e757723a)
  Jul 27 13:44:16.859: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9960.svc.cluster.local from pod dns-9960/dns-test-c90b697c-2910-4c0e-9fb4-2562e757723a: the server could not find the requested resource (get pods dns-test-c90b697c-2910-4c0e-9fb4-2562e757723a)
  Jul 27 13:44:16.863: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-9960.svc.cluster.local from pod dns-9960/dns-test-c90b697c-2910-4c0e-9fb4-2562e757723a: the server could not find the requested resource (get pods dns-test-c90b697c-2910-4c0e-9fb4-2562e757723a)
  Jul 27 13:44:16.866: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-9960.svc.cluster.local from pod dns-9960/dns-test-c90b697c-2910-4c0e-9fb4-2562e757723a: the server could not find the requested resource (get pods dns-test-c90b697c-2910-4c0e-9fb4-2562e757723a)
  Jul 27 13:44:16.870: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-9960.svc.cluster.local from pod dns-9960/dns-test-c90b697c-2910-4c0e-9fb4-2562e757723a: the server could not find the requested resource (get pods dns-test-c90b697c-2910-4c0e-9fb4-2562e757723a)
  Jul 27 13:44:16.873: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-9960.svc.cluster.local from pod dns-9960/dns-test-c90b697c-2910-4c0e-9fb4-2562e757723a: the server could not find the requested resource (get pods dns-test-c90b697c-2910-4c0e-9fb4-2562e757723a)
  Jul 27 13:44:16.877: INFO: Unable to read jessie_udp@dns-test-service-2.dns-9960.svc.cluster.local from pod dns-9960/dns-test-c90b697c-2910-4c0e-9fb4-2562e757723a: the server could not find the requested resource (get pods dns-test-c90b697c-2910-4c0e-9fb4-2562e757723a)
  Jul 27 13:44:16.880: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-9960.svc.cluster.local from pod dns-9960/dns-test-c90b697c-2910-4c0e-9fb4-2562e757723a: the server could not find the requested resource (get pods dns-test-c90b697c-2910-4c0e-9fb4-2562e757723a)
  Jul 27 13:44:16.880: INFO: Lookups using dns-9960/dns-test-c90b697c-2910-4c0e-9fb4-2562e757723a failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-9960.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9960.svc.cluster.local wheezy_udp@dns-test-service-2.dns-9960.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-9960.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-9960.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-9960.svc.cluster.local jessie_udp@dns-test-service-2.dns-9960.svc.cluster.local jessie_tcp@dns-test-service-2.dns-9960.svc.cluster.local]

  Jul 27 13:44:16.886: INFO: Pod client logs for webserver: 
  Jul 27 13:44:16.893: INFO: Pod client logs for querier: 
  Jul 27 13:44:16.898: INFO: Pod client logs for jessie-querier: 
  E0727 13:44:16.920911      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:44:17.921050      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:44:18.921233      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:44:19.921347      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:44:20.921394      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:44:21.881: INFO: DNS probes using dns-9960/dns-test-c90b697c-2910-4c0e-9fb4-2562e757723a succeeded

  STEP: deleting the pod @ 07/27/24 13:44:21.882
  STEP: deleting the test headless service @ 07/27/24 13:44:21.899
  Jul 27 13:44:21.912: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9960" for this suite. @ 07/27/24 13:44:21.916
  E0727 13:44:21.921601      20 retrywatcher.go:129] "Watch failed" err="context canceled"
• [7.127 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:134
  STEP: Creating a kubernetes client @ 07/27/24 13:44:21.925
  Jul 27 13:44:21.925: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename kubelet-test @ 07/27/24 13:44:21.926
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:44:21.945
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:44:21.947
  Jul 27 13:44:21.973: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-2192" for this suite. @ 07/27/24 13:44:21.976
• [0.057 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:236
  STEP: Creating a kubernetes client @ 07/27/24 13:44:21.982
  Jul 27 13:44:21.982: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/27/24 13:44:21.983
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:44:22.001
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:44:22.002
  Jul 27 13:44:22.004: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  E0727 13:44:22.926871      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 07/27/24 13:44:23.352
  Jul 27 13:44:23.352: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=crd-publish-openapi-6003 --namespace=crd-publish-openapi-6003 create -f -'
  E0727 13:44:23.927564      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:44:24.927743      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:44:25.418: INFO: stderr: ""
  Jul 27 13:44:25.418: INFO: stdout: "e2e-test-crd-publish-openapi-4280-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Jul 27 13:44:25.418: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=crd-publish-openapi-6003 --namespace=crd-publish-openapi-6003 delete e2e-test-crd-publish-openapi-4280-crds test-cr'
  Jul 27 13:44:25.478: INFO: stderr: ""
  Jul 27 13:44:25.478: INFO: stdout: "e2e-test-crd-publish-openapi-4280-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  Jul 27 13:44:25.478: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=crd-publish-openapi-6003 --namespace=crd-publish-openapi-6003 apply -f -'
  Jul 27 13:44:25.532: INFO: stderr: ""
  Jul 27 13:44:25.532: INFO: stdout: "e2e-test-crd-publish-openapi-4280-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Jul 27 13:44:25.532: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=crd-publish-openapi-6003 --namespace=crd-publish-openapi-6003 delete e2e-test-crd-publish-openapi-4280-crds test-cr'
  Jul 27 13:44:25.586: INFO: stderr: ""
  Jul 27 13:44:25.586: INFO: stdout: "e2e-test-crd-publish-openapi-4280-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 07/27/24 13:44:25.586
  Jul 27 13:44:25.586: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=crd-publish-openapi-6003 explain e2e-test-crd-publish-openapi-4280-crds'
  Jul 27 13:44:25.629: INFO: stderr: ""
  Jul 27 13:44:25.629: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-4280-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0727 13:44:25.928735      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:44:26.840: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6003" for this suite. @ 07/27/24 13:44:26.846
• [4.872 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 07/27/24 13:44:26.855
  Jul 27 13:44:26.855: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename emptydir @ 07/27/24 13:44:26.855
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:44:26.871
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:44:26.873
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 07/27/24 13:44:26.874
  E0727 13:44:26.928785      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:44:27.928950      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/27/24 13:44:28.89
  Jul 27 13:44:28.893: INFO: Trying to get logs from node ip-172-31-18-96 pod pod-7495a22f-fd6b-44e9-a991-368a526e9d4c container test-container: <nil>
  STEP: delete the pod @ 07/27/24 13:44:28.899
  Jul 27 13:44:28.917: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9812" for this suite. @ 07/27/24 13:44:28.92
• [2.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 07/27/24 13:44:28.926
  Jul 27 13:44:28.926: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/27/24 13:44:28.927
  E0727 13:44:28.929173      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:44:28.943
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:44:28.945
  Jul 27 13:44:28.947: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  E0727 13:44:29.929936      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:44:29.970: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-1378" for this suite. @ 07/27/24 13:44:29.974
• [1.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 07/27/24 13:44:29.981
  Jul 27 13:44:29.981: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename sysctl @ 07/27/24 13:44:29.981
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:44:29.997
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:44:29.998
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 07/27/24 13:44:30
  STEP: Watching for error events or started pod @ 07/27/24 13:44:30.009
  E0727 13:44:30.930528      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:44:31.931453      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for pod completion @ 07/27/24 13:44:32.014
  STEP: Checking that the pod succeeded @ 07/27/24 13:44:32.022
  STEP: Getting logs from the pod @ 07/27/24 13:44:32.022
  STEP: Checking that the sysctl is actually updated @ 07/27/24 13:44:32.028
  Jul 27 13:44:32.028: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-9006" for this suite. @ 07/27/24 13:44:32.032
• [2.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 07/27/24 13:44:32.043
  Jul 27 13:44:32.043: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename sched-preemption @ 07/27/24 13:44:32.044
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:44:32.059
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:44:32.061
  Jul 27 13:44:32.080: INFO: Waiting up to 1m0s for all nodes to be ready
  E0727 13:44:32.932414      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:44:33.933133      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:44:34.933265      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:44:35.933324      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:44:36.933448      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:44:37.934229      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:44:38.934283      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:44:39.934384      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:44:40.934481      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:44:41.935225      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:44:42.940235      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:44:43.940446      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:44:44.940526      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:44:45.941444      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:44:46.941555      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:44:47.941622      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:44:48.941734      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:44:49.941829      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:44:50.941926      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:44:51.942917      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:44:52.945150      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:44:53.945113      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:44:54.946148      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:44:55.946254      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:44:56.947258      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:44:57.947366      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:44:58.947731      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:44:59.947846      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:45:00.947973      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:45:01.948959      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:45:02.952623      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:45:03.953133      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:45:04.954227      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:45:05.954320      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:45:06.954421      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:45:07.954846      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:45:08.955474      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:45:09.955694      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:45:10.955777      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:45:11.955958      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:45:12.960191      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:45:13.960569      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:45:14.961508      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:45:15.961619      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:45:16.962602      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:45:17.962735      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:45:18.962811      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:45:19.963000      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:45:20.963243      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:45:21.964153      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:45:22.964766      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:45:23.965450      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:45:24.966226      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:45:25.966426      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:45:26.966447      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:45:27.967369      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:45:28.967426      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:45:29.967951      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:45:30.968115      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:45:31.968384      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:45:32.087: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 07/27/24 13:45:32.091
  Jul 27 13:45:32.114: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Jul 27 13:45:32.121: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Jul 27 13:45:32.144: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Jul 27 13:45:32.154: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Jul 27 13:45:32.173: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Jul 27 13:45:32.182: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 07/27/24 13:45:32.182
  E0727 13:45:32.968554      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:45:33.968695      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 07/27/24 13:45:34.205
  E0727 13:45:34.969686      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:45:35.969797      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:45:36.969895      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:45:37.969990      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:45:38.276: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-3907" for this suite. @ 07/27/24 13:45:38.28
• [66.243 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1764
  STEP: Creating a kubernetes client @ 07/27/24 13:45:38.286
  Jul 27 13:45:38.286: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename kubectl @ 07/27/24 13:45:38.287
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:45:38.304
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:45:38.305
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 07/27/24 13:45:38.307
  Jul 27 13:45:38.307: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-9349 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  Jul 27 13:45:38.359: INFO: stderr: ""
  Jul 27 13:45:38.359: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 07/27/24 13:45:38.359
  Jul 27 13:45:38.364: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-9349 delete pods e2e-test-httpd-pod'
  E0727 13:45:38.970976      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:45:39.842: INFO: stderr: ""
  Jul 27 13:45:39.842: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Jul 27 13:45:39.842: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9349" for this suite. @ 07/27/24 13:45:39.846
• [1.568 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:649
  STEP: Creating a kubernetes client @ 07/27/24 13:45:39.854
  Jul 27 13:45:39.854: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename svcaccounts @ 07/27/24 13:45:39.854
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:45:39.873
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:45:39.874
  STEP: creating a ServiceAccount @ 07/27/24 13:45:39.876
  STEP: watching for the ServiceAccount to be added @ 07/27/24 13:45:39.885
  STEP: patching the ServiceAccount @ 07/27/24 13:45:39.886
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 07/27/24 13:45:39.891
  STEP: deleting the ServiceAccount @ 07/27/24 13:45:39.893
  Jul 27 13:45:39.908: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2765" for this suite. @ 07/27/24 13:45:39.913
• [0.065 seconds]
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 07/27/24 13:45:39.919
  Jul 27 13:45:39.919: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename configmap @ 07/27/24 13:45:39.919
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:45:39.936
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:45:39.937
  STEP: Creating configMap with name configmap-test-volume-6cadff57-475d-4be6-9131-b9545e9c5672 @ 07/27/24 13:45:39.939
  STEP: Creating a pod to test consume configMaps @ 07/27/24 13:45:39.943
  E0727 13:45:39.971740      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:45:40.971800      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:45:41.972213      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:45:42.972453      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/27/24 13:45:43.965
  Jul 27 13:45:43.968: INFO: Trying to get logs from node ip-172-31-18-96 pod pod-configmaps-55e3918d-23b1-4b48-901c-50d773f4d5c4 container agnhost-container: <nil>
  E0727 13:45:43.972492      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod @ 07/27/24 13:45:43.974
  Jul 27 13:45:43.988: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6271" for this suite. @ 07/27/24 13:45:43.991
• [4.078 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:51
  STEP: Creating a kubernetes client @ 07/27/24 13:45:43.997
  Jul 27 13:45:43.997: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename kubelet-test @ 07/27/24 13:45:43.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:45:44.012
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:45:44.018
  E0727 13:45:44.972587      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:45:45.973410      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:45:46.055: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-2035" for this suite. @ 07/27/24 13:45:46.059
• [2.070 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:669
  STEP: Creating a kubernetes client @ 07/27/24 13:45:46.068
  Jul 27 13:45:46.068: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename pv @ 07/27/24 13:45:46.068
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:45:46.086
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:45:46.087
  STEP: Creating initial PV and PVC @ 07/27/24 13:45:46.089
  Jul 27 13:45:46.089: INFO: Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-9393" @ 07/27/24 13:45:46.102
  STEP: Listing PVCs in namespace "pv-9393" @ 07/27/24 13:45:46.105
  STEP: Reading "pvc-vgtxt" Status @ 07/27/24 13:45:46.108
  STEP: Reading "pv-9393-r6msg" Status @ 07/27/24 13:45:46.112
  STEP: Patching "pvc-vgtxt" Status @ 07/27/24 13:45:46.117
  STEP: Patching "pv-9393-r6msg" Status @ 07/27/24 13:45:46.124
  STEP: Updating "pvc-vgtxt" Status @ 07/27/24 13:45:46.135
  STEP: Updating "pv-9393-r6msg" Status @ 07/27/24 13:45:46.143
  Jul 27 13:45:46.152: INFO: AfterEach: deleting 1 PVCs and 1 PVs...
  Jul 27 13:45:46.152: INFO: Deleting PersistentVolumeClaim "pvc-vgtxt"
  Jul 27 13:45:46.163: INFO: Deleting PersistentVolume "pv-9393-r6msg"
  Jul 27 13:45:46.170: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-9393" for this suite. @ 07/27/24 13:45:46.174
• [0.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 07/27/24 13:45:46.18
  Jul 27 13:45:46.180: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename endpointslice @ 07/27/24 13:45:46.181
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:45:46.199
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:45:46.201
  E0727 13:45:46.973502      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:45:47.973589      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:45:48.973676      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:45:49.973766      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:45:50.973882      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 07/27/24 13:45:51.272
  E0727 13:45:51.973968      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:45:52.974122      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:45:53.977727      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:45:54.978720      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:45:55.978909      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing matching pods with named port @ 07/27/24 13:45:56.279
  E0727 13:45:56.979105      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:45:57.979169      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:45:58.979370      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:45:59.979555      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:46:00.979752      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 07/27/24 13:46:01.288
  E0727 13:46:01.979845      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:46:02.979892      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:46:03.979994      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:46:04.980181      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:46:05.980332      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: recreating EndpointSlices after they've been deleted @ 07/27/24 13:46:06.296
  Jul 27 13:46:06.315: INFO: EndpointSlice for Service endpointslice-678/example-named-port not found
  E0727 13:46:06.980451      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:46:07.980537      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:46:08.981176      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:46:09.981447      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:46:10.981596      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:46:11.981691      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:46:12.981805      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:46:13.982257      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:46:14.982334      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:46:15.982401      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:46:16.322: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-678" for this suite. @ 07/27/24 13:46:16.326
• [30.152 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:135
  STEP: Creating a kubernetes client @ 07/27/24 13:46:16.333
  Jul 27 13:46:16.333: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename security-context @ 07/27/24 13:46:16.334
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:46:16.351
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:46:16.353
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 07/27/24 13:46:16.354
  E0727 13:46:16.982501      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:46:17.982841      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:46:18.982910      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:46:19.983196      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/27/24 13:46:20.376
  Jul 27 13:46:20.379: INFO: Trying to get logs from node ip-172-31-10-249 pod security-context-def3f58c-f521-4837-a4bf-e6b84ecc5b43 container test-container: <nil>
  STEP: delete the pod @ 07/27/24 13:46:20.389
  Jul 27 13:46:20.407: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-7415" for this suite. @ 07/27/24 13:46:20.41
• [4.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 07/27/24 13:46:20.417
  Jul 27 13:46:20.417: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename configmap @ 07/27/24 13:46:20.418
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:46:20.432
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:46:20.434
  STEP: Creating configMap with name configmap-test-volume-map-f803e86b-aad8-4f5a-ac22-542e9bbad3a1 @ 07/27/24 13:46:20.436
  STEP: Creating a pod to test consume configMaps @ 07/27/24 13:46:20.441
  E0727 13:46:20.984054      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:46:21.984159      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:46:22.985702      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:46:23.985721      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/27/24 13:46:24.463
  Jul 27 13:46:24.466: INFO: Trying to get logs from node ip-172-31-10-249 pod pod-configmaps-d10a1dec-676e-4d4a-982f-a6b2093a8414 container agnhost-container: <nil>
  STEP: delete the pod @ 07/27/24 13:46:24.472
  Jul 27 13:46:24.489: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7580" for this suite. @ 07/27/24 13:46:24.492
• [4.081 seconds]
------------------------------
SSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 07/27/24 13:46:24.498
  Jul 27 13:46:24.498: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename pods @ 07/27/24 13:46:24.499
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:46:24.515
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:46:24.517
  STEP: creating the pod @ 07/27/24 13:46:24.518
  STEP: submitting the pod to kubernetes @ 07/27/24 13:46:24.518
  E0727 13:46:24.985822      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:46:25.985918      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 07/27/24 13:46:26.538
  STEP: updating the pod @ 07/27/24 13:46:26.541
  E0727 13:46:26.986138      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:46:27.052: INFO: Successfully updated pod "pod-update-7db1b6e2-58c3-427b-9e49-b7488d531c39"
  STEP: verifying the updated pod is in kubernetes @ 07/27/24 13:46:27.056
  Jul 27 13:46:27.060: INFO: Pod update OK
  Jul 27 13:46:27.060: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1230" for this suite. @ 07/27/24 13:46:27.064
• [2.572 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 07/27/24 13:46:27.07
  Jul 27 13:46:27.070: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename downward-api @ 07/27/24 13:46:27.071
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:46:27.089
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:46:27.091
  STEP: Creating a pod to test downward API volume plugin @ 07/27/24 13:46:27.092
  E0727 13:46:27.986214      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:46:28.986411      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/27/24 13:46:29.111
  Jul 27 13:46:29.115: INFO: Trying to get logs from node ip-172-31-18-96 pod downwardapi-volume-877f985e-adec-44bd-855f-d32536dc238b container client-container: <nil>
  STEP: delete the pod @ 07/27/24 13:46:29.121
  Jul 27 13:46:29.140: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3510" for this suite. @ 07/27/24 13:46:29.143
• [2.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 07/27/24 13:46:29.151
  Jul 27 13:46:29.151: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename secrets @ 07/27/24 13:46:29.151
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:46:29.169
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:46:29.171
  STEP: Creating secret with name secret-test-e11aaad3-b70b-43e2-859e-cb9f43db1d49 @ 07/27/24 13:46:29.172
  STEP: Creating a pod to test consume secrets @ 07/27/24 13:46:29.177
  E0727 13:46:29.986527      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:46:30.986997      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/27/24 13:46:31.196
  Jul 27 13:46:31.198: INFO: Trying to get logs from node ip-172-31-18-96 pod pod-secrets-409deeef-5be3-4ad9-8989-c2fd17abfd44 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/27/24 13:46:31.205
  Jul 27 13:46:31.220: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-779" for this suite. @ 07/27/24 13:46:31.223
• [2.079 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 07/27/24 13:46:31.23
  Jul 27 13:46:31.230: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename container-probe @ 07/27/24 13:46:31.23
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:46:31.248
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:46:31.25
  STEP: Creating pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736 @ 07/27/24 13:46:31.252
  E0727 13:46:31.988043      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:46:32.988176      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/27/24 13:46:33.27
  Jul 27 13:46:33.273: INFO: Initial restart count of pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 is 0
  Jul 27 13:46:33.276: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:46:33.988306      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:46:34.988489      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:46:35.281: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:46:35.988940      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:46:36.989068      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:46:37.285: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:46:37.989274      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:46:38.989350      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:46:39.290: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:46:39.990374      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:46:40.990582      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:46:41.295: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:46:41.991430      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:46:42.991508      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:46:43.300: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:46:43.991658      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:46:44.991961      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:46:45.304: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:46:45.992497      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:46:46.992774      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:46:47.310: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:46:47.992850      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:46:48.993045      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:46:49.314: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:46:49.993142      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:46:50.993185      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:46:51.318: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:46:51.993771      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:46:52.993872      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:46:53.323: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:46:53.994198      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:46:54.994272      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:46:55.328: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:46:55.994378      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:46:56.994467      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:46:57.333: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:46:57.995360      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:46:58.995539      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:46:59.338: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:46:59.995660      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:47:00.995770      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:47:01.343: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:47:01.995814      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:47:02.997381      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:47:03.348: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:47:03.998228      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:47:04.998377      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:47:05.354: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:47:05.998872      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:47:06.999051      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:47:07.359: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:47:07.999159      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:47:08.999374      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:47:09.363: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:47:09.999566      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:47:10.999793      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:47:11.368: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:47:12.000590      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:47:13.000649      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:47:13.373: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:47:14.000846      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:47:15.001114      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:47:15.377: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:47:16.001331      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:47:17.001422      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:47:17.383: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:47:18.001623      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:47:19.001723      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:47:19.387: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:47:20.002345      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:47:21.002802      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:47:21.391: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:47:22.002739      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:47:23.003537      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:47:23.396: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:47:24.003780      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:47:25.003971      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:47:25.400: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:47:26.004135      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:47:27.004329      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:47:27.405: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:47:28.004770      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:47:29.005103      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:47:29.409: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:47:30.005166      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:47:31.005266      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:47:31.414: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:47:32.006022      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:47:33.006155      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:47:33.418: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:47:34.006310      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:47:35.006607      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:47:35.423: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:47:36.007590      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:47:37.007798      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:47:37.428: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:47:38.008257      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:47:39.008372      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:47:39.433: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:47:40.009256      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:47:41.010231      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:47:41.438: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:47:42.010318      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:47:43.010681      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:47:43.443: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:47:44.011457      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:47:45.011548      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:47:45.448: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:47:46.012472      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:47:47.012614      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:47:47.454: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:47:48.012682      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:47:49.013472      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:47:49.458: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:47:50.013945      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:47:51.014056      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:47:51.464: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:47:52.014958      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:47:53.015038      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:47:53.469: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:47:54.015743      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:47:55.015927      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:47:55.473: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:47:56.016022      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:47:57.016197      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:47:57.479: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:47:58.016719      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:47:59.016812      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:47:59.483: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:48:00.017110      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:48:01.017183      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:48:01.488: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:48:02.017812      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:48:03.018051      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:48:03.492: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:48:04.018219      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:48:05.018302      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:48:05.498: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:48:06.019296      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:48:07.019649      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:48:07.502: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:48:08.019746      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:48:09.019841      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:48:09.506: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:48:10.019927      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:48:11.020139      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:48:11.510: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:48:12.020192      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:48:13.020297      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:48:13.516: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:48:14.021107      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:48:15.021211      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:48:15.520: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:48:16.021674      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:48:17.021770      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:48:17.526: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:48:18.022310      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:48:19.022371      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:48:19.531: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:48:20.023378      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:48:21.023542      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:48:21.536: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:48:22.024449      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:48:23.024543      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:48:23.541: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:48:24.024582      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:48:25.024673      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:48:25.546: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:48:26.024767      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:48:27.025390      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:48:27.551: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:48:28.025612      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:48:29.026198      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:48:29.556: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:48:30.027093      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:48:31.027195      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:48:31.560: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:48:32.027709      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:48:33.028436      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:48:33.565: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:48:34.028859      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:48:35.028959      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:48:35.569: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:48:36.029347      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:48:37.029443      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:48:37.574: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:48:38.029830      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:48:39.030521      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:48:39.579: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:48:40.030606      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:48:41.031570      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:48:41.583: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:48:42.032594      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:48:43.032640      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:48:43.588: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:48:44.033311      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:48:45.034224      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:48:45.593: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:48:46.035179      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:48:47.035402      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:48:47.598: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:48:48.035764      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:48:49.035861      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:48:49.603: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:48:50.036161      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:48:51.036242      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:48:51.608: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:48:52.036439      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:48:53.036749      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:48:53.613: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:48:54.037357      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:48:55.038200      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:48:55.617: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:48:56.039039      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:48:57.039154      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:48:57.621: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:48:58.040200      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:48:59.041104      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:48:59.625: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:49:00.041286      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:49:01.042198      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:49:01.631: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:49:02.042240      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:49:03.042321      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:49:03.636: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:49:04.042475      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:49:05.042645      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:49:05.640: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:49:06.043003      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:49:07.043511      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:49:07.645: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:49:08.044377      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:49:09.044624      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:49:09.650: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:49:10.044835      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:49:11.044925      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:49:11.655: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:49:12.044908      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:49:13.045146      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:49:13.659: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:49:14.045953      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:49:15.046075      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:49:15.664: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:49:16.046664      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:49:17.047037      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:49:17.669: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:49:18.047846      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:49:19.048190      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:49:19.674: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:49:20.048282      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:49:21.048640      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:49:21.678: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:49:22.049421      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:49:23.050209      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:49:23.683: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:49:24.051259      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:49:25.052228      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:49:25.687: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:49:26.052258      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:49:27.052432      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:49:27.692: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:49:28.052808      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:49:29.052915      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:49:29.696: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:49:30.052994      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:49:31.053131      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:49:31.700: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:49:32.054225      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:49:33.054315      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:49:33.705: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:49:34.054423      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:49:35.054630      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:49:35.710: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:49:36.055592      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:49:37.055702      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:49:37.714: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:49:38.056261      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:49:39.057278      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:49:39.720: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:49:40.058259      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:49:41.058356      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:49:41.724: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:49:42.059265      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:49:43.059362      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:49:43.729: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:49:44.059461      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:49:45.059669      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:49:45.735: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:49:46.060751      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:49:47.061149      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:49:47.740: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:49:48.061865      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:49:49.062198      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:49:49.745: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:49:50.063231      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:49:51.063328      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:49:51.749: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:49:52.064404      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:49:53.064503      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:49:53.754: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:49:54.065368      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:49:55.066218      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:49:55.759: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:49:56.066316      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:49:57.066501      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:49:57.765: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:49:58.066814      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:49:59.066901      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:49:59.769: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:50:00.066969      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:50:01.067079      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:50:01.774: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:50:02.067635      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:50:03.067728      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:50:03.779: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:50:04.067812      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:50:05.067979      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:50:05.785: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:50:06.068117      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:50:07.068325      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:50:07.790: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:50:08.069352      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:50:09.069453      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:50:09.794: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:50:10.070221      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:50:11.070318      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:50:11.799: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:50:12.070490      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:50:13.070552      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:50:13.803: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:50:14.070747      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:50:15.070898      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:50:15.807: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:50:16.071184      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:50:17.071242      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:50:17.812: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:50:18.071768      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:50:19.072078      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:50:19.816: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:50:20.072171      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:50:21.072665      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:50:21.821: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:50:22.073248      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:50:23.073340      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:50:23.825: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:50:24.074085      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:50:25.074204      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:50:25.830: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:50:26.074530      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:50:27.074605      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:50:27.834: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:50:28.074702      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:50:29.074919      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:50:29.839: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:50:30.075458      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:50:31.075642      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:50:31.843: INFO: Get pod liveness-2da33530-3fc4-4511-b9c2-740725be61d5 in namespace container-probe-7736
  E0727 13:50:32.076105      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:50:33.076194      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 07/27/24 13:50:33.844
  Jul 27 13:50:33.856: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7736" for this suite. @ 07/27/24 13:50:33.86
• [242.638 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:695
  STEP: Creating a kubernetes client @ 07/27/24 13:50:33.868
  Jul 27 13:50:33.868: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename resourcequota @ 07/27/24 13:50:33.869
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:50:33.886
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:50:33.888
  STEP: Creating a ResourceQuota with terminating scope @ 07/27/24 13:50:33.89
  STEP: Ensuring ResourceQuota status is calculated @ 07/27/24 13:50:33.894
  E0727 13:50:34.077090      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:50:35.077174      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 07/27/24 13:50:35.899
  STEP: Ensuring ResourceQuota status is calculated @ 07/27/24 13:50:35.905
  E0727 13:50:36.077294      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:50:37.078229      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 07/27/24 13:50:37.909
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 07/27/24 13:50:37.922
  E0727 13:50:38.078280      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:50:39.078379      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 07/27/24 13:50:39.926
  E0727 13:50:40.078638      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:50:41.078928      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 07/27/24 13:50:41.93
  STEP: Ensuring resource quota status released the pod usage @ 07/27/24 13:50:41.946
  E0727 13:50:42.079640      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:50:43.079785      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 07/27/24 13:50:43.951
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 07/27/24 13:50:43.963
  E0727 13:50:44.080720      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:50:45.080924      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 07/27/24 13:50:45.967
  E0727 13:50:46.080989      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:50:47.081143      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 07/27/24 13:50:47.973
  STEP: Ensuring resource quota status released the pod usage @ 07/27/24 13:50:47.984
  E0727 13:50:48.081720      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:50:49.081807      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:50:49.988: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7515" for this suite. @ 07/27/24 13:50:49.992
• [16.130 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:391
  STEP: Creating a kubernetes client @ 07/27/24 13:50:49.999
  Jul 27 13:50:49.999: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/27/24 13:50:49.999
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:50:50.015
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:50:50.017
  STEP: set up a multi version CRD @ 07/27/24 13:50:50.019
  Jul 27 13:50:50.019: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  E0727 13:50:50.082091      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:50:51.082684      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:50:52.083377      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:50:53.083385      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: rename a version @ 07/27/24 13:50:53.098
  STEP: check the new version name is served @ 07/27/24 13:50:53.112
  STEP: check the old version name is removed @ 07/27/24 13:50:53.881
  E0727 13:50:54.083440      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 07/27/24 13:50:54.482
  E0727 13:50:55.083999      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:50:56.084193      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:50:56.939: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7259" for this suite. @ 07/27/24 13:50:56.946
• [6.954 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 07/27/24 13:50:56.953
  Jul 27 13:50:56.953: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename containers @ 07/27/24 13:50:56.954
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:50:56.968
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:50:56.97
  STEP: Creating a pod to test override command @ 07/27/24 13:50:56.973
  E0727 13:50:57.084677      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:50:58.085155      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:50:59.086011      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:51:00.086350      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/27/24 13:51:00.995
  Jul 27 13:51:00.999: INFO: Trying to get logs from node ip-172-31-18-96 pod client-containers-138bf0e6-60d6-47ad-a456-d55f7618300c container agnhost-container: <nil>
  STEP: delete the pod @ 07/27/24 13:51:01.015
  Jul 27 13:51:01.030: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-7031" for this suite. @ 07/27/24 13:51:01.034
• [4.091 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1798
  STEP: Creating a kubernetes client @ 07/27/24 13:51:01.045
  Jul 27 13:51:01.045: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename kubectl @ 07/27/24 13:51:01.046
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:51:01.061
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:51:01.064
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 07/27/24 13:51:01.066
  Jul 27 13:51:01.066: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-7555 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  E0727 13:51:01.086858      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:51:01.119: INFO: stderr: ""
  Jul 27 13:51:01.119: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 07/27/24 13:51:01.119
  E0727 13:51:02.086980      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:51:03.087071      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:51:04.087207      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:51:05.087262      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:51:06.087479      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 07/27/24 13:51:06.171
  Jul 27 13:51:06.171: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-7555 get pod e2e-test-httpd-pod -o json'
  Jul 27 13:51:06.215: INFO: stderr: ""
  Jul 27 13:51:06.216: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2024-07-27T13:51:01Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-7555\",\n        \"resourceVersion\": \"47147\",\n        \"uid\": \"522afea3-94fb-46ce-9080-05e8059cede9\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-bb8s4\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ip-172-31-18-96\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-bb8s4\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-07-27T13:51:02Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-07-27T13:51:01Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-07-27T13:51:02Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-07-27T13:51:02Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-07-27T13:51:01Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://9f3b79ea4b95c1d6dfebdeec539112a9c89f3d94c4fcbedf7fc406b0acb2d45a\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2024-07-27T13:51:01Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"172.31.18.96\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"172.31.18.96\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"192.168.122.170\",\n        \"podIPs\": [\n            {\n                \"ip\": \"192.168.122.170\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2024-07-27T13:51:01Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 07/27/24 13:51:06.216
  Jul 27 13:51:06.216: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-7555 replace -f -'
  Jul 27 13:51:06.301: INFO: stderr: ""
  Jul 27 13:51:06.301: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 07/27/24 13:51:06.301
  Jul 27 13:51:06.305: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-7555 delete pods e2e-test-httpd-pod'
  E0727 13:51:07.087550      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:51:08.087661      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:51:08.357: INFO: stderr: ""
  Jul 27 13:51:08.357: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Jul 27 13:51:08.357: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7555" for this suite. @ 07/27/24 13:51:08.361
• [7.323 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:808
  STEP: Creating a kubernetes client @ 07/27/24 13:51:08.368
  Jul 27 13:51:08.368: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename resourcequota @ 07/27/24 13:51:08.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:51:08.382
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:51:08.384
  STEP: Creating a ResourceQuota with best effort scope @ 07/27/24 13:51:08.387
  STEP: Ensuring ResourceQuota status is calculated @ 07/27/24 13:51:08.391
  E0727 13:51:09.088724      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:51:10.088841      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not best effort scope @ 07/27/24 13:51:10.396
  STEP: Ensuring ResourceQuota status is calculated @ 07/27/24 13:51:10.402
  E0727 13:51:11.089095      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:51:12.090145      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a best-effort pod @ 07/27/24 13:51:12.408
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 07/27/24 13:51:12.422
  E0727 13:51:13.090753      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:51:14.090863      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 07/27/24 13:51:14.426
  E0727 13:51:15.091880      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:51:16.091940      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 07/27/24 13:51:16.431
  STEP: Ensuring resource quota status released the pod usage @ 07/27/24 13:51:16.443
  E0727 13:51:17.092567      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:51:18.092731      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a not best-effort pod @ 07/27/24 13:51:18.448
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 07/27/24 13:51:18.46
  E0727 13:51:19.092809      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:51:20.093097      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 07/27/24 13:51:20.465
  E0727 13:51:21.093178      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:51:22.094066      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 07/27/24 13:51:22.47
  STEP: Ensuring resource quota status released the pod usage @ 07/27/24 13:51:22.486
  E0727 13:51:23.094524      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:51:24.095398      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:51:24.492: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-159" for this suite. @ 07/27/24 13:51:24.496
• [16.135 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 07/27/24 13:51:24.503
  Jul 27 13:51:24.503: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename daemonsets @ 07/27/24 13:51:24.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:51:24.523
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:51:24.526
  Jul 27 13:51:24.546: INFO: Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 07/27/24 13:51:24.552
  Jul 27 13:51:24.555: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul 27 13:51:24.555: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 07/27/24 13:51:24.555
  Jul 27 13:51:24.573: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul 27 13:51:24.573: INFO: Node ip-172-31-76-31 is running 0 daemon pod, expected 1
  E0727 13:51:25.095489      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:51:25.574: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jul 27 13:51:25.574: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 07/27/24 13:51:25.578
  Jul 27 13:51:25.595: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jul 27 13:51:25.595: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  E0727 13:51:26.095625      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:51:26.596: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul 27 13:51:26.596: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 07/27/24 13:51:26.596
  Jul 27 13:51:26.607: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul 27 13:51:26.607: INFO: Node ip-172-31-76-31 is running 0 daemon pod, expected 1
  E0727 13:51:27.096572      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:51:27.608: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jul 27 13:51:27.608: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 07/27/24 13:51:27.614
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6600, will wait for the garbage collector to delete the pods @ 07/27/24 13:51:27.614
  Jul 27 13:51:27.676: INFO: Deleting DaemonSet.extensions daemon-set took: 6.957753ms
  Jul 27 13:51:27.777: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.079223ms
  E0727 13:51:28.096918      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:51:29.097747      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:51:29.482: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul 27 13:51:29.482: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jul 27 13:51:29.485: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"47328"},"items":null}

  Jul 27 13:51:29.488: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"47328"},"items":null}

  Jul 27 13:51:29.510: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6600" for this suite. @ 07/27/24 13:51:29.52
• [5.025 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:810
  STEP: Creating a kubernetes client @ 07/27/24 13:51:29.529
  Jul 27 13:51:29.529: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename svcaccounts @ 07/27/24 13:51:29.529
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:51:29.542
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:51:29.545
  STEP: Creating ServiceAccount "e2e-sa-ps9xb"  @ 07/27/24 13:51:29.548
  Jul 27 13:51:29.553: INFO: AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-ps9xb"  @ 07/27/24 13:51:29.553
  Jul 27 13:51:29.561: INFO: AutomountServiceAccountToken: true
  Jul 27 13:51:29.561: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-457" for this suite. @ 07/27/24 13:51:29.564
• [0.042 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 07/27/24 13:51:29.571
  Jul 27 13:51:29.571: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename watch @ 07/27/24 13:51:29.572
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:51:29.585
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:51:29.587
  STEP: creating a watch on configmaps with label A @ 07/27/24 13:51:29.59
  STEP: creating a watch on configmaps with label B @ 07/27/24 13:51:29.592
  STEP: creating a watch on configmaps with label A or B @ 07/27/24 13:51:29.593
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 07/27/24 13:51:29.594
  Jul 27 13:51:29.598: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3471  ecdd397c-8492-49fa-b82d-2274089c2e22 47349 0 2024-07-27 13:51:29 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-07-27 13:51:29 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jul 27 13:51:29.598: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3471  ecdd397c-8492-49fa-b82d-2274089c2e22 47349 0 2024-07-27 13:51:29 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-07-27 13:51:29 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 07/27/24 13:51:29.598
  Jul 27 13:51:29.606: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3471  ecdd397c-8492-49fa-b82d-2274089c2e22 47350 0 2024-07-27 13:51:29 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-07-27 13:51:29 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jul 27 13:51:29.607: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3471  ecdd397c-8492-49fa-b82d-2274089c2e22 47350 0 2024-07-27 13:51:29 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-07-27 13:51:29 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 07/27/24 13:51:29.607
  Jul 27 13:51:29.614: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3471  ecdd397c-8492-49fa-b82d-2274089c2e22 47351 0 2024-07-27 13:51:29 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-07-27 13:51:29 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jul 27 13:51:29.614: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3471  ecdd397c-8492-49fa-b82d-2274089c2e22 47351 0 2024-07-27 13:51:29 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-07-27 13:51:29 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 07/27/24 13:51:29.614
  Jul 27 13:51:29.620: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3471  ecdd397c-8492-49fa-b82d-2274089c2e22 47352 0 2024-07-27 13:51:29 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-07-27 13:51:29 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jul 27 13:51:29.620: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3471  ecdd397c-8492-49fa-b82d-2274089c2e22 47352 0 2024-07-27 13:51:29 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-07-27 13:51:29 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 07/27/24 13:51:29.621
  Jul 27 13:51:29.625: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-3471  72f9ef10-e7e1-414c-bc63-ff0ba9c0f21a 47353 0 2024-07-27 13:51:29 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-07-27 13:51:29 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jul 27 13:51:29.625: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-3471  72f9ef10-e7e1-414c-bc63-ff0ba9c0f21a 47353 0 2024-07-27 13:51:29 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-07-27 13:51:29 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0727 13:51:30.097821      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:51:31.097933      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:51:32.098115      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:51:33.099239      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:51:34.099358      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:51:35.099457      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:51:36.099611      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:51:37.099807      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:51:38.100031      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:51:39.100237      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 07/27/24 13:51:39.625
  Jul 27 13:51:39.633: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-3471  72f9ef10-e7e1-414c-bc63-ff0ba9c0f21a 47409 0 2024-07-27 13:51:29 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-07-27 13:51:29 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jul 27 13:51:39.633: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-3471  72f9ef10-e7e1-414c-bc63-ff0ba9c0f21a 47409 0 2024-07-27 13:51:29 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-07-27 13:51:29 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0727 13:51:40.101083      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:51:41.101169      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:51:42.102203      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:51:43.102319      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:51:44.102448      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:51:45.102680      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:51:46.102783      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:51:47.102981      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:51:48.103273      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:51:49.103377      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:51:49.634: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3471" for this suite. @ 07/27/24 13:51:49.639
• [20.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 07/27/24 13:51:49.646
  Jul 27 13:51:49.646: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename replicaset @ 07/27/24 13:51:49.647
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:51:49.662
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:51:49.666
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 07/27/24 13:51:49.668
  E0727 13:51:50.103998      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:51:51.104203      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When a replicaset with a matching selector is created @ 07/27/24 13:51:51.688
  STEP: Then the orphan pod is adopted @ 07/27/24 13:51:51.693
  E0727 13:51:52.104505      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When the matched label of one of its pods change @ 07/27/24 13:51:52.701
  Jul 27 13:51:52.705: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 07/27/24 13:51:52.715
  E0727 13:51:53.105226      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:51:53.729: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1999" for this suite. @ 07/27/24 13:51:53.734
• [4.095 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 07/27/24 13:51:53.742
  Jul 27 13:51:53.742: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename configmap @ 07/27/24 13:51:53.742
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:51:53.757
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:51:53.759
  STEP: Creating configMap with name cm-test-opt-del-585ba617-61da-49e1-8deb-d76c5b09b6eb @ 07/27/24 13:51:53.766
  STEP: Creating configMap with name cm-test-opt-upd-ff7804d2-53d3-43f4-ae82-4e86cc8e5342 @ 07/27/24 13:51:53.77
  STEP: Creating the pod @ 07/27/24 13:51:53.774
  E0727 13:51:54.106278      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:51:55.106480      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-585ba617-61da-49e1-8deb-d76c5b09b6eb @ 07/27/24 13:51:55.831
  STEP: Updating configmap cm-test-opt-upd-ff7804d2-53d3-43f4-ae82-4e86cc8e5342 @ 07/27/24 13:51:55.838
  STEP: Creating configMap with name cm-test-opt-create-49243a4a-6e62-4e62-913e-684e5d843bd5 @ 07/27/24 13:51:55.842
  STEP: waiting to observe update in volume @ 07/27/24 13:51:55.847
  E0727 13:51:56.106873      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:51:57.106976      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:51:58.107414      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:51:59.107522      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:52:00.107621      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:52:01.108175      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:52:02.109192      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:52:03.109307      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:52:04.109763      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:52:05.110260      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:52:06.110763      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:52:07.110888      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:52:08.111012      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:52:09.111236      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:52:10.111909      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:52:11.111998      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:52:12.113081      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:52:13.113170      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:52:14.113716      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:52:15.113806      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:52:16.114205      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:52:17.114292      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:52:18.114623      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:52:19.114725      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:52:20.115493      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:52:21.115603      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:52:22.116670      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:52:23.116800      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:52:24.117469      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:52:25.118228      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:52:26.118894      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:52:27.119023      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:52:28.119299      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:52:29.119372      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:52:30.120191      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:52:31.120407      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:52:32.120964      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:52:33.121218      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:52:34.121672      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:52:35.122212      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:52:36.122999      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:52:37.123154      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:52:38.123235      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:52:39.123307      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:52:40.123497      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:52:41.123587      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:52:42.124656      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:52:43.124630      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:52:44.125598      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:52:45.126249      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:52:46.127185      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:52:47.127278      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:52:48.127355      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:52:49.127553      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:52:50.128507      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:52:51.128621      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:52:52.129153      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:52:53.129236      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:52:54.129253      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:52:55.130268      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:52:56.130684      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:52:57.130862      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:52:58.130867      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:52:58.138: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4913" for this suite. @ 07/27/24 13:52:58.142
• [64.407 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 07/27/24 13:52:58.149
  Jul 27 13:52:58.149: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename runtimeclass @ 07/27/24 13:52:58.149
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:52:58.165
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:52:58.168
  Jul 27 13:52:58.197: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7896" for this suite. @ 07/27/24 13:52:58.201
• [0.060 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 07/27/24 13:52:58.21
  Jul 27 13:52:58.210: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename secrets @ 07/27/24 13:52:58.211
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:52:58.225
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:52:58.228
  STEP: Creating secret with name secret-test-5dccf064-2a1e-4f8d-a940-580790fabe55 @ 07/27/24 13:52:58.23
  STEP: Creating a pod to test consume secrets @ 07/27/24 13:52:58.234
  E0727 13:52:59.130962      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:53:00.131067      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:53:01.131457      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:53:02.131780      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/27/24 13:53:02.258
  Jul 27 13:53:02.262: INFO: Trying to get logs from node ip-172-31-18-96 pod pod-secrets-8ae95cf6-43a5-4e3b-bd57-df8aae587781 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/27/24 13:53:02.273
  Jul 27 13:53:02.287: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6558" for this suite. @ 07/27/24 13:53:02.29
• [4.087 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3565
  STEP: Creating a kubernetes client @ 07/27/24 13:53:02.297
  Jul 27 13:53:02.297: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename services @ 07/27/24 13:53:02.298
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:53:02.312
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:53:02.314
  STEP: creating a collection of services @ 07/27/24 13:53:02.319
  Jul 27 13:53:02.319: INFO: Creating e2e-svc-a-q7467
  Jul 27 13:53:02.331: INFO: Creating e2e-svc-b-2s4zx
  Jul 27 13:53:02.346: INFO: Creating e2e-svc-c-7226v
  STEP: deleting service collection @ 07/27/24 13:53:02.36
  Jul 27 13:53:02.392: INFO: Collection of services has been deleted
  Jul 27 13:53:02.392: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-236" for this suite. @ 07/27/24 13:53:02.395
• [0.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:76
  STEP: Creating a kubernetes client @ 07/27/24 13:53:02.402
  Jul 27 13:53:02.402: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename var-expansion @ 07/27/24 13:53:02.403
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:53:02.416
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:53:02.419
  STEP: Creating a pod to test substitution in container's command @ 07/27/24 13:53:02.421
  E0727 13:53:03.131857      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:53:04.131958      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:53:05.132057      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:53:06.132138      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/27/24 13:53:06.45
  Jul 27 13:53:06.454: INFO: Trying to get logs from node ip-172-31-18-96 pod var-expansion-44206e35-0493-4170-9d46-e78b2453b974 container dapi-container: <nil>
  STEP: delete the pod @ 07/27/24 13:53:06.461
  Jul 27 13:53:06.477: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8486" for this suite. @ 07/27/24 13:53:06.48
• [4.085 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 07/27/24 13:53:06.488
  Jul 27 13:53:06.488: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename container-probe @ 07/27/24 13:53:06.488
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:53:06.505
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:53:06.507
  STEP: Creating pod test-grpc-6b7ced11-ba65-4a1c-87c0-63112653478b in namespace container-probe-6161 @ 07/27/24 13:53:06.51
  E0727 13:53:07.132972      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:53:08.133182      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/27/24 13:53:08.529
  Jul 27 13:53:08.534: INFO: Initial restart count of pod test-grpc-6b7ced11-ba65-4a1c-87c0-63112653478b is 0
  Jul 27 13:53:08.538: INFO: Get pod test-grpc-6b7ced11-ba65-4a1c-87c0-63112653478b in namespace container-probe-6161
  E0727 13:53:09.134017      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:53:10.134226      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:53:10.543: INFO: Get pod test-grpc-6b7ced11-ba65-4a1c-87c0-63112653478b in namespace container-probe-6161
  E0727 13:53:11.135113      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:53:12.135230      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:53:12.548: INFO: Get pod test-grpc-6b7ced11-ba65-4a1c-87c0-63112653478b in namespace container-probe-6161
  E0727 13:53:13.135684      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:53:14.135895      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:53:14.553: INFO: Get pod test-grpc-6b7ced11-ba65-4a1c-87c0-63112653478b in namespace container-probe-6161
  E0727 13:53:15.136176      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:53:16.136376      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:53:16.557: INFO: Get pod test-grpc-6b7ced11-ba65-4a1c-87c0-63112653478b in namespace container-probe-6161
  E0727 13:53:17.136509      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:53:18.136659      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:53:18.563: INFO: Get pod test-grpc-6b7ced11-ba65-4a1c-87c0-63112653478b in namespace container-probe-6161
  E0727 13:53:19.137138      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:53:20.137181      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:53:20.569: INFO: Get pod test-grpc-6b7ced11-ba65-4a1c-87c0-63112653478b in namespace container-probe-6161
  E0727 13:53:21.137972      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:53:22.138061      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:53:22.574: INFO: Get pod test-grpc-6b7ced11-ba65-4a1c-87c0-63112653478b in namespace container-probe-6161
  E0727 13:53:23.139109      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:53:24.139330      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:53:24.578: INFO: Get pod test-grpc-6b7ced11-ba65-4a1c-87c0-63112653478b in namespace container-probe-6161
  E0727 13:53:25.139547      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:53:26.139873      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:53:26.584: INFO: Get pod test-grpc-6b7ced11-ba65-4a1c-87c0-63112653478b in namespace container-probe-6161
  E0727 13:53:27.140713      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:53:28.140887      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:53:28.589: INFO: Get pod test-grpc-6b7ced11-ba65-4a1c-87c0-63112653478b in namespace container-probe-6161
  E0727 13:53:29.141783      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:53:30.141879      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:53:30.594: INFO: Get pod test-grpc-6b7ced11-ba65-4a1c-87c0-63112653478b in namespace container-probe-6161
  E0727 13:53:31.142047      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:53:32.142141      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:53:32.598: INFO: Get pod test-grpc-6b7ced11-ba65-4a1c-87c0-63112653478b in namespace container-probe-6161
  E0727 13:53:33.142233      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:53:34.142626      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:53:34.602: INFO: Get pod test-grpc-6b7ced11-ba65-4a1c-87c0-63112653478b in namespace container-probe-6161
  E0727 13:53:35.143613      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:53:36.144235      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:53:36.608: INFO: Get pod test-grpc-6b7ced11-ba65-4a1c-87c0-63112653478b in namespace container-probe-6161
  E0727 13:53:37.145118      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:53:38.145147      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:53:38.612: INFO: Get pod test-grpc-6b7ced11-ba65-4a1c-87c0-63112653478b in namespace container-probe-6161
  E0727 13:53:39.146223      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:53:40.146436      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:53:40.618: INFO: Get pod test-grpc-6b7ced11-ba65-4a1c-87c0-63112653478b in namespace container-probe-6161
  E0727 13:53:41.146669      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:53:42.146767      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:53:42.622: INFO: Get pod test-grpc-6b7ced11-ba65-4a1c-87c0-63112653478b in namespace container-probe-6161
  E0727 13:53:43.147653      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:53:44.147807      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:53:44.627: INFO: Get pod test-grpc-6b7ced11-ba65-4a1c-87c0-63112653478b in namespace container-probe-6161
  E0727 13:53:45.148762      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:53:46.148868      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:53:46.632: INFO: Get pod test-grpc-6b7ced11-ba65-4a1c-87c0-63112653478b in namespace container-probe-6161
  E0727 13:53:47.149529      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:53:48.149703      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:53:48.637: INFO: Get pod test-grpc-6b7ced11-ba65-4a1c-87c0-63112653478b in namespace container-probe-6161
  E0727 13:53:49.150228      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:53:50.150247      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:53:50.642: INFO: Get pod test-grpc-6b7ced11-ba65-4a1c-87c0-63112653478b in namespace container-probe-6161
  E0727 13:53:51.150686      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:53:52.150799      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:53:52.648: INFO: Get pod test-grpc-6b7ced11-ba65-4a1c-87c0-63112653478b in namespace container-probe-6161
  E0727 13:53:53.150904      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:53:54.150968      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:53:54.652: INFO: Get pod test-grpc-6b7ced11-ba65-4a1c-87c0-63112653478b in namespace container-probe-6161
  E0727 13:53:55.151418      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:53:56.152087      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:53:56.658: INFO: Get pod test-grpc-6b7ced11-ba65-4a1c-87c0-63112653478b in namespace container-probe-6161
  E0727 13:53:57.153032      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:53:58.153153      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:53:58.663: INFO: Get pod test-grpc-6b7ced11-ba65-4a1c-87c0-63112653478b in namespace container-probe-6161
  E0727 13:53:59.154082      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:54:00.154185      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:54:00.669: INFO: Get pod test-grpc-6b7ced11-ba65-4a1c-87c0-63112653478b in namespace container-probe-6161
  E0727 13:54:01.154830      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:54:02.155123      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:54:02.674: INFO: Get pod test-grpc-6b7ced11-ba65-4a1c-87c0-63112653478b in namespace container-probe-6161
  E0727 13:54:03.156093      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:54:04.156297      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:54:04.679: INFO: Get pod test-grpc-6b7ced11-ba65-4a1c-87c0-63112653478b in namespace container-probe-6161
  E0727 13:54:05.156647      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:54:06.156851      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:54:06.684: INFO: Get pod test-grpc-6b7ced11-ba65-4a1c-87c0-63112653478b in namespace container-probe-6161
  E0727 13:54:07.157867      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:54:08.157955      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:54:08.689: INFO: Get pod test-grpc-6b7ced11-ba65-4a1c-87c0-63112653478b in namespace container-probe-6161
  E0727 13:54:09.158115      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:54:10.158174      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:54:10.694: INFO: Get pod test-grpc-6b7ced11-ba65-4a1c-87c0-63112653478b in namespace container-probe-6161
  E0727 13:54:11.158354      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:54:12.159309      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:54:12.698: INFO: Get pod test-grpc-6b7ced11-ba65-4a1c-87c0-63112653478b in namespace container-probe-6161
  E0727 13:54:13.159379      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:54:14.159473      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:54:14.703: INFO: Get pod test-grpc-6b7ced11-ba65-4a1c-87c0-63112653478b in namespace container-probe-6161
  E0727 13:54:15.160496      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:54:16.160848      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:54:16.709: INFO: Get pod test-grpc-6b7ced11-ba65-4a1c-87c0-63112653478b in namespace container-probe-6161
  E0727 13:54:17.161580      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:54:18.161668      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:54:18.715: INFO: Get pod test-grpc-6b7ced11-ba65-4a1c-87c0-63112653478b in namespace container-probe-6161
  E0727 13:54:19.162453      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:54:20.162633      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:54:20.719: INFO: Get pod test-grpc-6b7ced11-ba65-4a1c-87c0-63112653478b in namespace container-probe-6161
  E0727 13:54:21.163446      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:54:22.163524      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:54:22.724: INFO: Get pod test-grpc-6b7ced11-ba65-4a1c-87c0-63112653478b in namespace container-probe-6161
  Jul 27 13:54:22.724: INFO: Restart count of pod container-probe-6161/test-grpc-6b7ced11-ba65-4a1c-87c0-63112653478b is now 1 (1m14.190230821s elapsed)
  STEP: deleting the pod @ 07/27/24 13:54:22.724
  Jul 27 13:54:22.737: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6161" for this suite. @ 07/27/24 13:54:22.742
• [76.262 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 07/27/24 13:54:22.75
  Jul 27 13:54:22.750: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename limitrange @ 07/27/24 13:54:22.751
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:54:22.765
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:54:22.767
  STEP: Creating LimitRange "e2e-limitrange-528ck" in namespace "limitrange-8966" @ 07/27/24 13:54:22.769
  STEP: Creating another limitRange in another namespace @ 07/27/24 13:54:22.775
  Jul 27 13:54:22.790: INFO: Namespace "e2e-limitrange-528ck-76" created
  Jul 27 13:54:22.790: INFO: Creating LimitRange "e2e-limitrange-528ck" in namespace "e2e-limitrange-528ck-76"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-528ck" @ 07/27/24 13:54:22.795
  Jul 27 13:54:22.798: INFO: Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-528ck" in "limitrange-8966" namespace @ 07/27/24 13:54:22.798
  Jul 27 13:54:22.805: INFO: LimitRange "e2e-limitrange-528ck" has been patched
  STEP: Delete LimitRange "e2e-limitrange-528ck" by Collection with labelSelector: "e2e-limitrange-528ck=patched" @ 07/27/24 13:54:22.805
  STEP: Confirm that the limitRange "e2e-limitrange-528ck" has been deleted @ 07/27/24 13:54:22.813
  Jul 27 13:54:22.813: INFO: Requesting list of LimitRange to confirm quantity
  Jul 27 13:54:22.815: INFO: Found 0 LimitRange with label "e2e-limitrange-528ck=patched"
  Jul 27 13:54:22.815: INFO: LimitRange "e2e-limitrange-528ck" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-528ck" @ 07/27/24 13:54:22.816
  Jul 27 13:54:22.819: INFO: Found 1 limitRange
  Jul 27 13:54:22.819: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-8966" for this suite. @ 07/27/24 13:54:22.822
  STEP: Destroying namespace "e2e-limitrange-528ck-76" for this suite. @ 07/27/24 13:54:22.829
• [0.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:531
  STEP: Creating a kubernetes client @ 07/27/24 13:54:22.838
  Jul 27 13:54:22.838: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename svcaccounts @ 07/27/24 13:54:22.838
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:54:22.851
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:54:22.853
  Jul 27 13:54:22.870: INFO: created pod
  E0727 13:54:23.164456      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:54:24.164582      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/27/24 13:54:24.881
  E0727 13:54:25.165277      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:54:26.165404      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:54:27.166255      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:54:28.166345      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:54:29.166415      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:54:30.166525      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:54:31.166730      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:54:32.167107      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:54:33.167186      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:54:34.167311      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:54:35.167453      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:54:36.167786      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:54:37.167900      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:54:38.168032      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:54:39.168365      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:54:40.168476      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:54:41.168576      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:54:42.168850      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:54:43.168962      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:54:44.169136      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:54:45.169238      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:54:46.170237      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:54:47.170859      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:54:48.171092      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:54:49.172163      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:54:50.173148      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:54:51.173239      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:54:52.174198      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:54:53.174334      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:54:54.174609      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:54:54.882: INFO: polling logs
  Jul 27 13:54:54.895: INFO: Pod logs: 
  I0727 13:54:23.449171       1 log.go:245] OK: Got token
  I0727 13:54:23.449217       1 log.go:245] validating with in-cluster discovery
  I0727 13:54:23.449359       1 log.go:245] OK: got issuer https://kubernetes.default.svc
  I0727 13:54:23.449371       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-9410:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0000135c0), NotBefore:(*jwt.NumericDate)(0xc0000136a8), IssuedAt:(*jwt.NumericDate)(0xc0000135d0), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-9410", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"66b784cd-dd28-4e9e-a2c4-7ce8b542cf88"}}}
  I0727 13:54:23.455408       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
  I0727 13:54:23.458561       1 log.go:245] OK: Validated signature on JWT
  I0727 13:54:23.458639       1 log.go:245] OK: Got valid claims from token!
  I0727 13:54:23.458672       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-9410:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000100ec8), NotBefore:(*jwt.NumericDate)(0xc000100f10), IssuedAt:(*jwt.NumericDate)(0xc000100ee0), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-9410", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"66b784cd-dd28-4e9e-a2c4-7ce8b542cf88"}}}

  Jul 27 13:54:54.895: INFO: completed pod
  Jul 27 13:54:54.902: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9410" for this suite. @ 07/27/24 13:54:54.906
• [32.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 07/27/24 13:54:54.913
  Jul 27 13:54:54.913: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename projected @ 07/27/24 13:54:54.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:54:54.929
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:54:54.931
  STEP: Creating configMap with name projected-configmap-test-volume-f2957425-eb89-4603-9d0b-29c41466bcc9 @ 07/27/24 13:54:54.933
  STEP: Creating a pod to test consume configMaps @ 07/27/24 13:54:54.938
  E0727 13:54:55.174767      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:54:56.174863      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/27/24 13:54:56.953
  Jul 27 13:54:56.957: INFO: Trying to get logs from node ip-172-31-18-96 pod pod-projected-configmaps-c9df3c98-e97d-4d14-b3a5-ebe195601d23 container agnhost-container: <nil>
  STEP: delete the pod @ 07/27/24 13:54:56.964
  Jul 27 13:54:56.983: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2834" for this suite. @ 07/27/24 13:54:56.987
• [2.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:170
  STEP: Creating a kubernetes client @ 07/27/24 13:54:56.995
  Jul 27 13:54:56.995: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename security-context @ 07/27/24 13:54:56.996
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:54:57.009
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:54:57.011
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 07/27/24 13:54:57.014
  E0727 13:54:57.175511      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:54:58.175607      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/27/24 13:54:59.035
  Jul 27 13:54:59.038: INFO: Trying to get logs from node ip-172-31-18-96 pod security-context-ba61303a-08aa-428b-a9fa-1a1a50bc7290 container test-container: <nil>
  STEP: delete the pod @ 07/27/24 13:54:59.045
  Jul 27 13:54:59.063: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-1930" for this suite. @ 07/27/24 13:54:59.067
• [2.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 07/27/24 13:54:59.074
  Jul 27 13:54:59.074: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename webhook @ 07/27/24 13:54:59.074
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:54:59.088
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:54:59.09
  STEP: Setting up server cert @ 07/27/24 13:54:59.115
  E0727 13:54:59.176350      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/27/24 13:54:59.404
  STEP: Deploying the webhook pod @ 07/27/24 13:54:59.413
  STEP: Wait for the deployment to be ready @ 07/27/24 13:54:59.426
  Jul 27 13:54:59.436: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0727 13:55:00.176559      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:55:01.176985      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/27/24 13:55:01.448
  STEP: Verifying the service has paired with the endpoint @ 07/27/24 13:55:01.459
  E0727 13:55:02.177182      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:55:02.460: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jul 27 13:55:02.468: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 07/27/24 13:55:02.979
  STEP: Creating a custom resource that should be denied by the webhook @ 07/27/24 13:55:02.992
  E0727 13:55:03.177484      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:55:04.177605      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 07/27/24 13:55:05.008
  STEP: Updating the custom resource with disallowed data should be denied @ 07/27/24 13:55:05.016
  STEP: Deleting the custom resource should be denied @ 07/27/24 13:55:05.024
  STEP: Remove the offending key and value from the custom resource data @ 07/27/24 13:55:05.031
  STEP: Deleting the updated custom resource should be successful @ 07/27/24 13:55:05.041
  E0727 13:55:05.178530      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:55:05.616: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9352" for this suite. @ 07/27/24 13:55:05.621
  STEP: Destroying namespace "webhook-markers-9593" for this suite. @ 07/27/24 13:55:05.633
• [6.566 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 07/27/24 13:55:05.64
  Jul 27 13:55:05.640: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename watch @ 07/27/24 13:55:05.641
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:55:05.665
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:55:05.669
  STEP: creating a watch on configmaps @ 07/27/24 13:55:05.672
  STEP: creating a new configmap @ 07/27/24 13:55:05.674
  STEP: modifying the configmap once @ 07/27/24 13:55:05.679
  STEP: closing the watch once it receives two notifications @ 07/27/24 13:55:05.69
  Jul 27 13:55:05.690: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2255  b3f6bd2f-1f80-4811-912d-859d58664383 48300 0 2024-07-27 13:55:05 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-07-27 13:55:05 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jul 27 13:55:05.690: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2255  b3f6bd2f-1f80-4811-912d-859d58664383 48301 0 2024-07-27 13:55:05 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-07-27 13:55:05 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 07/27/24 13:55:05.69
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 07/27/24 13:55:05.7
  STEP: deleting the configmap @ 07/27/24 13:55:05.701
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 07/27/24 13:55:05.711
  Jul 27 13:55:05.711: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2255  b3f6bd2f-1f80-4811-912d-859d58664383 48302 0 2024-07-27 13:55:05 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-07-27 13:55:05 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jul 27 13:55:05.711: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2255  b3f6bd2f-1f80-4811-912d-859d58664383 48303 0 2024-07-27 13:55:05 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-07-27 13:55:05 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jul 27 13:55:05.711: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2255" for this suite. @ 07/27/24 13:55:05.719
• [0.088 seconds]
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 07/27/24 13:55:05.728
  Jul 27 13:55:05.728: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename configmap @ 07/27/24 13:55:05.729
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:55:05.747
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:55:05.75
  STEP: Creating configMap with name configmap-test-volume-map-92238377-9460-494d-b7e3-ce7ea1be5752 @ 07/27/24 13:55:05.754
  STEP: Creating a pod to test consume configMaps @ 07/27/24 13:55:05.76
  E0727 13:55:06.179274      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:55:07.179432      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:55:08.180336      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:55:09.180492      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/27/24 13:55:09.794
  Jul 27 13:55:09.798: INFO: Trying to get logs from node ip-172-31-18-96 pod pod-configmaps-6d01bc4b-f2b7-4c89-9036-e9e36fa29228 container agnhost-container: <nil>
  STEP: delete the pod @ 07/27/24 13:55:09.805
  Jul 27 13:55:09.819: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-611" for this suite. @ 07/27/24 13:55:09.822
• [4.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 07/27/24 13:55:09.831
  Jul 27 13:55:09.831: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename pods @ 07/27/24 13:55:09.832
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:55:09.846
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:55:09.848
  Jul 27 13:55:09.850: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: creating the pod @ 07/27/24 13:55:09.851
  STEP: submitting the pod to kubernetes @ 07/27/24 13:55:09.851
  E0727 13:55:10.181134      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:55:11.181176      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:55:11.929: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-500" for this suite. @ 07/27/24 13:55:11.933
• [2.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 07/27/24 13:55:11.94
  Jul 27 13:55:11.940: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename emptydir @ 07/27/24 13:55:11.941
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:55:11.97
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:55:11.972
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 07/27/24 13:55:11.975
  E0727 13:55:12.181523      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:55:13.181612      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/27/24 13:55:13.992
  Jul 27 13:55:13.996: INFO: Trying to get logs from node ip-172-31-18-96 pod pod-7bd1612b-f3c3-46c7-b4f0-c5cf61ac5b0a container test-container: <nil>
  STEP: delete the pod @ 07/27/24 13:55:14.003
  Jul 27 13:55:14.018: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4244" for this suite. @ 07/27/24 13:55:14.021
• [2.088 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 07/27/24 13:55:14.028
  Jul 27 13:55:14.028: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename webhook @ 07/27/24 13:55:14.029
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:55:14.043
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:55:14.045
  STEP: Setting up server cert @ 07/27/24 13:55:14.066
  E0727 13:55:14.182111      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/27/24 13:55:14.217
  STEP: Deploying the webhook pod @ 07/27/24 13:55:14.223
  STEP: Wait for the deployment to be ready @ 07/27/24 13:55:14.237
  Jul 27 13:55:14.245: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0727 13:55:15.183116      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:55:16.183335      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/27/24 13:55:16.258
  STEP: Verifying the service has paired with the endpoint @ 07/27/24 13:55:16.273
  E0727 13:55:17.183427      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:55:17.274: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jul 27 13:55:17.282: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-5188-crds.webhook.example.com via the AdmissionRegistration API @ 07/27/24 13:55:17.792
  STEP: Creating a custom resource while v1 is storage version @ 07/27/24 13:55:17.806
  E0727 13:55:18.183530      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:55:19.183629      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 07/27/24 13:55:19.836
  STEP: Patching the custom resource while v2 is storage version @ 07/27/24 13:55:19.85
  E0727 13:55:20.184143      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:55:20.452: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4577" for this suite. @ 07/27/24 13:55:20.456
  STEP: Destroying namespace "webhook-markers-5739" for this suite. @ 07/27/24 13:55:20.463
• [6.443 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 07/27/24 13:55:20.471
  Jul 27 13:55:20.471: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename replicaset @ 07/27/24 13:55:20.472
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:55:20.486
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:55:20.488
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 07/27/24 13:55:20.49
  Jul 27 13:55:20.497: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0727 13:55:21.184533      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:55:22.184729      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:55:23.184947      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:55:24.185145      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:55:25.186209      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:55:25.502: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/27/24 13:55:25.502
  STEP: getting scale subresource @ 07/27/24 13:55:25.502
  STEP: updating a scale subresource @ 07/27/24 13:55:25.508
  STEP: verifying the replicaset Spec.Replicas was modified @ 07/27/24 13:55:25.516
  STEP: Patch a scale subresource @ 07/27/24 13:55:25.519
  Jul 27 13:55:25.542: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6469" for this suite. @ 07/27/24 13:55:25.556
• [5.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1084
  STEP: Creating a kubernetes client @ 07/27/24 13:55:25.573
  Jul 27 13:55:25.573: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename kubectl @ 07/27/24 13:55:25.573
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:55:25.599
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:55:25.602
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 07/27/24 13:55:25.609
  Jul 27 13:55:25.609: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-5363 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Jul 27 13:55:25.663: INFO: stderr: ""
  Jul 27 13:55:25.663: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 07/27/24 13:55:25.663
  Jul 27 13:55:25.663: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-5363 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  Jul 27 13:55:25.708: INFO: stderr: ""
  Jul 27 13:55:25.708: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 07/27/24 13:55:25.708
  Jul 27 13:55:25.711: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1358594411 --namespace=kubectl-5363 delete pods e2e-test-httpd-pod'
  E0727 13:55:26.186759      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:55:27.186908      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:55:27.777: INFO: stderr: ""
  Jul 27 13:55:27.777: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Jul 27 13:55:27.777: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5363" for this suite. @ 07/27/24 13:55:27.781
• [2.215 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 07/27/24 13:55:27.789
  Jul 27 13:55:27.789: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename webhook @ 07/27/24 13:55:27.79
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:55:27.804
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:55:27.807
  STEP: Setting up server cert @ 07/27/24 13:55:27.826
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/27/24 13:55:27.993
  STEP: Deploying the webhook pod @ 07/27/24 13:55:27.997
  STEP: Wait for the deployment to be ready @ 07/27/24 13:55:28.009
  Jul 27 13:55:28.017: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0727 13:55:28.187721      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:55:29.187860      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/27/24 13:55:30.03
  STEP: Verifying the service has paired with the endpoint @ 07/27/24 13:55:30.042
  E0727 13:55:30.188521      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:55:31.043: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 07/27/24 13:55:31.051
  STEP: create a pod that should be denied by the webhook @ 07/27/24 13:55:31.064
  STEP: create a pod that causes the webhook to hang @ 07/27/24 13:55:31.071
  E0727 13:55:31.188859      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:55:32.189245      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:55:33.189340      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:55:34.189424      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:55:35.189507      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:55:36.190259      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:55:37.190444      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:55:38.190536      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:55:39.190724      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:55:40.190926      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create a configmap that should be denied by the webhook @ 07/27/24 13:55:41.079
  STEP: create a configmap that should be admitted by the webhook @ 07/27/24 13:55:41.086
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 07/27/24 13:55:41.093
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 07/27/24 13:55:41.101
  STEP: create a namespace that bypass the webhook @ 07/27/24 13:55:41.107
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 07/27/24 13:55:41.12
  Jul 27 13:55:41.179: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5625" for this suite. @ 07/27/24 13:55:41.183
  E0727 13:55:41.191054      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-markers-2913" for this suite. @ 07/27/24 13:55:41.193
  STEP: Destroying namespace "exempted-namespace-7683" for this suite. @ 07/27/24 13:55:41.199
• [13.416 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 07/27/24 13:55:41.205
  Jul 27 13:55:41.205: INFO: >>> kubeConfig: /tmp/kubeconfig-1358594411
  STEP: Building a namespace api object, basename webhook @ 07/27/24 13:55:41.206
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/27/24 13:55:41.219
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/27/24 13:55:41.222
  STEP: Setting up server cert @ 07/27/24 13:55:41.243
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/27/24 13:55:41.397
  STEP: Deploying the webhook pod @ 07/27/24 13:55:41.406
  STEP: Wait for the deployment to be ready @ 07/27/24 13:55:41.418
  Jul 27 13:55:41.425: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0727 13:55:42.191200      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0727 13:55:43.191327      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/27/24 13:55:43.437
  STEP: Verifying the service has paired with the endpoint @ 07/27/24 13:55:43.454
  E0727 13:55:44.191849      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 27 13:55:44.455: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 07/27/24 13:55:44.466
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 07/27/24 13:55:44.479
  STEP: Creating a dummy validating-webhook-configuration object @ 07/27/24 13:55:44.49
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 07/27/24 13:55:44.498
  STEP: Creating a dummy mutating-webhook-configuration object @ 07/27/24 13:55:44.504
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 07/27/24 13:55:44.513
  Jul 27 13:55:44.578: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9584" for this suite. @ 07/27/24 13:55:44.582
  STEP: Destroying namespace "webhook-markers-9513" for this suite. @ 07/27/24 13:55:44.588
• [3.389 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:88
  Jul 27 13:55:44.595: INFO: Running AfterSuite actions on node 1
  Jul 27 13:55:44.595: INFO: Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:161
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:621
[ReportAfterSuite] PASSED [0.050 seconds]
------------------------------

Ran 388 of 7408 Specs in 6502.022 seconds
SUCCESS! -- 388 Passed | 0 Failed | 0 Pending | 7020 Skipped
PASS

Ginkgo ran 1 suite in 1h48m23.045450307s
Test Suite Passed
